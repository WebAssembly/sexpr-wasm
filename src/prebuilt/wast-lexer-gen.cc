/* Generated by re2c 0.13.5 */
#line 1 "src/wast-lexer.cc"
/*
 * Copyright 2016 WebAssembly Community Group participants
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "wast-lexer.h"

#include <cassert>
#include <cstdio>

#include "config.h"

#include "lexer-source.h"
#include "wast-parser.h"
#include "wast-parser-lexer-shared.h"

/* must be included after so some typedefs will be defined */
#include "wast-parser-gen.hh"

#define YYMAXFILL 29

#define INITIAL_LEXER_BUFFER_SIZE (64 * 1024)

#define YY_USER_ACTION                  \
  {                                     \
    loc->filename = filename_;          \
    loc->line = line_;                  \
    loc->first_column = COLUMN(token_); \
    loc->last_column = COLUMN(cursor_); \
  }

#define RETURN(name) \
  YY_USER_ACTION;    \
  return WABT_TOKEN_TYPE_##name

#define ERROR(...) \
  YY_USER_ACTION;  \
  wast_parser_error(loc, this, parser, __VA_ARGS__)

#define BEGIN(c) \
  do {           \
    cond = c;    \
  } while (0)
#define FILL(n)                              \
  do {                                       \
    if (WABT_FAILED(Fill(loc, parser, n))) { \
      RETURN(EOF);                           \
      continue;                              \
    }                                        \
  } while (0)

#define yytext (token_)
#define yyleng (cursor_ - token_)

/* p must be a pointer somewhere in the lexer buffer */
#define FILE_OFFSET(p) ((p) - (buffer_) + buffer_file_offset_)
#define COLUMN(p) (FILE_OFFSET(p) - line_file_offset_ + 1)

#define COMMENT_NESTING (comment_nesting_)
#define NEWLINE                               \
  do {                                        \
    line_++;                                  \
    line_file_offset_ = FILE_OFFSET(cursor_); \
  } while (0)

#define TEXT                 \
  lval->text.start = yytext; \
  lval->text.length = yyleng

#define TEXT_AT(offset)               \
  lval->text.start = yytext + offset; \
  lval->text.length = yyleng - offset

#define TYPE(type_) lval->type = Type::type_

#define OPCODE(name) lval->opcode = Opcode::name

#define LITERAL(type_)                     \
  lval->literal.type = LiteralType::type_; \
  lval->literal.text.start = yytext;       \
  lval->literal.text.length = yyleng

namespace wabt {

WastLexer::WastLexer(std::unique_ptr<LexerSource> source, const char* filename)
    : source_(std::move(source)),
      line_finder_(source_->Clone()),
      filename_(filename),
      line_(1),
      comment_nesting_(0),
      buffer_file_offset_(0),
      line_file_offset_(0),
      eof_(false),
      buffer_(nullptr),
      buffer_size_(0),
      marker_(nullptr),
      token_(nullptr),
      cursor_(nullptr),
      limit_(nullptr) {}

WastLexer::~WastLexer() {
  delete[] buffer_;
}

// static
std::unique_ptr<WastLexer> WastLexer::CreateFileLexer(const char* filename) {
  std::unique_ptr<LexerSource> source(new LexerSourceFile(filename));
  return std::unique_ptr<WastLexer>(new WastLexer(std::move(source), filename));
}

// static
std::unique_ptr<WastLexer> WastLexer::CreateBufferLexer(const char* filename,
                                                        const void* data,
                                                        size_t size) {
  std::unique_ptr<LexerSource> source(new LexerSourceBuffer(data, size));
  return std::unique_ptr<WastLexer>(new WastLexer(std::move(source), filename));
}

Result WastLexer::Fill(Location* loc, WastParser* parser, size_t need) {
  if (eof_)
    return Result::Error;
  size_t free = token_ - buffer_;
  assert(static_cast<size_t>(cursor_ - buffer_) >= free);
  // Our buffer is too small, need to realloc.
  if (free < need) {
    char* old_buffer = buffer_;
    size_t old_buffer_size = buffer_size_;
    size_t new_buffer_size =
        old_buffer_size ? old_buffer_size * 2 : INITIAL_LEXER_BUFFER_SIZE;
    // Make sure there is enough space for the bytes requested (need) and an
    // additional YYMAXFILL bytes which is needed for the re2c lexer
    // implementation when the eof is reached.
    while ((new_buffer_size - old_buffer_size) + free < need + YYMAXFILL)
      new_buffer_size *= 2;

    char* new_buffer = new char[new_buffer_size];
    if (limit_ > token_)
      memmove(new_buffer, token_, limit_ - token_);
    buffer_ = new_buffer;
    buffer_size_ = new_buffer_size;
    token_ = new_buffer + (token_ - old_buffer) - free;
    marker_ = new_buffer + (marker_ - old_buffer) - free;
    cursor_ = new_buffer + (cursor_ - old_buffer) - free;
    limit_ = new_buffer + (limit_ - old_buffer) - free;
    buffer_file_offset_ += free;
    free += new_buffer_size - old_buffer_size;
    delete[] old_buffer;
  } else {
    // Shift everything down to make more room in the buffer.
    if (limit_ > token_)
      memmove(buffer_, token_, limit_ - token_);
    token_ -= free;
    marker_ -= free;
    cursor_ -= free;
    limit_ -= free;
    buffer_file_offset_ += free;
  }
  // Read the new data into the buffer.
  limit_ += source_->Fill(limit_, free);

  // If at the end of file, need to fill YYMAXFILL more characters with "fake
  // characters", that are not a lexeme nor a lexeme suffix. see
  // http://re2c.org/examples/example_03.html.
  if (limit_ < buffer_ + buffer_size_ - YYMAXFILL) {
    eof_ = true;
    memset(limit_, 0, YYMAXFILL);
    limit_ += YYMAXFILL;
  }
  return Result::Ok;
}

int WastLexer::GetToken(Token* lval, Location* loc, WastParser* parser) {
  enum {
    YYCOND_INIT,
    YYCOND_BAD_TEXT,
    YYCOND_LINE_COMMENT,
    YYCOND_BLOCK_COMMENT,
    YYCOND_i = YYCOND_INIT,
  } cond = YYCOND_INIT;

  for (;;) {
    token_ = cursor_;
    
#line 198 "src/prebuilt/wast-lexer-gen.cc"
{
	unsigned char yych;
	if (cond < 2) {
		if (cond < 1) {
			goto YYCOND_i;
		} else {
			goto YYCOND_BAD_TEXT;
		}
	} else {
		if (cond < 3) {
			goto YYCOND_LINE_COMMENT;
		} else {
			goto YYCOND_BLOCK_COMMENT;
		}
	}
/* *********************************** */
YYCOND_BAD_TEXT:

	if ((limit_ - cursor_) < 3) FILL(3);
	yych = *cursor_;
	if (yych <= '!') {
		if (yych <= '\t') {
			if (yych >= 0x01) goto yy4;
		} else {
			if (yych <= '\n') goto yy6;
			if (yych <= 0x1F) goto yy4;
			goto yy8;
		}
	} else {
		if (yych <= '\\') {
			if (yych <= '"') goto yy10;
			if (yych <= '[') goto yy8;
			goto yy12;
		} else {
			if (yych == 0x7F) goto yy4;
			goto yy8;
		}
	}
	++cursor_;
#line 249 "src/wast-lexer.cc"
	{ ERROR("unexpected EOF"); RETURN(EOF); }
#line 240 "src/prebuilt/wast-lexer-gen.cc"
yy4:
	++cursor_;
yy5:
#line 250 "src/wast-lexer.cc"
	{ ERROR("illegal character in string");
                                  continue; }
#line 247 "src/prebuilt/wast-lexer-gen.cc"
yy6:
	++cursor_;
	BEGIN(YYCOND_i);
#line 242 "src/wast-lexer.cc"
	{ ERROR("newline in string");
                                  NEWLINE;
                                  continue; }
#line 255 "src/prebuilt/wast-lexer-gen.cc"
yy8:
	++cursor_;
yy9:
#line 241 "src/wast-lexer.cc"
	{ continue; }
#line 261 "src/prebuilt/wast-lexer-gen.cc"
yy10:
	++cursor_;
	BEGIN(YYCOND_i);
#line 248 "src/wast-lexer.cc"
	{ TEXT; RETURN(TEXT); }
#line 267 "src/prebuilt/wast-lexer-gen.cc"
yy12:
	yych = *++cursor_;
	if (yych <= '@') {
		if (yych <= '"') {
			if (yych == '\n') goto yy5;
			if (yych >= '"') goto yy15;
		} else {
			if (yych <= '\'') {
				if (yych >= '\'') goto yy15;
			} else {
				if (yych <= '/') goto yy13;
				if (yych <= '9') goto yy16;
			}
		}
	} else {
		if (yych <= 'f') {
			if (yych <= '[') {
				if (yych <= 'F') goto yy16;
			} else {
				if (yych <= '\\') goto yy15;
				if (yych >= 'a') goto yy16;
			}
		} else {
			if (yych <= 'n') {
				if (yych >= 'n') goto yy15;
			} else {
				if (yych == 't') goto yy15;
			}
		}
	}
yy13:
	++cursor_;
yy14:
#line 245 "src/wast-lexer.cc"
	{ ERROR("bad escape \"%.*s\"",
                                        static_cast<int>(yyleng), yytext);
                                  continue; }
#line 305 "src/prebuilt/wast-lexer-gen.cc"
yy15:
	yych = *++cursor_;
	goto yy9;
yy16:
	yych = *++cursor_;
	if (yych <= '@') {
		if (yych <= '/') goto yy14;
		if (yych >= ':') goto yy14;
	} else {
		if (yych <= 'F') goto yy17;
		if (yych <= '`') goto yy14;
		if (yych >= 'g') goto yy14;
	}
yy17:
	++cursor_;
	yych = *cursor_;
	goto yy9;
/* *********************************** */
YYCOND_BLOCK_COMMENT:
	if ((limit_ - cursor_) < 2) FILL(2);
	yych = *cursor_;
	if (yych <= '\'') {
		if (yych <= 0x00) goto yy20;
		if (yych == '\n') goto yy24;
		goto yy22;
	} else {
		if (yych <= '(') goto yy26;
		if (yych == ';') goto yy27;
		goto yy22;
	}
yy20:
	++cursor_;
#line 477 "src/wast-lexer.cc"
	{ ERROR("unexpected EOF"); RETURN(EOF); }
#line 340 "src/prebuilt/wast-lexer-gen.cc"
yy22:
	++cursor_;
yy23:
#line 478 "src/wast-lexer.cc"
	{ continue; }
#line 346 "src/prebuilt/wast-lexer-gen.cc"
yy24:
	++cursor_;
#line 476 "src/wast-lexer.cc"
	{ NEWLINE; continue; }
#line 351 "src/prebuilt/wast-lexer-gen.cc"
yy26:
	yych = *++cursor_;
	if (yych == ';') goto yy30;
	goto yy23;
yy27:
	yych = *++cursor_;
	if (yych != ')') goto yy23;
	++cursor_;
#line 473 "src/wast-lexer.cc"
	{ if (--COMMENT_NESTING == 0)
                                    BEGIN(YYCOND_INIT);
                                  continue; }
#line 364 "src/prebuilt/wast-lexer-gen.cc"
yy30:
	++cursor_;
#line 472 "src/wast-lexer.cc"
	{ COMMENT_NESTING++; continue; }
#line 369 "src/prebuilt/wast-lexer-gen.cc"
/* *********************************** */
YYCOND_LINE_COMMENT:
	{
		static const unsigned char yybm[] = {
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128,   0, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
			128, 128, 128, 128, 128, 128, 128, 128, 
		};
		if ((limit_ - cursor_) < 2) FILL(2);
		yych = *cursor_;
		if (yych <= 0x00) goto yy35;
		if (yych == '\n') goto yy37;
		goto yy36;
yy34:
#line 470 "src/wast-lexer.cc"
		{ continue; }
#line 415 "src/prebuilt/wast-lexer-gen.cc"
yy35:
		yych = *++cursor_;
		goto yy40;
yy36:
		yych = *++cursor_;
		goto yy40;
yy37:
		++cursor_;
		BEGIN(YYCOND_i);
#line 469 "src/wast-lexer.cc"
		{ NEWLINE; continue; }
#line 427 "src/prebuilt/wast-lexer-gen.cc"
yy39:
		++cursor_;
		if (limit_ <= cursor_) FILL(1);
		yych = *cursor_;
yy40:
		if (yybm[0+yych] & 128) {
			goto yy39;
		}
		goto yy34;
	}
/* *********************************** */
YYCOND_i:
	{
		static const unsigned char yybm[] = {
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0, 128,   0,   0,   0, 128,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			192,  72,   0,  72,  72,  72,  72,  72, 
			 64,  64,  72,  72,  64,  72,  72,  72, 
			120, 120, 120, 120, 120, 120, 120, 120, 
			120, 120,  72,  64,  72,  72,  72,  72, 
			 72, 104, 104, 104, 104, 104, 104,  72, 
			 72,  72,  72,  72,  72,  72,  72,  72, 
			 72,  72,  72,  72,  72,  72,  72,  72, 
			 72,  72,  72,  64,   8,  64,  72,  72, 
			 72, 104, 104, 104, 104, 104, 104,  72, 
			 72,  72,  72,  72,  72,  72,  72,  72, 
			 72,  72,  72,  72,  72,  72,  72,  72, 
			 72,  72,  72,  64,  72,  64,  72,   0, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
		};
		if ((limit_ - cursor_) < 29) FILL(29);
		yych = *cursor_;
		switch (yych) {
		case 0x00:	goto yy43;
		case '\t':
		case '\r':
		case ' ':	goto yy47;
		case '\n':	goto yy49;
		case '!':
		case '#':
		case '%':
		case '&':
		case '\'':
		case '*':
		case '.':
		case '/':
		case ':':
		case '<':
		case '=':
		case '>':
		case '?':
		case '@':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '\\':
		case '^':
		case '_':
		case '`':
		case 'h':
		case 'j':
		case 'k':
		case 'q':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '|':
		case '~':	goto yy51;
		case '"':	goto yy53;
		case '$':	goto yy55;
		case '(':	goto yy56;
		case ')':	goto yy58;
		case '+':
		case '-':	goto yy60;
		case '0':	goto yy61;
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':	goto yy63;
		case ';':	goto yy64;
		case 'a':	goto yy65;
		case 'b':	goto yy66;
		case 'c':	goto yy67;
		case 'd':	goto yy68;
		case 'e':	goto yy69;
		case 'f':	goto yy70;
		case 'g':	goto yy71;
		case 'i':	goto yy72;
		case 'l':	goto yy73;
		case 'm':	goto yy74;
		case 'n':	goto yy75;
		case 'o':	goto yy76;
		case 'p':	goto yy77;
		case 'r':	goto yy78;
		case 's':	goto yy79;
		case 't':	goto yy80;
		case 'u':	goto yy81;
		default:	goto yy45;
		}
yy43:
		++cursor_;
#line 484 "src/wast-lexer.cc"
		{ RETURN(EOF); }
#line 578 "src/prebuilt/wast-lexer-gen.cc"
yy45:
		++cursor_;
yy46:
#line 485 "src/wast-lexer.cc"
		{ ERROR("unexpected char"); continue; }
#line 584 "src/prebuilt/wast-lexer-gen.cc"
yy47:
		++cursor_;
		yych = *cursor_;
		goto yy1191;
yy48:
#line 480 "src/wast-lexer.cc"
		{ continue; }
#line 592 "src/prebuilt/wast-lexer-gen.cc"
yy49:
		++cursor_;
#line 479 "src/wast-lexer.cc"
		{ NEWLINE; continue; }
#line 597 "src/prebuilt/wast-lexer-gen.cc"
yy51:
		++cursor_;
		yych = *cursor_;
		goto yy83;
yy52:
#line 481 "src/wast-lexer.cc"
		{ ERROR("unexpected token \"%.*s\"",
                                        static_cast<int>(yyleng), yytext);
                                  continue; }
#line 607 "src/prebuilt/wast-lexer-gen.cc"
yy53:
		yych = *(marker_ = ++cursor_);
		if (yych <= 0x1F) goto yy54;
		if (yych != 0x7F) goto yy1184;
yy54:
		BEGIN(YYCOND_BAD_TEXT);
#line 240 "src/wast-lexer.cc"
		{ continue; }
#line 616 "src/prebuilt/wast-lexer-gen.cc"
yy55:
		yych = *++cursor_;
		if (yych <= ';') {
			if (yych <= '\'') {
				if (yych == '!') goto yy1180;
				if (yych <= '"') goto yy52;
				goto yy1180;
			} else {
				if (yych <= '+') {
					if (yych <= ')') goto yy52;
					goto yy1180;
				} else {
					if (yych <= ',') goto yy52;
					if (yych <= ':') goto yy1180;
					goto yy52;
				}
			}
		} else {
			if (yych <= 'z') {
				if (yych <= '[') {
					if (yych <= 'Z') goto yy1180;
					goto yy52;
				} else {
					if (yych == ']') goto yy52;
					goto yy1180;
				}
			} else {
				if (yych <= '|') {
					if (yych <= '{') goto yy52;
					goto yy1180;
				} else {
					if (yych == '~') goto yy1180;
					goto yy52;
				}
			}
		}
yy56:
		++cursor_;
		if ((yych = *cursor_) == ';') goto yy1178;
#line 231 "src/wast-lexer.cc"
		{ RETURN(LPAR); }
#line 658 "src/prebuilt/wast-lexer-gen.cc"
yy58:
		++cursor_;
#line 232 "src/wast-lexer.cc"
		{ RETURN(RPAR); }
#line 663 "src/prebuilt/wast-lexer-gen.cc"
yy60:
		yych = *++cursor_;
		if (yych <= 'h') {
			if (yych <= '/') goto yy83;
			if (yych <= '0') goto yy1168;
			if (yych <= '9') goto yy1170;
			goto yy83;
		} else {
			if (yych <= 'i') goto yy1172;
			if (yych == 'n') goto yy1173;
			goto yy83;
		}
yy61:
		++cursor_;
		if ((yych = *cursor_) <= 'D') {
			if (yych <= ',') {
				if (yych <= '"') {
					if (yych == '!') goto yy82;
				} else {
					if (yych <= '\'') goto yy82;
					if (yych <= ')') goto yy62;
					if (yych <= '+') goto yy82;
				}
			} else {
				if (yych <= '/') {
					if (yych == '.') goto yy1149;
					goto yy82;
				} else {
					if (yych <= '9') goto yy1152;
					if (yych != ';') goto yy82;
				}
			}
		} else {
			if (yych <= 'e') {
				if (yych <= '[') {
					if (yych <= 'E') goto yy1154;
					if (yych <= 'Z') goto yy82;
				} else {
					if (yych == ']') goto yy62;
					if (yych <= 'd') goto yy82;
					goto yy1154;
				}
			} else {
				if (yych <= '{') {
					if (yych == 'x') goto yy1158;
					if (yych <= 'z') goto yy82;
				} else {
					if (yych == '}') goto yy62;
					if (yych <= '~') goto yy82;
				}
			}
		}
yy62:
#line 233 "src/wast-lexer.cc"
		{ LITERAL(Int); RETURN(NAT); }
#line 719 "src/prebuilt/wast-lexer-gen.cc"
yy63:
		yych = *++cursor_;
		if (yych <= ';') {
			if (yych <= '+') {
				if (yych <= '"') {
					if (yych == '!') goto yy82;
					goto yy62;
				} else {
					if (yych <= '\'') goto yy82;
					if (yych <= ')') goto yy62;
					goto yy82;
				}
			} else {
				if (yych <= '.') {
					if (yych <= ',') goto yy62;
					if (yych <= '-') goto yy82;
					goto yy1149;
				} else {
					if (yych <= '/') goto yy82;
					if (yych <= '9') goto yy1152;
					if (yych <= ':') goto yy82;
					goto yy62;
				}
			}
		} else {
			if (yych <= 'd') {
				if (yych <= 'Z') {
					if (yych == 'E') goto yy1154;
					goto yy82;
				} else {
					if (yych == '\\') goto yy82;
					if (yych <= ']') goto yy62;
					goto yy82;
				}
			} else {
				if (yych <= '{') {
					if (yych <= 'e') goto yy1154;
					if (yych <= 'z') goto yy82;
					goto yy62;
				} else {
					if (yych == '}') goto yy62;
					if (yych <= '~') goto yy82;
					goto yy62;
				}
			}
		}
yy64:
		yych = *++cursor_;
		if (yych == ';') goto yy1147;
		goto yy46;
yy65:
		yych = *++cursor_;
		if (yych <= 'm') {
			if (yych == 'l') goto yy1040;
			goto yy83;
		} else {
			if (yych <= 'n') goto yy1041;
			if (yych == 's') goto yy1042;
			goto yy83;
		}
yy66:
		yych = *++cursor_;
		if (yych == 'l') goto yy1023;
		if (yych == 'r') goto yy1024;
		goto yy83;
yy67:
		yych = *++cursor_;
		if (yych == 'a') goto yy986;
		if (yych == 'u') goto yy987;
		goto yy83;
yy68:
		yych = *++cursor_;
		if (yych == 'a') goto yy978;
		if (yych == 'r') goto yy979;
		goto yy83;
yy69:
		yych = *++cursor_;
		if (yych <= 'm') {
			if (yych == 'l') goto yy962;
			goto yy83;
		} else {
			if (yych <= 'n') goto yy963;
			if (yych == 'x') goto yy964;
			goto yy83;
		}
yy70:
		yych = *++cursor_;
		if (yych <= '5') {
			if (yych == '3') goto yy668;
			goto yy83;
		} else {
			if (yych <= '6') goto yy669;
			if (yych == 'u') goto yy670;
			goto yy83;
		}
yy71:
		yych = *++cursor_;
		if (yych <= 'k') {
			if (yych == 'e') goto yy634;
			goto yy83;
		} else {
			if (yych <= 'l') goto yy635;
			if (yych == 'r') goto yy636;
			goto yy83;
		}
yy72:
		yych = *++cursor_;
		if (yych <= 'e') {
			if (yych <= '3') {
				if (yych <= '2') goto yy83;
				goto yy226;
			} else {
				if (yych == '6') goto yy227;
				goto yy83;
			}
		} else {
			if (yych <= 'l') {
				if (yych <= 'f') goto yy228;
				goto yy83;
			} else {
				if (yych <= 'm') goto yy230;
				if (yych <= 'n') goto yy231;
				goto yy83;
			}
		}
yy73:
		yych = *++cursor_;
		if (yych == 'o') goto yy218;
		goto yy83;
yy74:
		yych = *++cursor_;
		if (yych <= 'n') {
			if (yych == 'e') goto yy203;
			goto yy83;
		} else {
			if (yych <= 'o') goto yy204;
			if (yych == 'u') goto yy205;
			goto yy83;
		}
yy75:
		yych = *++cursor_;
		if (yych == 'a') goto yy192;
		if (yych == 'o') goto yy193;
		goto yy83;
yy76:
		yych = *++cursor_;
		if (yych == 'f') goto yy178;
		goto yy83;
yy77:
		yych = *++cursor_;
		if (yych == 'a') goto yy173;
		goto yy83;
yy78:
		yych = *++cursor_;
		if (yych == 'e') goto yy150;
		goto yy83;
yy79:
		yych = *++cursor_;
		if (yych == 'e') goto yy124;
		if (yych == 't') goto yy125;
		goto yy83;
yy80:
		yych = *++cursor_;
		switch (yych) {
		case 'a':	goto yy95;
		case 'e':	goto yy96;
		case 'h':	goto yy97;
		case 'r':	goto yy98;
		case 'y':	goto yy99;
		default:	goto yy83;
		}
yy81:
		yych = *++cursor_;
		if (yych == 'n') goto yy84;
		goto yy83;
yy82:
		++cursor_;
		if (limit_ <= cursor_) FILL(1);
		yych = *cursor_;
yy83:
		if (yybm[0+yych] & 8) {
			goto yy82;
		}
		goto yy52;
yy84:
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		yych = *++cursor_;
		if (yych != 'h') goto yy83;
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'b') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 430 "src/wast-lexer.cc"
		{ RETURN(UNREACHABLE); }
#line 929 "src/prebuilt/wast-lexer-gen.cc"
yy95:
		yych = *++cursor_;
		if (yych == 'b') goto yy120;
		goto yy83;
yy96:
		yych = *++cursor_;
		if (yych == 'e') goto yy112;
		goto yy83;
yy97:
		yych = *++cursor_;
		if (yych == 'e') goto yy105;
		if (yych == 'r') goto yy106;
		goto yy83;
yy98:
		yych = *++cursor_;
		if (yych == 'y') goto yy103;
		goto yy83;
yy99:
		yych = *++cursor_;
		if (yych != 'p') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 433 "src/wast-lexer.cc"
		{ RETURN(TYPE); }
#line 958 "src/prebuilt/wast-lexer-gen.cc"
yy103:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 461 "src/wast-lexer.cc"
		{ RETURN(TRY); }
#line 966 "src/prebuilt/wast-lexer-gen.cc"
yy105:
		yych = *++cursor_;
		if (yych == 'n') goto yy110;
		goto yy83;
yy106:
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'w') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 464 "src/wast-lexer.cc"
		{ RETURN(THROW); }
#line 982 "src/prebuilt/wast-lexer-gen.cc"
yy110:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 261 "src/wast-lexer.cc"
		{ RETURN(THEN); }
#line 990 "src/prebuilt/wast-lexer-gen.cc"
yy112:
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 274 "src/wast-lexer.cc"
		{ RETURN(TEE_LOCAL); }
#line 1010 "src/prebuilt/wast-lexer-gen.cc"
yy120:
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 440 "src/wast-lexer.cc"
		{ RETURN(TABLE); }
#line 1022 "src/prebuilt/wast-lexer-gen.cc"
yy124:
		yych = *++cursor_;
		if (yych == 'l') goto yy131;
		if (yych == 't') goto yy130;
		goto yy83;
yy125:
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 442 "src/wast-lexer.cc"
		{ RETURN(START); }
#line 1041 "src/prebuilt/wast-lexer-gen.cc"
yy130:
		yych = *++cursor_;
		if (yych == '_') goto yy136;
		goto yy83;
yy131:
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 429 "src/wast-lexer.cc"
		{ RETURN(SELECT); }
#line 1059 "src/prebuilt/wast-lexer-gen.cc"
yy136:
		yych = *++cursor_;
		if (yych == 'g') goto yy138;
		if (yych != 'l') goto yy83;
		yych = *++cursor_;
		if (yych == 'o') goto yy145;
		goto yy83;
yy138:
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'b') goto yy83;
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 276 "src/wast-lexer.cc"
		{ RETURN(SET_GLOBAL); }
#line 1084 "src/prebuilt/wast-lexer-gen.cc"
yy145:
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 273 "src/wast-lexer.cc"
		{ RETURN(SET_LOCAL); }
#line 1098 "src/prebuilt/wast-lexer-gen.cc"
yy150:
		yych = *++cursor_;
		if (yych <= 'r') {
			if (yych == 'g') goto yy153;
			goto yy83;
		} else {
			if (yych <= 's') goto yy152;
			if (yych >= 'u') goto yy83;
		}
		yych = *++cursor_;
		if (yych == 'h') goto yy164;
		if (yych == 'u') goto yy165;
		goto yy83;
yy152:
		yych = *++cursor_;
		if (yych == 'u') goto yy160;
		goto yy83;
yy153:
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != 's') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 448 "src/wast-lexer.cc"
		{ RETURN(REGISTER); }
#line 1133 "src/prebuilt/wast-lexer-gen.cc"
yy160:
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 436 "src/wast-lexer.cc"
		{ RETURN(RESULT); }
#line 1145 "src/prebuilt/wast-lexer-gen.cc"
yy164:
		yych = *++cursor_;
		if (yych == 'r') goto yy169;
		goto yy83;
yy165:
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 271 "src/wast-lexer.cc"
		{ RETURN(RETURN); }
#line 1161 "src/prebuilt/wast-lexer-gen.cc"
yy169:
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'w') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 465 "src/wast-lexer.cc"
		{ RETURN(RETHROW); }
#line 1173 "src/prebuilt/wast-lexer-gen.cc"
yy173:
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'm') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 435 "src/wast-lexer.cc"
		{ RETURN(PARAM); }
#line 1187 "src/prebuilt/wast-lexer-gen.cc"
yy178:
		yych = *++cursor_;
		if (yych != 'f') goto yy83;
		yych = *++cursor_;
		if (yych != 's') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		++cursor_;
		if ((yych = *cursor_) <= '<') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy183;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
				} else {
					if (yych != ';') goto yy82;
				}
			}
		} else {
			if (yych <= ']') {
				if (yych <= 'Z') {
					if (yych <= '=') goto yy184;
					goto yy82;
				} else {
					if (yych == '\\') goto yy82;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy183:
#line 445 "src/wast-lexer.cc"
		{ RETURN(OFFSET); }
#line 1232 "src/prebuilt/wast-lexer-gen.cc"
yy184:
		yych = *++cursor_;
		if (yych <= '/') goto yy83;
		if (yych <= '0') goto yy185;
		if (yych <= '9') goto yy187;
		goto yy83;
yy185:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 16) {
			goto yy187;
		}
		if (yych <= 'Z') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy186;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
				} else {
					if (yych != ';') goto yy82;
				}
			}
		} else {
			if (yych <= 'x') {
				if (yych <= '\\') {
					if (yych >= '\\') goto yy82;
				} else {
					if (yych <= ']') goto yy186;
					if (yych <= 'w') goto yy82;
					goto yy189;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy186:
#line 300 "src/wast-lexer.cc"
		{ TEXT_AT(7); RETURN(OFFSET_EQ_NAT); }
#line 1279 "src/prebuilt/wast-lexer-gen.cc"
yy187:
		++cursor_;
		if (limit_ <= cursor_) FILL(1);
		yych = *cursor_;
		if (yybm[0+yych] & 16) {
			goto yy187;
		}
		if (yych <= ';') {
			if (yych <= '\'') {
				if (yych == '!') goto yy82;
				if (yych <= '"') goto yy186;
				goto yy82;
			} else {
				if (yych <= '+') {
					if (yych <= ')') goto yy186;
					goto yy82;
				} else {
					if (yych <= ',') goto yy186;
					if (yych <= ':') goto yy82;
					goto yy186;
				}
			}
		} else {
			if (yych <= 'z') {
				if (yych <= '[') {
					if (yych <= 'Z') goto yy82;
					goto yy186;
				} else {
					if (yych == ']') goto yy186;
					goto yy82;
				}
			} else {
				if (yych <= '|') {
					if (yych <= '{') goto yy186;
					goto yy82;
				} else {
					if (yych == '~') goto yy82;
					goto yy186;
				}
			}
		}
yy189:
		yych = *++cursor_;
		if (yybm[0+yych] & 32) {
			goto yy190;
		}
		goto yy83;
yy190:
		++cursor_;
		if (limit_ <= cursor_) FILL(1);
		yych = *cursor_;
		if (yybm[0+yych] & 32) {
			goto yy190;
		}
		if (yych <= ';') {
			if (yych <= '\'') {
				if (yych == '!') goto yy82;
				if (yych <= '"') goto yy186;
				goto yy82;
			} else {
				if (yych <= '+') {
					if (yych <= ')') goto yy186;
					goto yy82;
				} else {
					if (yych <= ',') goto yy186;
					if (yych <= ':') goto yy82;
					goto yy186;
				}
			}
		} else {
			if (yych <= 'z') {
				if (yych <= '[') {
					if (yych <= 'Z') goto yy82;
					goto yy186;
				} else {
					if (yych == ']') goto yy186;
					goto yy82;
				}
			} else {
				if (yych <= '|') {
					if (yych <= '{') goto yy186;
					goto yy82;
				} else {
					if (yych == '~') goto yy82;
					goto yy186;
				}
			}
		}
yy192:
		yych = *++cursor_;
		if (yych == 'n') goto yy196;
		goto yy83;
yy193:
		yych = *++cursor_;
		if (yych != 'p') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 258 "src/wast-lexer.cc"
		{ RETURN(NOP); }
#line 1381 "src/prebuilt/wast-lexer-gen.cc"
yy196:
		++cursor_;
		if ((yych = *cursor_) <= ';') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy197;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
				} else {
					if (yych <= '9') goto yy82;
					if (yych <= ':') goto yy198;
				}
			}
		} else {
			if (yych <= 'z') {
				if (yych <= '[') {
					if (yych <= 'Z') goto yy82;
				} else {
					if (yych != ']') goto yy82;
				}
			} else {
				if (yych <= '|') {
					if (yych >= '|') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy197:
#line 238 "src/wast-lexer.cc"
		{ LITERAL(Nan); RETURN(FLOAT); }
#line 1418 "src/prebuilt/wast-lexer-gen.cc"
yy198:
		yych = *++cursor_;
		if (yych != '0') goto yy83;
		yych = *++cursor_;
		if (yych != 'x') goto yy83;
		yych = *++cursor_;
		if (yych <= '@') {
			if (yych <= '/') goto yy83;
			if (yych >= ':') goto yy83;
		} else {
			if (yych <= 'F') goto yy201;
			if (yych <= '`') goto yy83;
			if (yych >= 'g') goto yy83;
		}
yy201:
		++cursor_;
		if (limit_ <= cursor_) FILL(1);
		yych = *cursor_;
		if (yych <= '@') {
			if (yych <= '+') {
				if (yych <= '"') {
					if (yych == '!') goto yy82;
					goto yy197;
				} else {
					if (yych <= '\'') goto yy82;
					if (yych <= ')') goto yy197;
					goto yy82;
				}
			} else {
				if (yych <= '9') {
					if (yych <= ',') goto yy197;
					if (yych <= '/') goto yy82;
					goto yy201;
				} else {
					if (yych == ';') goto yy197;
					goto yy82;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= '[') {
					if (yych <= 'F') goto yy201;
					if (yych <= 'Z') goto yy82;
					goto yy197;
				} else {
					if (yych == ']') goto yy197;
					goto yy82;
				}
			} else {
				if (yych <= '{') {
					if (yych <= 'f') goto yy201;
					if (yych <= 'z') goto yy82;
					goto yy197;
				} else {
					if (yych == '}') goto yy197;
					if (yych <= '~') goto yy82;
					goto yy197;
				}
			}
		}
yy203:
		yych = *++cursor_;
		if (yych == 'm') goto yy213;
		goto yy83;
yy204:
		yych = *++cursor_;
		if (yych == 'd') goto yy208;
		goto yy83;
yy205:
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 257 "src/wast-lexer.cc"
		{ RETURN(MUT); }
#line 1496 "src/prebuilt/wast-lexer-gen.cc"
yy208:
		yych = *++cursor_;
		if (yych != 'u') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 439 "src/wast-lexer.cc"
		{ RETURN(MODULE); }
#line 1510 "src/prebuilt/wast-lexer-gen.cc"
yy213:
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'y') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 441 "src/wast-lexer.cc"
		{ RETURN(MEMORY); }
#line 1524 "src/prebuilt/wast-lexer-gen.cc"
yy218:
		yych = *++cursor_;
		if (yych == 'c') goto yy220;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych == 'p') goto yy224;
		goto yy83;
yy220:
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 437 "src/wast-lexer.cc"
		{ RETURN(LOCAL); }
#line 1543 "src/prebuilt/wast-lexer-gen.cc"
yy224:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 263 "src/wast-lexer.cc"
		{ RETURN(LOOP); }
#line 1551 "src/prebuilt/wast-lexer-gen.cc"
yy226:
		yych = *++cursor_;
		if (yych == '2') goto yy451;
		goto yy83;
yy227:
		yych = *++cursor_;
		if (yych == '4') goto yy249;
		goto yy83;
yy228:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 260 "src/wast-lexer.cc"
		{ RETURN(IF); }
#line 1567 "src/prebuilt/wast-lexer-gen.cc"
yy230:
		yych = *++cursor_;
		if (yych == 'p') goto yy244;
		goto yy83;
yy231:
		yych = *++cursor_;
		if (yych == 'f') goto yy232;
		if (yych == 'v') goto yy234;
		goto yy83;
yy232:
		++cursor_;
		if ((yych = *cursor_) <= 'Z') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy233;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
				} else {
					if (yych != ';') goto yy82;
				}
			}
		} else {
			if (yych <= 'i') {
				if (yych <= '\\') {
					if (yych >= '\\') goto yy82;
				} else {
					if (yych <= ']') goto yy233;
					if (yych <= 'h') goto yy82;
					goto yy239;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy233:
#line 237 "src/wast-lexer.cc"
		{ LITERAL(Infinity); RETURN(FLOAT); }
#line 1614 "src/prebuilt/wast-lexer-gen.cc"
yy234:
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'k') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 449 "src/wast-lexer.cc"
		{ RETURN(INVOKE); }
#line 1628 "src/prebuilt/wast-lexer-gen.cc"
yy239:
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != 'y') goto yy83;
		yych = *++cursor_;
		if (yybm[0+yych] & 8) {
			goto yy82;
		}
		goto yy233;
yy244:
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 446 "src/wast-lexer.cc"
		{ RETURN(IMPORT); }
#line 1656 "src/prebuilt/wast-lexer-gen.cc"
yy249:
		++cursor_;
		if ((yych = *cursor_) <= ':') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy250;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
				} else {
					if (yych == '.') goto yy251;
					goto yy82;
				}
			}
		} else {
			if (yych <= ']') {
				if (yych <= 'Z') {
					if (yych >= '<') goto yy82;
				} else {
					if (yych == '\\') goto yy82;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy250:
#line 253 "src/wast-lexer.cc"
		{ TYPE(I64); RETURN(VALUE_TYPE); }
#line 1693 "src/prebuilt/wast-lexer-gen.cc"
yy251:
		yych = *++cursor_;
		switch (yych) {
		case 'a':	goto yy257;
		case 'c':	goto yy254;
		case 'd':	goto yy259;
		case 'e':	goto yy255;
		case 'g':	goto yy264;
		case 'l':	goto yy252;
		case 'm':	goto yy258;
		case 'n':	goto yy263;
		case 'o':	goto yy261;
		case 'p':	goto yy256;
		case 'r':	goto yy260;
		case 's':	goto yy253;
		case 't':	goto yy265;
		case 'x':	goto yy262;
		default:	goto yy83;
		}
yy252:
		yych = *++cursor_;
		if (yych <= 'n') {
			if (yych == 'e') goto yy415;
			goto yy83;
		} else {
			if (yych <= 'o') goto yy416;
			if (yych == 't') goto yy417;
			goto yy83;
		}
yy253:
		yych = *++cursor_;
		if (yych <= 's') {
			if (yych == 'h') goto yy390;
			goto yy83;
		} else {
			if (yych <= 't') goto yy391;
			if (yych <= 'u') goto yy392;
			goto yy83;
		}
yy254:
		yych = *++cursor_;
		if (yych <= 'n') {
			if (yych == 'l') goto yy379;
			goto yy83;
		} else {
			if (yych <= 'o') goto yy380;
			if (yych == 't') goto yy381;
			goto yy83;
		}
yy255:
		yych = *++cursor_;
		if (yych == 'q') goto yy357;
		if (yych == 'x') goto yy359;
		goto yy83;
yy256:
		yych = *++cursor_;
		if (yych == 'o') goto yy351;
		goto yy83;
yy257:
		yych = *++cursor_;
		if (yych == 'd') goto yy345;
		if (yych == 'n') goto yy346;
		goto yy83;
yy258:
		yych = *++cursor_;
		if (yych == 'u') goto yy342;
		goto yy83;
yy259:
		yych = *++cursor_;
		if (yych == 'i') goto yy335;
		goto yy83;
yy260:
		yych = *++cursor_;
		if (yych == 'e') goto yy308;
		if (yych == 'o') goto yy309;
		goto yy83;
yy261:
		yych = *++cursor_;
		if (yych == 'r') goto yy306;
		goto yy83;
yy262:
		yych = *++cursor_;
		if (yych == 'o') goto yy303;
		goto yy83;
yy263:
		yych = *++cursor_;
		if (yych == 'e') goto yy301;
		goto yy83;
yy264:
		yych = *++cursor_;
		if (yych == 'e') goto yy289;
		if (yych == 't') goto yy290;
		goto yy83;
yy265:
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'u') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych == 's') goto yy271;
		if (yych == 'u') goto yy272;
		goto yy83;
yy271:
		yych = *++cursor_;
		if (yych == '/') goto yy281;
		goto yy83;
yy272:
		yych = *++cursor_;
		if (yych != '/') goto yy83;
		yych = *++cursor_;
		if (yych != 'f') goto yy83;
		yych = *++cursor_;
		if (yych == '3') goto yy275;
		if (yych == '6') goto yy276;
		goto yy83;
yy275:
		yych = *++cursor_;
		if (yych == '2') goto yy279;
		goto yy83;
yy276:
		yych = *++cursor_;
		if (yych != '4') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 414 "src/wast-lexer.cc"
		{ OPCODE(I64TruncUF64); RETURN(CONVERT); }
#line 1828 "src/prebuilt/wast-lexer-gen.cc"
yy279:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 412 "src/wast-lexer.cc"
		{ OPCODE(I64TruncUF32); RETURN(CONVERT); }
#line 1836 "src/prebuilt/wast-lexer-gen.cc"
yy281:
		yych = *++cursor_;
		if (yych != 'f') goto yy83;
		yych = *++cursor_;
		if (yych == '3') goto yy283;
		if (yych == '6') goto yy284;
		goto yy83;
yy283:
		yych = *++cursor_;
		if (yych == '2') goto yy287;
		goto yy83;
yy284:
		yych = *++cursor_;
		if (yych != '4') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 410 "src/wast-lexer.cc"
		{ OPCODE(I64TruncSF64); RETURN(CONVERT); }
#line 1857 "src/prebuilt/wast-lexer-gen.cc"
yy287:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 408 "src/wast-lexer.cc"
		{ OPCODE(I64TruncSF32); RETURN(CONVERT); }
#line 1865 "src/prebuilt/wast-lexer-gen.cc"
yy289:
		yych = *++cursor_;
		if (yych == '_') goto yy296;
		goto yy83;
yy290:
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych == 's') goto yy292;
		if (yych == 'u') goto yy294;
		goto yy83;
yy292:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 385 "src/wast-lexer.cc"
		{ OPCODE(I64GtS); RETURN(COMPARE); }
#line 1884 "src/prebuilt/wast-lexer-gen.cc"
yy294:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 387 "src/wast-lexer.cc"
		{ OPCODE(I64GtU); RETURN(COMPARE); }
#line 1892 "src/prebuilt/wast-lexer-gen.cc"
yy296:
		yych = *++cursor_;
		if (yych == 's') goto yy297;
		if (yych == 'u') goto yy299;
		goto yy83;
yy297:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 389 "src/wast-lexer.cc"
		{ OPCODE(I64GeS); RETURN(COMPARE); }
#line 1905 "src/prebuilt/wast-lexer-gen.cc"
yy299:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 391 "src/wast-lexer.cc"
		{ OPCODE(I64GeU); RETURN(COMPARE); }
#line 1913 "src/prebuilt/wast-lexer-gen.cc"
yy301:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 375 "src/wast-lexer.cc"
		{ OPCODE(I64Ne); RETURN(COMPARE); }
#line 1921 "src/prebuilt/wast-lexer-gen.cc"
yy303:
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 347 "src/wast-lexer.cc"
		{ OPCODE(I64Xor); RETURN(BINARY); }
#line 1931 "src/prebuilt/wast-lexer-gen.cc"
yy306:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 345 "src/wast-lexer.cc"
		{ OPCODE(I64Or); RETURN(BINARY); }
#line 1939 "src/prebuilt/wast-lexer-gen.cc"
yy308:
		yych = *++cursor_;
		if (yych == 'i') goto yy316;
		if (yych == 'm') goto yy315;
		goto yy83;
yy309:
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych == 'l') goto yy311;
		if (yych == 'r') goto yy313;
		goto yy83;
yy311:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 355 "src/wast-lexer.cc"
		{ OPCODE(I64Rotl); RETURN(BINARY); }
#line 1959 "src/prebuilt/wast-lexer-gen.cc"
yy313:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 357 "src/wast-lexer.cc"
		{ OPCODE(I64Rotr); RETURN(BINARY); }
#line 1967 "src/prebuilt/wast-lexer-gen.cc"
yy315:
		yych = *++cursor_;
		if (yych == '_') goto yy330;
		goto yy83;
yy316:
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'p') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != '/') goto yy83;
		yych = *++cursor_;
		if (yych != 'f') goto yy83;
		yych = *++cursor_;
		if (yych != '6') goto yy83;
		yych = *++cursor_;
		if (yych != '4') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 428 "src/wast-lexer.cc"
		{ OPCODE(I64ReinterpretF64); RETURN(CONVERT); }
#line 2003 "src/prebuilt/wast-lexer-gen.cc"
yy330:
		yych = *++cursor_;
		if (yych == 's') goto yy331;
		if (yych == 'u') goto yy333;
		goto yy83;
yy331:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 339 "src/wast-lexer.cc"
		{ OPCODE(I64RemS); RETURN(BINARY); }
#line 2016 "src/prebuilt/wast-lexer-gen.cc"
yy333:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 341 "src/wast-lexer.cc"
		{ OPCODE(I64RemU); RETURN(BINARY); }
#line 2024 "src/prebuilt/wast-lexer-gen.cc"
yy335:
		yych = *++cursor_;
		if (yych != 'v') goto yy83;
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych == 's') goto yy338;
		if (yych == 'u') goto yy340;
		goto yy83;
yy338:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 335 "src/wast-lexer.cc"
		{ OPCODE(I64DivS); RETURN(BINARY); }
#line 2041 "src/prebuilt/wast-lexer-gen.cc"
yy340:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 337 "src/wast-lexer.cc"
		{ OPCODE(I64DivU); RETURN(BINARY); }
#line 2049 "src/prebuilt/wast-lexer-gen.cc"
yy342:
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 333 "src/wast-lexer.cc"
		{ OPCODE(I64Mul); RETURN(BINARY); }
#line 2059 "src/prebuilt/wast-lexer-gen.cc"
yy345:
		yych = *++cursor_;
		if (yych == 'd') goto yy349;
		goto yy83;
yy346:
		yych = *++cursor_;
		if (yych != 'd') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 343 "src/wast-lexer.cc"
		{ OPCODE(I64And); RETURN(BINARY); }
#line 2073 "src/prebuilt/wast-lexer-gen.cc"
yy349:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 329 "src/wast-lexer.cc"
		{ OPCODE(I64Add); RETURN(BINARY); }
#line 2081 "src/prebuilt/wast-lexer-gen.cc"
yy351:
		yych = *++cursor_;
		if (yych != 'p') goto yy83;
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 313 "src/wast-lexer.cc"
		{ OPCODE(I64Popcnt); RETURN(UNARY); }
#line 2097 "src/prebuilt/wast-lexer-gen.cc"
yy357:
		++cursor_;
		if ((yych = *cursor_) <= 'Z') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy358;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
				} else {
					if (yych != ';') goto yy82;
				}
			}
		} else {
			if (yych <= 'z') {
				if (yych <= '\\') {
					if (yych >= '\\') goto yy82;
				} else {
					if (yych <= ']') goto yy358;
					if (yych <= 'y') goto yy82;
					goto yy377;
				}
			} else {
				if (yych <= '|') {
					if (yych >= '|') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy358:
#line 373 "src/wast-lexer.cc"
		{ OPCODE(I64Eq); RETURN(COMPARE); }
#line 2135 "src/prebuilt/wast-lexer-gen.cc"
yy359:
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 'd') goto yy83;
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych == 's') goto yy365;
		if (yych == 'u') goto yy366;
		goto yy83;
yy365:
		yych = *++cursor_;
		if (yych == '/') goto yy372;
		goto yy83;
yy366:
		yych = *++cursor_;
		if (yych != '/') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != '3') goto yy83;
		yych = *++cursor_;
		if (yych != '2') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 405 "src/wast-lexer.cc"
		{ OPCODE(I64ExtendUI32); RETURN(CONVERT); }
#line 2170 "src/prebuilt/wast-lexer-gen.cc"
yy372:
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != '3') goto yy83;
		yych = *++cursor_;
		if (yych != '2') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 404 "src/wast-lexer.cc"
		{ OPCODE(I64ExtendSI32); RETURN(CONVERT); }
#line 2184 "src/prebuilt/wast-lexer-gen.cc"
yy377:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 307 "src/wast-lexer.cc"
		{ OPCODE(I64Eqz); RETURN(CONVERT); }
#line 2192 "src/prebuilt/wast-lexer-gen.cc"
yy379:
		yych = *++cursor_;
		if (yych == 'z') goto yy388;
		goto yy83;
yy380:
		yych = *++cursor_;
		if (yych == 'n') goto yy384;
		goto yy83;
yy381:
		yych = *++cursor_;
		if (yych != 'z') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 311 "src/wast-lexer.cc"
		{ OPCODE(I64Ctz); RETURN(UNARY); }
#line 2210 "src/prebuilt/wast-lexer-gen.cc"
yy384:
		yych = *++cursor_;
		if (yych != 's') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 303 "src/wast-lexer.cc"
		{ TYPE(I64); RETURN(CONST); }
#line 2222 "src/prebuilt/wast-lexer-gen.cc"
yy388:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 309 "src/wast-lexer.cc"
		{ OPCODE(I64Clz); RETURN(UNARY); }
#line 2230 "src/prebuilt/wast-lexer-gen.cc"
yy390:
		yych = *++cursor_;
		if (yych == 'l') goto yy407;
		if (yych == 'r') goto yy409;
		goto yy83;
yy391:
		yych = *++cursor_;
		if (yych == 'o') goto yy395;
		goto yy83;
yy392:
		yych = *++cursor_;
		if (yych != 'b') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 331 "src/wast-lexer.cc"
		{ OPCODE(I64Sub); RETURN(BINARY); }
#line 2249 "src/prebuilt/wast-lexer-gen.cc"
yy395:
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		++cursor_;
		if ((yych = *cursor_) <= '7') {
			if (yych <= '+') {
				if (yych <= '"') {
					if (yych == '!') goto yy82;
				} else {
					if (yych <= '\'') goto yy82;
					if (yych >= '*') goto yy82;
				}
			} else {
				if (yych <= '1') {
					if (yych <= ',') goto yy398;
					if (yych <= '0') goto yy82;
					goto yy399;
				} else {
					if (yych == '3') goto yy400;
					goto yy82;
				}
			}
		} else {
			if (yych <= '\\') {
				if (yych <= ';') {
					if (yych <= '8') goto yy401;
					if (yych <= ':') goto yy82;
				} else {
					if (yych != '[') goto yy82;
				}
			} else {
				if (yych <= '{') {
					if (yych <= ']') goto yy398;
					if (yych <= 'z') goto yy82;
				} else {
					if (yych == '}') goto yy398;
					if (yych <= '~') goto yy82;
				}
			}
		}
yy398:
#line 282 "src/wast-lexer.cc"
		{ OPCODE(I64Store); RETURN(STORE); }
#line 2295 "src/prebuilt/wast-lexer-gen.cc"
yy399:
		yych = *++cursor_;
		if (yych == '6') goto yy405;
		goto yy83;
yy400:
		yych = *++cursor_;
		if (yych == '2') goto yy403;
		goto yy83;
yy401:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 296 "src/wast-lexer.cc"
		{ OPCODE(I64Store8); RETURN(STORE); }
#line 2311 "src/prebuilt/wast-lexer-gen.cc"
yy403:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 299 "src/wast-lexer.cc"
		{ OPCODE(I64Store32); RETURN(STORE); }
#line 2319 "src/prebuilt/wast-lexer-gen.cc"
yy405:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 298 "src/wast-lexer.cc"
		{ OPCODE(I64Store16); RETURN(STORE); }
#line 2327 "src/prebuilt/wast-lexer-gen.cc"
yy407:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 349 "src/wast-lexer.cc"
		{ OPCODE(I64Shl); RETURN(BINARY); }
#line 2335 "src/prebuilt/wast-lexer-gen.cc"
yy409:
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych == 's') goto yy411;
		if (yych == 'u') goto yy413;
		goto yy83;
yy411:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 351 "src/wast-lexer.cc"
		{ OPCODE(I64ShrS); RETURN(BINARY); }
#line 2350 "src/prebuilt/wast-lexer-gen.cc"
yy413:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 353 "src/wast-lexer.cc"
		{ OPCODE(I64ShrU); RETURN(BINARY); }
#line 2358 "src/prebuilt/wast-lexer-gen.cc"
yy415:
		yych = *++cursor_;
		if (yych == '_') goto yy446;
		goto yy83;
yy416:
		yych = *++cursor_;
		if (yych == 'a') goto yy423;
		goto yy83;
yy417:
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych == 's') goto yy419;
		if (yych == 'u') goto yy421;
		goto yy83;
yy419:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 377 "src/wast-lexer.cc"
		{ OPCODE(I64LtS); RETURN(COMPARE); }
#line 2381 "src/prebuilt/wast-lexer-gen.cc"
yy421:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 379 "src/wast-lexer.cc"
		{ OPCODE(I64LtU); RETURN(COMPARE); }
#line 2389 "src/prebuilt/wast-lexer-gen.cc"
yy423:
		yych = *++cursor_;
		if (yych != 'd') goto yy83;
		++cursor_;
		if ((yych = *cursor_) <= '7') {
			if (yych <= '+') {
				if (yych <= '"') {
					if (yych == '!') goto yy82;
				} else {
					if (yych <= '\'') goto yy82;
					if (yych >= '*') goto yy82;
				}
			} else {
				if (yych <= '1') {
					if (yych <= ',') goto yy425;
					if (yych <= '0') goto yy82;
					goto yy427;
				} else {
					if (yych == '3') goto yy428;
					goto yy82;
				}
			}
		} else {
			if (yych <= '\\') {
				if (yych <= ';') {
					if (yych <= '8') goto yy426;
					if (yych <= ':') goto yy82;
				} else {
					if (yych != '[') goto yy82;
				}
			} else {
				if (yych <= '{') {
					if (yych <= ']') goto yy425;
					if (yych <= 'z') goto yy82;
				} else {
					if (yych == '}') goto yy425;
					if (yych <= '~') goto yy82;
				}
			}
		}
yy425:
#line 278 "src/wast-lexer.cc"
		{ OPCODE(I64Load); RETURN(LOAD); }
#line 2433 "src/prebuilt/wast-lexer-gen.cc"
yy426:
		yych = *++cursor_;
		if (yych == '_') goto yy441;
		goto yy83;
yy427:
		yych = *++cursor_;
		if (yych == '6') goto yy435;
		goto yy83;
yy428:
		yych = *++cursor_;
		if (yych != '2') goto yy83;
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych == 's') goto yy431;
		if (yych == 'u') goto yy433;
		goto yy83;
yy431:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 293 "src/wast-lexer.cc"
		{ OPCODE(I64Load32S); RETURN(LOAD); }
#line 2458 "src/prebuilt/wast-lexer-gen.cc"
yy433:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 294 "src/wast-lexer.cc"
		{ OPCODE(I64Load32U); RETURN(LOAD); }
#line 2466 "src/prebuilt/wast-lexer-gen.cc"
yy435:
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych == 's') goto yy437;
		if (yych == 'u') goto yy439;
		goto yy83;
yy437:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 290 "src/wast-lexer.cc"
		{ OPCODE(I64Load16S); RETURN(LOAD); }
#line 2481 "src/prebuilt/wast-lexer-gen.cc"
yy439:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 292 "src/wast-lexer.cc"
		{ OPCODE(I64Load16U); RETURN(LOAD); }
#line 2489 "src/prebuilt/wast-lexer-gen.cc"
yy441:
		yych = *++cursor_;
		if (yych == 's') goto yy442;
		if (yych == 'u') goto yy444;
		goto yy83;
yy442:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 286 "src/wast-lexer.cc"
		{ OPCODE(I64Load8S); RETURN(LOAD); }
#line 2502 "src/prebuilt/wast-lexer-gen.cc"
yy444:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 288 "src/wast-lexer.cc"
		{ OPCODE(I64Load8U); RETURN(LOAD); }
#line 2510 "src/prebuilt/wast-lexer-gen.cc"
yy446:
		yych = *++cursor_;
		if (yych == 's') goto yy447;
		if (yych == 'u') goto yy449;
		goto yy83;
yy447:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 381 "src/wast-lexer.cc"
		{ OPCODE(I64LeS); RETURN(COMPARE); }
#line 2523 "src/prebuilt/wast-lexer-gen.cc"
yy449:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 383 "src/wast-lexer.cc"
		{ OPCODE(I64LeU); RETURN(COMPARE); }
#line 2531 "src/prebuilt/wast-lexer-gen.cc"
yy451:
		++cursor_;
		if ((yych = *cursor_) <= ':') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy452;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
				} else {
					if (yych == '.') goto yy453;
					goto yy82;
				}
			}
		} else {
			if (yych <= ']') {
				if (yych <= 'Z') {
					if (yych >= '<') goto yy82;
				} else {
					if (yych == '\\') goto yy82;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy452:
#line 252 "src/wast-lexer.cc"
		{ TYPE(I32); RETURN(VALUE_TYPE); }
#line 2568 "src/prebuilt/wast-lexer-gen.cc"
yy453:
		yych = *++cursor_;
		switch (yych) {
		case 'a':	goto yy459;
		case 'c':	goto yy456;
		case 'd':	goto yy461;
		case 'e':	goto yy457;
		case 'g':	goto yy466;
		case 'l':	goto yy454;
		case 'm':	goto yy460;
		case 'n':	goto yy465;
		case 'o':	goto yy463;
		case 'p':	goto yy458;
		case 'r':	goto yy462;
		case 's':	goto yy455;
		case 't':	goto yy468;
		case 'w':	goto yy467;
		case 'x':	goto yy464;
		default:	goto yy83;
		}
yy454:
		yych = *++cursor_;
		if (yych <= 'n') {
			if (yych == 'e') goto yy605;
			goto yy83;
		} else {
			if (yych <= 'o') goto yy606;
			if (yych == 't') goto yy607;
			goto yy83;
		}
yy455:
		yych = *++cursor_;
		if (yych <= 's') {
			if (yych == 'h') goto yy583;
			goto yy83;
		} else {
			if (yych <= 't') goto yy584;
			if (yych <= 'u') goto yy585;
			goto yy83;
		}
yy456:
		yych = *++cursor_;
		if (yych <= 'n') {
			if (yych == 'l') goto yy572;
			goto yy83;
		} else {
			if (yych <= 'o') goto yy573;
			if (yych == 't') goto yy574;
			goto yy83;
		}
yy457:
		yych = *++cursor_;
		if (yych == 'q') goto yy568;
		goto yy83;
yy458:
		yych = *++cursor_;
		if (yych == 'o') goto yy562;
		goto yy83;
yy459:
		yych = *++cursor_;
		if (yych == 'd') goto yy556;
		if (yych == 'n') goto yy557;
		goto yy83;
yy460:
		yych = *++cursor_;
		if (yych == 'u') goto yy553;
		goto yy83;
yy461:
		yych = *++cursor_;
		if (yych == 'i') goto yy546;
		goto yy83;
yy462:
		yych = *++cursor_;
		if (yych == 'e') goto yy519;
		if (yych == 'o') goto yy520;
		goto yy83;
yy463:
		yych = *++cursor_;
		if (yych == 'r') goto yy517;
		goto yy83;
yy464:
		yych = *++cursor_;
		if (yych == 'o') goto yy514;
		goto yy83;
yy465:
		yych = *++cursor_;
		if (yych == 'e') goto yy512;
		goto yy83;
yy466:
		yych = *++cursor_;
		if (yych == 'e') goto yy500;
		if (yych == 't') goto yy501;
		goto yy83;
yy467:
		yych = *++cursor_;
		if (yych == 'r') goto yy492;
		goto yy83;
yy468:
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'u') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych == 's') goto yy474;
		if (yych == 'u') goto yy475;
		goto yy83;
yy474:
		yych = *++cursor_;
		if (yych == '/') goto yy484;
		goto yy83;
yy475:
		yych = *++cursor_;
		if (yych != '/') goto yy83;
		yych = *++cursor_;
		if (yych != 'f') goto yy83;
		yych = *++cursor_;
		if (yych == '3') goto yy478;
		if (yych == '6') goto yy479;
		goto yy83;
yy478:
		yych = *++cursor_;
		if (yych == '2') goto yy482;
		goto yy83;
yy479:
		yych = *++cursor_;
		if (yych != '4') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 413 "src/wast-lexer.cc"
		{ OPCODE(I32TruncUF64); RETURN(CONVERT); }
#line 2707 "src/prebuilt/wast-lexer-gen.cc"
yy482:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 411 "src/wast-lexer.cc"
		{ OPCODE(I32TruncUF32); RETURN(CONVERT); }
#line 2715 "src/prebuilt/wast-lexer-gen.cc"
yy484:
		yych = *++cursor_;
		if (yych != 'f') goto yy83;
		yych = *++cursor_;
		if (yych == '3') goto yy486;
		if (yych == '6') goto yy487;
		goto yy83;
yy486:
		yych = *++cursor_;
		if (yych == '2') goto yy490;
		goto yy83;
yy487:
		yych = *++cursor_;
		if (yych != '4') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 409 "src/wast-lexer.cc"
		{ OPCODE(I32TruncSF64); RETURN(CONVERT); }
#line 2736 "src/prebuilt/wast-lexer-gen.cc"
yy490:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 407 "src/wast-lexer.cc"
		{ OPCODE(I32TruncSF32); RETURN(CONVERT); }
#line 2744 "src/prebuilt/wast-lexer-gen.cc"
yy492:
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'p') goto yy83;
		yych = *++cursor_;
		if (yych != '/') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != '6') goto yy83;
		yych = *++cursor_;
		if (yych != '4') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 406 "src/wast-lexer.cc"
		{ OPCODE(I32WrapI64); RETURN(CONVERT); }
#line 2764 "src/prebuilt/wast-lexer-gen.cc"
yy500:
		yych = *++cursor_;
		if (yych == '_') goto yy507;
		goto yy83;
yy501:
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych == 's') goto yy503;
		if (yych == 'u') goto yy505;
		goto yy83;
yy503:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 384 "src/wast-lexer.cc"
		{ OPCODE(I32GtS); RETURN(COMPARE); }
#line 2783 "src/prebuilt/wast-lexer-gen.cc"
yy505:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 386 "src/wast-lexer.cc"
		{ OPCODE(I32GtU); RETURN(COMPARE); }
#line 2791 "src/prebuilt/wast-lexer-gen.cc"
yy507:
		yych = *++cursor_;
		if (yych == 's') goto yy508;
		if (yych == 'u') goto yy510;
		goto yy83;
yy508:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 388 "src/wast-lexer.cc"
		{ OPCODE(I32GeS); RETURN(COMPARE); }
#line 2804 "src/prebuilt/wast-lexer-gen.cc"
yy510:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 390 "src/wast-lexer.cc"
		{ OPCODE(I32GeU); RETURN(COMPARE); }
#line 2812 "src/prebuilt/wast-lexer-gen.cc"
yy512:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 374 "src/wast-lexer.cc"
		{ OPCODE(I32Ne); RETURN(COMPARE); }
#line 2820 "src/prebuilt/wast-lexer-gen.cc"
yy514:
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 346 "src/wast-lexer.cc"
		{ OPCODE(I32Xor); RETURN(BINARY); }
#line 2830 "src/prebuilt/wast-lexer-gen.cc"
yy517:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 344 "src/wast-lexer.cc"
		{ OPCODE(I32Or); RETURN(BINARY); }
#line 2838 "src/prebuilt/wast-lexer-gen.cc"
yy519:
		yych = *++cursor_;
		if (yych == 'i') goto yy527;
		if (yych == 'm') goto yy526;
		goto yy83;
yy520:
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych == 'l') goto yy522;
		if (yych == 'r') goto yy524;
		goto yy83;
yy522:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 354 "src/wast-lexer.cc"
		{ OPCODE(I32Rotl); RETURN(BINARY); }
#line 2858 "src/prebuilt/wast-lexer-gen.cc"
yy524:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 356 "src/wast-lexer.cc"
		{ OPCODE(I32Rotr); RETURN(BINARY); }
#line 2866 "src/prebuilt/wast-lexer-gen.cc"
yy526:
		yych = *++cursor_;
		if (yych == '_') goto yy541;
		goto yy83;
yy527:
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'p') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != '/') goto yy83;
		yych = *++cursor_;
		if (yych != 'f') goto yy83;
		yych = *++cursor_;
		if (yych != '3') goto yy83;
		yych = *++cursor_;
		if (yych != '2') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 426 "src/wast-lexer.cc"
		{ OPCODE(I32ReinterpretF32); RETURN(CONVERT); }
#line 2902 "src/prebuilt/wast-lexer-gen.cc"
yy541:
		yych = *++cursor_;
		if (yych == 's') goto yy542;
		if (yych == 'u') goto yy544;
		goto yy83;
yy542:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 338 "src/wast-lexer.cc"
		{ OPCODE(I32RemS); RETURN(BINARY); }
#line 2915 "src/prebuilt/wast-lexer-gen.cc"
yy544:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 340 "src/wast-lexer.cc"
		{ OPCODE(I32RemU); RETURN(BINARY); }
#line 2923 "src/prebuilt/wast-lexer-gen.cc"
yy546:
		yych = *++cursor_;
		if (yych != 'v') goto yy83;
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych == 's') goto yy549;
		if (yych == 'u') goto yy551;
		goto yy83;
yy549:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 334 "src/wast-lexer.cc"
		{ OPCODE(I32DivS); RETURN(BINARY); }
#line 2940 "src/prebuilt/wast-lexer-gen.cc"
yy551:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 336 "src/wast-lexer.cc"
		{ OPCODE(I32DivU); RETURN(BINARY); }
#line 2948 "src/prebuilt/wast-lexer-gen.cc"
yy553:
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 332 "src/wast-lexer.cc"
		{ OPCODE(I32Mul); RETURN(BINARY); }
#line 2958 "src/prebuilt/wast-lexer-gen.cc"
yy556:
		yych = *++cursor_;
		if (yych == 'd') goto yy560;
		goto yy83;
yy557:
		yych = *++cursor_;
		if (yych != 'd') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 342 "src/wast-lexer.cc"
		{ OPCODE(I32And); RETURN(BINARY); }
#line 2972 "src/prebuilt/wast-lexer-gen.cc"
yy560:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 328 "src/wast-lexer.cc"
		{ OPCODE(I32Add); RETURN(BINARY); }
#line 2980 "src/prebuilt/wast-lexer-gen.cc"
yy562:
		yych = *++cursor_;
		if (yych != 'p') goto yy83;
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 312 "src/wast-lexer.cc"
		{ OPCODE(I32Popcnt); RETURN(UNARY); }
#line 2996 "src/prebuilt/wast-lexer-gen.cc"
yy568:
		++cursor_;
		if ((yych = *cursor_) <= 'Z') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy569;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
				} else {
					if (yych != ';') goto yy82;
				}
			}
		} else {
			if (yych <= 'z') {
				if (yych <= '\\') {
					if (yych >= '\\') goto yy82;
				} else {
					if (yych <= ']') goto yy569;
					if (yych <= 'y') goto yy82;
					goto yy570;
				}
			} else {
				if (yych <= '|') {
					if (yych >= '|') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy569:
#line 372 "src/wast-lexer.cc"
		{ OPCODE(I32Eq); RETURN(COMPARE); }
#line 3034 "src/prebuilt/wast-lexer-gen.cc"
yy570:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 306 "src/wast-lexer.cc"
		{ OPCODE(I32Eqz); RETURN(CONVERT); }
#line 3042 "src/prebuilt/wast-lexer-gen.cc"
yy572:
		yych = *++cursor_;
		if (yych == 'z') goto yy581;
		goto yy83;
yy573:
		yych = *++cursor_;
		if (yych == 'n') goto yy577;
		goto yy83;
yy574:
		yych = *++cursor_;
		if (yych != 'z') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 310 "src/wast-lexer.cc"
		{ OPCODE(I32Ctz); RETURN(UNARY); }
#line 3060 "src/prebuilt/wast-lexer-gen.cc"
yy577:
		yych = *++cursor_;
		if (yych != 's') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 302 "src/wast-lexer.cc"
		{ TYPE(I32); RETURN(CONST); }
#line 3072 "src/prebuilt/wast-lexer-gen.cc"
yy581:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 308 "src/wast-lexer.cc"
		{ OPCODE(I32Clz); RETURN(UNARY); }
#line 3080 "src/prebuilt/wast-lexer-gen.cc"
yy583:
		yych = *++cursor_;
		if (yych == 'l') goto yy597;
		if (yych == 'r') goto yy599;
		goto yy83;
yy584:
		yych = *++cursor_;
		if (yych == 'o') goto yy588;
		goto yy83;
yy585:
		yych = *++cursor_;
		if (yych != 'b') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 330 "src/wast-lexer.cc"
		{ OPCODE(I32Sub); RETURN(BINARY); }
#line 3099 "src/prebuilt/wast-lexer-gen.cc"
yy588:
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		++cursor_;
		if ((yych = *cursor_) <= '8') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy591;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= '0') {
					if (yych != ',') goto yy82;
				} else {
					if (yych <= '1') goto yy592;
					if (yych <= '7') goto yy82;
					goto yy593;
				}
			}
		} else {
			if (yych <= ']') {
				if (yych <= 'Z') {
					if (yych != ';') goto yy82;
				} else {
					if (yych == '\\') goto yy82;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy591:
#line 281 "src/wast-lexer.cc"
		{ OPCODE(I32Store); RETURN(STORE); }
#line 3141 "src/prebuilt/wast-lexer-gen.cc"
yy592:
		yych = *++cursor_;
		if (yych == '6') goto yy595;
		goto yy83;
yy593:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 295 "src/wast-lexer.cc"
		{ OPCODE(I32Store8); RETURN(STORE); }
#line 3153 "src/prebuilt/wast-lexer-gen.cc"
yy595:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 297 "src/wast-lexer.cc"
		{ OPCODE(I32Store16); RETURN(STORE); }
#line 3161 "src/prebuilt/wast-lexer-gen.cc"
yy597:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 348 "src/wast-lexer.cc"
		{ OPCODE(I32Shl); RETURN(BINARY); }
#line 3169 "src/prebuilt/wast-lexer-gen.cc"
yy599:
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych == 's') goto yy601;
		if (yych == 'u') goto yy603;
		goto yy83;
yy601:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 350 "src/wast-lexer.cc"
		{ OPCODE(I32ShrS); RETURN(BINARY); }
#line 3184 "src/prebuilt/wast-lexer-gen.cc"
yy603:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 352 "src/wast-lexer.cc"
		{ OPCODE(I32ShrU); RETURN(BINARY); }
#line 3192 "src/prebuilt/wast-lexer-gen.cc"
yy605:
		yych = *++cursor_;
		if (yych == '_') goto yy629;
		goto yy83;
yy606:
		yych = *++cursor_;
		if (yych == 'a') goto yy613;
		goto yy83;
yy607:
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych == 's') goto yy609;
		if (yych == 'u') goto yy611;
		goto yy83;
yy609:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 376 "src/wast-lexer.cc"
		{ OPCODE(I32LtS); RETURN(COMPARE); }
#line 3215 "src/prebuilt/wast-lexer-gen.cc"
yy611:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 378 "src/wast-lexer.cc"
		{ OPCODE(I32LtU); RETURN(COMPARE); }
#line 3223 "src/prebuilt/wast-lexer-gen.cc"
yy613:
		yych = *++cursor_;
		if (yych != 'd') goto yy83;
		++cursor_;
		if ((yych = *cursor_) <= '8') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy615;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= '0') {
					if (yych != ',') goto yy82;
				} else {
					if (yych <= '1') goto yy617;
					if (yych <= '7') goto yy82;
					goto yy616;
				}
			}
		} else {
			if (yych <= ']') {
				if (yych <= 'Z') {
					if (yych != ';') goto yy82;
				} else {
					if (yych == '\\') goto yy82;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy615:
#line 277 "src/wast-lexer.cc"
		{ OPCODE(I32Load); RETURN(LOAD); }
#line 3263 "src/prebuilt/wast-lexer-gen.cc"
yy616:
		yych = *++cursor_;
		if (yych == '_') goto yy624;
		goto yy83;
yy617:
		yych = *++cursor_;
		if (yych != '6') goto yy83;
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych == 's') goto yy620;
		if (yych == 'u') goto yy622;
		goto yy83;
yy620:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 289 "src/wast-lexer.cc"
		{ OPCODE(I32Load16S); RETURN(LOAD); }
#line 3284 "src/prebuilt/wast-lexer-gen.cc"
yy622:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 291 "src/wast-lexer.cc"
		{ OPCODE(I32Load16U); RETURN(LOAD); }
#line 3292 "src/prebuilt/wast-lexer-gen.cc"
yy624:
		yych = *++cursor_;
		if (yych == 's') goto yy625;
		if (yych == 'u') goto yy627;
		goto yy83;
yy625:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 285 "src/wast-lexer.cc"
		{ OPCODE(I32Load8S); RETURN(LOAD); }
#line 3305 "src/prebuilt/wast-lexer-gen.cc"
yy627:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 287 "src/wast-lexer.cc"
		{ OPCODE(I32Load8U); RETURN(LOAD); }
#line 3313 "src/prebuilt/wast-lexer-gen.cc"
yy629:
		yych = *++cursor_;
		if (yych == 's') goto yy630;
		if (yych == 'u') goto yy632;
		goto yy83;
yy630:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 380 "src/wast-lexer.cc"
		{ OPCODE(I32LeS); RETURN(COMPARE); }
#line 3326 "src/prebuilt/wast-lexer-gen.cc"
yy632:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 382 "src/wast-lexer.cc"
		{ OPCODE(I32LeU); RETURN(COMPARE); }
#line 3334 "src/prebuilt/wast-lexer-gen.cc"
yy634:
		yych = *++cursor_;
		if (yych == 't') goto yy652;
		goto yy83;
yy635:
		yych = *++cursor_;
		if (yych == 'o') goto yy647;
		goto yy83;
yy636:
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'w') goto yy83;
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych != 'm') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'm') goto yy83;
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'y') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 432 "src/wast-lexer.cc"
		{ RETURN(GROW_MEMORY); }
#line 3368 "src/prebuilt/wast-lexer-gen.cc"
yy647:
		yych = *++cursor_;
		if (yych != 'b') goto yy83;
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 438 "src/wast-lexer.cc"
		{ RETURN(GLOBAL); }
#line 3382 "src/prebuilt/wast-lexer-gen.cc"
yy652:
		++cursor_;
		if ((yych = *cursor_) <= 'Z') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy653;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
				} else {
					if (yych != ';') goto yy82;
				}
			}
		} else {
			if (yych <= '_') {
				if (yych <= '\\') {
					if (yych >= '\\') goto yy82;
				} else {
					if (yych <= ']') goto yy653;
					if (yych <= '^') goto yy82;
					goto yy654;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy653:
#line 450 "src/wast-lexer.cc"
		{ RETURN(GET); }
#line 3420 "src/prebuilt/wast-lexer-gen.cc"
yy654:
		yych = *++cursor_;
		if (yych == 'g') goto yy656;
		if (yych != 'l') goto yy83;
		yych = *++cursor_;
		if (yych == 'o') goto yy663;
		goto yy83;
yy656:
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'b') goto yy83;
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 275 "src/wast-lexer.cc"
		{ RETURN(GET_GLOBAL); }
#line 3445 "src/prebuilt/wast-lexer-gen.cc"
yy663:
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 272 "src/wast-lexer.cc"
		{ RETURN(GET_LOCAL); }
#line 3459 "src/prebuilt/wast-lexer-gen.cc"
yy668:
		yych = *++cursor_;
		if (yych == '2') goto yy819;
		goto yy83;
yy669:
		yych = *++cursor_;
		if (yych == '4') goto yy674;
		goto yy83;
yy670:
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 434 "src/wast-lexer.cc"
		{ RETURN(FUNC); }
#line 3479 "src/prebuilt/wast-lexer-gen.cc"
yy674:
		++cursor_;
		if ((yych = *cursor_) <= ':') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy675;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
				} else {
					if (yych == '.') goto yy676;
					goto yy82;
				}
			}
		} else {
			if (yych <= ']') {
				if (yych <= 'Z') {
					if (yych >= '<') goto yy82;
				} else {
					if (yych == '\\') goto yy82;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy675:
#line 255 "src/wast-lexer.cc"
		{ TYPE(F64); RETURN(VALUE_TYPE); }
#line 3516 "src/prebuilt/wast-lexer-gen.cc"
yy676:
		yych = *++cursor_;
		switch (yych) {
		case 'a':	goto yy681;
		case 'c':	goto yy679;
		case 'd':	goto yy685;
		case 'e':	goto yy686;
		case 'f':	goto yy682;
		case 'g':	goto yy687;
		case 'l':	goto yy677;
		case 'm':	goto yy684;
		case 'n':	goto yy680;
		case 'p':	goto yy688;
		case 'r':	goto yy689;
		case 's':	goto yy678;
		case 't':	goto yy683;
		default:	goto yy83;
		}
yy677:
		yych = *++cursor_;
		if (yych <= 'n') {
			if (yych == 'e') goto yy811;
			goto yy83;
		} else {
			if (yych <= 'o') goto yy813;
			if (yych == 't') goto yy814;
			goto yy83;
		}
yy678:
		yych = *++cursor_;
		if (yych <= 's') {
			if (yych == 'q') goto yy799;
			goto yy83;
		} else {
			if (yych <= 't') goto yy800;
			if (yych <= 'u') goto yy801;
			goto yy83;
		}
yy679:
		yych = *++cursor_;
		if (yych == 'e') goto yy760;
		if (yych == 'o') goto yy761;
		goto yy83;
yy680:
		yych = *++cursor_;
		if (yych == 'e') goto yy750;
		goto yy83;
yy681:
		yych = *++cursor_;
		if (yych == 'b') goto yy744;
		if (yych == 'd') goto yy745;
		goto yy83;
yy682:
		yych = *++cursor_;
		if (yych == 'l') goto yy739;
		goto yy83;
yy683:
		yych = *++cursor_;
		if (yych == 'r') goto yy734;
		goto yy83;
yy684:
		yych = *++cursor_;
		if (yych <= 'h') {
			if (yych == 'a') goto yy725;
			goto yy83;
		} else {
			if (yych <= 'i') goto yy726;
			if (yych == 'u') goto yy727;
			goto yy83;
		}
yy685:
		yych = *++cursor_;
		if (yych == 'i') goto yy722;
		goto yy83;
yy686:
		yych = *++cursor_;
		if (yych == 'q') goto yy720;
		goto yy83;
yy687:
		yych = *++cursor_;
		if (yych == 'e') goto yy716;
		if (yych == 't') goto yy718;
		goto yy83;
yy688:
		yych = *++cursor_;
		if (yych == 'r') goto yy705;
		goto yy83;
yy689:
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'p') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != '/') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != '6') goto yy83;
		yych = *++cursor_;
		if (yych != '4') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 427 "src/wast-lexer.cc"
		{ OPCODE(F64ReinterpretI64); RETURN(CONVERT); }
#line 3639 "src/prebuilt/wast-lexer-gen.cc"
yy705:
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'm') goto yy83;
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != '/') goto yy83;
		yych = *++cursor_;
		if (yych != 'f') goto yy83;
		yych = *++cursor_;
		if (yych != '3') goto yy83;
		yych = *++cursor_;
		if (yych != '2') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 423 "src/wast-lexer.cc"
		{ OPCODE(F64PromoteF32); RETURN(CONVERT); }
#line 3665 "src/prebuilt/wast-lexer-gen.cc"
yy716:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 403 "src/wast-lexer.cc"
		{ OPCODE(F64Ge); RETURN(COMPARE); }
#line 3673 "src/prebuilt/wast-lexer-gen.cc"
yy718:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 401 "src/wast-lexer.cc"
		{ OPCODE(F64Gt); RETURN(COMPARE); }
#line 3681 "src/prebuilt/wast-lexer-gen.cc"
yy720:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 393 "src/wast-lexer.cc"
		{ OPCODE(F64Eq); RETURN(COMPARE); }
#line 3689 "src/prebuilt/wast-lexer-gen.cc"
yy722:
		yych = *++cursor_;
		if (yych != 'v') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 365 "src/wast-lexer.cc"
		{ OPCODE(F64Div); RETURN(BINARY); }
#line 3699 "src/prebuilt/wast-lexer-gen.cc"
yy725:
		yych = *++cursor_;
		if (yych == 'x') goto yy732;
		goto yy83;
yy726:
		yych = *++cursor_;
		if (yych == 'n') goto yy730;
		goto yy83;
yy727:
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 363 "src/wast-lexer.cc"
		{ OPCODE(F64Mul); RETURN(BINARY); }
#line 3717 "src/prebuilt/wast-lexer-gen.cc"
yy730:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 367 "src/wast-lexer.cc"
		{ OPCODE(F64Min); RETURN(BINARY); }
#line 3725 "src/prebuilt/wast-lexer-gen.cc"
yy732:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 369 "src/wast-lexer.cc"
		{ OPCODE(F64Max); RETURN(BINARY); }
#line 3733 "src/prebuilt/wast-lexer-gen.cc"
yy734:
		yych = *++cursor_;
		if (yych != 'u') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 325 "src/wast-lexer.cc"
		{ OPCODE(F64Trunc); RETURN(UNARY); }
#line 3747 "src/prebuilt/wast-lexer-gen.cc"
yy739:
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 323 "src/wast-lexer.cc"
		{ OPCODE(F64Floor); RETURN(UNARY); }
#line 3761 "src/prebuilt/wast-lexer-gen.cc"
yy744:
		yych = *++cursor_;
		if (yych == 's') goto yy748;
		goto yy83;
yy745:
		yych = *++cursor_;
		if (yych != 'd') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 359 "src/wast-lexer.cc"
		{ OPCODE(F64Add); RETURN(BINARY); }
#line 3775 "src/prebuilt/wast-lexer-gen.cc"
yy748:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 317 "src/wast-lexer.cc"
		{ OPCODE(F64Abs); RETURN(UNARY); }
#line 3783 "src/prebuilt/wast-lexer-gen.cc"
yy750:
		++cursor_;
		if ((yych = *cursor_) <= '[') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy751;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ':') {
					if (yych != ',') goto yy82;
				} else {
					if (yych <= ';') goto yy751;
					if (yych <= 'Z') goto yy82;
				}
			}
		} else {
			if (yych <= 'g') {
				if (yych <= '`') {
					if (yych != ']') goto yy82;
				} else {
					if (yych <= 'a') goto yy754;
					if (yych <= 'f') goto yy82;
					goto yy752;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy751:
#line 395 "src/wast-lexer.cc"
		{ OPCODE(F64Ne); RETURN(COMPARE); }
#line 3822 "src/prebuilt/wast-lexer-gen.cc"
yy752:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 315 "src/wast-lexer.cc"
		{ OPCODE(F64Neg); RETURN(UNARY); }
#line 3830 "src/prebuilt/wast-lexer-gen.cc"
yy754:
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 's') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 327 "src/wast-lexer.cc"
		{ OPCODE(F64Nearest); RETURN(UNARY); }
#line 3846 "src/prebuilt/wast-lexer-gen.cc"
yy760:
		yych = *++cursor_;
		if (yych == 'i') goto yy796;
		goto yy83;
yy761:
		yych = *++cursor_;
		if (yych == 'n') goto yy762;
		if (yych == 'p') goto yy763;
		goto yy83;
yy762:
		yych = *++cursor_;
		if (yych == 's') goto yy770;
		if (yych == 'v') goto yy771;
		goto yy83;
yy763:
		yych = *++cursor_;
		if (yych != 'y') goto yy83;
		yych = *++cursor_;
		if (yych != 's') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != 'g') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 371 "src/wast-lexer.cc"
		{ OPCODE(F64Copysign); RETURN(BINARY); }
#line 3878 "src/prebuilt/wast-lexer-gen.cc"
yy770:
		yych = *++cursor_;
		if (yych == 't') goto yy794;
		goto yy83;
yy771:
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych == 's') goto yy776;
		if (yych == 'u') goto yy777;
		goto yy83;
yy776:
		yych = *++cursor_;
		if (yych == '/') goto yy786;
		goto yy83;
yy777:
		yych = *++cursor_;
		if (yych != '/') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych == '3') goto yy780;
		if (yych == '6') goto yy781;
		goto yy83;
yy780:
		yych = *++cursor_;
		if (yych == '2') goto yy784;
		goto yy83;
yy781:
		yych = *++cursor_;
		if (yych != '4') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 422 "src/wast-lexer.cc"
		{ OPCODE(F64ConvertUI64); RETURN(CONVERT); }
#line 3922 "src/prebuilt/wast-lexer-gen.cc"
yy784:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 420 "src/wast-lexer.cc"
		{ OPCODE(F64ConvertUI32); RETURN(CONVERT); }
#line 3930 "src/prebuilt/wast-lexer-gen.cc"
yy786:
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych == '3') goto yy788;
		if (yych == '6') goto yy789;
		goto yy83;
yy788:
		yych = *++cursor_;
		if (yych == '2') goto yy792;
		goto yy83;
yy789:
		yych = *++cursor_;
		if (yych != '4') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 418 "src/wast-lexer.cc"
		{ OPCODE(F64ConvertSI64); RETURN(CONVERT); }
#line 3951 "src/prebuilt/wast-lexer-gen.cc"
yy792:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 416 "src/wast-lexer.cc"
		{ OPCODE(F64ConvertSI32); RETURN(CONVERT); }
#line 3959 "src/prebuilt/wast-lexer-gen.cc"
yy794:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 305 "src/wast-lexer.cc"
		{ TYPE(F64); RETURN(CONST); }
#line 3967 "src/prebuilt/wast-lexer-gen.cc"
yy796:
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 321 "src/wast-lexer.cc"
		{ OPCODE(F64Ceil); RETURN(UNARY); }
#line 3977 "src/prebuilt/wast-lexer-gen.cc"
yy799:
		yych = *++cursor_;
		if (yych == 'r') goto yy808;
		goto yy83;
yy800:
		yych = *++cursor_;
		if (yych == 'o') goto yy804;
		goto yy83;
yy801:
		yych = *++cursor_;
		if (yych != 'b') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 361 "src/wast-lexer.cc"
		{ OPCODE(F64Sub); RETURN(BINARY); }
#line 3995 "src/prebuilt/wast-lexer-gen.cc"
yy804:
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 284 "src/wast-lexer.cc"
		{ OPCODE(F64Store); RETURN(STORE); }
#line 4007 "src/prebuilt/wast-lexer-gen.cc"
yy808:
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 319 "src/wast-lexer.cc"
		{ OPCODE(F64Sqrt); RETURN(UNARY); }
#line 4017 "src/prebuilt/wast-lexer-gen.cc"
yy811:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 399 "src/wast-lexer.cc"
		{ OPCODE(F64Le); RETURN(COMPARE); }
#line 4025 "src/prebuilt/wast-lexer-gen.cc"
yy813:
		yych = *++cursor_;
		if (yych == 'a') goto yy816;
		goto yy83;
yy814:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 397 "src/wast-lexer.cc"
		{ OPCODE(F64Lt); RETURN(COMPARE); }
#line 4037 "src/prebuilt/wast-lexer-gen.cc"
yy816:
		yych = *++cursor_;
		if (yych != 'd') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 280 "src/wast-lexer.cc"
		{ OPCODE(F64Load); RETURN(LOAD); }
#line 4047 "src/prebuilt/wast-lexer-gen.cc"
yy819:
		++cursor_;
		if ((yych = *cursor_) <= ':') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy820;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
				} else {
					if (yych == '.') goto yy821;
					goto yy82;
				}
			}
		} else {
			if (yych <= ']') {
				if (yych <= 'Z') {
					if (yych >= '<') goto yy82;
				} else {
					if (yych == '\\') goto yy82;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy820:
#line 254 "src/wast-lexer.cc"
		{ TYPE(F32); RETURN(VALUE_TYPE); }
#line 4084 "src/prebuilt/wast-lexer-gen.cc"
yy821:
		yych = *++cursor_;
		switch (yych) {
		case 'a':	goto yy826;
		case 'c':	goto yy824;
		case 'd':	goto yy830;
		case 'e':	goto yy831;
		case 'f':	goto yy827;
		case 'g':	goto yy832;
		case 'l':	goto yy822;
		case 'm':	goto yy829;
		case 'n':	goto yy825;
		case 'r':	goto yy833;
		case 's':	goto yy823;
		case 't':	goto yy828;
		default:	goto yy83;
		}
yy822:
		yych = *++cursor_;
		if (yych <= 'n') {
			if (yych == 'e') goto yy954;
			goto yy83;
		} else {
			if (yych <= 'o') goto yy956;
			if (yych == 't') goto yy957;
			goto yy83;
		}
yy823:
		yych = *++cursor_;
		if (yych <= 's') {
			if (yych == 'q') goto yy942;
			goto yy83;
		} else {
			if (yych <= 't') goto yy943;
			if (yych <= 'u') goto yy944;
			goto yy83;
		}
yy824:
		yych = *++cursor_;
		if (yych == 'e') goto yy903;
		if (yych == 'o') goto yy904;
		goto yy83;
yy825:
		yych = *++cursor_;
		if (yych == 'e') goto yy893;
		goto yy83;
yy826:
		yych = *++cursor_;
		if (yych == 'b') goto yy887;
		if (yych == 'd') goto yy888;
		goto yy83;
yy827:
		yych = *++cursor_;
		if (yych == 'l') goto yy882;
		goto yy83;
yy828:
		yych = *++cursor_;
		if (yych == 'r') goto yy877;
		goto yy83;
yy829:
		yych = *++cursor_;
		if (yych <= 'h') {
			if (yych == 'a') goto yy868;
			goto yy83;
		} else {
			if (yych <= 'i') goto yy869;
			if (yych == 'u') goto yy870;
			goto yy83;
		}
yy830:
		yych = *++cursor_;
		if (yych == 'e') goto yy855;
		if (yych == 'i') goto yy856;
		goto yy83;
yy831:
		yych = *++cursor_;
		if (yych == 'q') goto yy853;
		goto yy83;
yy832:
		yych = *++cursor_;
		if (yych == 'e') goto yy849;
		if (yych == 't') goto yy851;
		goto yy83;
yy833:
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'p') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != '/') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != '3') goto yy83;
		yych = *++cursor_;
		if (yych != '2') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 425 "src/wast-lexer.cc"
		{ OPCODE(F32ReinterpretI32); RETURN(CONVERT); }
#line 4203 "src/prebuilt/wast-lexer-gen.cc"
yy849:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 402 "src/wast-lexer.cc"
		{ OPCODE(F32Ge); RETURN(COMPARE); }
#line 4211 "src/prebuilt/wast-lexer-gen.cc"
yy851:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 400 "src/wast-lexer.cc"
		{ OPCODE(F32Gt); RETURN(COMPARE); }
#line 4219 "src/prebuilt/wast-lexer-gen.cc"
yy853:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 392 "src/wast-lexer.cc"
		{ OPCODE(F32Eq); RETURN(COMPARE); }
#line 4227 "src/prebuilt/wast-lexer-gen.cc"
yy855:
		yych = *++cursor_;
		if (yych == 'm') goto yy859;
		goto yy83;
yy856:
		yych = *++cursor_;
		if (yych != 'v') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 364 "src/wast-lexer.cc"
		{ OPCODE(F32Div); RETURN(BINARY); }
#line 4241 "src/prebuilt/wast-lexer-gen.cc"
yy859:
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != '/') goto yy83;
		yych = *++cursor_;
		if (yych != 'f') goto yy83;
		yych = *++cursor_;
		if (yych != '6') goto yy83;
		yych = *++cursor_;
		if (yych != '4') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 424 "src/wast-lexer.cc"
		{ OPCODE(F32DemoteF64); RETURN(CONVERT); }
#line 4263 "src/prebuilt/wast-lexer-gen.cc"
yy868:
		yych = *++cursor_;
		if (yych == 'x') goto yy875;
		goto yy83;
yy869:
		yych = *++cursor_;
		if (yych == 'n') goto yy873;
		goto yy83;
yy870:
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 362 "src/wast-lexer.cc"
		{ OPCODE(F32Mul); RETURN(BINARY); }
#line 4281 "src/prebuilt/wast-lexer-gen.cc"
yy873:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 366 "src/wast-lexer.cc"
		{ OPCODE(F32Min); RETURN(BINARY); }
#line 4289 "src/prebuilt/wast-lexer-gen.cc"
yy875:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 368 "src/wast-lexer.cc"
		{ OPCODE(F32Max); RETURN(BINARY); }
#line 4297 "src/prebuilt/wast-lexer-gen.cc"
yy877:
		yych = *++cursor_;
		if (yych != 'u') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 324 "src/wast-lexer.cc"
		{ OPCODE(F32Trunc); RETURN(UNARY); }
#line 4311 "src/prebuilt/wast-lexer-gen.cc"
yy882:
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 322 "src/wast-lexer.cc"
		{ OPCODE(F32Floor); RETURN(UNARY); }
#line 4325 "src/prebuilt/wast-lexer-gen.cc"
yy887:
		yych = *++cursor_;
		if (yych == 's') goto yy891;
		goto yy83;
yy888:
		yych = *++cursor_;
		if (yych != 'd') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 358 "src/wast-lexer.cc"
		{ OPCODE(F32Add); RETURN(BINARY); }
#line 4339 "src/prebuilt/wast-lexer-gen.cc"
yy891:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 316 "src/wast-lexer.cc"
		{ OPCODE(F32Abs); RETURN(UNARY); }
#line 4347 "src/prebuilt/wast-lexer-gen.cc"
yy893:
		++cursor_;
		if ((yych = *cursor_) <= '[') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy894;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ':') {
					if (yych != ',') goto yy82;
				} else {
					if (yych <= ';') goto yy894;
					if (yych <= 'Z') goto yy82;
				}
			}
		} else {
			if (yych <= 'g') {
				if (yych <= '`') {
					if (yych != ']') goto yy82;
				} else {
					if (yych <= 'a') goto yy897;
					if (yych <= 'f') goto yy82;
					goto yy895;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy894:
#line 394 "src/wast-lexer.cc"
		{ OPCODE(F32Ne); RETURN(COMPARE); }
#line 4386 "src/prebuilt/wast-lexer-gen.cc"
yy895:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 314 "src/wast-lexer.cc"
		{ OPCODE(F32Neg); RETURN(UNARY); }
#line 4394 "src/prebuilt/wast-lexer-gen.cc"
yy897:
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 's') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 326 "src/wast-lexer.cc"
		{ OPCODE(F32Nearest); RETURN(UNARY); }
#line 4410 "src/prebuilt/wast-lexer-gen.cc"
yy903:
		yych = *++cursor_;
		if (yych == 'i') goto yy939;
		goto yy83;
yy904:
		yych = *++cursor_;
		if (yych == 'n') goto yy905;
		if (yych == 'p') goto yy906;
		goto yy83;
yy905:
		yych = *++cursor_;
		if (yych == 's') goto yy913;
		if (yych == 'v') goto yy914;
		goto yy83;
yy906:
		yych = *++cursor_;
		if (yych != 'y') goto yy83;
		yych = *++cursor_;
		if (yych != 's') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != 'g') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 370 "src/wast-lexer.cc"
		{ OPCODE(F32Copysign); RETURN(BINARY); }
#line 4442 "src/prebuilt/wast-lexer-gen.cc"
yy913:
		yych = *++cursor_;
		if (yych == 't') goto yy937;
		goto yy83;
yy914:
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych == 's') goto yy919;
		if (yych == 'u') goto yy920;
		goto yy83;
yy919:
		yych = *++cursor_;
		if (yych == '/') goto yy929;
		goto yy83;
yy920:
		yych = *++cursor_;
		if (yych != '/') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych == '3') goto yy923;
		if (yych == '6') goto yy924;
		goto yy83;
yy923:
		yych = *++cursor_;
		if (yych == '2') goto yy927;
		goto yy83;
yy924:
		yych = *++cursor_;
		if (yych != '4') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 421 "src/wast-lexer.cc"
		{ OPCODE(F32ConvertUI64); RETURN(CONVERT); }
#line 4486 "src/prebuilt/wast-lexer-gen.cc"
yy927:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 419 "src/wast-lexer.cc"
		{ OPCODE(F32ConvertUI32); RETURN(CONVERT); }
#line 4494 "src/prebuilt/wast-lexer-gen.cc"
yy929:
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych == '3') goto yy931;
		if (yych == '6') goto yy932;
		goto yy83;
yy931:
		yych = *++cursor_;
		if (yych == '2') goto yy935;
		goto yy83;
yy932:
		yych = *++cursor_;
		if (yych != '4') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 417 "src/wast-lexer.cc"
		{ OPCODE(F32ConvertSI64); RETURN(CONVERT); }
#line 4515 "src/prebuilt/wast-lexer-gen.cc"
yy935:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 415 "src/wast-lexer.cc"
		{ OPCODE(F32ConvertSI32); RETURN(CONVERT); }
#line 4523 "src/prebuilt/wast-lexer-gen.cc"
yy937:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 304 "src/wast-lexer.cc"
		{ TYPE(F32); RETURN(CONST); }
#line 4531 "src/prebuilt/wast-lexer-gen.cc"
yy939:
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 320 "src/wast-lexer.cc"
		{ OPCODE(F32Ceil); RETURN(UNARY); }
#line 4541 "src/prebuilt/wast-lexer-gen.cc"
yy942:
		yych = *++cursor_;
		if (yych == 'r') goto yy951;
		goto yy83;
yy943:
		yych = *++cursor_;
		if (yych == 'o') goto yy947;
		goto yy83;
yy944:
		yych = *++cursor_;
		if (yych != 'b') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 360 "src/wast-lexer.cc"
		{ OPCODE(F32Sub); RETURN(BINARY); }
#line 4559 "src/prebuilt/wast-lexer-gen.cc"
yy947:
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 283 "src/wast-lexer.cc"
		{ OPCODE(F32Store); RETURN(STORE); }
#line 4571 "src/prebuilt/wast-lexer-gen.cc"
yy951:
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 318 "src/wast-lexer.cc"
		{ OPCODE(F32Sqrt); RETURN(UNARY); }
#line 4581 "src/prebuilt/wast-lexer-gen.cc"
yy954:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 398 "src/wast-lexer.cc"
		{ OPCODE(F32Le); RETURN(COMPARE); }
#line 4589 "src/prebuilt/wast-lexer-gen.cc"
yy956:
		yych = *++cursor_;
		if (yych == 'a') goto yy959;
		goto yy83;
yy957:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 396 "src/wast-lexer.cc"
		{ OPCODE(F32Lt); RETURN(COMPARE); }
#line 4601 "src/prebuilt/wast-lexer-gen.cc"
yy959:
		yych = *++cursor_;
		if (yych != 'd') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 279 "src/wast-lexer.cc"
		{ OPCODE(F32Load); RETURN(LOAD); }
#line 4611 "src/prebuilt/wast-lexer-gen.cc"
yy962:
		yych = *++cursor_;
		if (yych == 'e') goto yy973;
		if (yych == 's') goto yy972;
		goto yy83;
yy963:
		yych = *++cursor_;
		if (yych == 'd') goto yy970;
		goto yy83;
yy964:
		yych = *++cursor_;
		if (yych != 'p') goto yy83;
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 447 "src/wast-lexer.cc"
		{ RETURN(EXPORT); }
#line 4636 "src/prebuilt/wast-lexer-gen.cc"
yy970:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 270 "src/wast-lexer.cc"
		{ RETURN(END); }
#line 4644 "src/prebuilt/wast-lexer-gen.cc"
yy972:
		yych = *++cursor_;
		if (yych == 'e') goto yy976;
		goto yy83;
yy973:
		yych = *++cursor_;
		if (yych != 'm') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 443 "src/wast-lexer.cc"
		{ RETURN(ELEM); }
#line 4658 "src/prebuilt/wast-lexer-gen.cc"
yy976:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 262 "src/wast-lexer.cc"
		{ RETURN(ELSE); }
#line 4666 "src/prebuilt/wast-lexer-gen.cc"
yy978:
		yych = *++cursor_;
		if (yych == 't') goto yy983;
		goto yy83;
yy979:
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'p') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 269 "src/wast-lexer.cc"
		{ RETURN(DROP); }
#line 4682 "src/prebuilt/wast-lexer-gen.cc"
yy983:
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 444 "src/wast-lexer.cc"
		{ RETURN(DATA); }
#line 4692 "src/prebuilt/wast-lexer-gen.cc"
yy986:
		yych = *++cursor_;
		if (yych == 'l') goto yy1001;
		if (yych == 't') goto yy1002;
		goto yy83;
yy987:
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych != 'm') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'm') goto yy83;
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'y') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 431 "src/wast-lexer.cc"
		{ RETURN(CURRENT_MEMORY); }
#line 4729 "src/prebuilt/wast-lexer-gen.cc"
yy1001:
		yych = *++cursor_;
		if (yych == 'l') goto yy1011;
		goto yy83;
yy1002:
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		yych = *++cursor_;
		if (yych != 'h') goto yy83;
		++cursor_;
		if ((yych = *cursor_) <= 'Z') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy1005;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
				} else {
					if (yych != ';') goto yy82;
				}
			}
		} else {
			if (yych <= '_') {
				if (yych <= '\\') {
					if (yych >= '\\') goto yy82;
				} else {
					if (yych <= ']') goto yy1005;
					if (yych <= '^') goto yy82;
					goto yy1006;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy1005:
#line 462 "src/wast-lexer.cc"
		{ RETURN(CATCH); }
#line 4775 "src/prebuilt/wast-lexer-gen.cc"
yy1006:
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 463 "src/wast-lexer.cc"
		{ RETURN(CATCH_ALL); }
#line 4789 "src/prebuilt/wast-lexer-gen.cc"
yy1011:
		++cursor_;
		if ((yych = *cursor_) <= 'Z') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy1012;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
				} else {
					if (yych != ';') goto yy82;
				}
			}
		} else {
			if (yych <= '_') {
				if (yych <= '\\') {
					if (yych >= '\\') goto yy82;
				} else {
					if (yych <= ']') goto yy1012;
					if (yych <= '^') goto yy82;
					goto yy1013;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy1012:
#line 267 "src/wast-lexer.cc"
		{ RETURN(CALL); }
#line 4827 "src/prebuilt/wast-lexer-gen.cc"
yy1013:
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 'd') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 268 "src/wast-lexer.cc"
		{ RETURN(CALL_INDIRECT); }
#line 4851 "src/prebuilt/wast-lexer-gen.cc"
yy1023:
		yych = *++cursor_;
		if (yych == 'o') goto yy1036;
		goto yy83;
yy1024:
		++cursor_;
		if ((yych = *cursor_) <= 'Z') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy1025;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
				} else {
					if (yych != ';') goto yy82;
				}
			}
		} else {
			if (yych <= '_') {
				if (yych <= '\\') {
					if (yych >= '\\') goto yy82;
				} else {
					if (yych <= ']') goto yy1025;
					if (yych <= '^') goto yy82;
					goto yy1026;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy1025:
#line 264 "src/wast-lexer.cc"
		{ RETURN(BR); }
#line 4893 "src/prebuilt/wast-lexer-gen.cc"
yy1026:
		yych = *++cursor_;
		if (yych == 'i') goto yy1027;
		if (yych == 't') goto yy1028;
		goto yy83;
yy1027:
		yych = *++cursor_;
		if (yych == 'f') goto yy1034;
		goto yy83;
yy1028:
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'b') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 266 "src/wast-lexer.cc"
		{ RETURN(BR_TABLE); }
#line 4918 "src/prebuilt/wast-lexer-gen.cc"
yy1034:
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 265 "src/wast-lexer.cc"
		{ RETURN(BR_IF); }
#line 4926 "src/prebuilt/wast-lexer-gen.cc"
yy1036:
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		yych = *++cursor_;
		if (yych != 'k') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 259 "src/wast-lexer.cc"
		{ RETURN(BLOCK); }
#line 4938 "src/prebuilt/wast-lexer-gen.cc"
yy1040:
		yych = *++cursor_;
		if (yych == 'i') goto yy1136;
		goto yy83;
yy1041:
		yych = *++cursor_;
		if (yych == 'y') goto yy1130;
		goto yy83;
yy1042:
		yych = *++cursor_;
		if (yych != 's') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		switch (yych) {
		case 'e':	goto yy1048;
		case 'i':	goto yy1049;
		case 'm':	goto yy1050;
		case 'r':	goto yy1051;
		case 't':	goto yy1052;
		case 'u':	goto yy1053;
		default:	goto yy83;
		}
yy1048:
		yych = *++cursor_;
		if (yych == 'x') goto yy1120;
		goto yy83;
yy1049:
		yych = *++cursor_;
		if (yych == 'n') goto yy1113;
		goto yy83;
yy1050:
		yych = *++cursor_;
		if (yych == 'a') goto yy1104;
		goto yy83;
yy1051:
		yych = *++cursor_;
		if (yych == 'e') goto yy1068;
		goto yy83;
yy1052:
		yych = *++cursor_;
		if (yych == 'r') goto yy1064;
		goto yy83;
yy1053:
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 'k') goto yy83;
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'b') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 453 "src/wast-lexer.cc"
		{ RETURN(ASSERT_UNLINKABLE); }
#line 5013 "src/prebuilt/wast-lexer-gen.cc"
yy1064:
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'p') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 459 "src/wast-lexer.cc"
		{ RETURN(ASSERT_TRAP); }
#line 5025 "src/prebuilt/wast-lexer-gen.cc"
yy1068:
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != 'u') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		++cursor_;
		if ((yych = *cursor_) <= 'Z') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy1073;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
				} else {
					if (yych != ';') goto yy82;
				}
			}
		} else {
			if (yych <= '_') {
				if (yych <= '\\') {
					if (yych >= '\\') goto yy82;
				} else {
					if (yych <= ']') goto yy1073;
					if (yych <= '^') goto yy82;
					goto yy1074;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy1073:
#line 454 "src/wast-lexer.cc"
		{ RETURN(ASSERT_RETURN); }
#line 5071 "src/prebuilt/wast-lexer-gen.cc"
yy1074:
		yych = *++cursor_;
		if (yych == 'a') goto yy1076;
		if (yych != 'c') goto yy83;
		yych = *++cursor_;
		if (yych == 'a') goto yy1091;
		goto yy83;
yy1076:
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != 'h') goto yy83;
		yych = *++cursor_;
		if (yych != 'm') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 457 "src/wast-lexer.cc"
		{
                                  RETURN(ASSERT_RETURN_ARITHMETIC_NAN); }
#line 5113 "src/prebuilt/wast-lexer-gen.cc"
yy1091:
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		yych = *++cursor_;
		if (yych != '_') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 455 "src/wast-lexer.cc"
		{
                                  RETURN(ASSERT_RETURN_CANONICAL_NAN); }
#line 5144 "src/prebuilt/wast-lexer-gen.cc"
yy1104:
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		yych = *++cursor_;
		if (yych != 'f') goto yy83;
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'r') goto yy83;
		yych = *++cursor_;
		if (yych != 'm') goto yy83;
		yych = *++cursor_;
		if (yych != 'e') goto yy83;
		yych = *++cursor_;
		if (yych != 'd') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 451 "src/wast-lexer.cc"
		{ RETURN(ASSERT_MALFORMED); }
#line 5166 "src/prebuilt/wast-lexer-gen.cc"
yy1113:
		yych = *++cursor_;
		if (yych != 'v') goto yy83;
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'l') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != 'd') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 452 "src/wast-lexer.cc"
		{ RETURN(ASSERT_INVALID); }
#line 5184 "src/prebuilt/wast-lexer-gen.cc"
yy1120:
		yych = *++cursor_;
		if (yych != 'h') goto yy83;
		yych = *++cursor_;
		if (yych != 'a') goto yy83;
		yych = *++cursor_;
		if (yych != 'u') goto yy83;
		yych = *++cursor_;
		if (yych != 's') goto yy83;
		yych = *++cursor_;
		if (yych != 't') goto yy83;
		yych = *++cursor_;
		if (yych != 'i') goto yy83;
		yych = *++cursor_;
		if (yych != 'o') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 460 "src/wast-lexer.cc"
		{ RETURN(ASSERT_EXHAUSTION); }
#line 5208 "src/prebuilt/wast-lexer-gen.cc"
yy1130:
		yych = *++cursor_;
		if (yych != 'f') goto yy83;
		yych = *++cursor_;
		if (yych != 'u') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != 'c') goto yy83;
		++cursor_;
		if (yybm[0+(yych = *cursor_)] & 8) {
			goto yy82;
		}
#line 256 "src/wast-lexer.cc"
		{ RETURN(ANYFUNC); }
#line 5224 "src/prebuilt/wast-lexer-gen.cc"
yy1136:
		yych = *++cursor_;
		if (yych != 'g') goto yy83;
		yych = *++cursor_;
		if (yych != 'n') goto yy83;
		yych = *++cursor_;
		if (yych != '=') goto yy83;
		yych = *++cursor_;
		if (yych <= '/') goto yy83;
		if (yych <= '0') goto yy1140;
		if (yych <= '9') goto yy1142;
		goto yy83;
yy1140:
		++cursor_;
		if ((yych = *cursor_) <= ';') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy1141;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= '/') {
					if (yych != ',') goto yy82;
				} else {
					if (yych <= '9') goto yy1142;
					if (yych <= ':') goto yy82;
				}
			}
		} else {
			if (yych <= 'x') {
				if (yych <= '\\') {
					if (yych != '[') goto yy82;
				} else {
					if (yych <= ']') goto yy1141;
					if (yych <= 'w') goto yy82;
					goto yy1144;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy1141:
#line 301 "src/wast-lexer.cc"
		{ TEXT_AT(6); RETURN(ALIGN_EQ_NAT); }
#line 5275 "src/prebuilt/wast-lexer-gen.cc"
yy1142:
		++cursor_;
		if (limit_ <= cursor_) FILL(1);
		yych = *cursor_;
		if (yych <= ':') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych <= ' ') goto yy1141;
					goto yy82;
				} else {
					if (yych <= '"') goto yy1141;
					if (yych <= '\'') goto yy82;
					goto yy1141;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
					goto yy1141;
				} else {
					if (yych <= '/') goto yy82;
					if (yych <= '9') goto yy1142;
					goto yy82;
				}
			}
		} else {
			if (yych <= ']') {
				if (yych <= 'Z') {
					if (yych <= ';') goto yy1141;
					goto yy82;
				} else {
					if (yych == '\\') goto yy82;
					goto yy1141;
				}
			} else {
				if (yych <= '|') {
					if (yych == '{') goto yy1141;
					goto yy82;
				} else {
					if (yych == '~') goto yy82;
					goto yy1141;
				}
			}
		}
yy1144:
		yych = *++cursor_;
		if (yych <= '@') {
			if (yych <= '/') goto yy83;
			if (yych >= ':') goto yy83;
		} else {
			if (yych <= 'F') goto yy1145;
			if (yych <= '`') goto yy83;
			if (yych >= 'g') goto yy83;
		}
yy1145:
		++cursor_;
		if (limit_ <= cursor_) FILL(1);
		yych = *cursor_;
		if (yych <= '@') {
			if (yych <= '+') {
				if (yych <= '"') {
					if (yych == '!') goto yy82;
					goto yy1141;
				} else {
					if (yych <= '\'') goto yy82;
					if (yych <= ')') goto yy1141;
					goto yy82;
				}
			} else {
				if (yych <= '9') {
					if (yych <= ',') goto yy1141;
					if (yych <= '/') goto yy82;
					goto yy1145;
				} else {
					if (yych == ';') goto yy1141;
					goto yy82;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= '[') {
					if (yych <= 'F') goto yy1145;
					if (yych <= 'Z') goto yy82;
					goto yy1141;
				} else {
					if (yych == ']') goto yy1141;
					goto yy82;
				}
			} else {
				if (yych <= '{') {
					if (yych <= 'f') goto yy1145;
					if (yych <= 'z') goto yy82;
					goto yy1141;
				} else {
					if (yych == '}') goto yy1141;
					if (yych <= '~') goto yy82;
					goto yy1141;
				}
			}
		}
yy1147:
		++cursor_;
		BEGIN(YYCOND_LINE_COMMENT);
#line 468 "src/wast-lexer.cc"
		{ continue; }
#line 5380 "src/prebuilt/wast-lexer-gen.cc"
yy1149:
		++cursor_;
		if ((limit_ - cursor_) < 3) FILL(3);
		yych = *cursor_;
		if (yych <= 'D') {
			if (yych <= '+') {
				if (yych <= '"') {
					if (yych == '!') goto yy82;
				} else {
					if (yych <= '\'') goto yy82;
					if (yych >= '*') goto yy82;
				}
			} else {
				if (yych <= '9') {
					if (yych <= ',') goto yy1151;
					if (yych <= '/') goto yy82;
					goto yy1149;
				} else {
					if (yych != ';') goto yy82;
				}
			}
		} else {
			if (yych <= 'd') {
				if (yych <= '[') {
					if (yych <= 'E') goto yy1154;
					if (yych <= 'Z') goto yy82;
				} else {
					if (yych != ']') goto yy82;
				}
			} else {
				if (yych <= '{') {
					if (yych <= 'e') goto yy1154;
					if (yych <= 'z') goto yy82;
				} else {
					if (yych == '}') goto yy1151;
					if (yych <= '~') goto yy82;
				}
			}
		}
yy1151:
#line 235 "src/wast-lexer.cc"
		{ LITERAL(Float); RETURN(FLOAT); }
#line 5423 "src/prebuilt/wast-lexer-gen.cc"
yy1152:
		++cursor_;
		if ((limit_ - cursor_) < 3) FILL(3);
		yych = *cursor_;
		if (yych <= ';') {
			if (yych <= '+') {
				if (yych <= '"') {
					if (yych == '!') goto yy82;
					goto yy62;
				} else {
					if (yych <= '\'') goto yy82;
					if (yych <= ')') goto yy62;
					goto yy82;
				}
			} else {
				if (yych <= '.') {
					if (yych <= ',') goto yy62;
					if (yych <= '-') goto yy82;
					goto yy1149;
				} else {
					if (yych <= '/') goto yy82;
					if (yych <= '9') goto yy1152;
					if (yych <= ':') goto yy82;
					goto yy62;
				}
			}
		} else {
			if (yych <= 'd') {
				if (yych <= 'Z') {
					if (yych != 'E') goto yy82;
				} else {
					if (yych == '\\') goto yy82;
					if (yych <= ']') goto yy62;
					goto yy82;
				}
			} else {
				if (yych <= '{') {
					if (yych <= 'e') goto yy1154;
					if (yych <= 'z') goto yy82;
					goto yy62;
				} else {
					if (yych == '}') goto yy62;
					if (yych <= '~') goto yy82;
					goto yy62;
				}
			}
		}
yy1154:
		yych = *++cursor_;
		if (yych <= ',') {
			if (yych != '+') goto yy83;
		} else {
			if (yych <= '-') goto yy1155;
			if (yych <= '/') goto yy83;
			if (yych <= '9') goto yy1156;
			goto yy83;
		}
yy1155:
		yych = *++cursor_;
		if (yych <= '/') goto yy83;
		if (yych >= ':') goto yy83;
yy1156:
		++cursor_;
		if (limit_ <= cursor_) FILL(1);
		yych = *cursor_;
		if (yych <= ':') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych <= ' ') goto yy1151;
					goto yy82;
				} else {
					if (yych <= '"') goto yy1151;
					if (yych <= '\'') goto yy82;
					goto yy1151;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
					goto yy1151;
				} else {
					if (yych <= '/') goto yy82;
					if (yych <= '9') goto yy1156;
					goto yy82;
				}
			}
		} else {
			if (yych <= ']') {
				if (yych <= 'Z') {
					if (yych <= ';') goto yy1151;
					goto yy82;
				} else {
					if (yych == '\\') goto yy82;
					goto yy1151;
				}
			} else {
				if (yych <= '|') {
					if (yych == '{') goto yy1151;
					goto yy82;
				} else {
					if (yych == '~') goto yy82;
					goto yy1151;
				}
			}
		}
yy1158:
		yych = *++cursor_;
		if (yych <= '@') {
			if (yych <= '/') goto yy83;
			if (yych >= ':') goto yy83;
		} else {
			if (yych <= 'F') goto yy1159;
			if (yych <= '`') goto yy83;
			if (yych >= 'g') goto yy83;
		}
yy1159:
		++cursor_;
		if ((limit_ - cursor_) < 3) FILL(3);
		yych = *cursor_;
		if (yych <= '@') {
			if (yych <= ',') {
				if (yych <= '"') {
					if (yych == '!') goto yy82;
					goto yy62;
				} else {
					if (yych <= '\'') goto yy82;
					if (yych <= ')') goto yy62;
					if (yych <= '+') goto yy82;
					goto yy62;
				}
			} else {
				if (yych <= '/') {
					if (yych != '.') goto yy82;
				} else {
					if (yych <= '9') goto yy1159;
					if (yych == ';') goto yy62;
					goto yy82;
				}
			}
		} else {
			if (yych <= 'f') {
				if (yych <= '[') {
					if (yych <= 'F') goto yy1159;
					if (yych <= 'Z') goto yy82;
					goto yy62;
				} else {
					if (yych == ']') goto yy62;
					if (yych <= '`') goto yy82;
					goto yy1159;
				}
			} else {
				if (yych <= '{') {
					if (yych == 'p') goto yy1163;
					if (yych <= 'z') goto yy82;
					goto yy62;
				} else {
					if (yych == '}') goto yy62;
					if (yych <= '~') goto yy82;
					goto yy62;
				}
			}
		}
yy1161:
		++cursor_;
		if ((limit_ - cursor_) < 3) FILL(3);
		yych = *cursor_;
		if (yych <= 'F') {
			if (yych <= '+') {
				if (yych <= '"') {
					if (yych == '!') goto yy82;
					goto yy52;
				} else {
					if (yych <= '\'') goto yy82;
					if (yych <= ')') goto yy52;
					goto yy82;
				}
			} else {
				if (yych <= '9') {
					if (yych <= ',') goto yy52;
					if (yych <= '/') goto yy82;
					goto yy1161;
				} else {
					if (yych == ';') goto yy52;
					if (yych <= '@') goto yy82;
					goto yy1161;
				}
			}
		} else {
			if (yych <= 'o') {
				if (yych <= '\\') {
					if (yych == '[') goto yy52;
					goto yy82;
				} else {
					if (yych <= ']') goto yy52;
					if (yych <= '`') goto yy82;
					if (yych <= 'f') goto yy1161;
					goto yy82;
				}
			} else {
				if (yych <= '{') {
					if (yych <= 'p') goto yy1163;
					if (yych <= 'z') goto yy82;
					goto yy52;
				} else {
					if (yych == '}') goto yy52;
					if (yych <= '~') goto yy82;
					goto yy52;
				}
			}
		}
yy1163:
		yych = *++cursor_;
		if (yych <= ',') {
			if (yych != '+') goto yy83;
		} else {
			if (yych <= '-') goto yy1164;
			if (yych <= '/') goto yy83;
			if (yych <= '9') goto yy1165;
			goto yy83;
		}
yy1164:
		yych = *++cursor_;
		if (yych <= '/') goto yy83;
		if (yych >= ':') goto yy83;
yy1165:
		++cursor_;
		if (limit_ <= cursor_) FILL(1);
		yych = *cursor_;
		if (yych <= ':') {
			if (yych <= ')') {
				if (yych <= '!') {
					if (yych >= '!') goto yy82;
				} else {
					if (yych <= '"') goto yy1167;
					if (yych <= '\'') goto yy82;
				}
			} else {
				if (yych <= ',') {
					if (yych <= '+') goto yy82;
				} else {
					if (yych <= '/') goto yy82;
					if (yych <= '9') goto yy1165;
					goto yy82;
				}
			}
		} else {
			if (yych <= ']') {
				if (yych <= 'Z') {
					if (yych >= '<') goto yy82;
				} else {
					if (yych == '\\') goto yy82;
				}
			} else {
				if (yych <= '|') {
					if (yych != '{') goto yy82;
				} else {
					if (yych == '~') goto yy82;
				}
			}
		}
yy1167:
#line 236 "src/wast-lexer.cc"
		{ LITERAL(Hexfloat); RETURN(FLOAT); }
#line 5686 "src/prebuilt/wast-lexer-gen.cc"
yy1168:
		++cursor_;
		if ((yych = *cursor_) <= 'D') {
			if (yych <= ',') {
				if (yych <= '"') {
					if (yych == '!') goto yy82;
				} else {
					if (yych <= '\'') goto yy82;
					if (yych <= ')') goto yy1169;
					if (yych <= '+') goto yy82;
				}
			} else {
				if (yych <= '/') {
					if (yych == '.') goto yy1149;
					goto yy82;
				} else {
					if (yych <= '9') goto yy1170;
					if (yych != ';') goto yy82;
				}
			}
		} else {
			if (yych <= 'e') {
				if (yych <= '[') {
					if (yych <= 'E') goto yy1154;
					if (yych <= 'Z') goto yy82;
				} else {
					if (yych == ']') goto yy1169;
					if (yych <= 'd') goto yy82;
					goto yy1154;
				}
			} else {
				if (yych <= '{') {
					if (yych == 'x') goto yy1175;
					if (yych <= 'z') goto yy82;
				} else {
					if (yych == '}') goto yy1169;
					if (yych <= '~') goto yy82;
				}
			}
		}
yy1169:
#line 234 "src/wast-lexer.cc"
		{ LITERAL(Int); RETURN(INT); }
#line 5730 "src/prebuilt/wast-lexer-gen.cc"
yy1170:
		++cursor_;
		if ((limit_ - cursor_) < 3) FILL(3);
		yych = *cursor_;
		if (yych <= ';') {
			if (yych <= '+') {
				if (yych <= '"') {
					if (yych == '!') goto yy82;
					goto yy1169;
				} else {
					if (yych <= '\'') goto yy82;
					if (yych <= ')') goto yy1169;
					goto yy82;
				}
			} else {
				if (yych <= '.') {
					if (yych <= ',') goto yy1169;
					if (yych <= '-') goto yy82;
					goto yy1149;
				} else {
					if (yych <= '/') goto yy82;
					if (yych <= '9') goto yy1170;
					if (yych <= ':') goto yy82;
					goto yy1169;
				}
			}
		} else {
			if (yych <= 'd') {
				if (yych <= 'Z') {
					if (yych == 'E') goto yy1154;
					goto yy82;
				} else {
					if (yych == '\\') goto yy82;
					if (yych <= ']') goto yy1169;
					goto yy82;
				}
			} else {
				if (yych <= '{') {
					if (yych <= 'e') goto yy1154;
					if (yych <= 'z') goto yy82;
					goto yy1169;
				} else {
					if (yych == '}') goto yy1169;
					if (yych <= '~') goto yy82;
					goto yy1169;
				}
			}
		}
yy1172:
		yych = *++cursor_;
		if (yych == 'n') goto yy1174;
		goto yy83;
yy1173:
		yych = *++cursor_;
		if (yych == 'a') goto yy192;
		goto yy83;
yy1174:
		yych = *++cursor_;
		if (yych == 'f') goto yy232;
		goto yy83;
yy1175:
		yych = *++cursor_;
		if (yych <= '@') {
			if (yych <= '/') goto yy83;
			if (yych >= ':') goto yy83;
		} else {
			if (yych <= 'F') goto yy1176;
			if (yych <= '`') goto yy83;
			if (yych >= 'g') goto yy83;
		}
yy1176:
		++cursor_;
		if ((limit_ - cursor_) < 3) FILL(3);
		yych = *cursor_;
		if (yych <= '@') {
			if (yych <= ',') {
				if (yych <= '"') {
					if (yych == '!') goto yy82;
					goto yy1169;
				} else {
					if (yych <= '\'') goto yy82;
					if (yych <= ')') goto yy1169;
					if (yych <= '+') goto yy82;
					goto yy1169;
				}
			} else {
				if (yych <= '/') {
					if (yych == '.') goto yy1161;
					goto yy82;
				} else {
					if (yych <= '9') goto yy1176;
					if (yych == ';') goto yy1169;
					goto yy82;
				}
			}
		} else {
			if (yych <= 'f') {
				if (yych <= '[') {
					if (yych <= 'F') goto yy1176;
					if (yych <= 'Z') goto yy82;
					goto yy1169;
				} else {
					if (yych == ']') goto yy1169;
					if (yych <= '`') goto yy82;
					goto yy1176;
				}
			} else {
				if (yych <= '{') {
					if (yych == 'p') goto yy1163;
					if (yych <= 'z') goto yy82;
					goto yy1169;
				} else {
					if (yych == '}') goto yy1169;
					if (yych <= '~') goto yy82;
					goto yy1169;
				}
			}
		}
yy1178:
		++cursor_;
		BEGIN(YYCOND_BLOCK_COMMENT);
#line 471 "src/wast-lexer.cc"
		{ COMMENT_NESTING = 1; continue; }
#line 5854 "src/prebuilt/wast-lexer-gen.cc"
yy1180:
		++cursor_;
		if (limit_ <= cursor_) FILL(1);
		yych = *cursor_;
		if (yych <= ';') {
			if (yych <= '\'') {
				if (yych == '!') goto yy1180;
				if (yych >= '#') goto yy1180;
			} else {
				if (yych <= '+') {
					if (yych >= '*') goto yy1180;
				} else {
					if (yych <= ',') goto yy1182;
					if (yych <= ':') goto yy1180;
				}
			}
		} else {
			if (yych <= 'z') {
				if (yych <= '[') {
					if (yych <= 'Z') goto yy1180;
				} else {
					if (yych != ']') goto yy1180;
				}
			} else {
				if (yych <= '|') {
					if (yych >= '|') goto yy1180;
				} else {
					if (yych == '~') goto yy1180;
				}
			}
		}
yy1182:
#line 466 "src/wast-lexer.cc"
		{ TEXT; RETURN(VAR); }
#line 5889 "src/prebuilt/wast-lexer-gen.cc"
yy1183:
		++cursor_;
		if (limit_ <= cursor_) FILL(1);
		yych = *cursor_;
yy1184:
		if (yybm[0+yych] & 64) {
			goto yy1183;
		}
		if (yych <= '!') goto yy1185;
		if (yych <= '"') goto yy1187;
		if (yych <= '~') goto yy1186;
yy1185:
		cursor_ = marker_;
		goto yy54;
yy1186:
		++cursor_;
		if (limit_ <= cursor_) FILL(1);
		yych = *cursor_;
		if (yych <= 'F') {
			if (yych <= '\'') {
				if (yych == '"') goto yy1183;
				if (yych <= '&') goto yy1185;
				goto yy1183;
			} else {
				if (yych <= '/') goto yy1185;
				if (yych <= '9') goto yy1189;
				if (yych <= '@') goto yy1185;
				goto yy1189;
			}
		} else {
			if (yych <= 'f') {
				if (yych == '\\') goto yy1183;
				if (yych <= '`') goto yy1185;
				goto yy1189;
			} else {
				if (yych <= 'n') {
					if (yych <= 'm') goto yy1185;
					goto yy1183;
				} else {
					if (yych == 't') goto yy1183;
					goto yy1185;
				}
			}
		}
yy1187:
		++cursor_;
#line 239 "src/wast-lexer.cc"
		{ TEXT; RETURN(TEXT); }
#line 5938 "src/prebuilt/wast-lexer-gen.cc"
yy1189:
		++cursor_;
		if (limit_ <= cursor_) FILL(1);
		yych = *cursor_;
		if (yych <= '@') {
			if (yych <= '/') goto yy1185;
			if (yych <= '9') goto yy1183;
			goto yy1185;
		} else {
			if (yych <= 'F') goto yy1183;
			if (yych <= '`') goto yy1185;
			if (yych <= 'f') goto yy1183;
			goto yy1185;
		}
yy1190:
		++cursor_;
		if (limit_ <= cursor_) FILL(1);
		yych = *cursor_;
yy1191:
		if (yybm[0+yych] & 128) {
			goto yy1190;
		}
		goto yy48;
	}
}
#line 486 "src/wast-lexer.cc"

  }
}

}  // namespace wabt
