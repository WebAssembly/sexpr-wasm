Grammar

    0 $accept: script_start "EOF"

    1 text_list: TEXT
    2          | text_list TEXT

    3 text_list_opt: %empty
    4              | text_list

    5 quoted_text: TEXT

    6 value_type_list: %empty
    7                | value_type_list VALUE_TYPE

    8 elem_type: ANYFUNC

    9 global_type: VALUE_TYPE
   10            | "(" MUT VALUE_TYPE ")"

   11 func_type: "(" FUNC func_sig ")"

   12 func_sig: %empty
   13         | "(" PARAM value_type_list ")"
   14         | "(" PARAM value_type_list ")" "(" RESULT value_type_list ")"
   15         | "(" RESULT value_type_list ")"

   16 table_sig: limits elem_type

   17 memory_sig: limits

   18 limits: nat
   19       | nat nat

   20 type_use: "(" TYPE var ")"

   21 nat: NAT

   22 literal: NAT
   23        | INT
   24        | FLOAT

   25 var: nat
   26    | VAR

   27 var_list: %empty
   28         | var_list var

   29 bind_var_opt: %empty
   30             | bind_var

   31 bind_var: VAR

   32 labeling_opt: %empty
   33             | bind_var

   34 offset_opt: %empty
   35           | OFFSET_EQ_NAT

   36 align_opt: %empty
   37          | ALIGN_EQ_NAT

   38 instr: plain_instr
   39      | block_instr
   40      | expr

   41 plain_instr: UNREACHABLE
   42            | NOP
   43            | DROP
   44            | SELECT
   45            | BR var
   46            | BR_IF var
   47            | BR_TABLE var_list var
   48            | RETURN
   49            | CALL var
   50            | CALL_INDIRECT var
   51            | GET_LOCAL var
   52            | SET_LOCAL var
   53            | TEE_LOCAL var
   54            | GET_GLOBAL var
   55            | SET_GLOBAL var
   56            | LOAD offset_opt align_opt
   57            | STORE offset_opt align_opt
   58            | CONST literal
   59            | UNARY
   60            | BINARY
   61            | COMPARE
   62            | CONVERT
   63            | CURRENT_MEMORY
   64            | GROW_MEMORY
   65            | throw_check var
   66            | rethrow_check var

   67 block_instr: BLOCK labeling_opt block END labeling_opt
   68            | LOOP labeling_opt block END labeling_opt
   69            | IF labeling_opt block END labeling_opt
   70            | IF labeling_opt block ELSE labeling_opt instr_list END labeling_opt
   71            | try_check labeling_opt block catch_instr_list END labeling_opt

   72 block_sig: "(" RESULT value_type_list ")"

   73 block: block_sig block
   74      | instr_list

   75 catch_instr: CATCH var instr_list
   76            | CATCH_ALL var instr_list

   77 catch_instr_list: catch_instr
   78                 | catch_instr catch_instr_list

   79 expr: "(" expr1 ")"

   80 expr1: plain_instr expr_list
   81      | BLOCK labeling_opt block
   82      | LOOP labeling_opt block
   83      | IF labeling_opt if_block
   84      | try_check "(" BLOCK labeling_opt block ")" catch_list

   85 catch_list: "(" catch_instr ")"
   86           | "(" catch_instr ")" catch_list

   87 if_block: block_sig if_block
   88         | if_

   89 if_: "(" THEN instr_list ")" "(" ELSE instr_list ")"
   90    | "(" THEN instr_list ")"
   91    | expr "(" THEN instr_list ")" "(" ELSE instr_list ")"
   92    | expr "(" THEN instr_list ")"
   93    | expr expr expr
   94    | expr expr

<<<<<<< HEAD
   90 except: "(" EXCEPT value_type_list ")"

   91 func: "(" FUNC bind_var_opt func_fields ")"

   92 func_fields: type_use func_fields_body
   93            | func_fields_body
   94            | inline_import type_use func_fields_import
   95            | inline_import func_fields_import
   96            | inline_export func_fields

   97 func_fields_import: func_fields_import1

   98 func_fields_import1: %empty
   99                    | "(" RESULT value_type_list ")"
  100                    | "(" PARAM value_type_list ")" func_fields_import1
  101                    | "(" PARAM bind_var VALUE_TYPE ")" func_fields_import1

  102 func_fields_body: func_fields_body1

  103 func_fields_body1: func_body
  104                  | "(" RESULT value_type_list ")" func_body
  105                  | "(" PARAM value_type_list ")" func_fields_body1
  106                  | "(" PARAM bind_var VALUE_TYPE ")" func_fields_body1

  107 func_body: func_body1

  108 func_body1: instr_list
  109           | "(" LOCAL value_type_list ")" func_body1
  110           | "(" LOCAL bind_var VALUE_TYPE ")" func_body1

  111 offset: "(" OFFSET const_expr ")"
  112       | expr

  113 elem: "(" ELEM var offset var_list ")"
  114     | "(" ELEM offset var_list ")"

  115 table: "(" TABLE bind_var_opt table_fields ")"

  116 table_fields: table_sig
  117             | inline_import table_sig
  118             | inline_export table_fields
  119             | elem_type "(" ELEM var_list ")"

  120 data: "(" DATA var offset text_list_opt ")"
  121     | "(" DATA offset text_list_opt ")"

  122 memory: "(" MEMORY bind_var_opt memory_fields ")"

  123 memory_fields: memory_sig
  124              | inline_import memory_sig
  125              | inline_export memory_fields
  126              | "(" DATA text_list_opt ")"

  127 global: "(" GLOBAL bind_var_opt global_fields ")"

  128 global_fields: global_type const_expr
  129              | inline_import global_type
  130              | inline_export global_fields

  131 import_desc: "(" FUNC bind_var_opt type_use ")"
  132            | "(" FUNC bind_var_opt func_sig ")"
  133            | "(" TABLE bind_var_opt table_sig ")"
  134            | "(" MEMORY bind_var_opt memory_sig ")"
  135            | "(" GLOBAL bind_var_opt global_type ")"

  136 import: "(" IMPORT quoted_text quoted_text import_desc ")"

  137 inline_import: "(" IMPORT quoted_text quoted_text ")"

  138 export_desc: "(" FUNC var ")"
  139            | "(" TABLE var ")"
  140            | "(" MEMORY var ")"
  141            | "(" GLOBAL var ")"

  142 export: "(" EXPORT quoted_text export_desc ")"

  143 inline_export: "(" EXPORT quoted_text ")"

  144 type_def: "(" TYPE func_type ")"
  145         | "(" TYPE bind_var func_type ")"

  146 start: "(" START var ")"

  147 module_field: type_def
  148             | global
  149             | table
  150             | memory
  151             | func
  152             | elem
  153             | data
  154             | start
  155             | import
  156             | export
  157             | except

  158 module_fields_opt: %empty
  159                  | module_fields

  160 module_fields: module_field
  161              | module_fields module_field

  162 raw_module: "(" MODULE bind_var_opt module_fields_opt ")"
  163           | "(" MODULE bind_var_opt text_list ")"

  164 module: raw_module

  165 inline_module: module_fields

  166 script_var_opt: %empty
  167               | VAR

  168 action: "(" INVOKE script_var_opt quoted_text const_list ")"
  169       | "(" GET script_var_opt quoted_text ")"

  170 assertion: "(" ASSERT_MALFORMED raw_module quoted_text ")"
  171          | "(" ASSERT_INVALID raw_module quoted_text ")"
  172          | "(" ASSERT_UNLINKABLE raw_module quoted_text ")"
  173          | "(" ASSERT_TRAP raw_module quoted_text ")"
  174          | "(" ASSERT_RETURN action const_list ")"
  175          | "(" ASSERT_RETURN_CANONICAL_NAN action ")"
  176          | "(" ASSERT_RETURN_ARITHMETIC_NAN action ")"
  177          | "(" ASSERT_TRAP action quoted_text ")"
  178          | "(" ASSERT_EXHAUSTION action quoted_text ")"

  179 cmd: action
  180    | assertion
  181    | module
  182    | "(" REGISTER quoted_text script_var_opt ")"

  183 cmd_list: cmd
  184         | cmd_list cmd

  185 const: "(" CONST literal ")"

  186 const_list: %empty
  187           | const_list const

  188 script: %empty
  189       | cmd_list
  190       | inline_module

  191 script_start: script
=======
   95 rethrow_check: RETHROW

   96 throw_check: THROW

   97 try_check: TRY

   98 instr_list: %empty
   99           | instr instr_list

  100 expr_list: %empty
  101          | expr expr_list

  102 const_expr: instr_list

  103 func: "(" FUNC bind_var_opt func_fields ")"

  104 func_fields: type_use func_fields_body
  105            | func_fields_body
  106            | inline_import type_use func_fields_import
  107            | inline_import func_fields_import
  108            | inline_export func_fields

  109 func_fields_import: func_fields_import1

  110 func_fields_import1: %empty
  111                    | "(" RESULT value_type_list ")"
  112                    | "(" PARAM value_type_list ")" func_fields_import1
  113                    | "(" PARAM bind_var VALUE_TYPE ")" func_fields_import1

  114 func_fields_body: func_fields_body1

  115 func_fields_body1: func_body
  116                  | "(" RESULT value_type_list ")" func_body
  117                  | "(" PARAM value_type_list ")" func_fields_body1
  118                  | "(" PARAM bind_var VALUE_TYPE ")" func_fields_body1

  119 func_body: func_body1

  120 func_body1: instr_list
  121           | "(" LOCAL value_type_list ")" func_body1
  122           | "(" LOCAL bind_var VALUE_TYPE ")" func_body1

  123 offset: "(" OFFSET const_expr ")"
  124       | expr

  125 elem: "(" ELEM var offset var_list ")"
  126     | "(" ELEM offset var_list ")"

  127 table: "(" TABLE bind_var_opt table_fields ")"

  128 table_fields: table_sig
  129             | inline_import table_sig
  130             | inline_export table_fields
  131             | elem_type "(" ELEM var_list ")"

  132 data: "(" DATA var offset text_list_opt ")"
  133     | "(" DATA offset text_list_opt ")"

  134 memory: "(" MEMORY bind_var_opt memory_fields ")"

  135 memory_fields: memory_sig
  136              | inline_import memory_sig
  137              | inline_export memory_fields
  138              | "(" DATA text_list_opt ")"

  139 global: "(" GLOBAL bind_var_opt global_fields ")"

  140 global_fields: global_type const_expr
  141              | inline_import global_type
  142              | inline_export global_fields

  143 import_desc: "(" FUNC bind_var_opt type_use ")"
  144            | "(" FUNC bind_var_opt func_sig ")"
  145            | "(" TABLE bind_var_opt table_sig ")"
  146            | "(" MEMORY bind_var_opt memory_sig ")"
  147            | "(" GLOBAL bind_var_opt global_type ")"

  148 import: "(" IMPORT quoted_text quoted_text import_desc ")"

  149 inline_import: "(" IMPORT quoted_text quoted_text ")"

  150 export_desc: "(" FUNC var ")"
  151            | "(" TABLE var ")"
  152            | "(" MEMORY var ")"
  153            | "(" GLOBAL var ")"

  154 export: "(" EXPORT quoted_text export_desc ")"

  155 inline_export: "(" EXPORT quoted_text ")"

  156 type_def: "(" TYPE func_type ")"
  157         | "(" TYPE bind_var func_type ")"

  158 start: "(" START var ")"

  159 module_field: type_def
  160             | global
  161             | table
  162             | memory
  163             | func
  164             | elem
  165             | data
  166             | start
  167             | import
  168             | export

  169 module_fields_opt: %empty
  170                  | module_fields

  171 module_fields: module_field
  172              | module_fields module_field

  173 raw_module: "(" MODULE bind_var_opt module_fields_opt ")"
  174           | "(" MODULE bind_var_opt text_list ")"

  175 module: raw_module

  176 inline_module: module_fields

  177 script_var_opt: %empty
  178               | VAR

  179 action: "(" INVOKE script_var_opt quoted_text const_list ")"
  180       | "(" GET script_var_opt quoted_text ")"

  181 assertion: "(" ASSERT_MALFORMED raw_module quoted_text ")"
  182          | "(" ASSERT_INVALID raw_module quoted_text ")"
  183          | "(" ASSERT_UNLINKABLE raw_module quoted_text ")"
  184          | "(" ASSERT_TRAP raw_module quoted_text ")"
  185          | "(" ASSERT_RETURN action const_list ")"
  186          | "(" ASSERT_RETURN_CANONICAL_NAN action ")"
  187          | "(" ASSERT_RETURN_ARITHMETIC_NAN action ")"
  188          | "(" ASSERT_TRAP action quoted_text ")"
  189          | "(" ASSERT_EXHAUSTION action quoted_text ")"

  190 cmd: action
  191    | assertion
  192    | module
  193    | "(" REGISTER quoted_text script_var_opt ")"

  194 cmd_list: cmd
  195         | cmd_list cmd

  196 const: "(" CONST literal ")"

  197 const_list: %empty
  198           | const_list const

  199 script: %empty
  200       | cmd_list
  201       | inline_module

  202 script_start: script
>>>>>>> master


Terminals, with rules where they appear

"EOF" (0) 0
error (256)
<<<<<<< HEAD
"(" (258) 10 11 13 14 15 20 69 72 79 80 81 82 90 91 99 100 101 104
    105 106 109 110 111 113 114 115 119 120 121 122 126 127 131 132
    133 134 135 136 137 138 139 140 141 142 143 144 145 146 162 163
    168 169 170 171 172 173 174 175 176 177 178 182 185
")" (259) 10 11 13 14 15 20 69 72 79 80 81 82 90 91 99 100 101 104
    105 106 109 110 111 113 114 115 119 120 121 122 126 127 131 132
    133 134 135 136 137 138 139 140 141 142 143 144 145 146 162 163
    168 169 170 171 172 173 174 175 176 177 178 182 185
=======
"(" (258) 10 11 13 14 15 20 72 79 84 85 86 89 90 91 92 103 111 112
    113 116 117 118 121 122 123 125 126 127 131 132 133 134 138 139
    143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158
    173 174 179 180 181 182 183 184 185 186 187 188 189 193 196
")" (259) 10 11 13 14 15 20 72 79 84 85 86 89 90 91 92 103 111 112
    113 116 117 118 121 122 123 125 126 127 131 132 133 134 138 139
    143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158
    173 174 179 180 181 182 183 184 185 186 187 188 189 193 196
>>>>>>> master
NAT (260) 21 22
INT (261) 23
FLOAT (262) 24
TEXT (263) 1 2 5
<<<<<<< HEAD
VAR (264) 26 31 167
VALUE_TYPE (265) 7 9 10 101 106 110
=======
VAR (264) 26 31 178
VALUE_TYPE (265) 7 9 10 113 118 122
>>>>>>> master
ANYFUNC (266) 8
MUT (267) 10
NOP (268) 42
DROP (269) 43
BLOCK (270) 67 81 84
END (271) 67 68 69 70 71
IF (272) 69 70 83
THEN (273) 89 90 91 92
ELSE (274) 70 89 91
LOOP (275) 68 82
BR (276) 45
BR_IF (277) 46
BR_TABLE (278) 47
<<<<<<< HEAD
CALL (279) 49
CALL_INDIRECT (280) 50
RETURN (281) 48
GET_LOCAL (282) 51
SET_LOCAL (283) 52
TEE_LOCAL (284) 53
GET_GLOBAL (285) 54
SET_GLOBAL (286) 55
LOAD (287) 56
STORE (288) 57
OFFSET_EQ_NAT (289) 35
ALIGN_EQ_NAT (290) 37
CONST (291) 58 185
UNARY (292) 59
BINARY (293) 60
COMPARE (294) 61
CONVERT (295) 62
SELECT (296) 44
UNREACHABLE (297) 41
CURRENT_MEMORY (298) 63
GROW_MEMORY (299) 64
FUNC (300) 11 91 131 132 138
START (301) 146
TYPE (302) 20 144 145
PARAM (303) 13 14 100 101 105 106
RESULT (304) 14 15 69 99 104
LOCAL (305) 109 110
GLOBAL (306) 127 135 141
MODULE (307) 162 163
TABLE (308) 115 133 139
ELEM (309) 113 114 119
MEMORY (310) 122 134 140
DATA (311) 120 121 126
OFFSET (312) 111
IMPORT (313) 136 137
EXPORT (314) 142 143
EXCEPT (315) 90
REGISTER (316) 182
INVOKE (317) 168
GET (318) 169
ASSERT_MALFORMED (319) 170
ASSERT_INVALID (320) 171
ASSERT_UNLINKABLE (321) 172
ASSERT_RETURN (322) 174
ASSERT_RETURN_CANONICAL_NAN (323) 175
ASSERT_RETURN_ARITHMETIC_NAN (324) 176
ASSERT_TRAP (325) 173 177
ASSERT_EXHAUSTION (326) 178
LOW (327)
=======
TRY (279) 97
CATCH (280) 75
CATCH_ALL (281) 76
THROW (282) 96
RETHROW (283) 95
CALL (284) 49
CALL_INDIRECT (285) 50
RETURN (286) 48
GET_LOCAL (287) 51
SET_LOCAL (288) 52
TEE_LOCAL (289) 53
GET_GLOBAL (290) 54
SET_GLOBAL (291) 55
LOAD (292) 56
STORE (293) 57
OFFSET_EQ_NAT (294) 35
ALIGN_EQ_NAT (295) 37
CONST (296) 58 196
UNARY (297) 59
BINARY (298) 60
COMPARE (299) 61
CONVERT (300) 62
SELECT (301) 44
UNREACHABLE (302) 41
CURRENT_MEMORY (303) 63
GROW_MEMORY (304) 64
FUNC (305) 11 103 143 144 150
START (306) 158
TYPE (307) 20 156 157
PARAM (308) 13 14 112 113 117 118
RESULT (309) 14 15 72 111 116
LOCAL (310) 121 122
GLOBAL (311) 139 147 153
MODULE (312) 173 174
TABLE (313) 127 145 151
ELEM (314) 125 126 131
MEMORY (315) 134 146 152
DATA (316) 132 133 138
OFFSET (317) 123
IMPORT (318) 148 149
EXPORT (319) 154 155
REGISTER (320) 193
INVOKE (321) 179
GET (322) 180
ASSERT_MALFORMED (323) 181
ASSERT_INVALID (324) 182
ASSERT_UNLINKABLE (325) 183
ASSERT_RETURN (326) 185
ASSERT_RETURN_CANONICAL_NAN (327) 186
ASSERT_RETURN_ARITHMETIC_NAN (328) 187
ASSERT_TRAP (329) 184 188
ASSERT_EXHAUSTION (330) 189
LOW (331)
>>>>>>> master


Nonterminals, with rules where they appear

<<<<<<< HEAD
$accept (73)
    on left: 0
text_list (74)
    on left: 1 2, on right: 2 4 163
text_list_opt (75)
    on left: 3 4, on right: 120 121 126
quoted_text (76)
    on left: 5, on right: 136 137 142 143 168 169 170 171 172 173 177
    178 182
value_type_list (77)
    on left: 6 7, on right: 7 13 14 15 69 90 99 100 104 105 109
elem_type (78)
    on left: 8, on right: 16 119
global_type (79)
    on left: 9 10, on right: 128 129 135
func_type (80)
    on left: 11, on right: 144 145
func_sig (81)
    on left: 12 13 14 15, on right: 11 132
table_sig (82)
    on left: 16, on right: 116 117 133
memory_sig (83)
    on left: 17, on right: 123 124 134
limits (84)
    on left: 18 19, on right: 16 17
type_use (85)
    on left: 20, on right: 92 94 131
nat (86)
    on left: 21, on right: 18 19 25
literal (87)
    on left: 22 23 24, on right: 58 185
var (88)
    on left: 25 26, on right: 20 28 45 46 47 49 50 51 52 53 54 55 113
    120 138 139 140 141 146
var_list (89)
    on left: 27 28, on right: 28 47 113 114 119
bind_var_opt (90)
    on left: 29 30, on right: 91 115 122 127 131 132 133 134 135 162
    163
bind_var (91)
    on left: 31, on right: 30 33 101 106 110 145
labeling_opt (92)
    on left: 32 33, on right: 65 66 67 68 74 75 76
offset_opt (93)
    on left: 34 35, on right: 56 57
align_opt (94)
    on left: 36 37, on right: 56 57
instr (95)
    on left: 38 39 40, on right: 86
plain_instr (96)
    on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
    59 60 61 62 63 64, on right: 38 73
block_instr (97)
    on left: 65 66 67 68, on right: 39
block_sig (98)
    on left: 69, on right: 70 77
block (99)
    on left: 70 71, on right: 65 66 67 68 70 74 75
expr (100)
    on left: 72, on right: 40 81 82 83 84 88 112
expr1 (101)
    on left: 73 74 75 76, on right: 72
if_block (102)
    on left: 77 78, on right: 76 77
if_ (103)
    on left: 79 80 81 82 83 84, on right: 78
instr_list (104)
    on left: 85 86, on right: 68 71 79 80 81 82 86 89 108
expr_list (105)
    on left: 87 88, on right: 73 88
const_expr (106)
    on left: 89, on right: 111 128
except (107)
    on left: 90, on right: 157
func (108)
    on left: 91, on right: 151
func_fields (109)
    on left: 92 93 94 95 96, on right: 91 96
func_fields_import (110)
    on left: 97, on right: 94 95
func_fields_import1 (111)
    on left: 98 99 100 101, on right: 97 100 101
func_fields_body (112)
    on left: 102, on right: 92 93
func_fields_body1 (113)
    on left: 103 104 105 106, on right: 102 105 106
func_body (114)
    on left: 107, on right: 103 104
func_body1 (115)
    on left: 108 109 110, on right: 107 109 110
offset (116)
    on left: 111 112, on right: 113 114 120 121
elem (117)
    on left: 113 114, on right: 152
table (118)
    on left: 115, on right: 149
table_fields (119)
    on left: 116 117 118 119, on right: 115 118
data (120)
    on left: 120 121, on right: 153
memory (121)
    on left: 122, on right: 150
memory_fields (122)
    on left: 123 124 125 126, on right: 122 125
global (123)
    on left: 127, on right: 148
global_fields (124)
    on left: 128 129 130, on right: 127 130
import_desc (125)
    on left: 131 132 133 134 135, on right: 136
import (126)
    on left: 136, on right: 155
inline_import (127)
    on left: 137, on right: 94 95 117 124 129
export_desc (128)
    on left: 138 139 140 141, on right: 142
export (129)
    on left: 142, on right: 156
inline_export (130)
    on left: 143, on right: 96 118 125 130
type_def (131)
    on left: 144 145, on right: 147
start (132)
    on left: 146, on right: 154
module_field (133)
    on left: 147 148 149 150 151 152 153 154 155 156 157, on right:
    160 161
module_fields_opt (134)
    on left: 158 159, on right: 162
module_fields (135)
    on left: 160 161, on right: 159 161 165
raw_module (136)
    on left: 162 163, on right: 164 170 171 172 173
module (137)
    on left: 164, on right: 181
inline_module (138)
    on left: 165, on right: 190
script_var_opt (139)
    on left: 166 167, on right: 168 169 182
action (140)
    on left: 168 169, on right: 174 175 176 177 178 179
assertion (141)
    on left: 170 171 172 173 174 175 176 177 178, on right: 180
cmd (142)
    on left: 179 180 181 182, on right: 183 184
cmd_list (143)
    on left: 183 184, on right: 184 189
const (144)
    on left: 185, on right: 187
const_list (145)
    on left: 186 187, on right: 168 174 187
script (146)
    on left: 188 189 190, on right: 191
script_start (147)
    on left: 191, on right: 0
=======
$accept (77)
    on left: 0
text_list (78)
    on left: 1 2, on right: 2 4 174
text_list_opt (79)
    on left: 3 4, on right: 132 133 138
quoted_text (80)
    on left: 5, on right: 148 149 154 155 179 180 181 182 183 184 188
    189 193
value_type_list (81)
    on left: 6 7, on right: 7 13 14 15 72 111 112 116 117 121
elem_type (82)
    on left: 8, on right: 16 131
global_type (83)
    on left: 9 10, on right: 140 141 147
func_type (84)
    on left: 11, on right: 156 157
func_sig (85)
    on left: 12 13 14 15, on right: 11 144
table_sig (86)
    on left: 16, on right: 128 129 145
memory_sig (87)
    on left: 17, on right: 135 136 146
limits (88)
    on left: 18 19, on right: 16 17
type_use (89)
    on left: 20, on right: 104 106 143
nat (90)
    on left: 21, on right: 18 19 25
literal (91)
    on left: 22 23 24, on right: 58 196
var (92)
    on left: 25 26, on right: 20 28 45 46 47 49 50 51 52 53 54 55 65
    66 75 76 125 132 150 151 152 153 158
var_list (93)
    on left: 27 28, on right: 28 47 125 126 131
bind_var_opt (94)
    on left: 29 30, on right: 103 127 134 139 143 144 145 146 147 173
    174
bind_var (95)
    on left: 31, on right: 30 33 113 118 122 157
labeling_opt (96)
    on left: 32 33, on right: 67 68 69 70 71 81 82 83 84
offset_opt (97)
    on left: 34 35, on right: 56 57
align_opt (98)
    on left: 36 37, on right: 56 57
instr (99)
    on left: 38 39 40, on right: 99
plain_instr (100)
    on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
    59 60 61 62 63 64 65 66, on right: 38 80
block_instr (101)
    on left: 67 68 69 70 71, on right: 39
block_sig (102)
    on left: 72, on right: 73 87
block (103)
    on left: 73 74, on right: 67 68 69 70 71 73 81 82 84
catch_instr (104)
    on left: 75 76, on right: 77 78 85 86
catch_instr_list (105)
    on left: 77 78, on right: 71 78
expr (106)
    on left: 79, on right: 40 91 92 93 94 101 124
expr1 (107)
    on left: 80 81 82 83 84, on right: 79
catch_list (108)
    on left: 85 86, on right: 84 86
if_block (109)
    on left: 87 88, on right: 83 87
if_ (110)
    on left: 89 90 91 92 93 94, on right: 88
rethrow_check (111)
    on left: 95, on right: 66
throw_check (112)
    on left: 96, on right: 65
try_check (113)
    on left: 97, on right: 71 84
instr_list (114)
    on left: 98 99, on right: 70 74 75 76 89 90 91 92 99 102 120
expr_list (115)
    on left: 100 101, on right: 80 101
const_expr (116)
    on left: 102, on right: 123 140
func (117)
    on left: 103, on right: 163
func_fields (118)
    on left: 104 105 106 107 108, on right: 103 108
func_fields_import (119)
    on left: 109, on right: 106 107
func_fields_import1 (120)
    on left: 110 111 112 113, on right: 109 112 113
func_fields_body (121)
    on left: 114, on right: 104 105
func_fields_body1 (122)
    on left: 115 116 117 118, on right: 114 117 118
func_body (123)
    on left: 119, on right: 115 116
func_body1 (124)
    on left: 120 121 122, on right: 119 121 122
offset (125)
    on left: 123 124, on right: 125 126 132 133
elem (126)
    on left: 125 126, on right: 164
table (127)
    on left: 127, on right: 161
table_fields (128)
    on left: 128 129 130 131, on right: 127 130
data (129)
    on left: 132 133, on right: 165
memory (130)
    on left: 134, on right: 162
memory_fields (131)
    on left: 135 136 137 138, on right: 134 137
global (132)
    on left: 139, on right: 160
global_fields (133)
    on left: 140 141 142, on right: 139 142
import_desc (134)
    on left: 143 144 145 146 147, on right: 148
import (135)
    on left: 148, on right: 167
inline_import (136)
    on left: 149, on right: 106 107 129 136 141
export_desc (137)
    on left: 150 151 152 153, on right: 154
export (138)
    on left: 154, on right: 168
inline_export (139)
    on left: 155, on right: 108 130 137 142
type_def (140)
    on left: 156 157, on right: 159
start (141)
    on left: 158, on right: 166
module_field (142)
    on left: 159 160 161 162 163 164 165 166 167 168, on right: 171
    172
module_fields_opt (143)
    on left: 169 170, on right: 173
module_fields (144)
    on left: 171 172, on right: 170 172 176
raw_module (145)
    on left: 173 174, on right: 175 181 182 183 184
module (146)
    on left: 175, on right: 192
inline_module (147)
    on left: 176, on right: 201
script_var_opt (148)
    on left: 177 178, on right: 179 180 193
action (149)
    on left: 179 180, on right: 185 186 187 188 189 190
assertion (150)
    on left: 181 182 183 184 185 186 187 188 189, on right: 191
cmd (151)
    on left: 190 191 192 193, on right: 194 195
cmd_list (152)
    on left: 194 195, on right: 195 200
const (153)
    on left: 196, on right: 198
const_list (154)
    on left: 197 198, on right: 179 185 198
script (155)
    on left: 199 200 201, on right: 202
script_start (156)
    on left: 202, on right: 0
>>>>>>> master


State 0

    0 $accept: . script_start "EOF"

    "("  shift, and go to state 1

<<<<<<< HEAD
    $default  reduce using rule 188 (script)

    except         go to state 2
    func           go to state 3
    elem           go to state 4
    table          go to state 5
    data           go to state 6
    memory         go to state 7
    global         go to state 8
    import         go to state 9
    export         go to state 10
    type_def       go to state 11
    start          go to state 12
    module_field   go to state 13
    module_fields  go to state 14
    raw_module     go to state 15
    module         go to state 16
    inline_module  go to state 17
    action         go to state 18
    assertion      go to state 19
    cmd            go to state 20
    cmd_list       go to state 21
    script         go to state 22
    script_start   go to state 23
=======
    $default  reduce using rule 199 (script)

    func           go to state 2
    elem           go to state 3
    table          go to state 4
    data           go to state 5
    memory         go to state 6
    global         go to state 7
    import         go to state 8
    export         go to state 9
    type_def       go to state 10
    start          go to state 11
    module_field   go to state 12
    module_fields  go to state 13
    raw_module     go to state 14
    module         go to state 15
    inline_module  go to state 16
    action         go to state 17
    assertion      go to state 18
    cmd            go to state 19
    cmd_list       go to state 20
    script         go to state 21
    script_start   go to state 22
>>>>>>> master


State 1

<<<<<<< HEAD
   90 except: "(" . EXCEPT value_type_list ")"
   91 func: "(" . FUNC bind_var_opt func_fields ")"
  113 elem: "(" . ELEM var offset var_list ")"
  114     | "(" . ELEM offset var_list ")"
  115 table: "(" . TABLE bind_var_opt table_fields ")"
  120 data: "(" . DATA var offset text_list_opt ")"
  121     | "(" . DATA offset text_list_opt ")"
  122 memory: "(" . MEMORY bind_var_opt memory_fields ")"
  127 global: "(" . GLOBAL bind_var_opt global_fields ")"
  136 import: "(" . IMPORT quoted_text quoted_text import_desc ")"
  142 export: "(" . EXPORT quoted_text export_desc ")"
  144 type_def: "(" . TYPE func_type ")"
  145         | "(" . TYPE bind_var func_type ")"
  146 start: "(" . START var ")"
  162 raw_module: "(" . MODULE bind_var_opt module_fields_opt ")"
  163           | "(" . MODULE bind_var_opt text_list ")"
  168 action: "(" . INVOKE script_var_opt quoted_text const_list ")"
  169       | "(" . GET script_var_opt quoted_text ")"
  170 assertion: "(" . ASSERT_MALFORMED raw_module quoted_text ")"
  171          | "(" . ASSERT_INVALID raw_module quoted_text ")"
  172          | "(" . ASSERT_UNLINKABLE raw_module quoted_text ")"
  173          | "(" . ASSERT_TRAP raw_module quoted_text ")"
  174          | "(" . ASSERT_RETURN action const_list ")"
  175          | "(" . ASSERT_RETURN_CANONICAL_NAN action ")"
  176          | "(" . ASSERT_RETURN_ARITHMETIC_NAN action ")"
  177          | "(" . ASSERT_TRAP action quoted_text ")"
  178          | "(" . ASSERT_EXHAUSTION action quoted_text ")"
  182 cmd: "(" . REGISTER quoted_text script_var_opt ")"

    FUNC                          shift, and go to state 24
    START                         shift, and go to state 25
    TYPE                          shift, and go to state 26
    GLOBAL                        shift, and go to state 27
    MODULE                        shift, and go to state 28
    TABLE                         shift, and go to state 29
    ELEM                          shift, and go to state 30
    MEMORY                        shift, and go to state 31
    DATA                          shift, and go to state 32
    IMPORT                        shift, and go to state 33
    EXPORT                        shift, and go to state 34
    EXCEPT                        shift, and go to state 35
    REGISTER                      shift, and go to state 36
    INVOKE                        shift, and go to state 37
    GET                           shift, and go to state 38
    ASSERT_MALFORMED              shift, and go to state 39
    ASSERT_INVALID                shift, and go to state 40
    ASSERT_UNLINKABLE             shift, and go to state 41
    ASSERT_RETURN                 shift, and go to state 42
    ASSERT_RETURN_CANONICAL_NAN   shift, and go to state 43
    ASSERT_RETURN_ARITHMETIC_NAN  shift, and go to state 44
    ASSERT_TRAP                   shift, and go to state 45
    ASSERT_EXHAUSTION             shift, and go to state 46
=======
  103 func: "(" . FUNC bind_var_opt func_fields ")"
  125 elem: "(" . ELEM var offset var_list ")"
  126     | "(" . ELEM offset var_list ")"
  127 table: "(" . TABLE bind_var_opt table_fields ")"
  132 data: "(" . DATA var offset text_list_opt ")"
  133     | "(" . DATA offset text_list_opt ")"
  134 memory: "(" . MEMORY bind_var_opt memory_fields ")"
  139 global: "(" . GLOBAL bind_var_opt global_fields ")"
  148 import: "(" . IMPORT quoted_text quoted_text import_desc ")"
  154 export: "(" . EXPORT quoted_text export_desc ")"
  156 type_def: "(" . TYPE func_type ")"
  157         | "(" . TYPE bind_var func_type ")"
  158 start: "(" . START var ")"
  173 raw_module: "(" . MODULE bind_var_opt module_fields_opt ")"
  174           | "(" . MODULE bind_var_opt text_list ")"
  179 action: "(" . INVOKE script_var_opt quoted_text const_list ")"
  180       | "(" . GET script_var_opt quoted_text ")"
  181 assertion: "(" . ASSERT_MALFORMED raw_module quoted_text ")"
  182          | "(" . ASSERT_INVALID raw_module quoted_text ")"
  183          | "(" . ASSERT_UNLINKABLE raw_module quoted_text ")"
  184          | "(" . ASSERT_TRAP raw_module quoted_text ")"
  185          | "(" . ASSERT_RETURN action const_list ")"
  186          | "(" . ASSERT_RETURN_CANONICAL_NAN action ")"
  187          | "(" . ASSERT_RETURN_ARITHMETIC_NAN action ")"
  188          | "(" . ASSERT_TRAP action quoted_text ")"
  189          | "(" . ASSERT_EXHAUSTION action quoted_text ")"
  193 cmd: "(" . REGISTER quoted_text script_var_opt ")"

    FUNC                          shift, and go to state 23
    START                         shift, and go to state 24
    TYPE                          shift, and go to state 25
    GLOBAL                        shift, and go to state 26
    MODULE                        shift, and go to state 27
    TABLE                         shift, and go to state 28
    ELEM                          shift, and go to state 29
    MEMORY                        shift, and go to state 30
    DATA                          shift, and go to state 31
    IMPORT                        shift, and go to state 32
    EXPORT                        shift, and go to state 33
    REGISTER                      shift, and go to state 34
    INVOKE                        shift, and go to state 35
    GET                           shift, and go to state 36
    ASSERT_MALFORMED              shift, and go to state 37
    ASSERT_INVALID                shift, and go to state 38
    ASSERT_UNLINKABLE             shift, and go to state 39
    ASSERT_RETURN                 shift, and go to state 40
    ASSERT_RETURN_CANONICAL_NAN   shift, and go to state 41
    ASSERT_RETURN_ARITHMETIC_NAN  shift, and go to state 42
    ASSERT_TRAP                   shift, and go to state 43
    ASSERT_EXHAUSTION             shift, and go to state 44
>>>>>>> master


State 2

<<<<<<< HEAD
  157 module_field: except .

    $default  reduce using rule 157 (module_field)
=======
  163 module_field: func .

    $default  reduce using rule 163 (module_field)
>>>>>>> master


State 3

<<<<<<< HEAD
  151 module_field: func .
=======
  164 module_field: elem .
>>>>>>> master

    $default  reduce using rule 164 (module_field)


State 4

<<<<<<< HEAD
  152 module_field: elem .

    $default  reduce using rule 152 (module_field)
=======
  161 module_field: table .

    $default  reduce using rule 161 (module_field)
>>>>>>> master


State 5

<<<<<<< HEAD
  149 module_field: table .

    $default  reduce using rule 149 (module_field)
=======
  165 module_field: data .

    $default  reduce using rule 165 (module_field)
>>>>>>> master


State 6

<<<<<<< HEAD
  153 module_field: data .

    $default  reduce using rule 153 (module_field)
=======
  162 module_field: memory .

    $default  reduce using rule 162 (module_field)
>>>>>>> master


State 7

<<<<<<< HEAD
  150 module_field: memory .

    $default  reduce using rule 150 (module_field)
=======
  160 module_field: global .

    $default  reduce using rule 160 (module_field)
>>>>>>> master


State 8

<<<<<<< HEAD
  148 module_field: global .

    $default  reduce using rule 148 (module_field)
=======
  167 module_field: import .

    $default  reduce using rule 167 (module_field)
>>>>>>> master


State 9

<<<<<<< HEAD
  155 module_field: import .
=======
  168 module_field: export .
>>>>>>> master

    $default  reduce using rule 168 (module_field)


State 10

<<<<<<< HEAD
  156 module_field: export .

    $default  reduce using rule 156 (module_field)
=======
  159 module_field: type_def .

    $default  reduce using rule 159 (module_field)
>>>>>>> master


State 11

<<<<<<< HEAD
  147 module_field: type_def .

    $default  reduce using rule 147 (module_field)
=======
  166 module_field: start .

    $default  reduce using rule 166 (module_field)
>>>>>>> master


State 12

<<<<<<< HEAD
  154 module_field: start .

    $default  reduce using rule 154 (module_field)
=======
  171 module_fields: module_field .

    $default  reduce using rule 171 (module_fields)
>>>>>>> master


State 13

<<<<<<< HEAD
  160 module_fields: module_field .
=======
  172 module_fields: module_fields . module_field
  176 inline_module: module_fields .
>>>>>>> master

    $default  reduce using rule 160 (module_fields)

<<<<<<< HEAD
=======
    $default  reduce using rule 176 (inline_module)
>>>>>>> master

State 14

  161 module_fields: module_fields . module_field
  165 inline_module: module_fields .

    "("  shift, and go to state 47

<<<<<<< HEAD
    $default  reduce using rule 165 (inline_module)

    except        go to state 2
    func          go to state 3
    elem          go to state 4
    table         go to state 5
    data          go to state 6
    memory        go to state 7
    global        go to state 8
    import        go to state 9
    export        go to state 10
    type_def      go to state 11
    start         go to state 12
    module_field  go to state 48
=======
  175 module: raw_module .

    $default  reduce using rule 175 (module)
>>>>>>> master


State 15

<<<<<<< HEAD
  164 module: raw_module .

    $default  reduce using rule 164 (module)
=======
  192 cmd: module .

    $default  reduce using rule 192 (cmd)
>>>>>>> master


State 16

<<<<<<< HEAD
  181 cmd: module .

    $default  reduce using rule 181 (cmd)
=======
  201 script: inline_module .

    $default  reduce using rule 201 (script)
>>>>>>> master


State 17

<<<<<<< HEAD
  190 script: inline_module .

    $default  reduce using rule 190 (script)
=======
  190 cmd: action .

    $default  reduce using rule 190 (cmd)
>>>>>>> master


State 18

<<<<<<< HEAD
  179 cmd: action .

    $default  reduce using rule 179 (cmd)
=======
  191 cmd: assertion .

    $default  reduce using rule 191 (cmd)
>>>>>>> master


State 19

<<<<<<< HEAD
  180 cmd: assertion .

    $default  reduce using rule 180 (cmd)
=======
  194 cmd_list: cmd .

    $default  reduce using rule 194 (cmd_list)
>>>>>>> master


State 20

<<<<<<< HEAD
  183 cmd_list: cmd .
=======
  195 cmd_list: cmd_list . cmd
  200 script: cmd_list .
>>>>>>> master

    $default  reduce using rule 183 (cmd_list)

<<<<<<< HEAD
=======
    $default  reduce using rule 200 (script)
>>>>>>> master

State 21

  184 cmd_list: cmd_list . cmd
  189 script: cmd_list .

    "("  shift, and go to state 49

<<<<<<< HEAD
    $default  reduce using rule 189 (script)

    raw_module  go to state 15
    module      go to state 16
    action      go to state 18
    assertion   go to state 19
    cmd         go to state 50
=======
  202 script_start: script .

    $default  reduce using rule 202 (script_start)
>>>>>>> master


State 22

  191 script_start: script .

    $default  reduce using rule 191 (script_start)


State 23

<<<<<<< HEAD
    0 $accept: script_start . "EOF"
=======
  103 func: "(" FUNC . bind_var_opt func_fields ")"

    VAR  shift, and go to state 50

    $default  reduce using rule 29 (bind_var_opt)
>>>>>>> master

    "EOF"  shift, and go to state 51


State 24

<<<<<<< HEAD
   91 func: "(" FUNC . bind_var_opt func_fields ")"
=======
  158 start: "(" START . var ")"
>>>>>>> master

    VAR  shift, and go to state 52

    $default  reduce using rule 29 (bind_var_opt)

    bind_var_opt  go to state 53
    bind_var      go to state 54


State 25

<<<<<<< HEAD
  146 start: "(" START . var ")"
=======
  156 type_def: "(" TYPE . func_type ")"
  157         | "(" TYPE . bind_var func_type ")"
>>>>>>> master

    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

    nat  go to state 57
    var  go to state 58


State 26

<<<<<<< HEAD
  144 type_def: "(" TYPE . func_type ")"
  145         | "(" TYPE . bind_var func_type ")"
=======
  139 global: "(" GLOBAL . bind_var_opt global_fields ")"
>>>>>>> master

    "("  shift, and go to state 59
    VAR  shift, and go to state 52

    func_type  go to state 60
    bind_var   go to state 61


State 27

<<<<<<< HEAD
  127 global: "(" GLOBAL . bind_var_opt global_fields ")"
=======
  173 raw_module: "(" MODULE . bind_var_opt module_fields_opt ")"
  174           | "(" MODULE . bind_var_opt text_list ")"
>>>>>>> master

    VAR  shift, and go to state 52

    $default  reduce using rule 29 (bind_var_opt)

    bind_var_opt  go to state 62
    bind_var      go to state 54


State 28

<<<<<<< HEAD
  162 raw_module: "(" MODULE . bind_var_opt module_fields_opt ")"
  163           | "(" MODULE . bind_var_opt text_list ")"
=======
  127 table: "(" TABLE . bind_var_opt table_fields ")"
>>>>>>> master

    VAR  shift, and go to state 52

    $default  reduce using rule 29 (bind_var_opt)

    bind_var_opt  go to state 63
    bind_var      go to state 54


State 29

<<<<<<< HEAD
  115 table: "(" TABLE . bind_var_opt table_fields ")"
=======
  125 elem: "(" ELEM . var offset var_list ")"
  126     | "(" ELEM . offset var_list ")"
>>>>>>> master

    VAR  shift, and go to state 52

    $default  reduce using rule 29 (bind_var_opt)

    bind_var_opt  go to state 64
    bind_var      go to state 54


<<<<<<< HEAD
State 30
=======
  134 memory: "(" MEMORY . bind_var_opt memory_fields ")"
>>>>>>> master

  113 elem: "(" ELEM . var offset var_list ")"
  114     | "(" ELEM . offset var_list ")"

    "("  shift, and go to state 65
    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

    nat     go to state 57
    var     go to state 66
    expr    go to state 67
    offset  go to state 68


State 31

<<<<<<< HEAD
  122 memory: "(" MEMORY . bind_var_opt memory_fields ")"
=======
  132 data: "(" DATA . var offset text_list_opt ")"
  133     | "(" DATA . offset text_list_opt ")"
>>>>>>> master

    VAR  shift, and go to state 52

    $default  reduce using rule 29 (bind_var_opt)

    bind_var_opt  go to state 69
    bind_var      go to state 54


State 32

<<<<<<< HEAD
  120 data: "(" DATA . var offset text_list_opt ")"
  121     | "(" DATA . offset text_list_opt ")"
=======
  148 import: "(" IMPORT . quoted_text quoted_text import_desc ")"
>>>>>>> master

    "("  shift, and go to state 65
    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

    nat     go to state 57
    var     go to state 70
    expr    go to state 67
    offset  go to state 71


State 33

<<<<<<< HEAD
  136 import: "(" IMPORT . quoted_text quoted_text import_desc ")"
=======
  154 export: "(" EXPORT . quoted_text export_desc ")"
>>>>>>> master

    TEXT  shift, and go to state 72

    quoted_text  go to state 73


State 34

<<<<<<< HEAD
  142 export: "(" EXPORT . quoted_text export_desc ")"
=======
  193 cmd: "(" REGISTER . quoted_text script_var_opt ")"
>>>>>>> master

    TEXT  shift, and go to state 72

    quoted_text  go to state 74


State 35

<<<<<<< HEAD
   90 except: "(" EXCEPT . value_type_list ")"

    $default  reduce using rule 6 (value_type_list)
=======
  179 action: "(" INVOKE . script_var_opt quoted_text const_list ")"

    VAR  shift, and go to state 74

    $default  reduce using rule 177 (script_var_opt)
>>>>>>> master

    value_type_list  go to state 75


State 36

<<<<<<< HEAD
  182 cmd: "(" REGISTER . quoted_text script_var_opt ")"
=======
  180 action: "(" GET . script_var_opt quoted_text ")"
>>>>>>> master

    TEXT  shift, and go to state 72

<<<<<<< HEAD
    quoted_text  go to state 76
=======
    $default  reduce using rule 177 (script_var_opt)

    script_var_opt  go to state 76
>>>>>>> master


State 37

<<<<<<< HEAD
  168 action: "(" INVOKE . script_var_opt quoted_text const_list ")"

    VAR  shift, and go to state 77
=======
  181 assertion: "(" ASSERT_MALFORMED . raw_module quoted_text ")"
>>>>>>> master

    $default  reduce using rule 166 (script_var_opt)

    script_var_opt  go to state 78


State 38

<<<<<<< HEAD
  169 action: "(" GET . script_var_opt quoted_text ")"
=======
  182 assertion: "(" ASSERT_INVALID . raw_module quoted_text ")"
>>>>>>> master

    VAR  shift, and go to state 77

    $default  reduce using rule 166 (script_var_opt)

    script_var_opt  go to state 79


State 39

<<<<<<< HEAD
  170 assertion: "(" ASSERT_MALFORMED . raw_module quoted_text ")"
=======
  183 assertion: "(" ASSERT_UNLINKABLE . raw_module quoted_text ")"
>>>>>>> master

    "("  shift, and go to state 80

    raw_module  go to state 81


State 40

<<<<<<< HEAD
  171 assertion: "(" ASSERT_INVALID . raw_module quoted_text ")"
=======
  185 assertion: "(" ASSERT_RETURN . action const_list ")"
>>>>>>> master

    "("  shift, and go to state 80

    raw_module  go to state 82


State 41

<<<<<<< HEAD
  172 assertion: "(" ASSERT_UNLINKABLE . raw_module quoted_text ")"
=======
  186 assertion: "(" ASSERT_RETURN_CANONICAL_NAN . action ")"
>>>>>>> master

    "("  shift, and go to state 80

    raw_module  go to state 83


State 42

<<<<<<< HEAD
  174 assertion: "(" ASSERT_RETURN . action const_list ")"
=======
  187 assertion: "(" ASSERT_RETURN_ARITHMETIC_NAN . action ")"
>>>>>>> master

    "("  shift, and go to state 84

    action  go to state 85


State 43

<<<<<<< HEAD
  175 assertion: "(" ASSERT_RETURN_CANONICAL_NAN . action ")"
=======
  184 assertion: "(" ASSERT_TRAP . raw_module quoted_text ")"
  188          | "(" ASSERT_TRAP . action quoted_text ")"
>>>>>>> master

    "("  shift, and go to state 84

    action  go to state 86


State 44

<<<<<<< HEAD
  176 assertion: "(" ASSERT_RETURN_ARITHMETIC_NAN . action ")"
=======
  189 assertion: "(" ASSERT_EXHAUSTION . action quoted_text ")"
>>>>>>> master

    "("  shift, and go to state 84

    action  go to state 87


State 45

<<<<<<< HEAD
  173 assertion: "(" ASSERT_TRAP . raw_module quoted_text ")"
  177          | "(" ASSERT_TRAP . action quoted_text ")"

    "("  shift, and go to state 88

    raw_module  go to state 89
    action      go to state 90
=======
  103 func: "(" . FUNC bind_var_opt func_fields ")"
  125 elem: "(" . ELEM var offset var_list ")"
  126     | "(" . ELEM offset var_list ")"
  127 table: "(" . TABLE bind_var_opt table_fields ")"
  132 data: "(" . DATA var offset text_list_opt ")"
  133     | "(" . DATA offset text_list_opt ")"
  134 memory: "(" . MEMORY bind_var_opt memory_fields ")"
  139 global: "(" . GLOBAL bind_var_opt global_fields ")"
  148 import: "(" . IMPORT quoted_text quoted_text import_desc ")"
  154 export: "(" . EXPORT quoted_text export_desc ")"
  156 type_def: "(" . TYPE func_type ")"
  157         | "(" . TYPE bind_var func_type ")"
  158 start: "(" . START var ")"

    FUNC    shift, and go to state 23
    START   shift, and go to state 24
    TYPE    shift, and go to state 25
    GLOBAL  shift, and go to state 26
    TABLE   shift, and go to state 28
    ELEM    shift, and go to state 29
    MEMORY  shift, and go to state 30
    DATA    shift, and go to state 31
    IMPORT  shift, and go to state 32
    EXPORT  shift, and go to state 33
>>>>>>> master


State 46

<<<<<<< HEAD
  178 assertion: "(" ASSERT_EXHAUSTION . action quoted_text ")"

    "("  shift, and go to state 84

    action  go to state 91
=======
  172 module_fields: module_fields module_field .

    $default  reduce using rule 172 (module_fields)
>>>>>>> master


State 47

<<<<<<< HEAD
   90 except: "(" . EXCEPT value_type_list ")"
   91 func: "(" . FUNC bind_var_opt func_fields ")"
  113 elem: "(" . ELEM var offset var_list ")"
  114     | "(" . ELEM offset var_list ")"
  115 table: "(" . TABLE bind_var_opt table_fields ")"
  120 data: "(" . DATA var offset text_list_opt ")"
  121     | "(" . DATA offset text_list_opt ")"
  122 memory: "(" . MEMORY bind_var_opt memory_fields ")"
  127 global: "(" . GLOBAL bind_var_opt global_fields ")"
  136 import: "(" . IMPORT quoted_text quoted_text import_desc ")"
  142 export: "(" . EXPORT quoted_text export_desc ")"
  144 type_def: "(" . TYPE func_type ")"
  145         | "(" . TYPE bind_var func_type ")"
  146 start: "(" . START var ")"

    FUNC    shift, and go to state 24
    START   shift, and go to state 25
    TYPE    shift, and go to state 26
    GLOBAL  shift, and go to state 27
    TABLE   shift, and go to state 29
    ELEM    shift, and go to state 30
    MEMORY  shift, and go to state 31
    DATA    shift, and go to state 32
    IMPORT  shift, and go to state 33
    EXPORT  shift, and go to state 34
    EXCEPT  shift, and go to state 35
=======
  173 raw_module: "(" . MODULE bind_var_opt module_fields_opt ")"
  174           | "(" . MODULE bind_var_opt text_list ")"
  179 action: "(" . INVOKE script_var_opt quoted_text const_list ")"
  180       | "(" . GET script_var_opt quoted_text ")"
  181 assertion: "(" . ASSERT_MALFORMED raw_module quoted_text ")"
  182          | "(" . ASSERT_INVALID raw_module quoted_text ")"
  183          | "(" . ASSERT_UNLINKABLE raw_module quoted_text ")"
  184          | "(" . ASSERT_TRAP raw_module quoted_text ")"
  185          | "(" . ASSERT_RETURN action const_list ")"
  186          | "(" . ASSERT_RETURN_CANONICAL_NAN action ")"
  187          | "(" . ASSERT_RETURN_ARITHMETIC_NAN action ")"
  188          | "(" . ASSERT_TRAP action quoted_text ")"
  189          | "(" . ASSERT_EXHAUSTION action quoted_text ")"
  193 cmd: "(" . REGISTER quoted_text script_var_opt ")"

    MODULE                        shift, and go to state 27
    REGISTER                      shift, and go to state 34
    INVOKE                        shift, and go to state 35
    GET                           shift, and go to state 36
    ASSERT_MALFORMED              shift, and go to state 37
    ASSERT_INVALID                shift, and go to state 38
    ASSERT_UNLINKABLE             shift, and go to state 39
    ASSERT_RETURN                 shift, and go to state 40
    ASSERT_RETURN_CANONICAL_NAN   shift, and go to state 41
    ASSERT_RETURN_ARITHMETIC_NAN  shift, and go to state 42
    ASSERT_TRAP                   shift, and go to state 43
    ASSERT_EXHAUSTION             shift, and go to state 44
>>>>>>> master


State 48

<<<<<<< HEAD
  161 module_fields: module_fields module_field .

    $default  reduce using rule 161 (module_fields)
=======
  195 cmd_list: cmd_list cmd .

    $default  reduce using rule 195 (cmd_list)
>>>>>>> master


State 49

  162 raw_module: "(" . MODULE bind_var_opt module_fields_opt ")"
  163           | "(" . MODULE bind_var_opt text_list ")"
  168 action: "(" . INVOKE script_var_opt quoted_text const_list ")"
  169       | "(" . GET script_var_opt quoted_text ")"
  170 assertion: "(" . ASSERT_MALFORMED raw_module quoted_text ")"
  171          | "(" . ASSERT_INVALID raw_module quoted_text ")"
  172          | "(" . ASSERT_UNLINKABLE raw_module quoted_text ")"
  173          | "(" . ASSERT_TRAP raw_module quoted_text ")"
  174          | "(" . ASSERT_RETURN action const_list ")"
  175          | "(" . ASSERT_RETURN_CANONICAL_NAN action ")"
  176          | "(" . ASSERT_RETURN_ARITHMETIC_NAN action ")"
  177          | "(" . ASSERT_TRAP action quoted_text ")"
  178          | "(" . ASSERT_EXHAUSTION action quoted_text ")"
  182 cmd: "(" . REGISTER quoted_text script_var_opt ")"

    MODULE                        shift, and go to state 28
    REGISTER                      shift, and go to state 36
    INVOKE                        shift, and go to state 37
    GET                           shift, and go to state 38
    ASSERT_MALFORMED              shift, and go to state 39
    ASSERT_INVALID                shift, and go to state 40
    ASSERT_UNLINKABLE             shift, and go to state 41
    ASSERT_RETURN                 shift, and go to state 42
    ASSERT_RETURN_CANONICAL_NAN   shift, and go to state 43
    ASSERT_RETURN_ARITHMETIC_NAN  shift, and go to state 44
    ASSERT_TRAP                   shift, and go to state 45
    ASSERT_EXHAUSTION             shift, and go to state 46


State 50

  184 cmd_list: cmd_list cmd .

    $default  reduce using rule 184 (cmd_list)


State 51

<<<<<<< HEAD
    0 $accept: script_start "EOF" .

    $default  accept
=======
  103 func: "(" FUNC bind_var_opt . func_fields ")"

    "("             shift, and go to state 89
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

    $default  reduce using rule 98 (instr_list)

    type_use           go to state 120
    instr              go to state 121
    plain_instr        go to state 122
    block_instr        go to state 123
    expr               go to state 124
    rethrow_check      go to state 125
    throw_check        go to state 126
    try_check          go to state 127
    instr_list         go to state 128
    func_fields        go to state 129
    func_fields_body   go to state 130
    func_fields_body1  go to state 131
    func_body          go to state 132
    func_body1         go to state 133
    inline_import      go to state 134
    inline_export      go to state 135
>>>>>>> master


State 52

   31 bind_var: VAR .

    $default  reduce using rule 31 (bind_var)


State 53

   91 func: "(" FUNC bind_var_opt . func_fields ")"

    "("             shift, and go to state 92
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

    $default  reduce using rule 85 (instr_list)

    type_use           go to state 120
    instr              go to state 121
    plain_instr        go to state 122
    block_instr        go to state 123
    expr               go to state 124
    instr_list         go to state 125
    func_fields        go to state 126
    func_fields_body   go to state 127
    func_fields_body1  go to state 128
    func_body          go to state 129
    func_body1         go to state 130
    inline_import      go to state 131
    inline_export      go to state 132


State 54

   30 bind_var_opt: bind_var .

    $default  reduce using rule 30 (bind_var_opt)


State 55

   21 nat: NAT .

    $default  reduce using rule 21 (nat)


State 56

<<<<<<< HEAD
   26 var: VAR .

    $default  reduce using rule 26 (var)
=======
  158 start: "(" START var . ")"

    ")"  shift, and go to state 136
>>>>>>> master


State 57

   25 var: nat .

<<<<<<< HEAD
    $default  reduce using rule 25 (var)
=======
    FUNC  shift, and go to state 137
>>>>>>> master


State 58

<<<<<<< HEAD
  146 start: "(" START var . ")"

    ")"  shift, and go to state 133
=======
  156 type_def: "(" TYPE func_type . ")"

    ")"  shift, and go to state 138
>>>>>>> master


State 59

<<<<<<< HEAD
   11 func_type: "(" . FUNC func_sig ")"

    FUNC  shift, and go to state 134
=======
  157 type_def: "(" TYPE bind_var . func_type ")"

    "("  shift, and go to state 57

    func_type  go to state 139
>>>>>>> master


State 60

<<<<<<< HEAD
  144 type_def: "(" TYPE func_type . ")"

    ")"  shift, and go to state 135
=======
  139 global: "(" GLOBAL bind_var_opt . global_fields ")"

    "("         shift, and go to state 140
    VALUE_TYPE  shift, and go to state 141

    global_type    go to state 142
    global_fields  go to state 143
    inline_import  go to state 144
    inline_export  go to state 145
>>>>>>> master


State 61

<<<<<<< HEAD
  145 type_def: "(" TYPE bind_var . func_type ")"

    "("  shift, and go to state 59

    func_type  go to state 136
=======
  173 raw_module: "(" MODULE bind_var_opt . module_fields_opt ")"
  174           | "(" MODULE bind_var_opt . text_list ")"

    "("   shift, and go to state 45
    TEXT  shift, and go to state 146

    $default  reduce using rule 169 (module_fields_opt)

    text_list          go to state 147
    func               go to state 2
    elem               go to state 3
    table              go to state 4
    data               go to state 5
    memory             go to state 6
    global             go to state 7
    import             go to state 8
    export             go to state 9
    type_def           go to state 10
    start              go to state 11
    module_field       go to state 12
    module_fields_opt  go to state 148
    module_fields      go to state 149
>>>>>>> master


State 62

<<<<<<< HEAD
  127 global: "(" GLOBAL bind_var_opt . global_fields ")"

    "("         shift, and go to state 137
    VALUE_TYPE  shift, and go to state 138

    global_type    go to state 139
    global_fields  go to state 140
    inline_import  go to state 141
    inline_export  go to state 142
=======
  127 table: "(" TABLE bind_var_opt . table_fields ")"

    "("      shift, and go to state 150
    NAT      shift, and go to state 53
    ANYFUNC  shift, and go to state 151

    elem_type      go to state 152
    table_sig      go to state 153
    limits         go to state 154
    nat            go to state 155
    table_fields   go to state 156
    inline_import  go to state 157
    inline_export  go to state 158
>>>>>>> master


State 63

<<<<<<< HEAD
  162 raw_module: "(" MODULE bind_var_opt . module_fields_opt ")"
  163           | "(" MODULE bind_var_opt . text_list ")"

    "("   shift, and go to state 47
    TEXT  shift, and go to state 143

    $default  reduce using rule 158 (module_fields_opt)

    text_list          go to state 144
    except             go to state 2
    func               go to state 3
    elem               go to state 4
    table              go to state 5
    data               go to state 6
    memory             go to state 7
    global             go to state 8
    import             go to state 9
    export             go to state 10
    type_def           go to state 11
    start              go to state 12
    module_field       go to state 13
    module_fields_opt  go to state 145
    module_fields      go to state 146
=======
   79 expr: "(" . expr1 ")"
  123 offset: "(" . OFFSET const_expr ")"

    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 159
    IF              shift, and go to state 160
    LOOP            shift, and go to state 161
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119
    OFFSET          shift, and go to state 162

    plain_instr    go to state 163
    expr1          go to state 164
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 165
>>>>>>> master


State 64

<<<<<<< HEAD
  115 table: "(" TABLE bind_var_opt . table_fields ")"
=======
  125 elem: "(" ELEM var . offset var_list ")"
>>>>>>> master

    "("      shift, and go to state 147
    NAT      shift, and go to state 55
    ANYFUNC  shift, and go to state 148

<<<<<<< HEAD
    elem_type      go to state 149
    table_sig      go to state 150
    limits         go to state 151
    nat            go to state 152
    table_fields   go to state 153
    inline_import  go to state 154
    inline_export  go to state 155
=======
    expr    go to state 65
    offset  go to state 166
>>>>>>> master


State 65

<<<<<<< HEAD
   72 expr: "(" . expr1 ")"
  111 offset: "(" . OFFSET const_expr ")"

    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 156
    IF              shift, and go to state 157
    LOOP            shift, and go to state 158
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119
    OFFSET          shift, and go to state 159

    plain_instr  go to state 160
    expr1        go to state 161
=======
  124 offset: expr .

    $default  reduce using rule 124 (offset)
>>>>>>> master


State 66

<<<<<<< HEAD
  113 elem: "(" ELEM var . offset var_list ")"
=======
  126 elem: "(" ELEM offset . var_list ")"
>>>>>>> master

    "("  shift, and go to state 65

<<<<<<< HEAD
    expr    go to state 67
    offset  go to state 162
=======
    var_list  go to state 167
>>>>>>> master


State 67

<<<<<<< HEAD
  112 offset: expr .

    $default  reduce using rule 112 (offset)
=======
  134 memory: "(" MEMORY bind_var_opt . memory_fields ")"

    "("  shift, and go to state 168
    NAT  shift, and go to state 53

    memory_sig     go to state 169
    limits         go to state 170
    nat            go to state 155
    memory_fields  go to state 171
    inline_import  go to state 172
    inline_export  go to state 173
>>>>>>> master


State 68

<<<<<<< HEAD
  114 elem: "(" ELEM offset . var_list ")"
=======
  132 data: "(" DATA var . offset text_list_opt ")"
>>>>>>> master

    $default  reduce using rule 27 (var_list)

<<<<<<< HEAD
    var_list  go to state 163
=======
    expr    go to state 65
    offset  go to state 174
>>>>>>> master


State 69

<<<<<<< HEAD
  122 memory: "(" MEMORY bind_var_opt . memory_fields ")"

    "("  shift, and go to state 164
    NAT  shift, and go to state 55

    memory_sig     go to state 165
    limits         go to state 166
    nat            go to state 152
    memory_fields  go to state 167
    inline_import  go to state 168
    inline_export  go to state 169
=======
  133 data: "(" DATA offset . text_list_opt ")"

    TEXT  shift, and go to state 146

    $default  reduce using rule 3 (text_list_opt)

    text_list      go to state 175
    text_list_opt  go to state 176
>>>>>>> master


State 70

  120 data: "(" DATA var . offset text_list_opt ")"

    "("  shift, and go to state 65

    expr    go to state 67
    offset  go to state 170


State 71

<<<<<<< HEAD
  121 data: "(" DATA offset . text_list_opt ")"

    TEXT  shift, and go to state 143
=======
  148 import: "(" IMPORT quoted_text . quoted_text import_desc ")"
>>>>>>> master

    $default  reduce using rule 3 (text_list_opt)

<<<<<<< HEAD
    text_list      go to state 171
    text_list_opt  go to state 172
=======
    quoted_text  go to state 177
>>>>>>> master


State 72

<<<<<<< HEAD
    5 quoted_text: TEXT .

    $default  reduce using rule 5 (quoted_text)
=======
  154 export: "(" EXPORT quoted_text . export_desc ")"

    "("  shift, and go to state 178

    export_desc  go to state 179
>>>>>>> master


State 73

<<<<<<< HEAD
  136 import: "(" IMPORT quoted_text . quoted_text import_desc ")"
=======
  193 cmd: "(" REGISTER quoted_text . script_var_opt ")"
>>>>>>> master

    TEXT  shift, and go to state 72

<<<<<<< HEAD
    quoted_text  go to state 173
=======
    $default  reduce using rule 177 (script_var_opt)

    script_var_opt  go to state 180
>>>>>>> master


State 74

<<<<<<< HEAD
  142 export: "(" EXPORT quoted_text . export_desc ")"

    "("  shift, and go to state 174
=======
  178 script_var_opt: VAR .

    $default  reduce using rule 178 (script_var_opt)
>>>>>>> master

    export_desc  go to state 175


<<<<<<< HEAD
State 75
=======
  179 action: "(" INVOKE script_var_opt . quoted_text const_list ")"
>>>>>>> master

    7 value_type_list: value_type_list . VALUE_TYPE
   90 except: "(" EXCEPT value_type_list . ")"

<<<<<<< HEAD
    ")"         shift, and go to state 176
    VALUE_TYPE  shift, and go to state 177
=======
    quoted_text  go to state 181
>>>>>>> master


State 76

<<<<<<< HEAD
  182 cmd: "(" REGISTER quoted_text . script_var_opt ")"
=======
  180 action: "(" GET script_var_opt . quoted_text ")"
>>>>>>> master

    VAR  shift, and go to state 77

<<<<<<< HEAD
    $default  reduce using rule 166 (script_var_opt)

    script_var_opt  go to state 178
=======
    quoted_text  go to state 182
>>>>>>> master


State 77

<<<<<<< HEAD
  167 script_var_opt: VAR .
=======
  173 raw_module: "(" . MODULE bind_var_opt module_fields_opt ")"
  174           | "(" . MODULE bind_var_opt text_list ")"
>>>>>>> master

    $default  reduce using rule 167 (script_var_opt)


State 78

<<<<<<< HEAD
  168 action: "(" INVOKE script_var_opt . quoted_text const_list ")"
=======
  181 assertion: "(" ASSERT_MALFORMED raw_module . quoted_text ")"
>>>>>>> master

    TEXT  shift, and go to state 72

<<<<<<< HEAD
    quoted_text  go to state 179
=======
    quoted_text  go to state 183
>>>>>>> master


State 79

<<<<<<< HEAD
  169 action: "(" GET script_var_opt . quoted_text ")"
=======
  182 assertion: "(" ASSERT_INVALID raw_module . quoted_text ")"
>>>>>>> master

    TEXT  shift, and go to state 72

<<<<<<< HEAD
    quoted_text  go to state 180
=======
    quoted_text  go to state 184
>>>>>>> master


State 80

<<<<<<< HEAD
  162 raw_module: "(" . MODULE bind_var_opt module_fields_opt ")"
  163           | "(" . MODULE bind_var_opt text_list ")"

    MODULE  shift, and go to state 28
=======
  183 assertion: "(" ASSERT_UNLINKABLE raw_module . quoted_text ")"

    TEXT  shift, and go to state 70

    quoted_text  go to state 185
>>>>>>> master


State 81

<<<<<<< HEAD
  170 assertion: "(" ASSERT_MALFORMED raw_module . quoted_text ")"
=======
  179 action: "(" . INVOKE script_var_opt quoted_text const_list ")"
  180       | "(" . GET script_var_opt quoted_text ")"
>>>>>>> master

    TEXT  shift, and go to state 72

    quoted_text  go to state 181


State 82

<<<<<<< HEAD
  171 assertion: "(" ASSERT_INVALID raw_module . quoted_text ")"

    TEXT  shift, and go to state 72

    quoted_text  go to state 182
=======
  185 assertion: "(" ASSERT_RETURN action . const_list ")"

    $default  reduce using rule 197 (const_list)

    const_list  go to state 186
>>>>>>> master


State 83

<<<<<<< HEAD
  172 assertion: "(" ASSERT_UNLINKABLE raw_module . quoted_text ")"

    TEXT  shift, and go to state 72

    quoted_text  go to state 183
=======
  186 assertion: "(" ASSERT_RETURN_CANONICAL_NAN action . ")"

    ")"  shift, and go to state 187
>>>>>>> master


State 84

<<<<<<< HEAD
  168 action: "(" . INVOKE script_var_opt quoted_text const_list ")"
  169       | "(" . GET script_var_opt quoted_text ")"

    INVOKE  shift, and go to state 37
    GET     shift, and go to state 38
=======
  187 assertion: "(" ASSERT_RETURN_ARITHMETIC_NAN action . ")"

    ")"  shift, and go to state 188
>>>>>>> master


State 85

<<<<<<< HEAD
  174 assertion: "(" ASSERT_RETURN action . const_list ")"
=======
  173 raw_module: "(" . MODULE bind_var_opt module_fields_opt ")"
  174           | "(" . MODULE bind_var_opt text_list ")"
  179 action: "(" . INVOKE script_var_opt quoted_text const_list ")"
  180       | "(" . GET script_var_opt quoted_text ")"
>>>>>>> master

    $default  reduce using rule 186 (const_list)

    const_list  go to state 184


<<<<<<< HEAD
State 86
=======
  184 assertion: "(" ASSERT_TRAP raw_module . quoted_text ")"
>>>>>>> master

  175 assertion: "(" ASSERT_RETURN_CANONICAL_NAN action . ")"

<<<<<<< HEAD
    ")"  shift, and go to state 185
=======
    quoted_text  go to state 189
>>>>>>> master


State 87

<<<<<<< HEAD
  176 assertion: "(" ASSERT_RETURN_ARITHMETIC_NAN action . ")"

    ")"  shift, and go to state 186
=======
  188 assertion: "(" ASSERT_TRAP action . quoted_text ")"

    TEXT  shift, and go to state 70

    quoted_text  go to state 190
>>>>>>> master


State 88

<<<<<<< HEAD
  162 raw_module: "(" . MODULE bind_var_opt module_fields_opt ")"
  163           | "(" . MODULE bind_var_opt text_list ")"
  168 action: "(" . INVOKE script_var_opt quoted_text const_list ")"
  169       | "(" . GET script_var_opt quoted_text ")"

    MODULE  shift, and go to state 28
    INVOKE  shift, and go to state 37
    GET     shift, and go to state 38
=======
  189 assertion: "(" ASSERT_EXHAUSTION action . quoted_text ")"

    TEXT  shift, and go to state 70

    quoted_text  go to state 191
>>>>>>> master


State 89

  173 assertion: "(" ASSERT_TRAP raw_module . quoted_text ")"

    TEXT  shift, and go to state 72

    quoted_text  go to state 187


State 90

  177 assertion: "(" ASSERT_TRAP action . quoted_text ")"

    TEXT  shift, and go to state 72

    quoted_text  go to state 188


State 91

  178 assertion: "(" ASSERT_EXHAUSTION action . quoted_text ")"

    TEXT  shift, and go to state 72

    quoted_text  go to state 189


State 92

   20 type_use: "(" . TYPE var ")"
<<<<<<< HEAD
   72 expr: "(" . expr1 ")"
  104 func_fields_body1: "(" . RESULT value_type_list ")" func_body
  105                  | "(" . PARAM value_type_list ")" func_fields_body1
  106                  | "(" . PARAM bind_var VALUE_TYPE ")" func_fields_body1
  109 func_body1: "(" . LOCAL value_type_list ")" func_body1
  110           | "(" . LOCAL bind_var VALUE_TYPE ")" func_body1
  137 inline_import: "(" . IMPORT quoted_text quoted_text ")"
  143 inline_export: "(" . EXPORT quoted_text ")"

    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 156
    IF              shift, and go to state 157
    LOOP            shift, and go to state 158
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
   79 expr: "(" . expr1 ")"
  116 func_fields_body1: "(" . RESULT value_type_list ")" func_body
  117                  | "(" . PARAM value_type_list ")" func_fields_body1
  118                  | "(" . PARAM bind_var VALUE_TYPE ")" func_fields_body1
  121 func_body1: "(" . LOCAL value_type_list ")" func_body1
  122           | "(" . LOCAL bind_var VALUE_TYPE ")" func_body1
  149 inline_import: "(" . IMPORT quoted_text quoted_text ")"
  155 inline_export: "(" . EXPORT quoted_text ")"

    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 159
    IF              shift, and go to state 160
    LOOP            shift, and go to state 161
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119
<<<<<<< HEAD
    TYPE            shift, and go to state 190
    PARAM           shift, and go to state 191
    RESULT          shift, and go to state 192
    LOCAL           shift, and go to state 193
    IMPORT          shift, and go to state 194
    EXPORT          shift, and go to state 195

    plain_instr  go to state 160
    expr1        go to state 161
=======
    TYPE            shift, and go to state 192
    PARAM           shift, and go to state 193
    RESULT          shift, and go to state 194
    LOCAL           shift, and go to state 195
    IMPORT          shift, and go to state 196
    EXPORT          shift, and go to state 197

    plain_instr    go to state 163
    expr1          go to state 164
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 165
>>>>>>> master


State 93

   42 plain_instr: NOP .

    $default  reduce using rule 42 (plain_instr)


State 94

   43 plain_instr: DROP .

    $default  reduce using rule 43 (plain_instr)


State 95

   67 block_instr: BLOCK . labeling_opt block END labeling_opt

    VAR  shift, and go to state 52

    $default  reduce using rule 32 (labeling_opt)

<<<<<<< HEAD
    bind_var      go to state 196
    labeling_opt  go to state 197
=======
    bind_var      go to state 198
    labeling_opt  go to state 199
>>>>>>> master


State 96

   69 block_instr: IF . labeling_opt block END labeling_opt
   70            | IF . labeling_opt block ELSE labeling_opt instr_list END labeling_opt

    VAR  shift, and go to state 52

    $default  reduce using rule 32 (labeling_opt)

<<<<<<< HEAD
    bind_var      go to state 196
    labeling_opt  go to state 198
=======
    bind_var      go to state 198
    labeling_opt  go to state 200
>>>>>>> master


State 97

   68 block_instr: LOOP . labeling_opt block END labeling_opt

    VAR  shift, and go to state 52

    $default  reduce using rule 32 (labeling_opt)

<<<<<<< HEAD
    bind_var      go to state 196
    labeling_opt  go to state 199
=======
    bind_var      go to state 198
    labeling_opt  go to state 201
>>>>>>> master


State 98

   45 plain_instr: BR . var

    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

<<<<<<< HEAD
    nat  go to state 57
    var  go to state 200
=======
    nat  go to state 55
    var  go to state 202
>>>>>>> master


State 99

   46 plain_instr: BR_IF . var

    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

<<<<<<< HEAD
    nat  go to state 57
    var  go to state 201
=======
    nat  go to state 55
    var  go to state 203
>>>>>>> master


State 100

   47 plain_instr: BR_TABLE . var_list var

    $default  reduce using rule 27 (var_list)

<<<<<<< HEAD
    var_list  go to state 202
=======
    var_list  go to state 204
>>>>>>> master


State 101

   97 try_check: TRY .

    $default  reduce using rule 97 (try_check)


State 99

   96 throw_check: THROW .

    $default  reduce using rule 96 (throw_check)


State 100

   95 rethrow_check: RETHROW .

    $default  reduce using rule 95 (rethrow_check)


State 101

   49 plain_instr: CALL . var

    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

<<<<<<< HEAD
    nat  go to state 57
    var  go to state 203
=======
    nat  go to state 55
    var  go to state 205
>>>>>>> master


State 102

   50 plain_instr: CALL_INDIRECT . var

    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

<<<<<<< HEAD
    nat  go to state 57
    var  go to state 204
=======
    nat  go to state 55
    var  go to state 206
>>>>>>> master


State 103

   48 plain_instr: RETURN .

    $default  reduce using rule 48 (plain_instr)


State 104

   51 plain_instr: GET_LOCAL . var

    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

<<<<<<< HEAD
    nat  go to state 57
    var  go to state 205
=======
    nat  go to state 55
    var  go to state 207
>>>>>>> master


State 105

   52 plain_instr: SET_LOCAL . var

    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

<<<<<<< HEAD
    nat  go to state 57
    var  go to state 206
=======
    nat  go to state 55
    var  go to state 208
>>>>>>> master


State 106

   53 plain_instr: TEE_LOCAL . var

    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

<<<<<<< HEAD
    nat  go to state 57
    var  go to state 207
=======
    nat  go to state 55
    var  go to state 209
>>>>>>> master


State 107

   54 plain_instr: GET_GLOBAL . var

    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

<<<<<<< HEAD
    nat  go to state 57
    var  go to state 208
=======
    nat  go to state 55
    var  go to state 210
>>>>>>> master


State 108

   55 plain_instr: SET_GLOBAL . var

    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

<<<<<<< HEAD
    nat  go to state 57
    var  go to state 209
=======
    nat  go to state 55
    var  go to state 211
>>>>>>> master


State 109

   56 plain_instr: LOAD . offset_opt align_opt

<<<<<<< HEAD
    OFFSET_EQ_NAT  shift, and go to state 210

    $default  reduce using rule 34 (offset_opt)

    offset_opt  go to state 211
=======
    OFFSET_EQ_NAT  shift, and go to state 212

    $default  reduce using rule 34 (offset_opt)

    offset_opt  go to state 213
>>>>>>> master


State 110

   57 plain_instr: STORE . offset_opt align_opt

<<<<<<< HEAD
    OFFSET_EQ_NAT  shift, and go to state 210

    $default  reduce using rule 34 (offset_opt)

    offset_opt  go to state 212
=======
    OFFSET_EQ_NAT  shift, and go to state 212

    $default  reduce using rule 34 (offset_opt)

    offset_opt  go to state 214
>>>>>>> master


State 111

   58 plain_instr: CONST . literal

<<<<<<< HEAD
    NAT    shift, and go to state 213
    INT    shift, and go to state 214
    FLOAT  shift, and go to state 215

    literal  go to state 216
=======
    NAT    shift, and go to state 215
    INT    shift, and go to state 216
    FLOAT  shift, and go to state 217

    literal  go to state 218
>>>>>>> master


State 112

   59 plain_instr: UNARY .

    $default  reduce using rule 59 (plain_instr)


State 113

   60 plain_instr: BINARY .

    $default  reduce using rule 60 (plain_instr)


State 114

   61 plain_instr: COMPARE .

    $default  reduce using rule 61 (plain_instr)


State 115

   62 plain_instr: CONVERT .

    $default  reduce using rule 62 (plain_instr)


State 116

   44 plain_instr: SELECT .

    $default  reduce using rule 44 (plain_instr)


State 117

   41 plain_instr: UNREACHABLE .

    $default  reduce using rule 41 (plain_instr)


State 118

   63 plain_instr: CURRENT_MEMORY .

    $default  reduce using rule 63 (plain_instr)


State 119

   64 plain_instr: GROW_MEMORY .

    $default  reduce using rule 64 (plain_instr)


State 120

<<<<<<< HEAD
   92 func_fields: type_use . func_fields_body

    "("             shift, and go to state 217
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
  104 func_fields: type_use . func_fields_body

    "("             shift, and go to state 219
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)
=======
    $default  reduce using rule 98 (instr_list)
>>>>>>> master

    instr              go to state 121
    plain_instr        go to state 122
    block_instr        go to state 123
    expr               go to state 124
<<<<<<< HEAD
    instr_list         go to state 125
    func_fields_body   go to state 218
    func_fields_body1  go to state 128
    func_body          go to state 129
    func_body1         go to state 130
=======
    rethrow_check      go to state 125
    throw_check        go to state 126
    try_check          go to state 127
    instr_list         go to state 128
    func_fields_body   go to state 220
    func_fields_body1  go to state 131
    func_body          go to state 132
    func_body1         go to state 133
>>>>>>> master


State 121

   99 instr_list: instr . instr_list

<<<<<<< HEAD
    "("             shift, and go to state 219
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    "("             shift, and go to state 221
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    expr         go to state 124
    instr_list   go to state 220
=======
    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 222
>>>>>>> master


State 122

   38 instr: plain_instr .

    $default  reduce using rule 38 (instr)


State 123

   39 instr: block_instr .

    $default  reduce using rule 39 (instr)


State 124

   40 instr: expr .

    $default  reduce using rule 40 (instr)


State 125

<<<<<<< HEAD
  108 func_body1: instr_list .

    $default  reduce using rule 108 (func_body1)
=======
   66 plain_instr: rethrow_check . var

    NAT  shift, and go to state 53
    VAR  shift, and go to state 54
>>>>>>> master

    nat  go to state 55
    var  go to state 223

<<<<<<< HEAD
State 126

   91 func: "(" FUNC bind_var_opt func_fields . ")"

    ")"  shift, and go to state 221
=======

State 126

   65 plain_instr: throw_check . var
>>>>>>> master

    NAT  shift, and go to state 53
    VAR  shift, and go to state 54

<<<<<<< HEAD
State 127

   93 func_fields: func_fields_body .

    $default  reduce using rule 93 (func_fields)
=======
    nat  go to state 55
    var  go to state 224


State 127
>>>>>>> master

   71 block_instr: try_check . labeling_opt block catch_instr_list END labeling_opt

<<<<<<< HEAD
State 128

  102 func_fields_body: func_fields_body1 .

    $default  reduce using rule 102 (func_fields_body)


State 129

  103 func_fields_body1: func_body .

    $default  reduce using rule 103 (func_fields_body1)


State 130

  107 func_body: func_body1 .

    $default  reduce using rule 107 (func_body)


State 131

   94 func_fields: inline_import . type_use func_fields_import
   95            | inline_import . func_fields_import

    "("  shift, and go to state 222

    $default  reduce using rule 98 (func_fields_import1)

    type_use             go to state 223
    func_fields_import   go to state 224
    func_fields_import1  go to state 225
=======
    VAR  shift, and go to state 50

    $default  reduce using rule 32 (labeling_opt)

    bind_var      go to state 198
    labeling_opt  go to state 225


State 128

  120 func_body1: instr_list .

    $default  reduce using rule 120 (func_body1)


State 129

  103 func: "(" FUNC bind_var_opt func_fields . ")"

    ")"  shift, and go to state 226


State 130

  105 func_fields: func_fields_body .

    $default  reduce using rule 105 (func_fields)


State 131
>>>>>>> master

  114 func_fields_body: func_fields_body1 .

<<<<<<< HEAD
State 132

   96 func_fields: inline_export . func_fields

    "("             shift, and go to state 92
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    $default  reduce using rule 114 (func_fields_body)


State 132

  115 func_fields_body1: func_body .

    $default  reduce using rule 115 (func_fields_body1)


State 133

  119 func_body: func_body1 .

    $default  reduce using rule 119 (func_body)


State 134

  106 func_fields: inline_import . type_use func_fields_import
  107            | inline_import . func_fields_import

    "("  shift, and go to state 227

    $default  reduce using rule 110 (func_fields_import1)

    type_use             go to state 228
    func_fields_import   go to state 229
    func_fields_import1  go to state 230


State 135

  108 func_fields: inline_export . func_fields

    "("             shift, and go to state 89
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)
=======
    $default  reduce using rule 98 (instr_list)
>>>>>>> master

    type_use           go to state 120
    instr              go to state 121
    plain_instr        go to state 122
    block_instr        go to state 123
    expr               go to state 124
<<<<<<< HEAD
    instr_list         go to state 125
    func_fields        go to state 226
    func_fields_body   go to state 127
    func_fields_body1  go to state 128
    func_body          go to state 129
    func_body1         go to state 130
    inline_import      go to state 131
    inline_export      go to state 132


State 133

  146 start: "(" START var ")" .

    $default  reduce using rule 146 (start)


State 134

   11 func_type: "(" FUNC . func_sig ")"

    "("  shift, and go to state 227

    $default  reduce using rule 12 (func_sig)

    func_sig  go to state 228


State 135

  144 type_def: "(" TYPE func_type ")" .

    $default  reduce using rule 144 (type_def)


State 136

  145 type_def: "(" TYPE bind_var func_type . ")"

    ")"  shift, and go to state 229


State 137

   10 global_type: "(" . MUT VALUE_TYPE ")"
  137 inline_import: "(" . IMPORT quoted_text quoted_text ")"
  143 inline_export: "(" . EXPORT quoted_text ")"

    MUT     shift, and go to state 230
    IMPORT  shift, and go to state 194
    EXPORT  shift, and go to state 195


State 138
=======
    rethrow_check      go to state 125
    throw_check        go to state 126
    try_check          go to state 127
    instr_list         go to state 128
    func_fields        go to state 231
    func_fields_body   go to state 130
    func_fields_body1  go to state 131
    func_body          go to state 132
    func_body1         go to state 133
    inline_import      go to state 134
    inline_export      go to state 135


State 136

  158 start: "(" START var ")" .

    $default  reduce using rule 158 (start)


State 137

   11 func_type: "(" FUNC . func_sig ")"

    "("  shift, and go to state 232

    $default  reduce using rule 12 (func_sig)

    func_sig  go to state 233


State 138

  156 type_def: "(" TYPE func_type ")" .

    $default  reduce using rule 156 (type_def)


State 139

  157 type_def: "(" TYPE bind_var func_type . ")"

    ")"  shift, and go to state 234


State 140

   10 global_type: "(" . MUT VALUE_TYPE ")"
  149 inline_import: "(" . IMPORT quoted_text quoted_text ")"
  155 inline_export: "(" . EXPORT quoted_text ")"

    MUT     shift, and go to state 235
    IMPORT  shift, and go to state 196
    EXPORT  shift, and go to state 197


State 141
>>>>>>> master

    9 global_type: VALUE_TYPE .

    $default  reduce using rule 9 (global_type)


<<<<<<< HEAD
State 139

  128 global_fields: global_type . const_expr

    "("             shift, and go to state 219
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
State 142

  140 global_fields: global_type . const_expr

    "("             shift, and go to state 221
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    expr         go to state 124
    instr_list   go to state 231
    const_expr   go to state 232


State 140

  127 global: "(" GLOBAL bind_var_opt global_fields . ")"

    ")"  shift, and go to state 233


State 141

  129 global_fields: inline_import . global_type

    "("         shift, and go to state 234
    VALUE_TYPE  shift, and go to state 138

    global_type  go to state 235


State 142

  130 global_fields: inline_export . global_fields

    "("         shift, and go to state 137
    VALUE_TYPE  shift, and go to state 138

    global_type    go to state 139
    global_fields  go to state 236
    inline_import  go to state 141
    inline_export  go to state 142


State 143
=======
    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 236
    const_expr     go to state 237


State 143

  139 global: "(" GLOBAL bind_var_opt global_fields . ")"

    ")"  shift, and go to state 238


State 144

  141 global_fields: inline_import . global_type

    "("         shift, and go to state 239
    VALUE_TYPE  shift, and go to state 141

    global_type  go to state 240


State 145

  142 global_fields: inline_export . global_fields

    "("         shift, and go to state 140
    VALUE_TYPE  shift, and go to state 141

    global_type    go to state 142
    global_fields  go to state 241
    inline_import  go to state 144
    inline_export  go to state 145


State 146
>>>>>>> master

    1 text_list: TEXT .

    $default  reduce using rule 1 (text_list)


<<<<<<< HEAD
State 144

    2 text_list: text_list . TEXT
  163 raw_module: "(" MODULE bind_var_opt text_list . ")"

    ")"   shift, and go to state 237
    TEXT  shift, and go to state 238


State 145

  162 raw_module: "(" MODULE bind_var_opt module_fields_opt . ")"

    ")"  shift, and go to state 239


State 146

  159 module_fields_opt: module_fields .
  161 module_fields: module_fields . module_field
=======
State 147

    2 text_list: text_list . TEXT
  174 raw_module: "(" MODULE bind_var_opt text_list . ")"

    ")"   shift, and go to state 242
    TEXT  shift, and go to state 243


State 148

  173 raw_module: "(" MODULE bind_var_opt module_fields_opt . ")"

    ")"  shift, and go to state 244


State 149

  170 module_fields_opt: module_fields .
  172 module_fields: module_fields . module_field
>>>>>>> master

    "("  shift, and go to state 47

<<<<<<< HEAD
    $default  reduce using rule 159 (module_fields_opt)
=======
    $default  reduce using rule 170 (module_fields_opt)
>>>>>>> master

    except        go to state 2
    func          go to state 3
    elem          go to state 4
    table         go to state 5
    data          go to state 6
    memory        go to state 7
    global        go to state 8
    import        go to state 9
    export        go to state 10
    type_def      go to state 11
    start         go to state 12
    module_field  go to state 48


<<<<<<< HEAD
State 147

  137 inline_import: "(" . IMPORT quoted_text quoted_text ")"
  143 inline_export: "(" . EXPORT quoted_text ")"

    IMPORT  shift, and go to state 194
    EXPORT  shift, and go to state 195


State 148
=======
State 150

  149 inline_import: "(" . IMPORT quoted_text quoted_text ")"
  155 inline_export: "(" . EXPORT quoted_text ")"

    IMPORT  shift, and go to state 196
    EXPORT  shift, and go to state 197


State 151
>>>>>>> master

    8 elem_type: ANYFUNC .

    $default  reduce using rule 8 (elem_type)


<<<<<<< HEAD
State 149

  119 table_fields: elem_type . "(" ELEM var_list ")"

    "("  shift, and go to state 240


State 150

  116 table_fields: table_sig .

    $default  reduce using rule 116 (table_fields)


State 151

   16 table_sig: limits . elem_type

    ANYFUNC  shift, and go to state 148

    elem_type  go to state 241


State 152
=======
State 152

  131 table_fields: elem_type . "(" ELEM var_list ")"

    "("  shift, and go to state 245


State 153

  128 table_fields: table_sig .

    $default  reduce using rule 128 (table_fields)


State 154

   16 table_sig: limits . elem_type

    ANYFUNC  shift, and go to state 151

    elem_type  go to state 246


State 155
>>>>>>> master

   18 limits: nat .
   19       | nat . nat

    NAT  shift, and go to state 55

    $default  reduce using rule 18 (limits)

<<<<<<< HEAD
    nat  go to state 242


State 153

  115 table: "(" TABLE bind_var_opt table_fields . ")"

    ")"  shift, and go to state 243


State 154

  117 table_fields: inline_import . table_sig
=======
    nat  go to state 247


State 156

  127 table: "(" TABLE bind_var_opt table_fields . ")"

    ")"  shift, and go to state 248


State 157

  129 table_fields: inline_import . table_sig
>>>>>>> master

    NAT  shift, and go to state 55

<<<<<<< HEAD
    table_sig  go to state 244
    limits     go to state 151
    nat        go to state 152


State 155

  118 table_fields: inline_export . table_fields

    "("      shift, and go to state 147
    NAT      shift, and go to state 55
    ANYFUNC  shift, and go to state 148

    elem_type      go to state 149
    table_sig      go to state 150
    limits         go to state 151
    nat            go to state 152
    table_fields   go to state 245
    inline_import  go to state 154
    inline_export  go to state 155


State 156
=======
    table_sig  go to state 249
    limits     go to state 154
    nat        go to state 155


State 158

  130 table_fields: inline_export . table_fields

    "("      shift, and go to state 150
    NAT      shift, and go to state 53
    ANYFUNC  shift, and go to state 151

    elem_type      go to state 152
    table_sig      go to state 153
    limits         go to state 154
    nat            go to state 155
    table_fields   go to state 250
    inline_import  go to state 157
    inline_export  go to state 158


State 159
>>>>>>> master

   81 expr1: BLOCK . labeling_opt block

    VAR  shift, and go to state 52

    $default  reduce using rule 32 (labeling_opt)

<<<<<<< HEAD
    bind_var      go to state 196
    labeling_opt  go to state 246


State 157
=======
    bind_var      go to state 198
    labeling_opt  go to state 251


State 160
>>>>>>> master

   83 expr1: IF . labeling_opt if_block

    VAR  shift, and go to state 52

    $default  reduce using rule 32 (labeling_opt)

<<<<<<< HEAD
    bind_var      go to state 196
    labeling_opt  go to state 247


State 158
=======
    bind_var      go to state 198
    labeling_opt  go to state 252


State 161
>>>>>>> master

   82 expr1: LOOP . labeling_opt block

    VAR  shift, and go to state 52

    $default  reduce using rule 32 (labeling_opt)

<<<<<<< HEAD
    bind_var      go to state 196
    labeling_opt  go to state 248


State 159

  111 offset: "(" OFFSET . const_expr ")"

    "("             shift, and go to state 219
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    bind_var      go to state 198
    labeling_opt  go to state 253


State 162

  123 offset: "(" OFFSET . const_expr ")"

    "("             shift, and go to state 221
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    expr         go to state 124
    instr_list   go to state 231
    const_expr   go to state 249


State 160
=======
    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 236
    const_expr     go to state 254


State 163
>>>>>>> master

   80 expr1: plain_instr . expr_list

<<<<<<< HEAD
    "("  shift, and go to state 219
=======
    "("  shift, and go to state 221
>>>>>>> master

    $default  reduce using rule 100 (expr_list)

<<<<<<< HEAD
    expr       go to state 250
    expr_list  go to state 251


State 161
=======
    expr       go to state 255
    expr_list  go to state 256


State 164
>>>>>>> master

   79 expr: "(" expr1 . ")"

<<<<<<< HEAD
    ")"  shift, and go to state 252


State 162

  113 elem: "(" ELEM var offset . var_list ")"

    $default  reduce using rule 27 (var_list)

    var_list  go to state 253


State 163

   28 var_list: var_list . var
  114 elem: "(" ELEM offset var_list . ")"

    ")"  shift, and go to state 254
    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

    nat  go to state 57
    var  go to state 255


State 164

  126 memory_fields: "(" . DATA text_list_opt ")"
  137 inline_import: "(" . IMPORT quoted_text quoted_text ")"
  143 inline_export: "(" . EXPORT quoted_text ")"

    DATA    shift, and go to state 256
    IMPORT  shift, and go to state 194
    EXPORT  shift, and go to state 195


State 165

  123 memory_fields: memory_sig .

    $default  reduce using rule 123 (memory_fields)


State 166
=======
    ")"  shift, and go to state 257


State 165

   84 expr1: try_check . "(" BLOCK labeling_opt block ")" catch_list

    "("  shift, and go to state 258


State 166

  125 elem: "(" ELEM var offset . var_list ")"

    $default  reduce using rule 27 (var_list)

    var_list  go to state 259


State 167

   28 var_list: var_list . var
  126 elem: "(" ELEM offset var_list . ")"

    ")"  shift, and go to state 260
    NAT  shift, and go to state 53
    VAR  shift, and go to state 54

    nat  go to state 55
    var  go to state 261


State 168

  138 memory_fields: "(" . DATA text_list_opt ")"
  149 inline_import: "(" . IMPORT quoted_text quoted_text ")"
  155 inline_export: "(" . EXPORT quoted_text ")"

    DATA    shift, and go to state 262
    IMPORT  shift, and go to state 196
    EXPORT  shift, and go to state 197


State 169

  135 memory_fields: memory_sig .

    $default  reduce using rule 135 (memory_fields)


State 170
>>>>>>> master

   17 memory_sig: limits .

    $default  reduce using rule 17 (memory_sig)


<<<<<<< HEAD
State 167

  122 memory: "(" MEMORY bind_var_opt memory_fields . ")"

    ")"  shift, and go to state 257


State 168

  124 memory_fields: inline_import . memory_sig
=======
State 171

  134 memory: "(" MEMORY bind_var_opt memory_fields . ")"

    ")"  shift, and go to state 263


State 172

  136 memory_fields: inline_import . memory_sig
>>>>>>> master

    NAT  shift, and go to state 55

<<<<<<< HEAD
    memory_sig  go to state 258
    limits      go to state 166
    nat         go to state 152


State 169

  125 memory_fields: inline_export . memory_fields

    "("  shift, and go to state 164
    NAT  shift, and go to state 55

    memory_sig     go to state 165
    limits         go to state 166
    nat            go to state 152
    memory_fields  go to state 259
    inline_import  go to state 168
    inline_export  go to state 169


State 170

  120 data: "(" DATA var offset . text_list_opt ")"

    TEXT  shift, and go to state 143

    $default  reduce using rule 3 (text_list_opt)

    text_list      go to state 171
    text_list_opt  go to state 260


State 171
=======
    memory_sig  go to state 264
    limits      go to state 170
    nat         go to state 155


State 173

  137 memory_fields: inline_export . memory_fields

    "("  shift, and go to state 168
    NAT  shift, and go to state 53

    memory_sig     go to state 169
    limits         go to state 170
    nat            go to state 155
    memory_fields  go to state 265
    inline_import  go to state 172
    inline_export  go to state 173


State 174

  132 data: "(" DATA var offset . text_list_opt ")"

    TEXT  shift, and go to state 146

    $default  reduce using rule 3 (text_list_opt)

    text_list      go to state 175
    text_list_opt  go to state 266


State 175
>>>>>>> master

    2 text_list: text_list . TEXT
    4 text_list_opt: text_list .

<<<<<<< HEAD
    TEXT  shift, and go to state 238
=======
    TEXT  shift, and go to state 243
>>>>>>> master

    $default  reduce using rule 4 (text_list_opt)


<<<<<<< HEAD
State 172

  121 data: "(" DATA offset text_list_opt . ")"

    ")"  shift, and go to state 261
=======
State 176

  133 data: "(" DATA offset text_list_opt . ")"

    ")"  shift, and go to state 267


State 177

  148 import: "(" IMPORT quoted_text quoted_text . import_desc ")"

    "("  shift, and go to state 268

    import_desc  go to state 269


State 178

  150 export_desc: "(" . FUNC var ")"
  151            | "(" . TABLE var ")"
  152            | "(" . MEMORY var ")"
  153            | "(" . GLOBAL var ")"

    FUNC    shift, and go to state 270
    GLOBAL  shift, and go to state 271
    TABLE   shift, and go to state 272
    MEMORY  shift, and go to state 273


State 179

  154 export: "(" EXPORT quoted_text export_desc . ")"

    ")"  shift, and go to state 274
>>>>>>> master


State 180

<<<<<<< HEAD
  136 import: "(" IMPORT quoted_text quoted_text . import_desc ")"

    "("  shift, and go to state 262
=======
  193 cmd: "(" REGISTER quoted_text script_var_opt . ")"

    ")"  shift, and go to state 275
>>>>>>> master

    import_desc  go to state 263

<<<<<<< HEAD

State 174

  138 export_desc: "(" . FUNC var ")"
  139            | "(" . TABLE var ")"
  140            | "(" . MEMORY var ")"
  141            | "(" . GLOBAL var ")"

    FUNC    shift, and go to state 264
    GLOBAL  shift, and go to state 265
    TABLE   shift, and go to state 266
    MEMORY  shift, and go to state 267
=======
State 181

  179 action: "(" INVOKE script_var_opt quoted_text . const_list ")"

    $default  reduce using rule 197 (const_list)

    const_list  go to state 276
>>>>>>> master


State 182

<<<<<<< HEAD
  142 export: "(" EXPORT quoted_text export_desc . ")"

    ")"  shift, and go to state 268
=======
  180 action: "(" GET script_var_opt quoted_text . ")"

    ")"  shift, and go to state 277
>>>>>>> master


State 183

<<<<<<< HEAD
   90 except: "(" EXCEPT value_type_list ")" .

    $default  reduce using rule 90 (except)
=======
  181 assertion: "(" ASSERT_MALFORMED raw_module quoted_text . ")"

    ")"  shift, and go to state 278
>>>>>>> master


State 184

<<<<<<< HEAD
    7 value_type_list: value_type_list VALUE_TYPE .

    $default  reduce using rule 7 (value_type_list)
=======
  182 assertion: "(" ASSERT_INVALID raw_module quoted_text . ")"

    ")"  shift, and go to state 279
>>>>>>> master


State 185

<<<<<<< HEAD
  182 cmd: "(" REGISTER quoted_text script_var_opt . ")"
=======
  183 assertion: "(" ASSERT_UNLINKABLE raw_module quoted_text . ")"
>>>>>>> master

    ")"  shift, and go to state 280


State 186

<<<<<<< HEAD
  168 action: "(" INVOKE script_var_opt quoted_text . const_list ")"

    $default  reduce using rule 186 (const_list)

    const_list  go to state 270
=======
  185 assertion: "(" ASSERT_RETURN action const_list . ")"
  198 const_list: const_list . const

    "("  shift, and go to state 281
    ")"  shift, and go to state 282

    const  go to state 283
>>>>>>> master


State 187

<<<<<<< HEAD
  169 action: "(" GET script_var_opt quoted_text . ")"

    ")"  shift, and go to state 271
=======
  186 assertion: "(" ASSERT_RETURN_CANONICAL_NAN action ")" .

    $default  reduce using rule 186 (assertion)
>>>>>>> master


State 188

<<<<<<< HEAD
  170 assertion: "(" ASSERT_MALFORMED raw_module quoted_text . ")"

    ")"  shift, and go to state 272
=======
  187 assertion: "(" ASSERT_RETURN_ARITHMETIC_NAN action ")" .

    $default  reduce using rule 187 (assertion)
>>>>>>> master


State 189

<<<<<<< HEAD
  171 assertion: "(" ASSERT_INVALID raw_module quoted_text . ")"
=======
  184 assertion: "(" ASSERT_TRAP raw_module quoted_text . ")"
>>>>>>> master

    ")"  shift, and go to state 284


State 190

<<<<<<< HEAD
  172 assertion: "(" ASSERT_UNLINKABLE raw_module quoted_text . ")"
=======
  188 assertion: "(" ASSERT_TRAP action quoted_text . ")"
>>>>>>> master

    ")"  shift, and go to state 285


State 191

<<<<<<< HEAD
  174 assertion: "(" ASSERT_RETURN action const_list . ")"
  187 const_list: const_list . const

    "("  shift, and go to state 275
    ")"  shift, and go to state 276

    const  go to state 277
=======
  189 assertion: "(" ASSERT_EXHAUSTION action quoted_text . ")"

    ")"  shift, and go to state 286
>>>>>>> master


State 192

  175 assertion: "(" ASSERT_RETURN_CANONICAL_NAN action ")" .

    $default  reduce using rule 175 (assertion)


State 186

  176 assertion: "(" ASSERT_RETURN_ARITHMETIC_NAN action ")" .

    $default  reduce using rule 176 (assertion)


State 187

  173 assertion: "(" ASSERT_TRAP raw_module quoted_text . ")"

    ")"  shift, and go to state 278


State 188

  177 assertion: "(" ASSERT_TRAP action quoted_text . ")"

    ")"  shift, and go to state 279


State 189

  178 assertion: "(" ASSERT_EXHAUSTION action quoted_text . ")"

    ")"  shift, and go to state 280


State 190

   20 type_use: "(" TYPE . var ")"

    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

<<<<<<< HEAD
    nat  go to state 57
    var  go to state 281


State 191

  105 func_fields_body1: "(" PARAM . value_type_list ")" func_fields_body1
  106                  | "(" PARAM . bind_var VALUE_TYPE ")" func_fields_body1
=======
    nat  go to state 55
    var  go to state 287


State 193

  117 func_fields_body1: "(" PARAM . value_type_list ")" func_fields_body1
  118                  | "(" PARAM . bind_var VALUE_TYPE ")" func_fields_body1
>>>>>>> master

    VAR  shift, and go to state 52

    $default  reduce using rule 6 (value_type_list)

<<<<<<< HEAD
    value_type_list  go to state 282
    bind_var         go to state 283


State 192

  104 func_fields_body1: "(" RESULT . value_type_list ")" func_body

    $default  reduce using rule 6 (value_type_list)

    value_type_list  go to state 284


State 193

  109 func_body1: "(" LOCAL . value_type_list ")" func_body1
  110           | "(" LOCAL . bind_var VALUE_TYPE ")" func_body1
=======
    value_type_list  go to state 288
    bind_var         go to state 289


State 194

  116 func_fields_body1: "(" RESULT . value_type_list ")" func_body

    $default  reduce using rule 6 (value_type_list)

    value_type_list  go to state 290


State 195

  121 func_body1: "(" LOCAL . value_type_list ")" func_body1
  122           | "(" LOCAL . bind_var VALUE_TYPE ")" func_body1
>>>>>>> master

    VAR  shift, and go to state 52

    $default  reduce using rule 6 (value_type_list)

<<<<<<< HEAD
    value_type_list  go to state 285
    bind_var         go to state 286


State 194

  137 inline_import: "(" IMPORT . quoted_text quoted_text ")"
=======
    value_type_list  go to state 291
    bind_var         go to state 292


State 196

  149 inline_import: "(" IMPORT . quoted_text quoted_text ")"
>>>>>>> master

    TEXT  shift, and go to state 72

<<<<<<< HEAD
    quoted_text  go to state 287


State 195

  143 inline_export: "(" EXPORT . quoted_text ")"
=======
    quoted_text  go to state 293


State 197

  155 inline_export: "(" EXPORT . quoted_text ")"
>>>>>>> master

    TEXT  shift, and go to state 72

<<<<<<< HEAD
    quoted_text  go to state 288


State 196
=======
    quoted_text  go to state 294


State 198
>>>>>>> master

   33 labeling_opt: bind_var .

    $default  reduce using rule 33 (labeling_opt)


<<<<<<< HEAD
State 197
=======
State 199
>>>>>>> master

   67 block_instr: BLOCK labeling_opt . block END labeling_opt

<<<<<<< HEAD
    "("             shift, and go to state 289
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    "("             shift, and go to state 295
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    block_sig    go to state 290
    block        go to state 291
    expr         go to state 124
    instr_list   go to state 292


State 198
=======
    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    block_sig      go to state 296
    block          go to state 297
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 298


State 200
>>>>>>> master

   69 block_instr: IF labeling_opt . block END labeling_opt
   70            | IF labeling_opt . block ELSE labeling_opt instr_list END labeling_opt

<<<<<<< HEAD
    "("             shift, and go to state 289
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    "("             shift, and go to state 295
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    block_sig    go to state 290
    block        go to state 293
    expr         go to state 124
    instr_list   go to state 292


State 199
=======
    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    block_sig      go to state 296
    block          go to state 299
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 298


State 201
>>>>>>> master

   68 block_instr: LOOP labeling_opt . block END labeling_opt

<<<<<<< HEAD
    "("             shift, and go to state 289
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    "("             shift, and go to state 295
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    block_sig    go to state 290
    block        go to state 294
    expr         go to state 124
    instr_list   go to state 292


State 200
=======
    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    block_sig      go to state 296
    block          go to state 300
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 298


State 202
>>>>>>> master

   45 plain_instr: BR var .

    $default  reduce using rule 45 (plain_instr)


<<<<<<< HEAD
State 201
=======
State 203
>>>>>>> master

   46 plain_instr: BR_IF var .

    $default  reduce using rule 46 (plain_instr)


<<<<<<< HEAD
State 202
=======
State 204
>>>>>>> master

   28 var_list: var_list . var
   47 plain_instr: BR_TABLE var_list . var

    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

<<<<<<< HEAD
    nat  go to state 57
    var  go to state 295


State 203
=======
    nat  go to state 55
    var  go to state 301


State 205
>>>>>>> master

   49 plain_instr: CALL var .

    $default  reduce using rule 49 (plain_instr)


<<<<<<< HEAD
State 204
=======
State 206
>>>>>>> master

   50 plain_instr: CALL_INDIRECT var .

    $default  reduce using rule 50 (plain_instr)


<<<<<<< HEAD
State 205
=======
State 207
>>>>>>> master

   51 plain_instr: GET_LOCAL var .

    $default  reduce using rule 51 (plain_instr)


<<<<<<< HEAD
State 206
=======
State 208
>>>>>>> master

   52 plain_instr: SET_LOCAL var .

    $default  reduce using rule 52 (plain_instr)


<<<<<<< HEAD
State 207
=======
State 209
>>>>>>> master

   53 plain_instr: TEE_LOCAL var .

    $default  reduce using rule 53 (plain_instr)


<<<<<<< HEAD
State 208
=======
State 210
>>>>>>> master

   54 plain_instr: GET_GLOBAL var .

    $default  reduce using rule 54 (plain_instr)


<<<<<<< HEAD
State 209
=======
State 211
>>>>>>> master

   55 plain_instr: SET_GLOBAL var .

    $default  reduce using rule 55 (plain_instr)


<<<<<<< HEAD
State 210
=======
State 212
>>>>>>> master

   35 offset_opt: OFFSET_EQ_NAT .

    $default  reduce using rule 35 (offset_opt)


<<<<<<< HEAD
State 211

   56 plain_instr: LOAD offset_opt . align_opt

    ALIGN_EQ_NAT  shift, and go to state 296

    $default  reduce using rule 36 (align_opt)

    align_opt  go to state 297


State 212

   57 plain_instr: STORE offset_opt . align_opt

    ALIGN_EQ_NAT  shift, and go to state 296

    $default  reduce using rule 36 (align_opt)

    align_opt  go to state 298


State 213
=======
State 213

   56 plain_instr: LOAD offset_opt . align_opt

    ALIGN_EQ_NAT  shift, and go to state 302

    $default  reduce using rule 36 (align_opt)

    align_opt  go to state 303


State 214

   57 plain_instr: STORE offset_opt . align_opt

    ALIGN_EQ_NAT  shift, and go to state 302

    $default  reduce using rule 36 (align_opt)

    align_opt  go to state 304


State 215
>>>>>>> master

   22 literal: NAT .

    $default  reduce using rule 22 (literal)


<<<<<<< HEAD
State 214
=======
State 216
>>>>>>> master

   23 literal: INT .

    $default  reduce using rule 23 (literal)


<<<<<<< HEAD
State 215
=======
State 217
>>>>>>> master

   24 literal: FLOAT .

    $default  reduce using rule 24 (literal)


<<<<<<< HEAD
State 216
=======
State 218
>>>>>>> master

   58 plain_instr: CONST literal .

    $default  reduce using rule 58 (plain_instr)


<<<<<<< HEAD
State 217

   72 expr: "(" . expr1 ")"
  104 func_fields_body1: "(" . RESULT value_type_list ")" func_body
  105                  | "(" . PARAM value_type_list ")" func_fields_body1
  106                  | "(" . PARAM bind_var VALUE_TYPE ")" func_fields_body1
  109 func_body1: "(" . LOCAL value_type_list ")" func_body1
  110           | "(" . LOCAL bind_var VALUE_TYPE ")" func_body1

    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 156
    IF              shift, and go to state 157
    LOOP            shift, and go to state 158
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
State 219

   79 expr: "(" . expr1 ")"
  116 func_fields_body1: "(" . RESULT value_type_list ")" func_body
  117                  | "(" . PARAM value_type_list ")" func_fields_body1
  118                  | "(" . PARAM bind_var VALUE_TYPE ")" func_fields_body1
  121 func_body1: "(" . LOCAL value_type_list ")" func_body1
  122           | "(" . LOCAL bind_var VALUE_TYPE ")" func_body1

    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 159
    IF              shift, and go to state 160
    LOOP            shift, and go to state 161
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119
<<<<<<< HEAD
    PARAM           shift, and go to state 191
    RESULT          shift, and go to state 192
    LOCAL           shift, and go to state 193

    plain_instr  go to state 160
    expr1        go to state 161


State 218

   92 func_fields: type_use func_fields_body .

    $default  reduce using rule 92 (func_fields)


State 219
=======
    PARAM           shift, and go to state 193
    RESULT          shift, and go to state 194
    LOCAL           shift, and go to state 195

    plain_instr    go to state 163
    expr1          go to state 164
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 165


State 220

  104 func_fields: type_use func_fields_body .

    $default  reduce using rule 104 (func_fields)


State 221
>>>>>>> master

   79 expr: "(" . expr1 ")"

<<<<<<< HEAD
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 156
    IF              shift, and go to state 157
    LOOP            shift, and go to state 158
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 159
    IF              shift, and go to state 160
    LOOP            shift, and go to state 161
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    plain_instr  go to state 160
    expr1        go to state 161


State 220
=======
    plain_instr    go to state 163
    expr1          go to state 164
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 165


State 222
>>>>>>> master

   99 instr_list: instr instr_list .

    $default  reduce using rule 99 (instr_list)


<<<<<<< HEAD
State 221

   91 func: "(" FUNC bind_var_opt func_fields ")" .

    $default  reduce using rule 91 (func)


State 222

   20 type_use: "(" . TYPE var ")"
   99 func_fields_import1: "(" . RESULT value_type_list ")"
  100                    | "(" . PARAM value_type_list ")" func_fields_import1
  101                    | "(" . PARAM bind_var VALUE_TYPE ")" func_fields_import1

    TYPE    shift, and go to state 190
    PARAM   shift, and go to state 299
    RESULT  shift, and go to state 300


State 223

   94 func_fields: inline_import type_use . func_fields_import

    "("  shift, and go to state 301

    $default  reduce using rule 98 (func_fields_import1)

    func_fields_import   go to state 302
    func_fields_import1  go to state 225


State 224

   95 func_fields: inline_import func_fields_import .

    $default  reduce using rule 95 (func_fields)


State 225

   97 func_fields_import: func_fields_import1 .

    $default  reduce using rule 97 (func_fields_import)


State 226

   96 func_fields: inline_export func_fields .

    $default  reduce using rule 96 (func_fields)


State 227
=======
State 223

   66 plain_instr: rethrow_check var .

    $default  reduce using rule 66 (plain_instr)


State 224

   65 plain_instr: throw_check var .

    $default  reduce using rule 65 (plain_instr)


State 225

   71 block_instr: try_check labeling_opt . block catch_instr_list END labeling_opt

    "("             shift, and go to state 295
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    block_sig      go to state 296
    block          go to state 305
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 298


State 226

  103 func: "(" FUNC bind_var_opt func_fields ")" .

    $default  reduce using rule 103 (func)


State 227

   20 type_use: "(" . TYPE var ")"
  111 func_fields_import1: "(" . RESULT value_type_list ")"
  112                    | "(" . PARAM value_type_list ")" func_fields_import1
  113                    | "(" . PARAM bind_var VALUE_TYPE ")" func_fields_import1

    TYPE    shift, and go to state 192
    PARAM   shift, and go to state 306
    RESULT  shift, and go to state 307


State 228

  106 func_fields: inline_import type_use . func_fields_import

    "("  shift, and go to state 308

    $default  reduce using rule 110 (func_fields_import1)

    func_fields_import   go to state 309
    func_fields_import1  go to state 230


State 229

  107 func_fields: inline_import func_fields_import .

    $default  reduce using rule 107 (func_fields)


State 230

  109 func_fields_import: func_fields_import1 .

    $default  reduce using rule 109 (func_fields_import)


State 231

  108 func_fields: inline_export func_fields .

    $default  reduce using rule 108 (func_fields)


State 232
>>>>>>> master

   13 func_sig: "(" . PARAM value_type_list ")"
   14         | "(" . PARAM value_type_list ")" "(" RESULT value_type_list ")"
   15         | "(" . RESULT value_type_list ")"

<<<<<<< HEAD
    PARAM   shift, and go to state 303
    RESULT  shift, and go to state 304


State 228

   11 func_type: "(" FUNC func_sig . ")"

    ")"  shift, and go to state 305


State 229

  145 type_def: "(" TYPE bind_var func_type ")" .

    $default  reduce using rule 145 (type_def)


State 230

   10 global_type: "(" MUT . VALUE_TYPE ")"

    VALUE_TYPE  shift, and go to state 306


State 231
=======
    PARAM   shift, and go to state 310
    RESULT  shift, and go to state 311


State 233

   11 func_type: "(" FUNC func_sig . ")"

    ")"  shift, and go to state 312


State 234

  157 type_def: "(" TYPE bind_var func_type ")" .

    $default  reduce using rule 157 (type_def)


State 235

   10 global_type: "(" MUT . VALUE_TYPE ")"

    VALUE_TYPE  shift, and go to state 313


State 236
>>>>>>> master

  102 const_expr: instr_list .

    $default  reduce using rule 102 (const_expr)


<<<<<<< HEAD
State 232

  128 global_fields: global_type const_expr .

    $default  reduce using rule 128 (global_fields)


State 233

  127 global: "(" GLOBAL bind_var_opt global_fields ")" .

    $default  reduce using rule 127 (global)


State 234

   10 global_type: "(" . MUT VALUE_TYPE ")"

    MUT  shift, and go to state 230


State 235

  129 global_fields: inline_import global_type .

    $default  reduce using rule 129 (global_fields)


State 236

  130 global_fields: inline_export global_fields .

    $default  reduce using rule 130 (global_fields)


State 237

  163 raw_module: "(" MODULE bind_var_opt text_list ")" .

    $default  reduce using rule 163 (raw_module)


State 238
=======
State 237

  140 global_fields: global_type const_expr .

    $default  reduce using rule 140 (global_fields)


State 238

  139 global: "(" GLOBAL bind_var_opt global_fields ")" .

    $default  reduce using rule 139 (global)


State 239

   10 global_type: "(" . MUT VALUE_TYPE ")"

    MUT  shift, and go to state 235


State 240

  141 global_fields: inline_import global_type .

    $default  reduce using rule 141 (global_fields)


State 241

  142 global_fields: inline_export global_fields .

    $default  reduce using rule 142 (global_fields)


State 242

  174 raw_module: "(" MODULE bind_var_opt text_list ")" .

    $default  reduce using rule 174 (raw_module)


State 243
>>>>>>> master

    2 text_list: text_list TEXT .

    $default  reduce using rule 2 (text_list)


<<<<<<< HEAD
State 239

  162 raw_module: "(" MODULE bind_var_opt module_fields_opt ")" .

    $default  reduce using rule 162 (raw_module)


State 240

  119 table_fields: elem_type "(" . ELEM var_list ")"

    ELEM  shift, and go to state 307


State 241
=======
State 244

  173 raw_module: "(" MODULE bind_var_opt module_fields_opt ")" .

    $default  reduce using rule 173 (raw_module)


State 245

  131 table_fields: elem_type "(" . ELEM var_list ")"

    ELEM  shift, and go to state 314


State 246
>>>>>>> master

   16 table_sig: limits elem_type .

    $default  reduce using rule 16 (table_sig)


<<<<<<< HEAD
State 242
=======
State 247
>>>>>>> master

   19 limits: nat nat .

    $default  reduce using rule 19 (limits)


<<<<<<< HEAD
State 243

  115 table: "(" TABLE bind_var_opt table_fields ")" .

    $default  reduce using rule 115 (table)


State 244

  117 table_fields: inline_import table_sig .

    $default  reduce using rule 117 (table_fields)


State 245

  118 table_fields: inline_export table_fields .

    $default  reduce using rule 118 (table_fields)


State 246
=======
State 248

  127 table: "(" TABLE bind_var_opt table_fields ")" .

    $default  reduce using rule 127 (table)


State 249

  129 table_fields: inline_import table_sig .

    $default  reduce using rule 129 (table_fields)


State 250

  130 table_fields: inline_export table_fields .

    $default  reduce using rule 130 (table_fields)


State 251
>>>>>>> master

   81 expr1: BLOCK labeling_opt . block

<<<<<<< HEAD
    "("             shift, and go to state 289
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    "("             shift, and go to state 295
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    block_sig    go to state 290
    block        go to state 308
    expr         go to state 124
    instr_list   go to state 292


State 247
=======
    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    block_sig      go to state 296
    block          go to state 315
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 298


State 252
>>>>>>> master

   83 expr1: IF labeling_opt . if_block

<<<<<<< HEAD
    "("  shift, and go to state 309

    block_sig  go to state 310
    expr       go to state 311
    if_block   go to state 312
    if_        go to state 313


State 248
=======
    "("  shift, and go to state 316

    block_sig  go to state 317
    expr       go to state 318
    if_block   go to state 319
    if_        go to state 320


State 253
>>>>>>> master

   82 expr1: LOOP labeling_opt . block

<<<<<<< HEAD
    "("             shift, and go to state 289
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    "("             shift, and go to state 295
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    block_sig    go to state 290
    block        go to state 314
    expr         go to state 124
    instr_list   go to state 292


State 249

  111 offset: "(" OFFSET const_expr . ")"

    ")"  shift, and go to state 315


State 250
=======
    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    block_sig      go to state 296
    block          go to state 321
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 298


State 254

  123 offset: "(" OFFSET const_expr . ")"

    ")"  shift, and go to state 322


State 255
>>>>>>> master

  101 expr_list: expr . expr_list

<<<<<<< HEAD
    "("  shift, and go to state 219
=======
    "("  shift, and go to state 221
>>>>>>> master

    $default  reduce using rule 100 (expr_list)

<<<<<<< HEAD
    expr       go to state 250
    expr_list  go to state 316


State 251
=======
    expr       go to state 255
    expr_list  go to state 323


State 256
>>>>>>> master

   80 expr1: plain_instr expr_list .

    $default  reduce using rule 80 (expr1)


<<<<<<< HEAD
State 252
=======
State 257
>>>>>>> master

   79 expr: "(" expr1 ")" .

    $default  reduce using rule 79 (expr)


<<<<<<< HEAD
State 253

   28 var_list: var_list . var
  113 elem: "(" ELEM var offset var_list . ")"

    ")"  shift, and go to state 317
    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

    nat  go to state 57
    var  go to state 255


State 254

  114 elem: "(" ELEM offset var_list ")" .

    $default  reduce using rule 114 (elem)


State 255
=======
State 258

   84 expr1: try_check "(" . BLOCK labeling_opt block ")" catch_list

    BLOCK  shift, and go to state 324


State 259

   28 var_list: var_list . var
  125 elem: "(" ELEM var offset var_list . ")"

    ")"  shift, and go to state 325
    NAT  shift, and go to state 53
    VAR  shift, and go to state 54

    nat  go to state 55
    var  go to state 261


State 260

  126 elem: "(" ELEM offset var_list ")" .

    $default  reduce using rule 126 (elem)


State 261
>>>>>>> master

   28 var_list: var_list var .

    $default  reduce using rule 28 (var_list)


<<<<<<< HEAD
State 256

  126 memory_fields: "(" DATA . text_list_opt ")"

    TEXT  shift, and go to state 143

    $default  reduce using rule 3 (text_list_opt)

    text_list      go to state 171
    text_list_opt  go to state 318
=======
State 262

  138 memory_fields: "(" DATA . text_list_opt ")"

    TEXT  shift, and go to state 146

    $default  reduce using rule 3 (text_list_opt)

    text_list      go to state 175
    text_list_opt  go to state 326


State 263

  134 memory: "(" MEMORY bind_var_opt memory_fields ")" .

    $default  reduce using rule 134 (memory)


State 264

  136 memory_fields: inline_import memory_sig .

    $default  reduce using rule 136 (memory_fields)


State 265

  137 memory_fields: inline_export memory_fields .

    $default  reduce using rule 137 (memory_fields)


State 266

  132 data: "(" DATA var offset text_list_opt . ")"

    ")"  shift, and go to state 327


State 267

  133 data: "(" DATA offset text_list_opt ")" .

    $default  reduce using rule 133 (data)
>>>>>>> master


State 268

<<<<<<< HEAD
  122 memory: "(" MEMORY bind_var_opt memory_fields ")" .

    $default  reduce using rule 122 (memory)
=======
  143 import_desc: "(" . FUNC bind_var_opt type_use ")"
  144            | "(" . FUNC bind_var_opt func_sig ")"
  145            | "(" . TABLE bind_var_opt table_sig ")"
  146            | "(" . MEMORY bind_var_opt memory_sig ")"
  147            | "(" . GLOBAL bind_var_opt global_type ")"

    FUNC    shift, and go to state 328
    GLOBAL  shift, and go to state 329
    TABLE   shift, and go to state 330
    MEMORY  shift, and go to state 331
>>>>>>> master


State 269

<<<<<<< HEAD
  124 memory_fields: inline_import memory_sig .

    $default  reduce using rule 124 (memory_fields)
=======
  148 import: "(" IMPORT quoted_text quoted_text import_desc . ")"

    ")"  shift, and go to state 332
>>>>>>> master


State 270

<<<<<<< HEAD
  125 memory_fields: inline_export memory_fields .

    $default  reduce using rule 125 (memory_fields)
=======
  150 export_desc: "(" FUNC . var ")"

    NAT  shift, and go to state 53
    VAR  shift, and go to state 54

    nat  go to state 55
    var  go to state 333
>>>>>>> master


State 271

<<<<<<< HEAD
  120 data: "(" DATA var offset text_list_opt . ")"

    ")"  shift, and go to state 319
=======
  153 export_desc: "(" GLOBAL . var ")"

    NAT  shift, and go to state 53
    VAR  shift, and go to state 54

    nat  go to state 55
    var  go to state 334
>>>>>>> master


State 272

<<<<<<< HEAD
  121 data: "(" DATA offset text_list_opt ")" .

    $default  reduce using rule 121 (data)
=======
  151 export_desc: "(" TABLE . var ")"

    NAT  shift, and go to state 53
    VAR  shift, and go to state 54

    nat  go to state 55
    var  go to state 335
>>>>>>> master


State 273

<<<<<<< HEAD
  131 import_desc: "(" . FUNC bind_var_opt type_use ")"
  132            | "(" . FUNC bind_var_opt func_sig ")"
  133            | "(" . TABLE bind_var_opt table_sig ")"
  134            | "(" . MEMORY bind_var_opt memory_sig ")"
  135            | "(" . GLOBAL bind_var_opt global_type ")"

    FUNC    shift, and go to state 320
    GLOBAL  shift, and go to state 321
    TABLE   shift, and go to state 322
    MEMORY  shift, and go to state 323
=======
  152 export_desc: "(" MEMORY . var ")"

    NAT  shift, and go to state 53
    VAR  shift, and go to state 54

    nat  go to state 55
    var  go to state 336
>>>>>>> master


State 274

<<<<<<< HEAD
  136 import: "(" IMPORT quoted_text quoted_text import_desc . ")"

    ")"  shift, and go to state 324
=======
  154 export: "(" EXPORT quoted_text export_desc ")" .

    $default  reduce using rule 154 (export)
>>>>>>> master


State 275

<<<<<<< HEAD
  138 export_desc: "(" FUNC . var ")"

    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

    nat  go to state 57
    var  go to state 325
=======
  193 cmd: "(" REGISTER quoted_text script_var_opt ")" .

    $default  reduce using rule 193 (cmd)
>>>>>>> master


State 276

<<<<<<< HEAD
  141 export_desc: "(" GLOBAL . var ")"

    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

    nat  go to state 57
    var  go to state 326
=======
  179 action: "(" INVOKE script_var_opt quoted_text const_list . ")"
  198 const_list: const_list . const

    "("  shift, and go to state 281
    ")"  shift, and go to state 337

    const  go to state 283
>>>>>>> master


State 277

<<<<<<< HEAD
  139 export_desc: "(" TABLE . var ")"

    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

    nat  go to state 57
    var  go to state 327
=======
  180 action: "(" GET script_var_opt quoted_text ")" .

    $default  reduce using rule 180 (action)
>>>>>>> master


State 278

<<<<<<< HEAD
  140 export_desc: "(" MEMORY . var ")"

    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

    nat  go to state 57
    var  go to state 328
=======
  181 assertion: "(" ASSERT_MALFORMED raw_module quoted_text ")" .

    $default  reduce using rule 181 (assertion)
>>>>>>> master


State 279

<<<<<<< HEAD
  142 export: "(" EXPORT quoted_text export_desc ")" .

    $default  reduce using rule 142 (export)
=======
  182 assertion: "(" ASSERT_INVALID raw_module quoted_text ")" .

    $default  reduce using rule 182 (assertion)
>>>>>>> master


State 280

<<<<<<< HEAD
  182 cmd: "(" REGISTER quoted_text script_var_opt ")" .

    $default  reduce using rule 182 (cmd)
=======
  183 assertion: "(" ASSERT_UNLINKABLE raw_module quoted_text ")" .

    $default  reduce using rule 183 (assertion)
>>>>>>> master


State 281

<<<<<<< HEAD
  168 action: "(" INVOKE script_var_opt quoted_text const_list . ")"
  187 const_list: const_list . const

    "("  shift, and go to state 275
    ")"  shift, and go to state 329

    const  go to state 277
=======
  196 const: "(" . CONST literal ")"

    CONST  shift, and go to state 338
>>>>>>> master


State 282

<<<<<<< HEAD
  169 action: "(" GET script_var_opt quoted_text ")" .

    $default  reduce using rule 169 (action)
=======
  185 assertion: "(" ASSERT_RETURN action const_list ")" .

    $default  reduce using rule 185 (assertion)
>>>>>>> master


State 283

<<<<<<< HEAD
  170 assertion: "(" ASSERT_MALFORMED raw_module quoted_text ")" .

    $default  reduce using rule 170 (assertion)
=======
  198 const_list: const_list const .

    $default  reduce using rule 198 (const_list)
>>>>>>> master


State 284

<<<<<<< HEAD
  171 assertion: "(" ASSERT_INVALID raw_module quoted_text ")" .
=======
  184 assertion: "(" ASSERT_TRAP raw_module quoted_text ")" .
>>>>>>> master

    $default  reduce using rule 184 (assertion)


State 285

<<<<<<< HEAD
  172 assertion: "(" ASSERT_UNLINKABLE raw_module quoted_text ")" .

    $default  reduce using rule 172 (assertion)
=======
  188 assertion: "(" ASSERT_TRAP action quoted_text ")" .

    $default  reduce using rule 188 (assertion)
>>>>>>> master


State 286

<<<<<<< HEAD
  185 const: "(" . CONST literal ")"

    CONST  shift, and go to state 330
=======
  189 assertion: "(" ASSERT_EXHAUSTION action quoted_text ")" .

    $default  reduce using rule 189 (assertion)
>>>>>>> master


State 287

  174 assertion: "(" ASSERT_RETURN action const_list ")" .

<<<<<<< HEAD
    $default  reduce using rule 174 (assertion)
=======
    ")"  shift, and go to state 339
>>>>>>> master


State 288

<<<<<<< HEAD
  187 const_list: const_list const .

    $default  reduce using rule 187 (const_list)
=======
    7 value_type_list: value_type_list . VALUE_TYPE
  117 func_fields_body1: "(" PARAM value_type_list . ")" func_fields_body1

    ")"         shift, and go to state 340
    VALUE_TYPE  shift, and go to state 341
>>>>>>> master


State 289

<<<<<<< HEAD
  173 assertion: "(" ASSERT_TRAP raw_module quoted_text ")" .

    $default  reduce using rule 173 (assertion)
=======
  118 func_fields_body1: "(" PARAM bind_var . VALUE_TYPE ")" func_fields_body1

    VALUE_TYPE  shift, and go to state 342
>>>>>>> master


State 290

<<<<<<< HEAD
  177 assertion: "(" ASSERT_TRAP action quoted_text ")" .

    $default  reduce using rule 177 (assertion)
=======
    7 value_type_list: value_type_list . VALUE_TYPE
  116 func_fields_body1: "(" RESULT value_type_list . ")" func_body

    ")"         shift, and go to state 343
    VALUE_TYPE  shift, and go to state 341
>>>>>>> master


State 291

<<<<<<< HEAD
  178 assertion: "(" ASSERT_EXHAUSTION action quoted_text ")" .

    $default  reduce using rule 178 (assertion)
=======
    7 value_type_list: value_type_list . VALUE_TYPE
  121 func_body1: "(" LOCAL value_type_list . ")" func_body1

    ")"         shift, and go to state 344
    VALUE_TYPE  shift, and go to state 341
>>>>>>> master


State 292

<<<<<<< HEAD
   20 type_use: "(" TYPE var . ")"

    ")"  shift, and go to state 331
=======
  122 func_body1: "(" LOCAL bind_var . VALUE_TYPE ")" func_body1

    VALUE_TYPE  shift, and go to state 345
>>>>>>> master


State 293

<<<<<<< HEAD
    7 value_type_list: value_type_list . VALUE_TYPE
  105 func_fields_body1: "(" PARAM value_type_list . ")" func_fields_body1

    ")"         shift, and go to state 332
    VALUE_TYPE  shift, and go to state 177
=======
  149 inline_import: "(" IMPORT quoted_text . quoted_text ")"

    TEXT  shift, and go to state 70

    quoted_text  go to state 346
>>>>>>> master


State 294

<<<<<<< HEAD
  106 func_fields_body1: "(" PARAM bind_var . VALUE_TYPE ")" func_fields_body1

    VALUE_TYPE  shift, and go to state 333
=======
  155 inline_export: "(" EXPORT quoted_text . ")"

    ")"  shift, and go to state 347
>>>>>>> master


State 295

<<<<<<< HEAD
    7 value_type_list: value_type_list . VALUE_TYPE
  104 func_fields_body1: "(" RESULT value_type_list . ")" func_body

    ")"         shift, and go to state 334
    VALUE_TYPE  shift, and go to state 177


State 285

    7 value_type_list: value_type_list . VALUE_TYPE
  109 func_body1: "(" LOCAL value_type_list . ")" func_body1

    ")"         shift, and go to state 335
    VALUE_TYPE  shift, and go to state 177


State 286

  110 func_body1: "(" LOCAL bind_var . VALUE_TYPE ")" func_body1

    VALUE_TYPE  shift, and go to state 336


State 287

  137 inline_import: "(" IMPORT quoted_text . quoted_text ")"

    TEXT  shift, and go to state 72

    quoted_text  go to state 337


State 288

  143 inline_export: "(" EXPORT quoted_text . ")"

    ")"  shift, and go to state 338


State 289

   69 block_sig: "(" . RESULT value_type_list ")"
   72 expr: "(" . expr1 ")"

    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 156
    IF              shift, and go to state 157
    LOOP            shift, and go to state 158
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
   72 block_sig: "(" . RESULT value_type_list ")"
   79 expr: "(" . expr1 ")"

    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 159
    IF              shift, and go to state 160
    LOOP            shift, and go to state 161
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119
<<<<<<< HEAD
    RESULT          shift, and go to state 339

    plain_instr  go to state 160
    expr1        go to state 161


State 290
=======
    RESULT          shift, and go to state 348

    plain_instr    go to state 163
    expr1          go to state 164
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 165


State 296
>>>>>>> master

   73 block: block_sig . block

<<<<<<< HEAD
    "("             shift, and go to state 289
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    "("             shift, and go to state 295
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    block_sig    go to state 290
    block        go to state 340
    expr         go to state 124
    instr_list   go to state 292


State 291
=======
    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    block_sig      go to state 296
    block          go to state 349
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 298


State 297
>>>>>>> master

   67 block_instr: BLOCK labeling_opt block . END labeling_opt

<<<<<<< HEAD
    END  shift, and go to state 341


State 292
=======
    END  shift, and go to state 350


State 298
>>>>>>> master

   74 block: instr_list .

    $default  reduce using rule 74 (block)


<<<<<<< HEAD
State 293
=======
State 299
>>>>>>> master

   69 block_instr: IF labeling_opt block . END labeling_opt
   70            | IF labeling_opt block . ELSE labeling_opt instr_list END labeling_opt

<<<<<<< HEAD
    END   shift, and go to state 342
    ELSE  shift, and go to state 343


State 294
=======
    END   shift, and go to state 351
    ELSE  shift, and go to state 352


State 300
>>>>>>> master

   68 block_instr: LOOP labeling_opt block . END labeling_opt

<<<<<<< HEAD
    END  shift, and go to state 344


State 295
=======
    END  shift, and go to state 353


State 301
>>>>>>> master

   28 var_list: var_list var .
   47 plain_instr: BR_TABLE var_list var .

    NAT       reduce using rule 28 (var_list)
    VAR       reduce using rule 28 (var_list)
    $default  reduce using rule 47 (plain_instr)


<<<<<<< HEAD
State 296
=======
State 302
>>>>>>> master

   37 align_opt: ALIGN_EQ_NAT .

    $default  reduce using rule 37 (align_opt)


<<<<<<< HEAD
State 297
=======
State 303
>>>>>>> master

   56 plain_instr: LOAD offset_opt align_opt .

    $default  reduce using rule 56 (plain_instr)


<<<<<<< HEAD
State 298
=======
State 304
>>>>>>> master

   57 plain_instr: STORE offset_opt align_opt .

    $default  reduce using rule 57 (plain_instr)


<<<<<<< HEAD
State 299

  100 func_fields_import1: "(" PARAM . value_type_list ")" func_fields_import1
  101                    | "(" PARAM . bind_var VALUE_TYPE ")" func_fields_import1
=======
State 305

   71 block_instr: try_check labeling_opt block . catch_instr_list END labeling_opt

    CATCH      shift, and go to state 354
    CATCH_ALL  shift, and go to state 355

    catch_instr       go to state 356
    catch_instr_list  go to state 357


State 306

  112 func_fields_import1: "(" PARAM . value_type_list ")" func_fields_import1
  113                    | "(" PARAM . bind_var VALUE_TYPE ")" func_fields_import1
>>>>>>> master

    VAR  shift, and go to state 52

    $default  reduce using rule 6 (value_type_list)

<<<<<<< HEAD
    value_type_list  go to state 345
    bind_var         go to state 346


State 300

   99 func_fields_import1: "(" RESULT . value_type_list ")"

    $default  reduce using rule 6 (value_type_list)

    value_type_list  go to state 347


State 301

   99 func_fields_import1: "(" . RESULT value_type_list ")"
  100                    | "(" . PARAM value_type_list ")" func_fields_import1
  101                    | "(" . PARAM bind_var VALUE_TYPE ")" func_fields_import1

    PARAM   shift, and go to state 299
    RESULT  shift, and go to state 300


State 302

   94 func_fields: inline_import type_use func_fields_import .

    $default  reduce using rule 94 (func_fields)


State 303
=======
    value_type_list  go to state 358
    bind_var         go to state 359


State 307

  111 func_fields_import1: "(" RESULT . value_type_list ")"

    $default  reduce using rule 6 (value_type_list)

    value_type_list  go to state 360


State 308

  111 func_fields_import1: "(" . RESULT value_type_list ")"
  112                    | "(" . PARAM value_type_list ")" func_fields_import1
  113                    | "(" . PARAM bind_var VALUE_TYPE ")" func_fields_import1

    PARAM   shift, and go to state 306
    RESULT  shift, and go to state 307


State 309

  106 func_fields: inline_import type_use func_fields_import .

    $default  reduce using rule 106 (func_fields)


State 310
>>>>>>> master

   13 func_sig: "(" PARAM . value_type_list ")"
   14         | "(" PARAM . value_type_list ")" "(" RESULT value_type_list ")"

    $default  reduce using rule 6 (value_type_list)

<<<<<<< HEAD
    value_type_list  go to state 348


State 304
=======
    value_type_list  go to state 361


State 311
>>>>>>> master

   15 func_sig: "(" RESULT . value_type_list ")"

    $default  reduce using rule 6 (value_type_list)

<<<<<<< HEAD
    value_type_list  go to state 349


State 305
=======
    value_type_list  go to state 362


State 312
>>>>>>> master

   11 func_type: "(" FUNC func_sig ")" .

    $default  reduce using rule 11 (func_type)


<<<<<<< HEAD
State 306

   10 global_type: "(" MUT VALUE_TYPE . ")"

    ")"  shift, and go to state 350


State 307

  119 table_fields: elem_type "(" ELEM . var_list ")"

    $default  reduce using rule 27 (var_list)

    var_list  go to state 351


State 308
=======
State 313

   10 global_type: "(" MUT VALUE_TYPE . ")"

    ")"  shift, and go to state 363


State 314

  131 table_fields: elem_type "(" ELEM . var_list ")"

    $default  reduce using rule 27 (var_list)

    var_list  go to state 364


State 315
>>>>>>> master

   81 expr1: BLOCK labeling_opt block .

    $default  reduce using rule 81 (expr1)


<<<<<<< HEAD
State 309
=======
State 316
>>>>>>> master

   72 block_sig: "(" . RESULT value_type_list ")"
   79 expr: "(" . expr1 ")"
   89 if_: "(" . THEN instr_list ")" "(" ELSE instr_list ")"
   90    | "(" . THEN instr_list ")"

<<<<<<< HEAD
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 156
    IF              shift, and go to state 157
    THEN            shift, and go to state 352
    LOOP            shift, and go to state 158
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 159
    IF              shift, and go to state 160
    THEN            shift, and go to state 365
    LOOP            shift, and go to state 161
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119
<<<<<<< HEAD
    RESULT          shift, and go to state 339

    plain_instr  go to state 160
    expr1        go to state 161


State 310
=======
    RESULT          shift, and go to state 348

    plain_instr    go to state 163
    expr1          go to state 164
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 165


State 317
>>>>>>> master

   87 if_block: block_sig . if_block

<<<<<<< HEAD
    "("  shift, and go to state 309

    block_sig  go to state 310
    expr       go to state 311
    if_block   go to state 353
    if_        go to state 313


State 311
=======
    "("  shift, and go to state 316

    block_sig  go to state 317
    expr       go to state 318
    if_block   go to state 366
    if_        go to state 320


State 318
>>>>>>> master

   91 if_: expr . "(" THEN instr_list ")" "(" ELSE instr_list ")"
   92    | expr . "(" THEN instr_list ")"
   93    | expr . expr expr
   94    | expr . expr

<<<<<<< HEAD
    "("  shift, and go to state 354

    expr  go to state 355


State 312
=======
    "("  shift, and go to state 367

    expr  go to state 368


State 319
>>>>>>> master

   83 expr1: IF labeling_opt if_block .

    $default  reduce using rule 83 (expr1)


<<<<<<< HEAD
State 313
=======
State 320
>>>>>>> master

   88 if_block: if_ .

    $default  reduce using rule 88 (if_block)


<<<<<<< HEAD
State 314
=======
State 321
>>>>>>> master

   82 expr1: LOOP labeling_opt block .

    $default  reduce using rule 82 (expr1)


<<<<<<< HEAD
State 315

  111 offset: "(" OFFSET const_expr ")" .

    $default  reduce using rule 111 (offset)


State 316
=======
State 322

  123 offset: "(" OFFSET const_expr ")" .

    $default  reduce using rule 123 (offset)


State 323
>>>>>>> master

  101 expr_list: expr expr_list .

    $default  reduce using rule 101 (expr_list)


<<<<<<< HEAD
State 317

  113 elem: "(" ELEM var offset var_list ")" .

    $default  reduce using rule 113 (elem)
=======
State 324

   84 expr1: try_check "(" BLOCK . labeling_opt block ")" catch_list

    VAR  shift, and go to state 50
>>>>>>> master

    $default  reduce using rule 32 (labeling_opt)

<<<<<<< HEAD
State 318

  126 memory_fields: "(" DATA text_list_opt . ")"

    ")"  shift, and go to state 356
=======
    bind_var      go to state 198
    labeling_opt  go to state 369


State 325
>>>>>>> master

  125 elem: "(" ELEM var offset var_list ")" .

<<<<<<< HEAD
State 319

  120 data: "(" DATA var offset text_list_opt ")" .

    $default  reduce using rule 120 (data)
=======
    $default  reduce using rule 125 (elem)


State 326
>>>>>>> master

  138 memory_fields: "(" DATA text_list_opt . ")"

<<<<<<< HEAD
State 320

  131 import_desc: "(" FUNC . bind_var_opt type_use ")"
  132            | "(" FUNC . bind_var_opt func_sig ")"
=======
    ")"  shift, and go to state 370


State 327

  132 data: "(" DATA var offset text_list_opt ")" .

    $default  reduce using rule 132 (data)


State 328

  143 import_desc: "(" FUNC . bind_var_opt type_use ")"
  144            | "(" FUNC . bind_var_opt func_sig ")"
>>>>>>> master

    VAR  shift, and go to state 52

    $default  reduce using rule 29 (bind_var_opt)

<<<<<<< HEAD
    bind_var_opt  go to state 357
    bind_var      go to state 54


State 321

  135 import_desc: "(" GLOBAL . bind_var_opt global_type ")"
=======
    bind_var_opt  go to state 371
    bind_var      go to state 52


State 329

  147 import_desc: "(" GLOBAL . bind_var_opt global_type ")"
>>>>>>> master

    VAR  shift, and go to state 52

    $default  reduce using rule 29 (bind_var_opt)

<<<<<<< HEAD
    bind_var_opt  go to state 358
    bind_var      go to state 54


State 322

  133 import_desc: "(" TABLE . bind_var_opt table_sig ")"
=======
    bind_var_opt  go to state 372
    bind_var      go to state 52


State 330

  145 import_desc: "(" TABLE . bind_var_opt table_sig ")"
>>>>>>> master

    VAR  shift, and go to state 52

    $default  reduce using rule 29 (bind_var_opt)

<<<<<<< HEAD
    bind_var_opt  go to state 359
    bind_var      go to state 54


State 323

  134 import_desc: "(" MEMORY . bind_var_opt memory_sig ")"
=======
    bind_var_opt  go to state 373
    bind_var      go to state 52


State 331

  146 import_desc: "(" MEMORY . bind_var_opt memory_sig ")"
>>>>>>> master

    VAR  shift, and go to state 52

    $default  reduce using rule 29 (bind_var_opt)

<<<<<<< HEAD
    bind_var_opt  go to state 360
    bind_var      go to state 54


State 324

  136 import: "(" IMPORT quoted_text quoted_text import_desc ")" .

    $default  reduce using rule 136 (import)


State 325

  138 export_desc: "(" FUNC var . ")"

    ")"  shift, and go to state 361


State 326

  141 export_desc: "(" GLOBAL var . ")"

    ")"  shift, and go to state 362


State 327

  139 export_desc: "(" TABLE var . ")"

    ")"  shift, and go to state 363


State 328

  140 export_desc: "(" MEMORY var . ")"

    ")"  shift, and go to state 364


State 329

  168 action: "(" INVOKE script_var_opt quoted_text const_list ")" .

    $default  reduce using rule 168 (action)


State 330

  185 const: "(" CONST . literal ")"

    NAT    shift, and go to state 213
    INT    shift, and go to state 214
    FLOAT  shift, and go to state 215

    literal  go to state 365


State 331
=======
    bind_var_opt  go to state 374
    bind_var      go to state 52


State 332

  148 import: "(" IMPORT quoted_text quoted_text import_desc ")" .

    $default  reduce using rule 148 (import)


State 333

  150 export_desc: "(" FUNC var . ")"

    ")"  shift, and go to state 375


State 334

  153 export_desc: "(" GLOBAL var . ")"

    ")"  shift, and go to state 376


State 335

  151 export_desc: "(" TABLE var . ")"

    ")"  shift, and go to state 377


State 336

  152 export_desc: "(" MEMORY var . ")"

    ")"  shift, and go to state 378


State 337

  179 action: "(" INVOKE script_var_opt quoted_text const_list ")" .

    $default  reduce using rule 179 (action)


State 338

  196 const: "(" CONST . literal ")"

    NAT    shift, and go to state 215
    INT    shift, and go to state 216
    FLOAT  shift, and go to state 217

    literal  go to state 379


State 339
>>>>>>> master

   20 type_use: "(" TYPE var ")" .

    $default  reduce using rule 20 (type_use)


<<<<<<< HEAD
State 332

  105 func_fields_body1: "(" PARAM value_type_list ")" . func_fields_body1

    "("             shift, and go to state 217
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
State 340

  117 func_fields_body1: "(" PARAM value_type_list ")" . func_fields_body1

    "("             shift, and go to state 219
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)
=======
    $default  reduce using rule 98 (instr_list)
>>>>>>> master

    instr              go to state 121
    plain_instr        go to state 122
    block_instr        go to state 123
    expr               go to state 124
<<<<<<< HEAD
    instr_list         go to state 125
    func_fields_body1  go to state 366
    func_body          go to state 129
    func_body1         go to state 130


State 333

  106 func_fields_body1: "(" PARAM bind_var VALUE_TYPE . ")" func_fields_body1

    ")"  shift, and go to state 367


State 334

  104 func_fields_body1: "(" RESULT value_type_list ")" . func_body

    "("             shift, and go to state 368
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    rethrow_check      go to state 125
    throw_check        go to state 126
    try_check          go to state 127
    instr_list         go to state 128
    func_fields_body1  go to state 380
    func_body          go to state 132
    func_body1         go to state 133


State 341

    7 value_type_list: value_type_list VALUE_TYPE .

    $default  reduce using rule 7 (value_type_list)


State 342

  118 func_fields_body1: "(" PARAM bind_var VALUE_TYPE . ")" func_fields_body1

    ")"  shift, and go to state 381


State 343

  116 func_fields_body1: "(" RESULT value_type_list ")" . func_body

    "("             shift, and go to state 382
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    expr         go to state 124
    instr_list   go to state 125
    func_body    go to state 369
    func_body1   go to state 130


State 335

  109 func_body1: "(" LOCAL value_type_list ")" . func_body1

    "("             shift, and go to state 368
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 128
    func_body      go to state 383
    func_body1     go to state 133


State 344

  121 func_body1: "(" LOCAL value_type_list ")" . func_body1

    "("             shift, and go to state 382
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    expr         go to state 124
    instr_list   go to state 125
    func_body1   go to state 370


State 336

  110 func_body1: "(" LOCAL bind_var VALUE_TYPE . ")" func_body1

    ")"  shift, and go to state 371


State 337

  137 inline_import: "(" IMPORT quoted_text quoted_text . ")"

    ")"  shift, and go to state 372


State 338

  143 inline_export: "(" EXPORT quoted_text ")" .

    $default  reduce using rule 143 (inline_export)


State 339
=======
    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 128
    func_body1     go to state 384


State 345

  122 func_body1: "(" LOCAL bind_var VALUE_TYPE . ")" func_body1

    ")"  shift, and go to state 385


State 346

  149 inline_import: "(" IMPORT quoted_text quoted_text . ")"

    ")"  shift, and go to state 386


State 347

  155 inline_export: "(" EXPORT quoted_text ")" .

    $default  reduce using rule 155 (inline_export)


State 348
>>>>>>> master

   72 block_sig: "(" RESULT . value_type_list ")"

    $default  reduce using rule 6 (value_type_list)

<<<<<<< HEAD
    value_type_list  go to state 373


State 340
=======
    value_type_list  go to state 387


State 349
>>>>>>> master

   73 block: block_sig block .

    $default  reduce using rule 73 (block)


<<<<<<< HEAD
State 341
=======
State 350
>>>>>>> master

   67 block_instr: BLOCK labeling_opt block END . labeling_opt

    VAR  shift, and go to state 52

    $default  reduce using rule 32 (labeling_opt)

<<<<<<< HEAD
    bind_var      go to state 196
    labeling_opt  go to state 374


State 342
=======
    bind_var      go to state 198
    labeling_opt  go to state 388


State 351
>>>>>>> master

   69 block_instr: IF labeling_opt block END . labeling_opt

    VAR  shift, and go to state 52

    $default  reduce using rule 32 (labeling_opt)

<<<<<<< HEAD
    bind_var      go to state 196
    labeling_opt  go to state 375


State 343
=======
    bind_var      go to state 198
    labeling_opt  go to state 389


State 352
>>>>>>> master

   70 block_instr: IF labeling_opt block ELSE . labeling_opt instr_list END labeling_opt

    VAR  shift, and go to state 52

    $default  reduce using rule 32 (labeling_opt)

<<<<<<< HEAD
    bind_var      go to state 196
    labeling_opt  go to state 376


State 344
=======
    bind_var      go to state 198
    labeling_opt  go to state 390


State 353
>>>>>>> master

   68 block_instr: LOOP labeling_opt block END . labeling_opt

    VAR  shift, and go to state 52

    $default  reduce using rule 32 (labeling_opt)

<<<<<<< HEAD
    bind_var      go to state 196
    labeling_opt  go to state 377


State 345

    7 value_type_list: value_type_list . VALUE_TYPE
  100 func_fields_import1: "(" PARAM value_type_list . ")" func_fields_import1

    ")"         shift, and go to state 378
    VALUE_TYPE  shift, and go to state 177


State 346

  101 func_fields_import1: "(" PARAM bind_var . VALUE_TYPE ")" func_fields_import1

    VALUE_TYPE  shift, and go to state 379


State 347

    7 value_type_list: value_type_list . VALUE_TYPE
   99 func_fields_import1: "(" RESULT value_type_list . ")"

    ")"         shift, and go to state 380
    VALUE_TYPE  shift, and go to state 177


State 348
=======
    bind_var      go to state 198
    labeling_opt  go to state 391


State 354

   75 catch_instr: CATCH . var instr_list

    NAT  shift, and go to state 53
    VAR  shift, and go to state 54

    nat  go to state 55
    var  go to state 392


State 355

   76 catch_instr: CATCH_ALL . var instr_list

    NAT  shift, and go to state 53
    VAR  shift, and go to state 54

    nat  go to state 55
    var  go to state 393


State 356

   77 catch_instr_list: catch_instr .
   78                 | catch_instr . catch_instr_list

    CATCH      shift, and go to state 354
    CATCH_ALL  shift, and go to state 355

    $default  reduce using rule 77 (catch_instr_list)

    catch_instr       go to state 356
    catch_instr_list  go to state 394


State 357

   71 block_instr: try_check labeling_opt block catch_instr_list . END labeling_opt

    END  shift, and go to state 395


State 358

    7 value_type_list: value_type_list . VALUE_TYPE
  112 func_fields_import1: "(" PARAM value_type_list . ")" func_fields_import1

    ")"         shift, and go to state 396
    VALUE_TYPE  shift, and go to state 341


State 359

  113 func_fields_import1: "(" PARAM bind_var . VALUE_TYPE ")" func_fields_import1

    VALUE_TYPE  shift, and go to state 397


State 360

    7 value_type_list: value_type_list . VALUE_TYPE
  111 func_fields_import1: "(" RESULT value_type_list . ")"

    ")"         shift, and go to state 398
    VALUE_TYPE  shift, and go to state 341


State 361
>>>>>>> master

    7 value_type_list: value_type_list . VALUE_TYPE
   13 func_sig: "(" PARAM value_type_list . ")"
   14         | "(" PARAM value_type_list . ")" "(" RESULT value_type_list ")"

<<<<<<< HEAD
    ")"         shift, and go to state 381
    VALUE_TYPE  shift, and go to state 177


State 349
=======
    ")"         shift, and go to state 399
    VALUE_TYPE  shift, and go to state 341


State 362
>>>>>>> master

    7 value_type_list: value_type_list . VALUE_TYPE
   15 func_sig: "(" RESULT value_type_list . ")"

<<<<<<< HEAD
    ")"         shift, and go to state 382
    VALUE_TYPE  shift, and go to state 177


State 350
=======
    ")"         shift, and go to state 400
    VALUE_TYPE  shift, and go to state 341


State 363
>>>>>>> master

   10 global_type: "(" MUT VALUE_TYPE ")" .

    $default  reduce using rule 10 (global_type)


<<<<<<< HEAD
State 351

   28 var_list: var_list . var
  119 table_fields: elem_type "(" ELEM var_list . ")"

    ")"  shift, and go to state 383
    NAT  shift, and go to state 55
    VAR  shift, and go to state 56

    nat  go to state 57
    var  go to state 255


State 352
=======
State 364

   28 var_list: var_list . var
  131 table_fields: elem_type "(" ELEM var_list . ")"

    ")"  shift, and go to state 401
    NAT  shift, and go to state 53
    VAR  shift, and go to state 54

    nat  go to state 55
    var  go to state 261


State 365
>>>>>>> master

   89 if_: "(" THEN . instr_list ")" "(" ELSE instr_list ")"
   90    | "(" THEN . instr_list ")"

<<<<<<< HEAD
    "("             shift, and go to state 219
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    "("             shift, and go to state 221
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    expr         go to state 124
    instr_list   go to state 384


State 353
=======
    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 402


State 366
>>>>>>> master

   87 if_block: block_sig if_block .

    $default  reduce using rule 87 (if_block)


<<<<<<< HEAD
State 354
=======
State 367
>>>>>>> master

   79 expr: "(" . expr1 ")"
   91 if_: expr "(" . THEN instr_list ")" "(" ELSE instr_list ")"
   92    | expr "(" . THEN instr_list ")"

<<<<<<< HEAD
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 156
    IF              shift, and go to state 157
    THEN            shift, and go to state 385
    LOOP            shift, and go to state 158
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 159
    IF              shift, and go to state 160
    THEN            shift, and go to state 403
    LOOP            shift, and go to state 161
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    plain_instr  go to state 160
    expr1        go to state 161


State 355
=======
    plain_instr    go to state 163
    expr1          go to state 164
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 165


State 368
>>>>>>> master

   93 if_: expr expr . expr
   94    | expr expr .

<<<<<<< HEAD
    "("  shift, and go to state 219
=======
    "("  shift, and go to state 221
>>>>>>> master

    $default  reduce using rule 94 (if_)

<<<<<<< HEAD
    expr  go to state 386


State 356

  126 memory_fields: "(" DATA text_list_opt ")" .

    $default  reduce using rule 126 (memory_fields)


State 357

  131 import_desc: "(" FUNC bind_var_opt . type_use ")"
  132            | "(" FUNC bind_var_opt . func_sig ")"

    "("  shift, and go to state 387

    $default  reduce using rule 12 (func_sig)

    func_sig  go to state 388
    type_use  go to state 389


State 358

  135 import_desc: "(" GLOBAL bind_var_opt . global_type ")"

    "("         shift, and go to state 234
    VALUE_TYPE  shift, and go to state 138

    global_type  go to state 390


State 359

  133 import_desc: "(" TABLE bind_var_opt . table_sig ")"
=======
    expr  go to state 404


State 369

   84 expr1: try_check "(" BLOCK labeling_opt . block ")" catch_list

    "("             shift, and go to state 295
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    block_sig      go to state 296
    block          go to state 405
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 298


State 370

  138 memory_fields: "(" DATA text_list_opt ")" .

    $default  reduce using rule 138 (memory_fields)


State 371

  143 import_desc: "(" FUNC bind_var_opt . type_use ")"
  144            | "(" FUNC bind_var_opt . func_sig ")"

    "("  shift, and go to state 406

    $default  reduce using rule 12 (func_sig)

    func_sig  go to state 407
    type_use  go to state 408


State 372

  147 import_desc: "(" GLOBAL bind_var_opt . global_type ")"

    "("         shift, and go to state 239
    VALUE_TYPE  shift, and go to state 141

    global_type  go to state 409


State 373

  145 import_desc: "(" TABLE bind_var_opt . table_sig ")"
>>>>>>> master

    NAT  shift, and go to state 55

<<<<<<< HEAD
    table_sig  go to state 391
    limits     go to state 151
    nat        go to state 152


State 360

  134 import_desc: "(" MEMORY bind_var_opt . memory_sig ")"
=======
    table_sig  go to state 410
    limits     go to state 154
    nat        go to state 155


State 374

  146 import_desc: "(" MEMORY bind_var_opt . memory_sig ")"
>>>>>>> master

    NAT  shift, and go to state 55

<<<<<<< HEAD
    memory_sig  go to state 392
    limits      go to state 166
    nat         go to state 152


State 361

  138 export_desc: "(" FUNC var ")" .

    $default  reduce using rule 138 (export_desc)


State 362

  141 export_desc: "(" GLOBAL var ")" .

    $default  reduce using rule 141 (export_desc)


State 363

  139 export_desc: "(" TABLE var ")" .

    $default  reduce using rule 139 (export_desc)


State 364

  140 export_desc: "(" MEMORY var ")" .

    $default  reduce using rule 140 (export_desc)


State 365

  185 const: "(" CONST literal . ")"

    ")"  shift, and go to state 393


State 366

  105 func_fields_body1: "(" PARAM value_type_list ")" func_fields_body1 .

    $default  reduce using rule 105 (func_fields_body1)


State 367

  106 func_fields_body1: "(" PARAM bind_var VALUE_TYPE ")" . func_fields_body1

    "("             shift, and go to state 217
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    memory_sig  go to state 411
    limits      go to state 170
    nat         go to state 155


State 375

  150 export_desc: "(" FUNC var ")" .

    $default  reduce using rule 150 (export_desc)


State 376

  153 export_desc: "(" GLOBAL var ")" .

    $default  reduce using rule 153 (export_desc)


State 377

  151 export_desc: "(" TABLE var ")" .

    $default  reduce using rule 151 (export_desc)


State 378

  152 export_desc: "(" MEMORY var ")" .

    $default  reduce using rule 152 (export_desc)


State 379

  196 const: "(" CONST literal . ")"

    ")"  shift, and go to state 412


State 380

  117 func_fields_body1: "(" PARAM value_type_list ")" func_fields_body1 .

    $default  reduce using rule 117 (func_fields_body1)


State 381

  118 func_fields_body1: "(" PARAM bind_var VALUE_TYPE ")" . func_fields_body1

    "("             shift, and go to state 219
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)
=======
    $default  reduce using rule 98 (instr_list)
>>>>>>> master

    instr              go to state 121
    plain_instr        go to state 122
    block_instr        go to state 123
    expr               go to state 124
<<<<<<< HEAD
    instr_list         go to state 125
    func_fields_body1  go to state 394
    func_body          go to state 129
    func_body1         go to state 130


State 368

   72 expr: "(" . expr1 ")"
  109 func_body1: "(" . LOCAL value_type_list ")" func_body1
  110           | "(" . LOCAL bind_var VALUE_TYPE ")" func_body1

    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 156
    IF              shift, and go to state 157
    LOOP            shift, and go to state 158
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    rethrow_check      go to state 125
    throw_check        go to state 126
    try_check          go to state 127
    instr_list         go to state 128
    func_fields_body1  go to state 413
    func_body          go to state 132
    func_body1         go to state 133


State 382

   79 expr: "(" . expr1 ")"
  121 func_body1: "(" . LOCAL value_type_list ")" func_body1
  122           | "(" . LOCAL bind_var VALUE_TYPE ")" func_body1

    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 159
    IF              shift, and go to state 160
    LOOP            shift, and go to state 161
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119
<<<<<<< HEAD
    LOCAL           shift, and go to state 193

    plain_instr  go to state 160
    expr1        go to state 161


State 369

  104 func_fields_body1: "(" RESULT value_type_list ")" func_body .

    $default  reduce using rule 104 (func_fields_body1)


State 370

  109 func_body1: "(" LOCAL value_type_list ")" func_body1 .

    $default  reduce using rule 109 (func_body1)


State 371

  110 func_body1: "(" LOCAL bind_var VALUE_TYPE ")" . func_body1

    "("             shift, and go to state 368
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    LOCAL           shift, and go to state 195

    plain_instr    go to state 163
    expr1          go to state 164
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 165


State 383

  116 func_fields_body1: "(" RESULT value_type_list ")" func_body .

    $default  reduce using rule 116 (func_fields_body1)


State 384

  121 func_body1: "(" LOCAL value_type_list ")" func_body1 .

    $default  reduce using rule 121 (func_body1)


State 385

  122 func_body1: "(" LOCAL bind_var VALUE_TYPE ")" . func_body1

    "("             shift, and go to state 382
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    expr         go to state 124
    instr_list   go to state 125
    func_body1   go to state 395


State 372

  137 inline_import: "(" IMPORT quoted_text quoted_text ")" .

    $default  reduce using rule 137 (inline_import)


State 373
=======
    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 128
    func_body1     go to state 414


State 386

  149 inline_import: "(" IMPORT quoted_text quoted_text ")" .

    $default  reduce using rule 149 (inline_import)


State 387
>>>>>>> master

    7 value_type_list: value_type_list . VALUE_TYPE
   72 block_sig: "(" RESULT value_type_list . ")"

<<<<<<< HEAD
    ")"         shift, and go to state 396
    VALUE_TYPE  shift, and go to state 177


State 374
=======
    ")"         shift, and go to state 415
    VALUE_TYPE  shift, and go to state 341


State 388
>>>>>>> master

   67 block_instr: BLOCK labeling_opt block END labeling_opt .

    $default  reduce using rule 67 (block_instr)


<<<<<<< HEAD
State 375
=======
State 389
>>>>>>> master

   69 block_instr: IF labeling_opt block END labeling_opt .

    $default  reduce using rule 69 (block_instr)


<<<<<<< HEAD
State 376
=======
State 390
>>>>>>> master

   70 block_instr: IF labeling_opt block ELSE labeling_opt . instr_list END labeling_opt

<<<<<<< HEAD
    "("             shift, and go to state 219
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    "("             shift, and go to state 221
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    expr         go to state 124
    instr_list   go to state 397


State 377
=======
    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 416


State 391
>>>>>>> master

   68 block_instr: LOOP labeling_opt block END labeling_opt .

    $default  reduce using rule 68 (block_instr)


<<<<<<< HEAD
State 378

  100 func_fields_import1: "(" PARAM value_type_list ")" . func_fields_import1

    "("  shift, and go to state 301

    $default  reduce using rule 98 (func_fields_import1)

    func_fields_import1  go to state 398
=======
State 392

   75 catch_instr: CATCH var . instr_list

    "("             shift, and go to state 221
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 417


State 393
>>>>>>> master

   76 catch_instr: CATCH_ALL var . instr_list

    "("             shift, and go to state 221
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 418

<<<<<<< HEAD
State 379

  101 func_fields_import1: "(" PARAM bind_var VALUE_TYPE . ")" func_fields_import1

    ")"  shift, and go to state 399
=======

State 394

   78 catch_instr_list: catch_instr catch_instr_list .
>>>>>>> master

    $default  reduce using rule 78 (catch_instr_list)

<<<<<<< HEAD
State 380

   99 func_fields_import1: "(" RESULT value_type_list ")" .

    $default  reduce using rule 99 (func_fields_import1)
=======

State 395

   71 block_instr: try_check labeling_opt block catch_instr_list END . labeling_opt
>>>>>>> master

    VAR  shift, and go to state 50

<<<<<<< HEAD
State 381
=======
    $default  reduce using rule 32 (labeling_opt)

    bind_var      go to state 198
    labeling_opt  go to state 419


State 396

  112 func_fields_import1: "(" PARAM value_type_list ")" . func_fields_import1

    "("  shift, and go to state 308

    $default  reduce using rule 110 (func_fields_import1)

    func_fields_import1  go to state 420


State 397

  113 func_fields_import1: "(" PARAM bind_var VALUE_TYPE . ")" func_fields_import1

    ")"  shift, and go to state 421


State 398

  111 func_fields_import1: "(" RESULT value_type_list ")" .

    $default  reduce using rule 111 (func_fields_import1)


State 399
>>>>>>> master

   13 func_sig: "(" PARAM value_type_list ")" .
   14         | "(" PARAM value_type_list ")" . "(" RESULT value_type_list ")"

<<<<<<< HEAD
    "("  shift, and go to state 400
=======
    "("  shift, and go to state 422
>>>>>>> master

    $default  reduce using rule 13 (func_sig)


<<<<<<< HEAD
State 382
=======
State 400
>>>>>>> master

   15 func_sig: "(" RESULT value_type_list ")" .

    $default  reduce using rule 15 (func_sig)


<<<<<<< HEAD
State 383

  119 table_fields: elem_type "(" ELEM var_list ")" .

    $default  reduce using rule 119 (table_fields)


State 384
=======
State 401

  131 table_fields: elem_type "(" ELEM var_list ")" .

    $default  reduce using rule 131 (table_fields)


State 402
>>>>>>> master

   89 if_: "(" THEN instr_list . ")" "(" ELSE instr_list ")"
   90    | "(" THEN instr_list . ")"

<<<<<<< HEAD
    ")"  shift, and go to state 401


State 385
=======
    ")"  shift, and go to state 423


State 403
>>>>>>> master

   91 if_: expr "(" THEN . instr_list ")" "(" ELSE instr_list ")"
   92    | expr "(" THEN . instr_list ")"

<<<<<<< HEAD
    "("             shift, and go to state 219
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    "("             shift, and go to state 221
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119

<<<<<<< HEAD
    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    expr         go to state 124
    instr_list   go to state 402


State 386
=======
    $default  reduce using rule 98 (instr_list)

    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 424


State 404
>>>>>>> master

   93 if_: expr expr expr .

    $default  reduce using rule 93 (if_)


<<<<<<< HEAD
State 387
=======
State 405

   84 expr1: try_check "(" BLOCK labeling_opt block . ")" catch_list

    ")"  shift, and go to state 425


State 406
>>>>>>> master

   13 func_sig: "(" . PARAM value_type_list ")"
   14         | "(" . PARAM value_type_list ")" "(" RESULT value_type_list ")"
   15         | "(" . RESULT value_type_list ")"
   20 type_use: "(" . TYPE var ")"

<<<<<<< HEAD
    TYPE    shift, and go to state 190
    PARAM   shift, and go to state 303
    RESULT  shift, and go to state 304


State 388

  132 import_desc: "(" FUNC bind_var_opt func_sig . ")"

    ")"  shift, and go to state 403


State 389

  131 import_desc: "(" FUNC bind_var_opt type_use . ")"

    ")"  shift, and go to state 404


State 390

  135 import_desc: "(" GLOBAL bind_var_opt global_type . ")"

    ")"  shift, and go to state 405


State 391

  133 import_desc: "(" TABLE bind_var_opt table_sig . ")"

    ")"  shift, and go to state 406


State 392

  134 import_desc: "(" MEMORY bind_var_opt memory_sig . ")"

    ")"  shift, and go to state 407


State 393

  185 const: "(" CONST literal ")" .

    $default  reduce using rule 185 (const)


State 394

  106 func_fields_body1: "(" PARAM bind_var VALUE_TYPE ")" func_fields_body1 .

    $default  reduce using rule 106 (func_fields_body1)


State 395

  110 func_body1: "(" LOCAL bind_var VALUE_TYPE ")" func_body1 .

    $default  reduce using rule 110 (func_body1)


State 396
=======
    TYPE    shift, and go to state 192
    PARAM   shift, and go to state 310
    RESULT  shift, and go to state 311


State 407

  144 import_desc: "(" FUNC bind_var_opt func_sig . ")"

    ")"  shift, and go to state 426


State 408

  143 import_desc: "(" FUNC bind_var_opt type_use . ")"

    ")"  shift, and go to state 427


State 409

  147 import_desc: "(" GLOBAL bind_var_opt global_type . ")"

    ")"  shift, and go to state 428


State 410

  145 import_desc: "(" TABLE bind_var_opt table_sig . ")"

    ")"  shift, and go to state 429


State 411

  146 import_desc: "(" MEMORY bind_var_opt memory_sig . ")"

    ")"  shift, and go to state 430


State 412

  196 const: "(" CONST literal ")" .

    $default  reduce using rule 196 (const)


State 413

  118 func_fields_body1: "(" PARAM bind_var VALUE_TYPE ")" func_fields_body1 .

    $default  reduce using rule 118 (func_fields_body1)


State 414

  122 func_body1: "(" LOCAL bind_var VALUE_TYPE ")" func_body1 .

    $default  reduce using rule 122 (func_body1)


State 415
>>>>>>> master

   72 block_sig: "(" RESULT value_type_list ")" .

    $default  reduce using rule 72 (block_sig)


<<<<<<< HEAD
State 397
=======
State 416
>>>>>>> master

   70 block_instr: IF labeling_opt block ELSE labeling_opt instr_list . END labeling_opt

<<<<<<< HEAD
    END  shift, and go to state 408


State 398

  100 func_fields_import1: "(" PARAM value_type_list ")" func_fields_import1 .

    $default  reduce using rule 100 (func_fields_import1)


State 399

  101 func_fields_import1: "(" PARAM bind_var VALUE_TYPE ")" . func_fields_import1

    "("  shift, and go to state 301

    $default  reduce using rule 98 (func_fields_import1)

    func_fields_import1  go to state 409
=======
    END  shift, and go to state 431


State 417

   75 catch_instr: CATCH var instr_list .

    $default  reduce using rule 75 (catch_instr)


State 418

   76 catch_instr: CATCH_ALL var instr_list .

    $default  reduce using rule 76 (catch_instr)


State 419
>>>>>>> master

   71 block_instr: try_check labeling_opt block catch_instr_list END labeling_opt .

    $default  reduce using rule 71 (block_instr)


State 420

  112 func_fields_import1: "(" PARAM value_type_list ")" func_fields_import1 .

    $default  reduce using rule 112 (func_fields_import1)


State 421

  113 func_fields_import1: "(" PARAM bind_var VALUE_TYPE ")" . func_fields_import1

    "("  shift, and go to state 308

    $default  reduce using rule 110 (func_fields_import1)

    func_fields_import1  go to state 432

<<<<<<< HEAD
State 400

   14 func_sig: "(" PARAM value_type_list ")" "(" . RESULT value_type_list ")"

    RESULT  shift, and go to state 410


State 401
=======

State 422

   14 func_sig: "(" PARAM value_type_list ")" "(" . RESULT value_type_list ")"

    RESULT  shift, and go to state 433


State 423
>>>>>>> master

   89 if_: "(" THEN instr_list ")" . "(" ELSE instr_list ")"
   90    | "(" THEN instr_list ")" .

<<<<<<< HEAD
    "("  shift, and go to state 411
=======
    "("  shift, and go to state 434
>>>>>>> master

    $default  reduce using rule 90 (if_)


<<<<<<< HEAD
State 402
=======
State 424
>>>>>>> master

   91 if_: expr "(" THEN instr_list . ")" "(" ELSE instr_list ")"
   92    | expr "(" THEN instr_list . ")"

<<<<<<< HEAD
    ")"  shift, and go to state 412


State 403

  132 import_desc: "(" FUNC bind_var_opt func_sig ")" .

    $default  reduce using rule 132 (import_desc)
=======
    ")"  shift, and go to state 435


State 425

   84 expr1: try_check "(" BLOCK labeling_opt block ")" . catch_list

    "("  shift, and go to state 436
>>>>>>> master

    catch_list  go to state 437

<<<<<<< HEAD
State 404

  131 import_desc: "(" FUNC bind_var_opt type_use ")" .

    $default  reduce using rule 131 (import_desc)
=======

State 426

  144 import_desc: "(" FUNC bind_var_opt func_sig ")" .
>>>>>>> master

    $default  reduce using rule 144 (import_desc)

<<<<<<< HEAD
State 405

  135 import_desc: "(" GLOBAL bind_var_opt global_type ")" .

    $default  reduce using rule 135 (import_desc)
=======

State 427

  143 import_desc: "(" FUNC bind_var_opt type_use ")" .
>>>>>>> master

    $default  reduce using rule 143 (import_desc)

<<<<<<< HEAD
State 406

  133 import_desc: "(" TABLE bind_var_opt table_sig ")" .

    $default  reduce using rule 133 (import_desc)
=======

State 428

  147 import_desc: "(" GLOBAL bind_var_opt global_type ")" .
>>>>>>> master

    $default  reduce using rule 147 (import_desc)

<<<<<<< HEAD
State 407

  134 import_desc: "(" MEMORY bind_var_opt memory_sig ")" .

    $default  reduce using rule 134 (import_desc)
=======

State 429

  145 import_desc: "(" TABLE bind_var_opt table_sig ")" .
>>>>>>> master

    $default  reduce using rule 145 (import_desc)

<<<<<<< HEAD
State 408
=======
>>>>>>> master

State 430

  146 import_desc: "(" MEMORY bind_var_opt memory_sig ")" .

    $default  reduce using rule 146 (import_desc)


State 431

   70 block_instr: IF labeling_opt block ELSE labeling_opt instr_list END . labeling_opt

    VAR  shift, and go to state 52

    $default  reduce using rule 32 (labeling_opt)

<<<<<<< HEAD
    bind_var      go to state 196
    labeling_opt  go to state 413


State 409

  101 func_fields_import1: "(" PARAM bind_var VALUE_TYPE ")" func_fields_import1 .

    $default  reduce using rule 101 (func_fields_import1)


State 410
=======
    bind_var      go to state 198
    labeling_opt  go to state 438


State 432

  113 func_fields_import1: "(" PARAM bind_var VALUE_TYPE ")" func_fields_import1 .

    $default  reduce using rule 113 (func_fields_import1)


State 433
>>>>>>> master

   14 func_sig: "(" PARAM value_type_list ")" "(" RESULT . value_type_list ")"

    $default  reduce using rule 6 (value_type_list)

<<<<<<< HEAD
    value_type_list  go to state 414


State 411
=======
    value_type_list  go to state 439


State 434
>>>>>>> master

   89 if_: "(" THEN instr_list ")" "(" . ELSE instr_list ")"

<<<<<<< HEAD
    ELSE  shift, and go to state 415


State 412
=======
    ELSE  shift, and go to state 440


State 435
>>>>>>> master

   91 if_: expr "(" THEN instr_list ")" . "(" ELSE instr_list ")"
   92    | expr "(" THEN instr_list ")" .

<<<<<<< HEAD
    "("  shift, and go to state 416
=======
    "("  shift, and go to state 441
>>>>>>> master

    $default  reduce using rule 92 (if_)


<<<<<<< HEAD
State 413
=======
State 436
>>>>>>> master

   85 catch_list: "(" . catch_instr ")"
   86           | "(" . catch_instr ")" catch_list

    CATCH      shift, and go to state 354
    CATCH_ALL  shift, and go to state 355

    catch_instr  go to state 442

<<<<<<< HEAD
State 414
=======

State 437

   84 expr1: try_check "(" BLOCK labeling_opt block ")" catch_list .

    $default  reduce using rule 84 (expr1)


State 438

   70 block_instr: IF labeling_opt block ELSE labeling_opt instr_list END labeling_opt .

    $default  reduce using rule 70 (block_instr)


State 439
>>>>>>> master

    7 value_type_list: value_type_list . VALUE_TYPE
   14 func_sig: "(" PARAM value_type_list ")" "(" RESULT value_type_list . ")"

<<<<<<< HEAD
    ")"         shift, and go to state 417
    VALUE_TYPE  shift, and go to state 177


State 415
=======
    ")"         shift, and go to state 443
    VALUE_TYPE  shift, and go to state 341


State 440
>>>>>>> master

   89 if_: "(" THEN instr_list ")" "(" ELSE . instr_list ")"

<<<<<<< HEAD
    "("             shift, and go to state 219
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    "("             shift, and go to state 221
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119
<<<<<<< HEAD

    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    expr         go to state 124
    instr_list   go to state 418
=======
>>>>>>> master

    $default  reduce using rule 98 (instr_list)

<<<<<<< HEAD
State 416
=======
    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 444
>>>>>>> master


<<<<<<< HEAD
    ELSE  shift, and go to state 419
=======
State 441
>>>>>>> master

   91 if_: expr "(" THEN instr_list ")" "(" . ELSE instr_list ")"

    ELSE  shift, and go to state 445

<<<<<<< HEAD
State 417
=======

State 442

   85 catch_list: "(" catch_instr . ")"
   86           | "(" catch_instr . ")" catch_list

    ")"  shift, and go to state 446


State 443
>>>>>>> master

   14 func_sig: "(" PARAM value_type_list ")" "(" RESULT value_type_list ")" .

    $default  reduce using rule 14 (func_sig)


<<<<<<< HEAD
State 418
=======
State 444
>>>>>>> master

   89 if_: "(" THEN instr_list ")" "(" ELSE instr_list . ")"

<<<<<<< HEAD
    ")"  shift, and go to state 420


State 419
=======
    ")"  shift, and go to state 447


State 445
>>>>>>> master

   91 if_: expr "(" THEN instr_list ")" "(" ELSE . instr_list ")"

<<<<<<< HEAD
    "("             shift, and go to state 219
    NOP             shift, and go to state 93
    DROP            shift, and go to state 94
    BLOCK           shift, and go to state 95
    IF              shift, and go to state 96
    LOOP            shift, and go to state 97
    BR              shift, and go to state 98
    BR_IF           shift, and go to state 99
    BR_TABLE        shift, and go to state 100
=======
    "("             shift, and go to state 221
    NOP             shift, and go to state 90
    DROP            shift, and go to state 91
    BLOCK           shift, and go to state 92
    IF              shift, and go to state 93
    LOOP            shift, and go to state 94
    BR              shift, and go to state 95
    BR_IF           shift, and go to state 96
    BR_TABLE        shift, and go to state 97
    TRY             shift, and go to state 98
    THROW           shift, and go to state 99
    RETHROW         shift, and go to state 100
>>>>>>> master
    CALL            shift, and go to state 101
    CALL_INDIRECT   shift, and go to state 102
    RETURN          shift, and go to state 103
    GET_LOCAL       shift, and go to state 104
    SET_LOCAL       shift, and go to state 105
    TEE_LOCAL       shift, and go to state 106
    GET_GLOBAL      shift, and go to state 107
    SET_GLOBAL      shift, and go to state 108
    LOAD            shift, and go to state 109
    STORE           shift, and go to state 110
    CONST           shift, and go to state 111
    UNARY           shift, and go to state 112
    BINARY          shift, and go to state 113
    COMPARE         shift, and go to state 114
    CONVERT         shift, and go to state 115
    SELECT          shift, and go to state 116
    UNREACHABLE     shift, and go to state 117
    CURRENT_MEMORY  shift, and go to state 118
    GROW_MEMORY     shift, and go to state 119
<<<<<<< HEAD

    $default  reduce using rule 85 (instr_list)

    instr        go to state 121
    plain_instr  go to state 122
    block_instr  go to state 123
    expr         go to state 124
    instr_list   go to state 421
=======
>>>>>>> master

    $default  reduce using rule 98 (instr_list)

<<<<<<< HEAD
State 420
=======
    instr          go to state 121
    plain_instr    go to state 122
    block_instr    go to state 123
    expr           go to state 124
    rethrow_check  go to state 125
    throw_check    go to state 126
    try_check      go to state 127
    instr_list     go to state 448
>>>>>>> master


State 446

   85 catch_list: "(" catch_instr ")" .
   86           | "(" catch_instr ")" . catch_list

<<<<<<< HEAD
State 421
=======
    "("  shift, and go to state 436
>>>>>>> master

    $default  reduce using rule 85 (catch_list)

<<<<<<< HEAD
    ")"  shift, and go to state 422


State 422
=======
    catch_list  go to state 449


State 447

   89 if_: "(" THEN instr_list ")" "(" ELSE instr_list ")" .

    $default  reduce using rule 89 (if_)


State 448

   91 if_: expr "(" THEN instr_list ")" "(" ELSE instr_list . ")"

    ")"  shift, and go to state 450


State 449

   86 catch_list: "(" catch_instr ")" catch_list .

    $default  reduce using rule 86 (catch_list)


State 450
>>>>>>> master

   91 if_: expr "(" THEN instr_list ")" "(" ELSE instr_list ")" .

    $default  reduce using rule 91 (if_)
