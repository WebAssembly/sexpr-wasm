;;; TOOL: run-interp

;; This used to test an odd case that forced dropping the (i32.const 3) of the
;; else branch. Now that drops are explicit, this case is straightforward.

(module
  (func $f (param i32) (result i32)
    (local i32)
    (if
      (get_local 0)
      (then $l
        (br $l)
        (i32.const 2))
      (else
        (drop (i32.const 3))))
    (i32.const 2))

  (export "e1" $e1)
  (func $e1 (result i32)
    (call $f (i32.const 0)))

  (export "e2" $e2)
  (func $e2 (result i32)
    (call $f (i32.const 1))))
(;; STDOUT ;;;
e1() => i32:2
e2() => i32:2
;;; STDOUT ;;)
