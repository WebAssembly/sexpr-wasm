;;; TOOL: run-interp

;; This used to test an odd case that forced dropping the (i32.const 3) of the
;; else branch. Now that drops are explicit, this case is straightforward.

(module
  (func $f (param i32) (result i32)
    (local i32)
    get_local 0
    if $l
      br $l
      i32.const 2
    else
      i32.const 3
      drop
    end
    i32.const 2)

  (func (export "e1") (result i32)
    i32.const 0
    call $f)

  (func (export "e2") (result i32)
    i32.const 1
    call $f))
(;; STDOUT ;;;
e1() => i32:2
e2() => i32:2
;;; STDOUT ;;)
