;;; TOOL: run-interp
;;; FLAGS: -v --host-print --enable-threads --enable-saturating-float-to-int --enable-sign-extension

(module
  (import "host" "print" (func $print (param i32)))

  (type $empty (func))
  (func $empty)
  (memory 1 1 shared)
  (table anyfunc (elem $empty $empty))
  (global $g (mut i32) (i32.const 0))

  (; 0x00 ;) (func (export "unreachable") unreachable)
  (; 0x01 ;) ;; nop       -- not generated in interpreter
  (; 0x02 ;) ;; block     -- not generated in interpreter
  (; 0x03 ;) ;; loop      -- not generated in interpreter
  (; 0x04 ;) ;; if        -- not generated in interpreter
  (; 0x05 ;) ;; else      -- not generated in interpreter
  (; 0x06 ;) ;; try       -- not implemented
  (; 0x07 ;) ;; catch     -- not implemented
  (; 0x08 ;) ;; throw     -- not implemented
  (; 0x09 ;) ;; rethrow   -- not implemented
  (; 0x0a ;) ;; catch_all -- not implemented
  (; 0x0b ;) ;; end       -- not generated in interpreter
  (; 0x0c ;) (func (export "br") br 0)
  (; 0x0d ;) ;; 0x0d br_if  ;; not generated in interpreter
  (; 0x0e ;) (func (export "br_table") i32.const 1 br_table 0)
  (; 0x0f ;) (func (export "return") return)
  (; 0x10 ;) (func (export "call") call $empty)
  (; 0x11 ;) (func (export "call_indirect") i32.const 1 call_indirect (type $empty))
  (; 0x1a ;) (func (export "drop") i32.const 1 drop)
  (; 0x1b ;) (func (export "select") i32.const 1 i32.const 2 i32.const 3 select drop)
  (; 0x20 ;) (func (export "get_local") (local i32) get_local 0 drop)
  (; 0x21 ;) (func (export "set_local") (local i32) i32.const 1 set_local 0)
  (; 0x22 ;) (func (export "tee_local") (local i32) i32.const 1 tee_local 0 drop)
  (; 0x23 ;) (func (export "get_global") get_global 0 drop)
  (; 0x24 ;) (func (export "set_global") i32.const 1 set_global 0)
  (; 0x28 ;) (func (export "i32.load") i32.const 1 i32.load offset=2 drop)
  (; 0x29 ;) (func (export "i64.load") i32.const 1 i64.load offset=2 drop)
  (; 0x2a ;) (func (export "f32.load") i32.const 1 f32.load offset=2 drop)
  (; 0x2b ;) (func (export "f64.load") i32.const 1 f64.load offset=2 drop)
  (; 0x2c ;) (func (export "i32.load8_s") i32.const 1 i32.load8_s offset=2 drop)
  (; 0x2d ;) (func (export "i32.load8_u") i32.const 1 i32.load8_u offset=2 drop)
  (; 0x2e ;) (func (export "i32.load16_s") i32.const 1 i32.load16_s offset=2 drop)
  (; 0x2f ;) (func (export "i32.load16_u") i32.const 1 i32.load16_u offset=2 drop)
  (; 0x30 ;) (func (export "i64.load8_s") i32.const 1 i64.load8_s offset=2 drop)
  (; 0x31 ;) (func (export "i64.load8_u") i32.const 1 i64.load8_u offset=2 drop)
  (; 0x32 ;) (func (export "i64.load16_s") i32.const 1 i64.load16_s offset=2 drop)
  (; 0x33 ;) (func (export "i64.load16_u") i32.const 1 i64.load16_u offset=2 drop)
  (; 0x34 ;) (func (export "i64.load32_s") i32.const 1 i64.load32_s offset=2 drop)
  (; 0x35 ;) (func (export "i64.load32_u") i32.const 1 i64.load32_u offset=2 drop)
  (; 0x36 ;) (func (export "i32.store") i32.const 1 i32.const 2 i32.store offset=2)
  (; 0x37 ;) (func (export "i64.store") i32.const 1 i64.const 2 i64.store offset=2)
  (; 0x38 ;) (func (export "f32.store") i32.const 1 f32.const 2 f32.store offset=2)
  (; 0x39 ;) (func (export "f64.store") i32.const 1 f64.const 2 f64.store offset=2)
  (; 0x3a ;) (func (export "i32.store8") i32.const 1 i32.const 2 i32.store8 offset=2)
  (; 0x3b ;) (func (export "i32.store16") i32.const 1 i32.const 2 i32.store16 offset=2)
  (; 0x3c ;) (func (export "i64.store8") i32.const 1 i64.const 2 i64.store8 offset=2)
  (; 0x3d ;) (func (export "i64.store16") i32.const 1 i64.const 2 i64.store16 offset=2)
  (; 0x3e ;) (func (export "i64.store32") i32.const 1 i64.const 2 i64.store32 offset=2)
  (; 0x3f ;) (func (export "current_memory") current_memory drop)
  (; 0x40 ;) (func (export "grow_memory") i32.const 1 grow_memory drop)
  (; 0x41 ;) (func (export "i32.const") i32.const 1 drop)
  (; 0x42 ;) (func (export "i64.const") i64.const 1 drop)
  (; 0x43 ;) (func (export "f32.const") f32.const 1 drop)
  (; 0x44 ;) (func (export "f64.const") f64.const 1 drop)
  (; 0x45 ;) (func (export "i32.eqz") i32.const 1 i32.eqz drop)
  (; 0x46 ;) (func (export "i32.eq") i32.const 1 i32.const 2 i32.eq drop)
  (; 0x47 ;) (func (export "i32.ne") i32.const 1 i32.const 2 i32.ne drop)
  (; 0x48 ;) (func (export "i32.lt_s") i32.const 1 i32.const 2 i32.lt_s drop)
  (; 0x49 ;) (func (export "i32.lt_u") i32.const 1 i32.const 2 i32.lt_u drop)
  (; 0x4a ;) (func (export "i32.gt_s") i32.const 1 i32.const 2 i32.gt_s drop)
  (; 0x4b ;) (func (export "i32.gt_u") i32.const 1 i32.const 2 i32.gt_u drop)
  (; 0x4c ;) (func (export "i32.le_s") i32.const 1 i32.const 2 i32.le_s drop)
  (; 0x4d ;) (func (export "i32.le_u") i32.const 1 i32.const 2 i32.le_u drop)
  (; 0x4e ;) (func (export "i32.ge_s") i32.const 1 i32.const 2 i32.ge_s drop)
  (; 0x4f ;) (func (export "i32.ge_u") i32.const 1 i32.const 2 i32.ge_u drop)
  (; 0x50 ;) (func (export "i64.eqz") i64.const 1 i64.eqz drop)
  (; 0x51 ;) (func (export "i64.eq") i64.const 1 i64.const 2 i64.eq drop)
  (; 0x52 ;) (func (export "i64.ne") i64.const 1 i64.const 2 i64.ne drop)
  (; 0x53 ;) (func (export "i64.lt_s") i64.const 1 i64.const 2 i64.lt_s drop)
  (; 0x54 ;) (func (export "i64.lt_u") i64.const 1 i64.const 2 i64.lt_u drop)
  (; 0x55 ;) (func (export "i64.gt_s") i64.const 1 i64.const 2 i64.gt_s drop)
  (; 0x56 ;) (func (export "i64.gt_u") i64.const 1 i64.const 2 i64.gt_u drop)
  (; 0x57 ;) (func (export "i64.le_s") i64.const 1 i64.const 2 i64.le_s drop)
  (; 0x58 ;) (func (export "i64.le_u") i64.const 1 i64.const 2 i64.le_u drop)
  (; 0x59 ;) (func (export "i64.ge_s") i64.const 1 i64.const 2 i64.ge_s drop)
  (; 0x5a ;) (func (export "i64.ge_u") i64.const 1 i64.const 2 i64.ge_u drop)
  (; 0x5b ;) (func (export "f32.eq") f32.const 1 f32.const 2 f32.eq drop)
  (; 0x5c ;) (func (export "f32.ne") f32.const 1 f32.const 2 f32.ne drop)
  (; 0x5d ;) (func (export "f32.lt") f32.const 1 f32.const 2 f32.lt drop)
  (; 0x5e ;) (func (export "f32.gt") f32.const 1 f32.const 2 f32.gt drop)
  (; 0x5f ;) (func (export "f32.le") f32.const 1 f32.const 2 f32.le drop)
  (; 0x60 ;) (func (export "f32.ge") f32.const 1 f32.const 2 f32.ge drop)
  (; 0x61 ;) (func (export "f64.eq") f64.const 1 f64.const 2 f64.eq drop)
  (; 0x62 ;) (func (export "f64.ne") f64.const 1 f64.const 2 f64.ne drop)
  (; 0x63 ;) (func (export "f64.lt") f64.const 1 f64.const 2 f64.lt drop)
  (; 0x64 ;) (func (export "f64.gt") f64.const 1 f64.const 2 f64.gt drop)
  (; 0x65 ;) (func (export "f64.le") f64.const 1 f64.const 2 f64.le drop)
  (; 0x66 ;) (func (export "f64.ge") f64.const 1 f64.const 2 f64.ge drop)
  (; 0x67 ;) (func (export "i32.clz") i32.const 1 i32.clz drop)
  (; 0x68 ;) (func (export "i32.ctz") i32.const 1 i32.ctz drop)
  (; 0x69 ;) (func (export "i32.popcnt") i32.const 1 i32.popcnt drop)
  (; 0x6a ;) (func (export "i32.add") i32.const 1 i32.const 2 i32.add drop)
  (; 0x6b ;) (func (export "i32.sub") i32.const 1 i32.const 2 i32.sub drop)
  (; 0x6c ;) (func (export "i32.mul") i32.const 1 i32.const 2 i32.mul drop)
  (; 0x6d ;) (func (export "i32.div_s") i32.const 1 i32.const 2 i32.div_s drop)
  (; 0x6e ;) (func (export "i32.div_u") i32.const 1 i32.const 2 i32.div_u drop)
  (; 0x6f ;) (func (export "i32.rem_s") i32.const 1 i32.const 2 i32.rem_s drop)
  (; 0x70 ;) (func (export "i32.rem_u") i32.const 1 i32.const 2 i32.rem_u drop)
  (; 0x71 ;) (func (export "i32.and") i32.const 1 i32.const 2 i32.and drop)
  (; 0x72 ;) (func (export "i32.or") i32.const 1 i32.const 2 i32.or drop)
  (; 0x73 ;) (func (export "i32.xor") i32.const 1 i32.const 2 i32.xor drop)
  (; 0x74 ;) (func (export "i32.shl") i32.const 1 i32.const 2 i32.shl drop)
  (; 0x75 ;) (func (export "i32.shr_s") i32.const 1 i32.const 2 i32.shr_s drop)
  (; 0x76 ;) (func (export "i32.shr_u") i32.const 1 i32.const 2 i32.shr_u drop)
  (; 0x77 ;) (func (export "i32.rotl") i32.const 1 i32.const 2 i32.rotl drop)
  (; 0x78 ;) (func (export "i32.rotr") i32.const 1 i32.const 2 i32.rotr drop)
  (; 0x79 ;) (func (export "i64.clz") i64.const 1 i64.clz drop)
  (; 0x7a ;) (func (export "i64.ctz") i64.const 1 i64.ctz drop)
  (; 0x7b ;) (func (export "i64.popcnt") i64.const 1 i64.popcnt drop)
  (; 0x7c ;) (func (export "i64.add") i64.const 1 i64.const 2 i64.add drop)
  (; 0x7d ;) (func (export "i64.sub") i64.const 1 i64.const 2 i64.sub drop)
  (; 0x7e ;) (func (export "i64.mul") i64.const 1 i64.const 2 i64.mul drop)
  (; 0x7f ;) (func (export "i64.div_s") i64.const 1 i64.const 2 i64.div_s drop)
  (; 0x80 ;) (func (export "i64.div_u") i64.const 1 i64.const 2 i64.div_u drop)
  (; 0x81 ;) (func (export "i64.rem_s") i64.const 1 i64.const 2 i64.rem_s drop)
  (; 0x82 ;) (func (export "i64.rem_u") i64.const 1 i64.const 2 i64.rem_u drop)
  (; 0x83 ;) (func (export "i64.and") i64.const 1 i64.const 2 i64.and drop)
  (; 0x84 ;) (func (export "i64.or") i64.const 1 i64.const 2 i64.or drop)
  (; 0x85 ;) (func (export "i64.xor") i64.const 1 i64.const 2 i64.xor drop)
  (; 0x86 ;) (func (export "i64.shl") i64.const 1 i64.const 2 i64.shl drop)
  (; 0x87 ;) (func (export "i64.shr_s") i64.const 1 i64.const 2 i64.shr_s drop)
  (; 0x88 ;) (func (export "i64.shr_u") i64.const 1 i64.const 2 i64.shr_u drop)
  (; 0x89 ;) (func (export "i64.rotl") i64.const 1 i64.const 2 i64.rotl drop)
  (; 0x8a ;) (func (export "i64.rotr") i64.const 1 i64.const 2 i64.rotr drop)
  (; 0x8b ;) (func (export "f32.abs") f32.const 1 f32.abs drop)
  (; 0x8c ;) (func (export "f32.neg") f32.const 1 f32.neg drop)
  (; 0x8d ;) (func (export "f32.ceil") f32.const 1 f32.ceil drop)
  (; 0x8e ;) (func (export "f32.floor") f32.const 1 f32.floor drop)
  (; 0x8f ;) (func (export "f32.trunc") f32.const 1 f32.trunc drop)
  (; 0x90 ;) (func (export "f32.nearest") f32.const 1 f32.nearest drop)
  (; 0x91 ;) (func (export "f32.sqrt") f32.const 1 f32.sqrt drop)
  (; 0x92 ;) (func (export "f32.add") f32.const 1 f32.const 2 f32.add drop)
  (; 0x93 ;) (func (export "f32.sub") f32.const 1 f32.const 2 f32.sub drop)
  (; 0x94 ;) (func (export "f32.mul") f32.const 1 f32.const 2 f32.mul drop)
  (; 0x95 ;) (func (export "f32.div") f32.const 1 f32.const 2 f32.div drop)
  (; 0x96 ;) (func (export "f32.min") f32.const 1 f32.const 2 f32.min drop)
  (; 0x97 ;) (func (export "f32.max") f32.const 1 f32.const 2 f32.max drop)
  (; 0x98 ;) (func (export "f32.copysign") f32.const 1 f32.const 2 f32.copysign drop)
  (; 0x99 ;) (func (export "f64.abs") f64.const 1 f64.abs drop)
  (; 0x9a ;) (func (export "f64.neg") f64.const 1 f64.neg drop)
  (; 0x9b ;) (func (export "f64.ceil") f64.const 1 f64.ceil drop)
  (; 0x9c ;) (func (export "f64.floor") f64.const 1 f64.floor drop)
  (; 0x9d ;) (func (export "f64.trunc") f64.const 1 f64.trunc drop)
  (; 0x9e ;) (func (export "f64.nearest") f64.const 1 f64.nearest drop)
  (; 0x9f ;) (func (export "f64.sqrt") f64.const 1 f64.sqrt drop)
  (; 0xa0 ;) (func (export "f64.add") f64.const 1 f64.const 2 f64.add drop)
  (; 0xa1 ;) (func (export "f64.sub") f64.const 1 f64.const 2 f64.sub drop)
  (; 0xa2 ;) (func (export "f64.mul") f64.const 1 f64.const 2 f64.mul drop)
  (; 0xa3 ;) (func (export "f64.div") f64.const 1 f64.const 2 f64.div drop)
  (; 0xa4 ;) (func (export "f64.min") f64.const 1 f64.const 2 f64.min drop)
  (; 0xa5 ;) (func (export "f64.max") f64.const 1 f64.const 2 f64.max drop)
  (; 0xa6 ;) (func (export "f64.copysign") f64.const 1 f64.const 2 f64.copysign drop)
  (; 0xa7 ;) (func (export "i32.wrap/i64") i64.const 1 i32.wrap/i64 drop)
  (; 0xa8 ;) (func (export "i32.trunc_s/f32") f32.const 1 i32.trunc_s/f32 drop)
  (; 0xa9 ;) (func (export "i32.trunc_u/f32") f32.const 1 i32.trunc_u/f32 drop)
  (; 0xaa ;) (func (export "i32.trunc_s/f64") f64.const 1 i32.trunc_s/f64 drop)
  (; 0xab ;) (func (export "i32.trunc_u/f64") f64.const 1 i32.trunc_u/f64 drop)
  (; 0xac ;) (func (export "i64.extend_s/i32") i32.const 1 i64.extend_s/i32 drop)
  (; 0xad ;) (func (export "i64.extend_u/i32") i32.const 1 i64.extend_u/i32 drop)
  (; 0xae ;) (func (export "i64.trunc_s/f32") f32.const 1 i64.trunc_s/f32 drop)
  (; 0xaf ;) (func (export "i64.trunc_u/f32") f32.const 1 i64.trunc_u/f32 drop)
  (; 0xb0 ;) (func (export "i64.trunc_s/f64") f64.const 1 i64.trunc_s/f64 drop)
  (; 0xb1 ;) (func (export "i64.trunc_u/f64") f64.const 1 i64.trunc_u/f64 drop)
  (; 0xb2 ;) (func (export "f32.convert_s/i32") i32.const 1 f32.convert_s/i32 drop)
  (; 0xb3 ;) (func (export "f32.convert_u/i32") i32.const 1 f32.convert_u/i32 drop)
  (; 0xb4 ;) (func (export "f32.convert_s/i64") i64.const 1 f32.convert_s/i64 drop)
  (; 0xb5 ;) (func (export "f32.convert_u/i64") i64.const 1 f32.convert_u/i64 drop)
  (; 0xb6 ;) (func (export "f32.demote/f64") f64.const 1 f32.demote/f64 drop)
  (; 0xb7 ;) (func (export "f64.convert_s/i32") i32.const 1 f64.convert_s/i32 drop)
  (; 0xb8 ;) (func (export "f64.convert_u/i32") i32.const 1 f64.convert_u/i32 drop)
  (; 0xb9 ;) (func (export "f64.convert_s/i64") i64.const 1 f64.convert_s/i64 drop)
  (; 0xba ;) (func (export "f64.convert_u/i64") i64.const 1 f64.convert_u/i64 drop)
  (; 0xbb ;) (func (export "f64.promote/f32") f32.const 1 f64.promote/f32 drop)
  (; 0xbc ;) (func (export "i32.reinterpret/f32") i32.const 1 f32.reinterpret/i32 drop)
  (; 0xbd ;) (func (export "f32.reinterpret/i32") f32.const 1 i32.reinterpret/f32 drop)
  (; 0xbe ;) (func (export "i64.reinterpret/f64") i64.const 1 f64.reinterpret/i64 drop)
  (; 0xbf ;) (func (export "f64.reinterpret/i64") f64.const 1 i64.reinterpret/f64 drop)

  ;; --enable-threads
  (; 0xc0 ;) (func (export "i32.extend8_s") i32.const 1 i32.extend8_s drop)
  (; 0xc1 ;) (func (export "i32.extend16_s") i32.const 1 i32.extend16_s drop)
  (; 0xc2 ;) (func (export "i64.extend8_s") i64.const 1 i64.extend8_s drop)
  (; 0xc3 ;) (func (export "i64.extend16_s") i64.const 1 i64.extend16_s drop)
  (; 0xc4 ;) (func (export "i64.extend32_s") i64.const 1 i64.extend32_s drop)

  ;; Interpreter opcodes
  (; 0xe0 ;) (func (export "alloca") (local i32))
  (; 0xe1 ;) (func (export "br_unless") i32.const 1 br_if 0)
  (; 0xe2 ;) (func (export "call_host") i32.const 1 call $print)
  (; 0xe3 ;) (func (export "data") i32.const 1 br_table 0)
  (; 0xe4 ;) (func (export "drop_keep") block (result i32) i32.const 1 i32.const 2 br 0 end drop)

  ;; --enable-saturating-float-to-int
  (; 0xfc 0x00 ;) (func (export "i32.trunc_s:sat/f32") f32.const 1 i32.trunc_s:sat/f32 drop)
  (; 0xfc 0x01 ;) (func (export "i32.trunc_u:sat/f32") f32.const 1 i32.trunc_u:sat/f32 drop)
  (; 0xfc 0x02 ;) (func (export "i32.trunc_s:sat/f64") f64.const 1 i32.trunc_s:sat/f64 drop)
  (; 0xfc 0x03 ;) (func (export "i32.trunc_u:sat/f64") f64.const 1 i32.trunc_u:sat/f64 drop)
  (; 0xfc 0x04 ;) (func (export "i64.trunc_s:sat/f32") f32.const 1 i64.trunc_s:sat/f32 drop)
  (; 0xfc 0x05 ;) (func (export "i64.trunc_u:sat/f32") f32.const 1 i64.trunc_u:sat/f32 drop)
  (; 0xfc 0x06 ;) (func (export "i64.trunc_s:sat/f64") f64.const 1 i64.trunc_s:sat/f64 drop)
  (; 0xfc 0x07 ;) (func (export "i64.trunc_u:sat/f64") f64.const 1 i64.trunc_u:sat/f64 drop)

  ;; --enable-threads
  (; 0xfe 0x00 ;) (func (export "atomic.wake") i32.const 1 i32.const 2 atomic.wake offset=3 drop)
  (; 0xfe 0x01 ;) (func (export "i32.atomic.wait") i32.const 1 i32.const 2 i64.const 3 i32.atomic.wait offset=3 drop)
  (; 0xfe 0x02 ;) (func (export "i64.atomic.wait") i32.const 1 i64.const 2 i64.const 3 i64.atomic.wait offset=3 drop)
  (; 0xfe 0x10 ;) (func (export "i32.atomic.load") i32.const 1 i32.atomic.load offset=3 drop)
  (; 0xfe 0x11 ;) (func (export "i64.atomic.load") i32.const 1 i64.atomic.load offset=7 drop)
  (; 0xfe 0x12 ;) (func (export "i32.atomic.load8_u") i32.const 1 i32.atomic.load8_u offset=3 drop)
  (; 0xfe 0x13 ;) (func (export "i32.atomic.load16_u") i32.const 1 i32.atomic.load16_u offset=3 drop)
  (; 0xfe 0x14 ;) (func (export "i64.atomic.load8_u") i32.const 1 i64.atomic.load8_u offset=3 drop)
  (; 0xfe 0x15 ;) (func (export "i64.atomic.load16_u") i32.const 1 i64.atomic.load16_u offset=3 drop)
  (; 0xfe 0x16 ;) (func (export "i64.atomic.load32_u") i32.const 1 i64.atomic.load32_u offset=3 drop)
  (; 0xfe 0x17 ;) (func (export "i32.atomic.store") i32.const 1 i32.const 2 i32.atomic.store offset=3)
  (; 0xfe 0x18 ;) (func (export "i64.atomic.store") i32.const 1 i64.const 2 i64.atomic.store offset=7)
  (; 0xfe 0x19 ;) (func (export "i32.atomic.store8") i32.const 1 i32.const 2 i32.atomic.store8 offset=3)
  (; 0xfe 0x1a ;) (func (export "i32.atomic.store16") i32.const 1 i32.const 2 i32.atomic.store16 offset=3)
  (; 0xfe 0x1b ;) (func (export "i64.atomic.store8") i32.const 1 i64.const 2 i64.atomic.store8 offset=3)
  (; 0xfe 0x1c ;) (func (export "i64.atomic.store16") i32.const 1 i64.const 2 i64.atomic.store16 offset=3)
  (; 0xfe 0x1d ;) (func (export "i64.atomic.store32") i32.const 1 i64.const 2 i64.atomic.store32 offset=3)
  (; 0xfe 0x1e ;) (func (export "i32.atomic.rmw.add") i32.const 1 i32.const 2 i32.atomic.rmw.add offset=3 drop)
  (; 0xfe 0x1f ;) (func (export "i64.atomic.rmw.add") i32.const 1 i64.const 2 i64.atomic.rmw.add offset=7 drop)
  (; 0xfe 0x20 ;) (func (export "i32.atomic.rmw8_u.add") i32.const 1 i32.const 2 i32.atomic.rmw8_u.add offset=3 drop)
  (; 0xfe 0x21 ;) (func (export "i32.atomic.rmw16_u.add") i32.const 1 i32.const 2 i32.atomic.rmw16_u.add offset=3 drop)
  (; 0xfe 0x22 ;) (func (export "i64.atomic.rmw8_u.add") i32.const 1 i64.const 2 i64.atomic.rmw8_u.add offset=3 drop)
  (; 0xfe 0x23 ;) (func (export "i64.atomic.rmw16_u.add") i32.const 1 i64.const 2 i64.atomic.rmw16_u.add offset=3 drop)
  (; 0xfe 0x24 ;) (func (export "i64.atomic.rmw32_u.add") i32.const 1 i64.const 2 i64.atomic.rmw32_u.add offset=3 drop)
  (; 0xfe 0x25 ;) (func (export "i32.atomic.rmw.sub") i32.const 1 i32.const 2 i32.atomic.rmw.sub offset=3 drop)
  (; 0xfe 0x26 ;) (func (export "i64.atomic.rmw.sub") i32.const 1 i64.const 2 i64.atomic.rmw.sub offset=7 drop)
  (; 0xfe 0x27 ;) (func (export "i32.atomic.rmw8_u.sub") i32.const 1 i32.const 2 i32.atomic.rmw8_u.sub offset=3 drop)
  (; 0xfe 0x28 ;) (func (export "i32.atomic.rmw16_u.sub") i32.const 1 i32.const 2 i32.atomic.rmw16_u.sub offset=3 drop)
  (; 0xfe 0x29 ;) (func (export "i64.atomic.rmw8_u.sub") i32.const 1 i64.const 2 i64.atomic.rmw8_u.sub offset=3 drop)
  (; 0xfe 0x2a ;) (func (export "i64.atomic.rmw16_u.sub") i32.const 1 i64.const 2 i64.atomic.rmw16_u.sub offset=3 drop)
  (; 0xfe 0x2b ;) (func (export "i64.atomic.rmw32_u.sub") i32.const 1 i64.const 2 i64.atomic.rmw32_u.sub offset=3 drop)
  (; 0xfe 0x2c ;) (func (export "i32.atomic.rmw.and") i32.const 1 i32.const 2 i32.atomic.rmw.and offset=3 drop)
  (; 0xfe 0x2d ;) (func (export "i64.atomic.rmw.and") i32.const 1 i64.const 2 i64.atomic.rmw.and offset=7 drop)
  (; 0xfe 0x2e ;) (func (export "i32.atomic.rmw8_u.and") i32.const 1 i32.const 2 i32.atomic.rmw8_u.and offset=3 drop)
  (; 0xfe 0x2f ;) (func (export "i32.atomic.rmw16_u.and") i32.const 1 i32.const 2 i32.atomic.rmw16_u.and offset=3 drop)
  (; 0xfe 0x30 ;) (func (export "i64.atomic.rmw8_u.and") i32.const 1 i64.const 2 i64.atomic.rmw8_u.and offset=3 drop)
  (; 0xfe 0x31 ;) (func (export "i64.atomic.rmw16_u.and") i32.const 1 i64.const 2 i64.atomic.rmw16_u.and offset=3 drop)
  (; 0xfe 0x32 ;) (func (export "i64.atomic.rmw32_u.and") i32.const 1 i64.const 2 i64.atomic.rmw32_u.and offset=3 drop)
  (; 0xfe 0x33 ;) (func (export "i32.atomic.rmw.or") i32.const 1 i32.const 2 i32.atomic.rmw.or offset=3 drop)
  (; 0xfe 0x34 ;) (func (export "i64.atomic.rmw.or") i32.const 1 i64.const 2 i64.atomic.rmw.or offset=7 drop)
  (; 0xfe 0x35 ;) (func (export "i32.atomic.rmw8_u.or") i32.const 1 i32.const 2 i32.atomic.rmw8_u.or offset=3 drop)
  (; 0xfe 0x36 ;) (func (export "i32.atomic.rmw16_u.or") i32.const 1 i32.const 2 i32.atomic.rmw16_u.or offset=3 drop)
  (; 0xfe 0x37 ;) (func (export "i64.atomic.rmw8_u.or") i32.const 1 i64.const 2 i64.atomic.rmw8_u.or offset=3 drop)
  (; 0xfe 0x38 ;) (func (export "i64.atomic.rmw16_u.or") i32.const 1 i64.const 2 i64.atomic.rmw16_u.or offset=3 drop)
  (; 0xfe 0x39 ;) (func (export "i64.atomic.rmw32_u.or") i32.const 1 i64.const 2 i64.atomic.rmw32_u.or offset=3 drop)
  (; 0xfe 0x3a ;) (func (export "i32.atomic.rmw.xor") i32.const 1 i32.const 2 i32.atomic.rmw.xor offset=3 drop)
  (; 0xfe 0x3b ;) (func (export "i64.atomic.rmw.xor") i32.const 1 i64.const 2 i64.atomic.rmw.xor offset=7 drop)
  (; 0xfe 0x3c ;) (func (export "i32.atomic.rmw8_u.xor") i32.const 1 i32.const 2 i32.atomic.rmw8_u.xor offset=3 drop)
  (; 0xfe 0x3d ;) (func (export "i32.atomic.rmw16_u.xor") i32.const 1 i32.const 2 i32.atomic.rmw16_u.xor offset=3 drop)
  (; 0xfe 0x3e ;) (func (export "i64.atomic.rmw8_u.xor") i32.const 1 i64.const 2 i64.atomic.rmw8_u.xor offset=3 drop)
  (; 0xfe 0x3f ;) (func (export "i64.atomic.rmw16_u.xor") i32.const 1 i64.const 2 i64.atomic.rmw16_u.xor offset=3 drop)
  (; 0xfe 0x40 ;) (func (export "i64.atomic.rmw32_u.xor") i32.const 1 i64.const 2 i64.atomic.rmw32_u.xor offset=3 drop)
  (; 0xfe 0x41 ;) (func (export "i32.atomic.rmw.xchg") i32.const 1 i32.const 2 i32.atomic.rmw.xchg offset=3 drop)
  (; 0xfe 0x42 ;) (func (export "i64.atomic.rmw.xchg") i32.const 1 i64.const 2 i64.atomic.rmw.xchg offset=7 drop)
  (; 0xfe 0x43 ;) (func (export "i32.atomic.rmw8_u.xchg") i32.const 1 i32.const 2 i32.atomic.rmw8_u.xchg offset=3 drop)
  (; 0xfe 0x44 ;) (func (export "i32.atomic.rmw16_u.xchg") i32.const 1 i32.const 2 i32.atomic.rmw16_u.xchg offset=3 drop)
  (; 0xfe 0x45 ;) (func (export "i64.atomic.rmw8_u.xchg") i32.const 1 i64.const 2 i64.atomic.rmw8_u.xchg offset=3 drop)
  (; 0xfe 0x46 ;) (func (export "i64.atomic.rmw16_u.xchg") i32.const 1 i64.const 2 i64.atomic.rmw16_u.xchg offset=3 drop)
  (; 0xfe 0x47 ;) (func (export "i64.atomic.rmw32_u.xchg") i32.const 1 i64.const 2 i64.atomic.rmw32_u.xchg offset=3 drop)

  (; 0xfe 0x48 ;) (func (export "i32.atomic.rmw.cmpxchg") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw.cmpxchg offset=3 drop)
  (; 0xfe 0x49 ;) (func (export "i64.atomic.rmw.cmpxchg") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw.cmpxchg offset=7 drop)
  (; 0xfe 0x4a ;) (func (export "i32.atomic.rmw8_u.cmpxchg") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw8_u.cmpxchg offset=3 drop)
  (; 0xfe 0x4b ;) (func (export "i32.atomic.rmw16_u.cmpxchg") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw16_u.cmpxchg offset=3 drop)
  (; 0xfe 0x4c ;) (func (export "i64.atomic.rmw8_u.cmpxchg") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw8_u.cmpxchg offset=3 drop)
  (; 0xfe 0x4d ;) (func (export "i64.atomic.rmw16_u.cmpxchg") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw16_u.cmpxchg offset=3 drop)
  (; 0xfe 0x4e ;) (func (export "i64.atomic.rmw32_u.cmpxchg") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw32_u.cmpxchg offset=3 drop)
)

(;; STDOUT ;;;
0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 02                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 00                                        ; num params
000000d: 00                                        ; num results
; type 1
000000e: 60                                        ; func
000000f: 01                                        ; num params
0000010: 7f                                        ; i32
0000011: 00                                        ; num results
0000009: 08                                        ; FIXUP section size
; section "Import" (2)
0000012: 02                                        ; section code
0000013: 00                                        ; section size (guess)
0000014: 01                                        ; num imports
; import header 0
0000015: 04                                        ; string length
0000016: 686f 7374                                host  ; import module name
000001a: 05                                        ; string length
000001b: 7072 696e 74                             print  ; import field name
0000020: 00                                        ; import kind
0000021: 01                                        ; import signature index
0000013: 0e                                        ; FIXUP section size
; section "Function" (3)
0000022: 03                                        ; section code
0000023: 00                                        ; section size (guess)
0000024: fa01                                      ; num functions
0000026: 00                                        ; function 0 signature index
0000027: 00                                        ; function 1 signature index
0000028: 00                                        ; function 2 signature index
0000029: 00                                        ; function 3 signature index
000002a: 00                                        ; function 4 signature index
000002b: 00                                        ; function 5 signature index
000002c: 00                                        ; function 6 signature index
000002d: 00                                        ; function 7 signature index
000002e: 00                                        ; function 8 signature index
000002f: 00                                        ; function 9 signature index
0000030: 00                                        ; function 10 signature index
0000031: 00                                        ; function 11 signature index
0000032: 00                                        ; function 12 signature index
0000033: 00                                        ; function 13 signature index
0000034: 00                                        ; function 14 signature index
0000035: 00                                        ; function 15 signature index
0000036: 00                                        ; function 16 signature index
0000037: 00                                        ; function 17 signature index
0000038: 00                                        ; function 18 signature index
0000039: 00                                        ; function 19 signature index
000003a: 00                                        ; function 20 signature index
000003b: 00                                        ; function 21 signature index
000003c: 00                                        ; function 22 signature index
000003d: 00                                        ; function 23 signature index
000003e: 00                                        ; function 24 signature index
000003f: 00                                        ; function 25 signature index
0000040: 00                                        ; function 26 signature index
0000041: 00                                        ; function 27 signature index
0000042: 00                                        ; function 28 signature index
0000043: 00                                        ; function 29 signature index
0000044: 00                                        ; function 30 signature index
0000045: 00                                        ; function 31 signature index
0000046: 00                                        ; function 32 signature index
0000047: 00                                        ; function 33 signature index
0000048: 00                                        ; function 34 signature index
0000049: 00                                        ; function 35 signature index
000004a: 00                                        ; function 36 signature index
000004b: 00                                        ; function 37 signature index
000004c: 00                                        ; function 38 signature index
000004d: 00                                        ; function 39 signature index
000004e: 00                                        ; function 40 signature index
000004f: 00                                        ; function 41 signature index
0000050: 00                                        ; function 42 signature index
0000051: 00                                        ; function 43 signature index
0000052: 00                                        ; function 44 signature index
0000053: 00                                        ; function 45 signature index
0000054: 00                                        ; function 46 signature index
0000055: 00                                        ; function 47 signature index
0000056: 00                                        ; function 48 signature index
0000057: 00                                        ; function 49 signature index
0000058: 00                                        ; function 50 signature index
0000059: 00                                        ; function 51 signature index
000005a: 00                                        ; function 52 signature index
000005b: 00                                        ; function 53 signature index
000005c: 00                                        ; function 54 signature index
000005d: 00                                        ; function 55 signature index
000005e: 00                                        ; function 56 signature index
000005f: 00                                        ; function 57 signature index
0000060: 00                                        ; function 58 signature index
0000061: 00                                        ; function 59 signature index
0000062: 00                                        ; function 60 signature index
0000063: 00                                        ; function 61 signature index
0000064: 00                                        ; function 62 signature index
0000065: 00                                        ; function 63 signature index
0000066: 00                                        ; function 64 signature index
0000067: 00                                        ; function 65 signature index
0000068: 00                                        ; function 66 signature index
0000069: 00                                        ; function 67 signature index
000006a: 00                                        ; function 68 signature index
000006b: 00                                        ; function 69 signature index
000006c: 00                                        ; function 70 signature index
000006d: 00                                        ; function 71 signature index
000006e: 00                                        ; function 72 signature index
000006f: 00                                        ; function 73 signature index
0000070: 00                                        ; function 74 signature index
0000071: 00                                        ; function 75 signature index
0000072: 00                                        ; function 76 signature index
0000073: 00                                        ; function 77 signature index
0000074: 00                                        ; function 78 signature index
0000075: 00                                        ; function 79 signature index
0000076: 00                                        ; function 80 signature index
0000077: 00                                        ; function 81 signature index
0000078: 00                                        ; function 82 signature index
0000079: 00                                        ; function 83 signature index
000007a: 00                                        ; function 84 signature index
000007b: 00                                        ; function 85 signature index
000007c: 00                                        ; function 86 signature index
000007d: 00                                        ; function 87 signature index
000007e: 00                                        ; function 88 signature index
000007f: 00                                        ; function 89 signature index
0000080: 00                                        ; function 90 signature index
0000081: 00                                        ; function 91 signature index
0000082: 00                                        ; function 92 signature index
0000083: 00                                        ; function 93 signature index
0000084: 00                                        ; function 94 signature index
0000085: 00                                        ; function 95 signature index
0000086: 00                                        ; function 96 signature index
0000087: 00                                        ; function 97 signature index
0000088: 00                                        ; function 98 signature index
0000089: 00                                        ; function 99 signature index
000008a: 00                                        ; function 100 signature index
000008b: 00                                        ; function 101 signature index
000008c: 00                                        ; function 102 signature index
000008d: 00                                        ; function 103 signature index
000008e: 00                                        ; function 104 signature index
000008f: 00                                        ; function 105 signature index
0000090: 00                                        ; function 106 signature index
0000091: 00                                        ; function 107 signature index
0000092: 00                                        ; function 108 signature index
0000093: 00                                        ; function 109 signature index
0000094: 00                                        ; function 110 signature index
0000095: 00                                        ; function 111 signature index
0000096: 00                                        ; function 112 signature index
0000097: 00                                        ; function 113 signature index
0000098: 00                                        ; function 114 signature index
0000099: 00                                        ; function 115 signature index
000009a: 00                                        ; function 116 signature index
000009b: 00                                        ; function 117 signature index
000009c: 00                                        ; function 118 signature index
000009d: 00                                        ; function 119 signature index
000009e: 00                                        ; function 120 signature index
000009f: 00                                        ; function 121 signature index
00000a0: 00                                        ; function 122 signature index
00000a1: 00                                        ; function 123 signature index
00000a2: 00                                        ; function 124 signature index
00000a3: 00                                        ; function 125 signature index
00000a4: 00                                        ; function 126 signature index
00000a5: 00                                        ; function 127 signature index
00000a6: 00                                        ; function 128 signature index
00000a7: 00                                        ; function 129 signature index
00000a8: 00                                        ; function 130 signature index
00000a9: 00                                        ; function 131 signature index
00000aa: 00                                        ; function 132 signature index
00000ab: 00                                        ; function 133 signature index
00000ac: 00                                        ; function 134 signature index
00000ad: 00                                        ; function 135 signature index
00000ae: 00                                        ; function 136 signature index
00000af: 00                                        ; function 137 signature index
00000b0: 00                                        ; function 138 signature index
00000b1: 00                                        ; function 139 signature index
00000b2: 00                                        ; function 140 signature index
00000b3: 00                                        ; function 141 signature index
00000b4: 00                                        ; function 142 signature index
00000b5: 00                                        ; function 143 signature index
00000b6: 00                                        ; function 144 signature index
00000b7: 00                                        ; function 145 signature index
00000b8: 00                                        ; function 146 signature index
00000b9: 00                                        ; function 147 signature index
00000ba: 00                                        ; function 148 signature index
00000bb: 00                                        ; function 149 signature index
00000bc: 00                                        ; function 150 signature index
00000bd: 00                                        ; function 151 signature index
00000be: 00                                        ; function 152 signature index
00000bf: 00                                        ; function 153 signature index
00000c0: 00                                        ; function 154 signature index
00000c1: 00                                        ; function 155 signature index
00000c2: 00                                        ; function 156 signature index
00000c3: 00                                        ; function 157 signature index
00000c4: 00                                        ; function 158 signature index
00000c5: 00                                        ; function 159 signature index
00000c6: 00                                        ; function 160 signature index
00000c7: 00                                        ; function 161 signature index
00000c8: 00                                        ; function 162 signature index
00000c9: 00                                        ; function 163 signature index
00000ca: 00                                        ; function 164 signature index
00000cb: 00                                        ; function 165 signature index
00000cc: 00                                        ; function 166 signature index
00000cd: 00                                        ; function 167 signature index
00000ce: 00                                        ; function 168 signature index
00000cf: 00                                        ; function 169 signature index
00000d0: 00                                        ; function 170 signature index
00000d1: 00                                        ; function 171 signature index
00000d2: 00                                        ; function 172 signature index
00000d3: 00                                        ; function 173 signature index
00000d4: 00                                        ; function 174 signature index
00000d5: 00                                        ; function 175 signature index
00000d6: 00                                        ; function 176 signature index
00000d7: 00                                        ; function 177 signature index
00000d8: 00                                        ; function 178 signature index
00000d9: 00                                        ; function 179 signature index
00000da: 00                                        ; function 180 signature index
00000db: 00                                        ; function 181 signature index
00000dc: 00                                        ; function 182 signature index
00000dd: 00                                        ; function 183 signature index
00000de: 00                                        ; function 184 signature index
00000df: 00                                        ; function 185 signature index
00000e0: 00                                        ; function 186 signature index
00000e1: 00                                        ; function 187 signature index
00000e2: 00                                        ; function 188 signature index
00000e3: 00                                        ; function 189 signature index
00000e4: 00                                        ; function 190 signature index
00000e5: 00                                        ; function 191 signature index
00000e6: 00                                        ; function 192 signature index
00000e7: 00                                        ; function 193 signature index
00000e8: 00                                        ; function 194 signature index
00000e9: 00                                        ; function 195 signature index
00000ea: 00                                        ; function 196 signature index
00000eb: 00                                        ; function 197 signature index
00000ec: 00                                        ; function 198 signature index
00000ed: 00                                        ; function 199 signature index
00000ee: 00                                        ; function 200 signature index
00000ef: 00                                        ; function 201 signature index
00000f0: 00                                        ; function 202 signature index
00000f1: 00                                        ; function 203 signature index
00000f2: 00                                        ; function 204 signature index
00000f3: 00                                        ; function 205 signature index
00000f4: 00                                        ; function 206 signature index
00000f5: 00                                        ; function 207 signature index
00000f6: 00                                        ; function 208 signature index
00000f7: 00                                        ; function 209 signature index
00000f8: 00                                        ; function 210 signature index
00000f9: 00                                        ; function 211 signature index
00000fa: 00                                        ; function 212 signature index
00000fb: 00                                        ; function 213 signature index
00000fc: 00                                        ; function 214 signature index
00000fd: 00                                        ; function 215 signature index
00000fe: 00                                        ; function 216 signature index
00000ff: 00                                        ; function 217 signature index
0000100: 00                                        ; function 218 signature index
0000101: 00                                        ; function 219 signature index
0000102: 00                                        ; function 220 signature index
0000103: 00                                        ; function 221 signature index
0000104: 00                                        ; function 222 signature index
0000105: 00                                        ; function 223 signature index
0000106: 00                                        ; function 224 signature index
0000107: 00                                        ; function 225 signature index
0000108: 00                                        ; function 226 signature index
0000109: 00                                        ; function 227 signature index
000010a: 00                                        ; function 228 signature index
000010b: 00                                        ; function 229 signature index
000010c: 00                                        ; function 230 signature index
000010d: 00                                        ; function 231 signature index
000010e: 00                                        ; function 232 signature index
000010f: 00                                        ; function 233 signature index
0000110: 00                                        ; function 234 signature index
0000111: 00                                        ; function 235 signature index
0000112: 00                                        ; function 236 signature index
0000113: 00                                        ; function 237 signature index
0000114: 00                                        ; function 238 signature index
0000115: 00                                        ; function 239 signature index
0000116: 00                                        ; function 240 signature index
0000117: 00                                        ; function 241 signature index
0000118: 00                                        ; function 242 signature index
0000119: 00                                        ; function 243 signature index
000011a: 00                                        ; function 244 signature index
000011b: 00                                        ; function 245 signature index
000011c: 00                                        ; function 246 signature index
000011d: 00                                        ; function 247 signature index
000011e: 00                                        ; function 248 signature index
000011f: 00                                        ; function 249 signature index
; move data: [24, 120) -> [25, 121)
0000023: fc01                                      ; FIXUP section size
; section "Table" (4)
0000121: 04                                        ; section code
0000122: 00                                        ; section size (guess)
0000123: 01                                        ; num tables
; table 0
0000124: 70                                        ; anyfunc
0000125: 01                                        ; limits: flags
0000126: 02                                        ; limits: initial
0000127: 02                                        ; limits: max
0000122: 05                                        ; FIXUP section size
; section "Memory" (5)
0000128: 05                                        ; section code
0000129: 00                                        ; section size (guess)
000012a: 01                                        ; num memories
; memory 0
000012b: 03                                        ; limits: flags
000012c: 01                                        ; limits: initial
000012d: 01                                        ; limits: max
0000129: 04                                        ; FIXUP section size
; section "Global" (6)
000012e: 06                                        ; section code
000012f: 00                                        ; section size (guess)
0000130: 01                                        ; num globals
0000131: 7f                                        ; i32
0000132: 01                                        ; global mutability
0000133: 41                                        ; i32.const
0000134: 00                                        ; i32 literal
0000135: 0b                                        ; end
000012f: 06                                        ; FIXUP section size
; section "Export" (7)
0000136: 07                                        ; section code
0000137: 00                                        ; section size (guess)
0000138: f901                                      ; num exports
000013a: 0b                                        ; string length
000013b: 756e 7265 6163 6861 626c 65              unreachable  ; export name
0000146: 00                                        ; export kind
0000147: 02                                        ; export func index
0000148: 02                                        ; string length
0000149: 6272                                     br  ; export name
000014b: 00                                        ; export kind
000014c: 03                                        ; export func index
000014d: 08                                        ; string length
000014e: 6272 5f74 6162 6c65                      br_table  ; export name
0000156: 00                                        ; export kind
0000157: 04                                        ; export func index
0000158: 06                                        ; string length
0000159: 7265 7475 726e                           return  ; export name
000015f: 00                                        ; export kind
0000160: 05                                        ; export func index
0000161: 04                                        ; string length
0000162: 6361 6c6c                                call  ; export name
0000166: 00                                        ; export kind
0000167: 06                                        ; export func index
0000168: 0d                                        ; string length
0000169: 6361 6c6c 5f69 6e64 6972 6563 74         call_indirect  ; export name
0000176: 00                                        ; export kind
0000177: 07                                        ; export func index
0000178: 04                                        ; string length
0000179: 6472 6f70                                drop  ; export name
000017d: 00                                        ; export kind
000017e: 08                                        ; export func index
000017f: 06                                        ; string length
0000180: 7365 6c65 6374                           select  ; export name
0000186: 00                                        ; export kind
0000187: 09                                        ; export func index
0000188: 09                                        ; string length
0000189: 6765 745f 6c6f 6361 6c                   get_local  ; export name
0000192: 00                                        ; export kind
0000193: 0a                                        ; export func index
0000194: 09                                        ; string length
0000195: 7365 745f 6c6f 6361 6c                   set_local  ; export name
000019e: 00                                        ; export kind
000019f: 0b                                        ; export func index
00001a0: 09                                        ; string length
00001a1: 7465 655f 6c6f 6361 6c                   tee_local  ; export name
00001aa: 00                                        ; export kind
00001ab: 0c                                        ; export func index
00001ac: 0a                                        ; string length
00001ad: 6765 745f 676c 6f62 616c                 get_global  ; export name
00001b7: 00                                        ; export kind
00001b8: 0d                                        ; export func index
00001b9: 0a                                        ; string length
00001ba: 7365 745f 676c 6f62 616c                 set_global  ; export name
00001c4: 00                                        ; export kind
00001c5: 0e                                        ; export func index
00001c6: 08                                        ; string length
00001c7: 6933 322e 6c6f 6164                      i32.load  ; export name
00001cf: 00                                        ; export kind
00001d0: 0f                                        ; export func index
00001d1: 08                                        ; string length
00001d2: 6936 342e 6c6f 6164                      i64.load  ; export name
00001da: 00                                        ; export kind
00001db: 10                                        ; export func index
00001dc: 08                                        ; string length
00001dd: 6633 322e 6c6f 6164                      f32.load  ; export name
00001e5: 00                                        ; export kind
00001e6: 11                                        ; export func index
00001e7: 08                                        ; string length
00001e8: 6636 342e 6c6f 6164                      f64.load  ; export name
00001f0: 00                                        ; export kind
00001f1: 12                                        ; export func index
00001f2: 0b                                        ; string length
00001f3: 6933 322e 6c6f 6164 385f 73              i32.load8_s  ; export name
00001fe: 00                                        ; export kind
00001ff: 13                                        ; export func index
0000200: 0b                                        ; string length
0000201: 6933 322e 6c6f 6164 385f 75              i32.load8_u  ; export name
000020c: 00                                        ; export kind
000020d: 14                                        ; export func index
000020e: 0c                                        ; string length
000020f: 6933 322e 6c6f 6164 3136 5f73            i32.load16_s  ; export name
000021b: 00                                        ; export kind
000021c: 15                                        ; export func index
000021d: 0c                                        ; string length
000021e: 6933 322e 6c6f 6164 3136 5f75            i32.load16_u  ; export name
000022a: 00                                        ; export kind
000022b: 16                                        ; export func index
000022c: 0b                                        ; string length
000022d: 6936 342e 6c6f 6164 385f 73              i64.load8_s  ; export name
0000238: 00                                        ; export kind
0000239: 17                                        ; export func index
000023a: 0b                                        ; string length
000023b: 6936 342e 6c6f 6164 385f 75              i64.load8_u  ; export name
0000246: 00                                        ; export kind
0000247: 18                                        ; export func index
0000248: 0c                                        ; string length
0000249: 6936 342e 6c6f 6164 3136 5f73            i64.load16_s  ; export name
0000255: 00                                        ; export kind
0000256: 19                                        ; export func index
0000257: 0c                                        ; string length
0000258: 6936 342e 6c6f 6164 3136 5f75            i64.load16_u  ; export name
0000264: 00                                        ; export kind
0000265: 1a                                        ; export func index
0000266: 0c                                        ; string length
0000267: 6936 342e 6c6f 6164 3332 5f73            i64.load32_s  ; export name
0000273: 00                                        ; export kind
0000274: 1b                                        ; export func index
0000275: 0c                                        ; string length
0000276: 6936 342e 6c6f 6164 3332 5f75            i64.load32_u  ; export name
0000282: 00                                        ; export kind
0000283: 1c                                        ; export func index
0000284: 09                                        ; string length
0000285: 6933 322e 7374 6f72 65                   i32.store  ; export name
000028e: 00                                        ; export kind
000028f: 1d                                        ; export func index
0000290: 09                                        ; string length
0000291: 6936 342e 7374 6f72 65                   i64.store  ; export name
000029a: 00                                        ; export kind
000029b: 1e                                        ; export func index
000029c: 09                                        ; string length
000029d: 6633 322e 7374 6f72 65                   f32.store  ; export name
00002a6: 00                                        ; export kind
00002a7: 1f                                        ; export func index
00002a8: 09                                        ; string length
00002a9: 6636 342e 7374 6f72 65                   f64.store  ; export name
00002b2: 00                                        ; export kind
00002b3: 20                                        ; export func index
00002b4: 0a                                        ; string length
00002b5: 6933 322e 7374 6f72 6538                 i32.store8  ; export name
00002bf: 00                                        ; export kind
00002c0: 21                                        ; export func index
00002c1: 0b                                        ; string length
00002c2: 6933 322e 7374 6f72 6531 36              i32.store16  ; export name
00002cd: 00                                        ; export kind
00002ce: 22                                        ; export func index
00002cf: 0a                                        ; string length
00002d0: 6936 342e 7374 6f72 6538                 i64.store8  ; export name
00002da: 00                                        ; export kind
00002db: 23                                        ; export func index
00002dc: 0b                                        ; string length
00002dd: 6936 342e 7374 6f72 6531 36              i64.store16  ; export name
00002e8: 00                                        ; export kind
00002e9: 24                                        ; export func index
00002ea: 0b                                        ; string length
00002eb: 6936 342e 7374 6f72 6533 32              i64.store32  ; export name
00002f6: 00                                        ; export kind
00002f7: 25                                        ; export func index
00002f8: 0e                                        ; string length
00002f9: 6375 7272 656e 745f 6d65 6d6f 7279       current_memory  ; export name
0000307: 00                                        ; export kind
0000308: 26                                        ; export func index
0000309: 0b                                        ; string length
000030a: 6772 6f77 5f6d 656d 6f72 79              grow_memory  ; export name
0000315: 00                                        ; export kind
0000316: 27                                        ; export func index
0000317: 09                                        ; string length
0000318: 6933 322e 636f 6e73 74                   i32.const  ; export name
0000321: 00                                        ; export kind
0000322: 28                                        ; export func index
0000323: 09                                        ; string length
0000324: 6936 342e 636f 6e73 74                   i64.const  ; export name
000032d: 00                                        ; export kind
000032e: 29                                        ; export func index
000032f: 09                                        ; string length
0000330: 6633 322e 636f 6e73 74                   f32.const  ; export name
0000339: 00                                        ; export kind
000033a: 2a                                        ; export func index
000033b: 09                                        ; string length
000033c: 6636 342e 636f 6e73 74                   f64.const  ; export name
0000345: 00                                        ; export kind
0000346: 2b                                        ; export func index
0000347: 07                                        ; string length
0000348: 6933 322e 6571 7a                        i32.eqz  ; export name
000034f: 00                                        ; export kind
0000350: 2c                                        ; export func index
0000351: 06                                        ; string length
0000352: 6933 322e 6571                           i32.eq  ; export name
0000358: 00                                        ; export kind
0000359: 2d                                        ; export func index
000035a: 06                                        ; string length
000035b: 6933 322e 6e65                           i32.ne  ; export name
0000361: 00                                        ; export kind
0000362: 2e                                        ; export func index
0000363: 08                                        ; string length
0000364: 6933 322e 6c74 5f73                      i32.lt_s  ; export name
000036c: 00                                        ; export kind
000036d: 2f                                        ; export func index
000036e: 08                                        ; string length
000036f: 6933 322e 6c74 5f75                      i32.lt_u  ; export name
0000377: 00                                        ; export kind
0000378: 30                                        ; export func index
0000379: 08                                        ; string length
000037a: 6933 322e 6774 5f73                      i32.gt_s  ; export name
0000382: 00                                        ; export kind
0000383: 31                                        ; export func index
0000384: 08                                        ; string length
0000385: 6933 322e 6774 5f75                      i32.gt_u  ; export name
000038d: 00                                        ; export kind
000038e: 32                                        ; export func index
000038f: 08                                        ; string length
0000390: 6933 322e 6c65 5f73                      i32.le_s  ; export name
0000398: 00                                        ; export kind
0000399: 33                                        ; export func index
000039a: 08                                        ; string length
000039b: 6933 322e 6c65 5f75                      i32.le_u  ; export name
00003a3: 00                                        ; export kind
00003a4: 34                                        ; export func index
00003a5: 08                                        ; string length
00003a6: 6933 322e 6765 5f73                      i32.ge_s  ; export name
00003ae: 00                                        ; export kind
00003af: 35                                        ; export func index
00003b0: 08                                        ; string length
00003b1: 6933 322e 6765 5f75                      i32.ge_u  ; export name
00003b9: 00                                        ; export kind
00003ba: 36                                        ; export func index
00003bb: 07                                        ; string length
00003bc: 6936 342e 6571 7a                        i64.eqz  ; export name
00003c3: 00                                        ; export kind
00003c4: 37                                        ; export func index
00003c5: 06                                        ; string length
00003c6: 6936 342e 6571                           i64.eq  ; export name
00003cc: 00                                        ; export kind
00003cd: 38                                        ; export func index
00003ce: 06                                        ; string length
00003cf: 6936 342e 6e65                           i64.ne  ; export name
00003d5: 00                                        ; export kind
00003d6: 39                                        ; export func index
00003d7: 08                                        ; string length
00003d8: 6936 342e 6c74 5f73                      i64.lt_s  ; export name
00003e0: 00                                        ; export kind
00003e1: 3a                                        ; export func index
00003e2: 08                                        ; string length
00003e3: 6936 342e 6c74 5f75                      i64.lt_u  ; export name
00003eb: 00                                        ; export kind
00003ec: 3b                                        ; export func index
00003ed: 08                                        ; string length
00003ee: 6936 342e 6774 5f73                      i64.gt_s  ; export name
00003f6: 00                                        ; export kind
00003f7: 3c                                        ; export func index
00003f8: 08                                        ; string length
00003f9: 6936 342e 6774 5f75                      i64.gt_u  ; export name
0000401: 00                                        ; export kind
0000402: 3d                                        ; export func index
0000403: 08                                        ; string length
0000404: 6936 342e 6c65 5f73                      i64.le_s  ; export name
000040c: 00                                        ; export kind
000040d: 3e                                        ; export func index
000040e: 08                                        ; string length
000040f: 6936 342e 6c65 5f75                      i64.le_u  ; export name
0000417: 00                                        ; export kind
0000418: 3f                                        ; export func index
0000419: 08                                        ; string length
000041a: 6936 342e 6765 5f73                      i64.ge_s  ; export name
0000422: 00                                        ; export kind
0000423: 40                                        ; export func index
0000424: 08                                        ; string length
0000425: 6936 342e 6765 5f75                      i64.ge_u  ; export name
000042d: 00                                        ; export kind
000042e: 41                                        ; export func index
000042f: 06                                        ; string length
0000430: 6633 322e 6571                           f32.eq  ; export name
0000436: 00                                        ; export kind
0000437: 42                                        ; export func index
0000438: 06                                        ; string length
0000439: 6633 322e 6e65                           f32.ne  ; export name
000043f: 00                                        ; export kind
0000440: 43                                        ; export func index
0000441: 06                                        ; string length
0000442: 6633 322e 6c74                           f32.lt  ; export name
0000448: 00                                        ; export kind
0000449: 44                                        ; export func index
000044a: 06                                        ; string length
000044b: 6633 322e 6774                           f32.gt  ; export name
0000451: 00                                        ; export kind
0000452: 45                                        ; export func index
0000453: 06                                        ; string length
0000454: 6633 322e 6c65                           f32.le  ; export name
000045a: 00                                        ; export kind
000045b: 46                                        ; export func index
000045c: 06                                        ; string length
000045d: 6633 322e 6765                           f32.ge  ; export name
0000463: 00                                        ; export kind
0000464: 47                                        ; export func index
0000465: 06                                        ; string length
0000466: 6636 342e 6571                           f64.eq  ; export name
000046c: 00                                        ; export kind
000046d: 48                                        ; export func index
000046e: 06                                        ; string length
000046f: 6636 342e 6e65                           f64.ne  ; export name
0000475: 00                                        ; export kind
0000476: 49                                        ; export func index
0000477: 06                                        ; string length
0000478: 6636 342e 6c74                           f64.lt  ; export name
000047e: 00                                        ; export kind
000047f: 4a                                        ; export func index
0000480: 06                                        ; string length
0000481: 6636 342e 6774                           f64.gt  ; export name
0000487: 00                                        ; export kind
0000488: 4b                                        ; export func index
0000489: 06                                        ; string length
000048a: 6636 342e 6c65                           f64.le  ; export name
0000490: 00                                        ; export kind
0000491: 4c                                        ; export func index
0000492: 06                                        ; string length
0000493: 6636 342e 6765                           f64.ge  ; export name
0000499: 00                                        ; export kind
000049a: 4d                                        ; export func index
000049b: 07                                        ; string length
000049c: 6933 322e 636c 7a                        i32.clz  ; export name
00004a3: 00                                        ; export kind
00004a4: 4e                                        ; export func index
00004a5: 07                                        ; string length
00004a6: 6933 322e 6374 7a                        i32.ctz  ; export name
00004ad: 00                                        ; export kind
00004ae: 4f                                        ; export func index
00004af: 0a                                        ; string length
00004b0: 6933 322e 706f 7063 6e74                 i32.popcnt  ; export name
00004ba: 00                                        ; export kind
00004bb: 50                                        ; export func index
00004bc: 07                                        ; string length
00004bd: 6933 322e 6164 64                        i32.add  ; export name
00004c4: 00                                        ; export kind
00004c5: 51                                        ; export func index
00004c6: 07                                        ; string length
00004c7: 6933 322e 7375 62                        i32.sub  ; export name
00004ce: 00                                        ; export kind
00004cf: 52                                        ; export func index
00004d0: 07                                        ; string length
00004d1: 6933 322e 6d75 6c                        i32.mul  ; export name
00004d8: 00                                        ; export kind
00004d9: 53                                        ; export func index
00004da: 09                                        ; string length
00004db: 6933 322e 6469 765f 73                   i32.div_s  ; export name
00004e4: 00                                        ; export kind
00004e5: 54                                        ; export func index
00004e6: 09                                        ; string length
00004e7: 6933 322e 6469 765f 75                   i32.div_u  ; export name
00004f0: 00                                        ; export kind
00004f1: 55                                        ; export func index
00004f2: 09                                        ; string length
00004f3: 6933 322e 7265 6d5f 73                   i32.rem_s  ; export name
00004fc: 00                                        ; export kind
00004fd: 56                                        ; export func index
00004fe: 09                                        ; string length
00004ff: 6933 322e 7265 6d5f 75                   i32.rem_u  ; export name
0000508: 00                                        ; export kind
0000509: 57                                        ; export func index
000050a: 07                                        ; string length
000050b: 6933 322e 616e 64                        i32.and  ; export name
0000512: 00                                        ; export kind
0000513: 58                                        ; export func index
0000514: 06                                        ; string length
0000515: 6933 322e 6f72                           i32.or  ; export name
000051b: 00                                        ; export kind
000051c: 59                                        ; export func index
000051d: 07                                        ; string length
000051e: 6933 322e 786f 72                        i32.xor  ; export name
0000525: 00                                        ; export kind
0000526: 5a                                        ; export func index
0000527: 07                                        ; string length
0000528: 6933 322e 7368 6c                        i32.shl  ; export name
000052f: 00                                        ; export kind
0000530: 5b                                        ; export func index
0000531: 09                                        ; string length
0000532: 6933 322e 7368 725f 73                   i32.shr_s  ; export name
000053b: 00                                        ; export kind
000053c: 5c                                        ; export func index
000053d: 09                                        ; string length
000053e: 6933 322e 7368 725f 75                   i32.shr_u  ; export name
0000547: 00                                        ; export kind
0000548: 5d                                        ; export func index
0000549: 08                                        ; string length
000054a: 6933 322e 726f 746c                      i32.rotl  ; export name
0000552: 00                                        ; export kind
0000553: 5e                                        ; export func index
0000554: 08                                        ; string length
0000555: 6933 322e 726f 7472                      i32.rotr  ; export name
000055d: 00                                        ; export kind
000055e: 5f                                        ; export func index
000055f: 07                                        ; string length
0000560: 6936 342e 636c 7a                        i64.clz  ; export name
0000567: 00                                        ; export kind
0000568: 60                                        ; export func index
0000569: 07                                        ; string length
000056a: 6936 342e 6374 7a                        i64.ctz  ; export name
0000571: 00                                        ; export kind
0000572: 61                                        ; export func index
0000573: 0a                                        ; string length
0000574: 6936 342e 706f 7063 6e74                 i64.popcnt  ; export name
000057e: 00                                        ; export kind
000057f: 62                                        ; export func index
0000580: 07                                        ; string length
0000581: 6936 342e 6164 64                        i64.add  ; export name
0000588: 00                                        ; export kind
0000589: 63                                        ; export func index
000058a: 07                                        ; string length
000058b: 6936 342e 7375 62                        i64.sub  ; export name
0000592: 00                                        ; export kind
0000593: 64                                        ; export func index
0000594: 07                                        ; string length
0000595: 6936 342e 6d75 6c                        i64.mul  ; export name
000059c: 00                                        ; export kind
000059d: 65                                        ; export func index
000059e: 09                                        ; string length
000059f: 6936 342e 6469 765f 73                   i64.div_s  ; export name
00005a8: 00                                        ; export kind
00005a9: 66                                        ; export func index
00005aa: 09                                        ; string length
00005ab: 6936 342e 6469 765f 75                   i64.div_u  ; export name
00005b4: 00                                        ; export kind
00005b5: 67                                        ; export func index
00005b6: 09                                        ; string length
00005b7: 6936 342e 7265 6d5f 73                   i64.rem_s  ; export name
00005c0: 00                                        ; export kind
00005c1: 68                                        ; export func index
00005c2: 09                                        ; string length
00005c3: 6936 342e 7265 6d5f 75                   i64.rem_u  ; export name
00005cc: 00                                        ; export kind
00005cd: 69                                        ; export func index
00005ce: 07                                        ; string length
00005cf: 6936 342e 616e 64                        i64.and  ; export name
00005d6: 00                                        ; export kind
00005d7: 6a                                        ; export func index
00005d8: 06                                        ; string length
00005d9: 6936 342e 6f72                           i64.or  ; export name
00005df: 00                                        ; export kind
00005e0: 6b                                        ; export func index
00005e1: 07                                        ; string length
00005e2: 6936 342e 786f 72                        i64.xor  ; export name
00005e9: 00                                        ; export kind
00005ea: 6c                                        ; export func index
00005eb: 07                                        ; string length
00005ec: 6936 342e 7368 6c                        i64.shl  ; export name
00005f3: 00                                        ; export kind
00005f4: 6d                                        ; export func index
00005f5: 09                                        ; string length
00005f6: 6936 342e 7368 725f 73                   i64.shr_s  ; export name
00005ff: 00                                        ; export kind
0000600: 6e                                        ; export func index
0000601: 09                                        ; string length
0000602: 6936 342e 7368 725f 75                   i64.shr_u  ; export name
000060b: 00                                        ; export kind
000060c: 6f                                        ; export func index
000060d: 08                                        ; string length
000060e: 6936 342e 726f 746c                      i64.rotl  ; export name
0000616: 00                                        ; export kind
0000617: 70                                        ; export func index
0000618: 08                                        ; string length
0000619: 6936 342e 726f 7472                      i64.rotr  ; export name
0000621: 00                                        ; export kind
0000622: 71                                        ; export func index
0000623: 07                                        ; string length
0000624: 6633 322e 6162 73                        f32.abs  ; export name
000062b: 00                                        ; export kind
000062c: 72                                        ; export func index
000062d: 07                                        ; string length
000062e: 6633 322e 6e65 67                        f32.neg  ; export name
0000635: 00                                        ; export kind
0000636: 73                                        ; export func index
0000637: 08                                        ; string length
0000638: 6633 322e 6365 696c                      f32.ceil  ; export name
0000640: 00                                        ; export kind
0000641: 74                                        ; export func index
0000642: 09                                        ; string length
0000643: 6633 322e 666c 6f6f 72                   f32.floor  ; export name
000064c: 00                                        ; export kind
000064d: 75                                        ; export func index
000064e: 09                                        ; string length
000064f: 6633 322e 7472 756e 63                   f32.trunc  ; export name
0000658: 00                                        ; export kind
0000659: 76                                        ; export func index
000065a: 0b                                        ; string length
000065b: 6633 322e 6e65 6172 6573 74              f32.nearest  ; export name
0000666: 00                                        ; export kind
0000667: 77                                        ; export func index
0000668: 08                                        ; string length
0000669: 6633 322e 7371 7274                      f32.sqrt  ; export name
0000671: 00                                        ; export kind
0000672: 78                                        ; export func index
0000673: 07                                        ; string length
0000674: 6633 322e 6164 64                        f32.add  ; export name
000067b: 00                                        ; export kind
000067c: 79                                        ; export func index
000067d: 07                                        ; string length
000067e: 6633 322e 7375 62                        f32.sub  ; export name
0000685: 00                                        ; export kind
0000686: 7a                                        ; export func index
0000687: 07                                        ; string length
0000688: 6633 322e 6d75 6c                        f32.mul  ; export name
000068f: 00                                        ; export kind
0000690: 7b                                        ; export func index
0000691: 07                                        ; string length
0000692: 6633 322e 6469 76                        f32.div  ; export name
0000699: 00                                        ; export kind
000069a: 7c                                        ; export func index
000069b: 07                                        ; string length
000069c: 6633 322e 6d69 6e                        f32.min  ; export name
00006a3: 00                                        ; export kind
00006a4: 7d                                        ; export func index
00006a5: 07                                        ; string length
00006a6: 6633 322e 6d61 78                        f32.max  ; export name
00006ad: 00                                        ; export kind
00006ae: 7e                                        ; export func index
00006af: 0c                                        ; string length
00006b0: 6633 322e 636f 7079 7369 676e            f32.copysign  ; export name
00006bc: 00                                        ; export kind
00006bd: 7f                                        ; export func index
00006be: 07                                        ; string length
00006bf: 6636 342e 6162 73                        f64.abs  ; export name
00006c6: 00                                        ; export kind
00006c7: 8001                                      ; export func index
00006c9: 07                                        ; string length
00006ca: 6636 342e 6e65 67                        f64.neg  ; export name
00006d1: 00                                        ; export kind
00006d2: 8101                                      ; export func index
00006d4: 08                                        ; string length
00006d5: 6636 342e 6365 696c                      f64.ceil  ; export name
00006dd: 00                                        ; export kind
00006de: 8201                                      ; export func index
00006e0: 09                                        ; string length
00006e1: 6636 342e 666c 6f6f 72                   f64.floor  ; export name
00006ea: 00                                        ; export kind
00006eb: 8301                                      ; export func index
00006ed: 09                                        ; string length
00006ee: 6636 342e 7472 756e 63                   f64.trunc  ; export name
00006f7: 00                                        ; export kind
00006f8: 8401                                      ; export func index
00006fa: 0b                                        ; string length
00006fb: 6636 342e 6e65 6172 6573 74              f64.nearest  ; export name
0000706: 00                                        ; export kind
0000707: 8501                                      ; export func index
0000709: 08                                        ; string length
000070a: 6636 342e 7371 7274                      f64.sqrt  ; export name
0000712: 00                                        ; export kind
0000713: 8601                                      ; export func index
0000715: 07                                        ; string length
0000716: 6636 342e 6164 64                        f64.add  ; export name
000071d: 00                                        ; export kind
000071e: 8701                                      ; export func index
0000720: 07                                        ; string length
0000721: 6636 342e 7375 62                        f64.sub  ; export name
0000728: 00                                        ; export kind
0000729: 8801                                      ; export func index
000072b: 07                                        ; string length
000072c: 6636 342e 6d75 6c                        f64.mul  ; export name
0000733: 00                                        ; export kind
0000734: 8901                                      ; export func index
0000736: 07                                        ; string length
0000737: 6636 342e 6469 76                        f64.div  ; export name
000073e: 00                                        ; export kind
000073f: 8a01                                      ; export func index
0000741: 07                                        ; string length
0000742: 6636 342e 6d69 6e                        f64.min  ; export name
0000749: 00                                        ; export kind
000074a: 8b01                                      ; export func index
000074c: 07                                        ; string length
000074d: 6636 342e 6d61 78                        f64.max  ; export name
0000754: 00                                        ; export kind
0000755: 8c01                                      ; export func index
0000757: 0c                                        ; string length
0000758: 6636 342e 636f 7079 7369 676e            f64.copysign  ; export name
0000764: 00                                        ; export kind
0000765: 8d01                                      ; export func index
0000767: 0c                                        ; string length
0000768: 6933 322e 7772 6170 2f69 3634            i32.wrap/i64  ; export name
0000774: 00                                        ; export kind
0000775: 8e01                                      ; export func index
0000777: 0f                                        ; string length
0000778: 6933 322e 7472 756e 635f 732f 6633 32    i32.trunc_s/f32  ; export name
0000787: 00                                        ; export kind
0000788: 8f01                                      ; export func index
000078a: 0f                                        ; string length
000078b: 6933 322e 7472 756e 635f 752f 6633 32    i32.trunc_u/f32  ; export name
000079a: 00                                        ; export kind
000079b: 9001                                      ; export func index
000079d: 0f                                        ; string length
000079e: 6933 322e 7472 756e 635f 732f 6636 34    i32.trunc_s/f64  ; export name
00007ad: 00                                        ; export kind
00007ae: 9101                                      ; export func index
00007b0: 0f                                        ; string length
00007b1: 6933 322e 7472 756e 635f 752f 6636 34    i32.trunc_u/f64  ; export name
00007c0: 00                                        ; export kind
00007c1: 9201                                      ; export func index
00007c3: 10                                        ; string length
00007c4: 6936 342e 6578 7465 6e64 5f73 2f69 3332  i64.extend_s/i32  ; export name
00007d4: 00                                        ; export kind
00007d5: 9301                                      ; export func index
00007d7: 10                                        ; string length
00007d8: 6936 342e 6578 7465 6e64 5f75 2f69 3332  i64.extend_u/i32  ; export name
00007e8: 00                                        ; export kind
00007e9: 9401                                      ; export func index
00007eb: 0f                                        ; string length
00007ec: 6936 342e 7472 756e 635f 732f 6633 32    i64.trunc_s/f32  ; export name
00007fb: 00                                        ; export kind
00007fc: 9501                                      ; export func index
00007fe: 0f                                        ; string length
00007ff: 6936 342e 7472 756e 635f 752f 6633 32    i64.trunc_u/f32  ; export name
000080e: 00                                        ; export kind
000080f: 9601                                      ; export func index
0000811: 0f                                        ; string length
0000812: 6936 342e 7472 756e 635f 732f 6636 34    i64.trunc_s/f64  ; export name
0000821: 00                                        ; export kind
0000822: 9701                                      ; export func index
0000824: 0f                                        ; string length
0000825: 6936 342e 7472 756e 635f 752f 6636 34    i64.trunc_u/f64  ; export name
0000834: 00                                        ; export kind
0000835: 9801                                      ; export func index
0000837: 11                                        ; string length
0000838: 6633 322e 636f 6e76 6572 745f 732f 6933  f32.convert_s/i3
0000848: 32                                       2  ; export name
0000849: 00                                        ; export kind
000084a: 9901                                      ; export func index
000084c: 11                                        ; string length
000084d: 6633 322e 636f 6e76 6572 745f 752f 6933  f32.convert_u/i3
000085d: 32                                       2  ; export name
000085e: 00                                        ; export kind
000085f: 9a01                                      ; export func index
0000861: 11                                        ; string length
0000862: 6633 322e 636f 6e76 6572 745f 732f 6936  f32.convert_s/i6
0000872: 34                                       4  ; export name
0000873: 00                                        ; export kind
0000874: 9b01                                      ; export func index
0000876: 11                                        ; string length
0000877: 6633 322e 636f 6e76 6572 745f 752f 6936  f32.convert_u/i6
0000887: 34                                       4  ; export name
0000888: 00                                        ; export kind
0000889: 9c01                                      ; export func index
000088b: 0e                                        ; string length
000088c: 6633 322e 6465 6d6f 7465 2f66 3634       f32.demote/f64  ; export name
000089a: 00                                        ; export kind
000089b: 9d01                                      ; export func index
000089d: 11                                        ; string length
000089e: 6636 342e 636f 6e76 6572 745f 732f 6933  f64.convert_s/i3
00008ae: 32                                       2  ; export name
00008af: 00                                        ; export kind
00008b0: 9e01                                      ; export func index
00008b2: 11                                        ; string length
00008b3: 6636 342e 636f 6e76 6572 745f 752f 6933  f64.convert_u/i3
00008c3: 32                                       2  ; export name
00008c4: 00                                        ; export kind
00008c5: 9f01                                      ; export func index
00008c7: 11                                        ; string length
00008c8: 6636 342e 636f 6e76 6572 745f 732f 6936  f64.convert_s/i6
00008d8: 34                                       4  ; export name
00008d9: 00                                        ; export kind
00008da: a001                                      ; export func index
00008dc: 11                                        ; string length
00008dd: 6636 342e 636f 6e76 6572 745f 752f 6936  f64.convert_u/i6
00008ed: 34                                       4  ; export name
00008ee: 00                                        ; export kind
00008ef: a101                                      ; export func index
00008f1: 0f                                        ; string length
00008f2: 6636 342e 7072 6f6d 6f74 652f 6633 32    f64.promote/f32  ; export name
0000901: 00                                        ; export kind
0000902: a201                                      ; export func index
0000904: 13                                        ; string length
0000905: 6933 322e 7265 696e 7465 7270 7265 742f  i32.reinterpret/
0000915: 6633 32                                  f32  ; export name
0000918: 00                                        ; export kind
0000919: a301                                      ; export func index
000091b: 13                                        ; string length
000091c: 6633 322e 7265 696e 7465 7270 7265 742f  f32.reinterpret/
000092c: 6933 32                                  i32  ; export name
000092f: 00                                        ; export kind
0000930: a401                                      ; export func index
0000932: 13                                        ; string length
0000933: 6936 342e 7265 696e 7465 7270 7265 742f  i64.reinterpret/
0000943: 6636 34                                  f64  ; export name
0000946: 00                                        ; export kind
0000947: a501                                      ; export func index
0000949: 13                                        ; string length
000094a: 6636 342e 7265 696e 7465 7270 7265 742f  f64.reinterpret/
000095a: 6936 34                                  i64  ; export name
000095d: 00                                        ; export kind
000095e: a601                                      ; export func index
0000960: 0d                                        ; string length
0000961: 6933 322e 6578 7465 6e64 385f 73         i32.extend8_s  ; export name
000096e: 00                                        ; export kind
000096f: a701                                      ; export func index
0000971: 0e                                        ; string length
0000972: 6933 322e 6578 7465 6e64 3136 5f73       i32.extend16_s  ; export name
0000980: 00                                        ; export kind
0000981: a801                                      ; export func index
0000983: 0d                                        ; string length
0000984: 6936 342e 6578 7465 6e64 385f 73         i64.extend8_s  ; export name
0000991: 00                                        ; export kind
0000992: a901                                      ; export func index
0000994: 0e                                        ; string length
0000995: 6936 342e 6578 7465 6e64 3136 5f73       i64.extend16_s  ; export name
00009a3: 00                                        ; export kind
00009a4: aa01                                      ; export func index
00009a6: 0e                                        ; string length
00009a7: 6936 342e 6578 7465 6e64 3332 5f73       i64.extend32_s  ; export name
00009b5: 00                                        ; export kind
00009b6: ab01                                      ; export func index
00009b8: 06                                        ; string length
00009b9: 616c 6c6f 6361                           alloca  ; export name
00009bf: 00                                        ; export kind
00009c0: ac01                                      ; export func index
00009c2: 09                                        ; string length
00009c3: 6272 5f75 6e6c 6573 73                   br_unless  ; export name
00009cc: 00                                        ; export kind
00009cd: ad01                                      ; export func index
00009cf: 09                                        ; string length
00009d0: 6361 6c6c 5f68 6f73 74                   call_host  ; export name
00009d9: 00                                        ; export kind
00009da: ae01                                      ; export func index
00009dc: 04                                        ; string length
00009dd: 6461 7461                                data  ; export name
00009e1: 00                                        ; export kind
00009e2: af01                                      ; export func index
00009e4: 09                                        ; string length
00009e5: 6472 6f70 5f6b 6565 70                   drop_keep  ; export name
00009ee: 00                                        ; export kind
00009ef: b001                                      ; export func index
00009f1: 13                                        ; string length
00009f2: 6933 322e 7472 756e 635f 733a 7361 742f  i32.trunc_s:sat/
0000a02: 6633 32                                  f32  ; export name
0000a05: 00                                        ; export kind
0000a06: b101                                      ; export func index
0000a08: 13                                        ; string length
0000a09: 6933 322e 7472 756e 635f 753a 7361 742f  i32.trunc_u:sat/
0000a19: 6633 32                                  f32  ; export name
0000a1c: 00                                        ; export kind
0000a1d: b201                                      ; export func index
0000a1f: 13                                        ; string length
0000a20: 6933 322e 7472 756e 635f 733a 7361 742f  i32.trunc_s:sat/
0000a30: 6636 34                                  f64  ; export name
0000a33: 00                                        ; export kind
0000a34: b301                                      ; export func index
0000a36: 13                                        ; string length
0000a37: 6933 322e 7472 756e 635f 753a 7361 742f  i32.trunc_u:sat/
0000a47: 6636 34                                  f64  ; export name
0000a4a: 00                                        ; export kind
0000a4b: b401                                      ; export func index
0000a4d: 13                                        ; string length
0000a4e: 6936 342e 7472 756e 635f 733a 7361 742f  i64.trunc_s:sat/
0000a5e: 6633 32                                  f32  ; export name
0000a61: 00                                        ; export kind
0000a62: b501                                      ; export func index
0000a64: 13                                        ; string length
0000a65: 6936 342e 7472 756e 635f 753a 7361 742f  i64.trunc_u:sat/
0000a75: 6633 32                                  f32  ; export name
0000a78: 00                                        ; export kind
0000a79: b601                                      ; export func index
0000a7b: 13                                        ; string length
0000a7c: 6936 342e 7472 756e 635f 733a 7361 742f  i64.trunc_s:sat/
0000a8c: 6636 34                                  f64  ; export name
0000a8f: 00                                        ; export kind
0000a90: b701                                      ; export func index
0000a92: 13                                        ; string length
0000a93: 6936 342e 7472 756e 635f 753a 7361 742f  i64.trunc_u:sat/
0000aa3: 6636 34                                  f64  ; export name
0000aa6: 00                                        ; export kind
0000aa7: b801                                      ; export func index
0000aa9: 0b                                        ; string length
0000aaa: 6174 6f6d 6963 2e77 616b 65              atomic.wake  ; export name
0000ab5: 00                                        ; export kind
0000ab6: b901                                      ; export func index
0000ab8: 0f                                        ; string length
0000ab9: 6933 322e 6174 6f6d 6963 2e77 6169 74    i32.atomic.wait  ; export name
0000ac8: 00                                        ; export kind
0000ac9: ba01                                      ; export func index
0000acb: 0f                                        ; string length
0000acc: 6936 342e 6174 6f6d 6963 2e77 6169 74    i64.atomic.wait  ; export name
0000adb: 00                                        ; export kind
0000adc: bb01                                      ; export func index
0000ade: 0f                                        ; string length
0000adf: 6933 322e 6174 6f6d 6963 2e6c 6f61 64    i32.atomic.load  ; export name
0000aee: 00                                        ; export kind
0000aef: bc01                                      ; export func index
0000af1: 0f                                        ; string length
0000af2: 6936 342e 6174 6f6d 6963 2e6c 6f61 64    i64.atomic.load  ; export name
0000b01: 00                                        ; export kind
0000b02: bd01                                      ; export func index
0000b04: 12                                        ; string length
0000b05: 6933 322e 6174 6f6d 6963 2e6c 6f61 6438  i32.atomic.load8
0000b15: 5f75                                     _u  ; export name
0000b17: 00                                        ; export kind
0000b18: be01                                      ; export func index
0000b1a: 13                                        ; string length
0000b1b: 6933 322e 6174 6f6d 6963 2e6c 6f61 6431  i32.atomic.load1
0000b2b: 365f 75                                  6_u  ; export name
0000b2e: 00                                        ; export kind
0000b2f: bf01                                      ; export func index
0000b31: 12                                        ; string length
0000b32: 6936 342e 6174 6f6d 6963 2e6c 6f61 6438  i64.atomic.load8
0000b42: 5f75                                     _u  ; export name
0000b44: 00                                        ; export kind
0000b45: c001                                      ; export func index
0000b47: 13                                        ; string length
0000b48: 6936 342e 6174 6f6d 6963 2e6c 6f61 6431  i64.atomic.load1
0000b58: 365f 75                                  6_u  ; export name
0000b5b: 00                                        ; export kind
0000b5c: c101                                      ; export func index
0000b5e: 13                                        ; string length
0000b5f: 6936 342e 6174 6f6d 6963 2e6c 6f61 6433  i64.atomic.load3
0000b6f: 325f 75                                  2_u  ; export name
0000b72: 00                                        ; export kind
0000b73: c201                                      ; export func index
0000b75: 10                                        ; string length
0000b76: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store  ; export name
0000b86: 00                                        ; export kind
0000b87: c301                                      ; export func index
0000b89: 10                                        ; string length
0000b8a: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store  ; export name
0000b9a: 00                                        ; export kind
0000b9b: c401                                      ; export func index
0000b9d: 11                                        ; string length
0000b9e: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store
0000bae: 38                                       8  ; export name
0000baf: 00                                        ; export kind
0000bb0: c501                                      ; export func index
0000bb2: 12                                        ; string length
0000bb3: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store
0000bc3: 3136                                     16  ; export name
0000bc5: 00                                        ; export kind
0000bc6: c601                                      ; export func index
0000bc8: 11                                        ; string length
0000bc9: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
0000bd9: 38                                       8  ; export name
0000bda: 00                                        ; export kind
0000bdb: c701                                      ; export func index
0000bdd: 12                                        ; string length
0000bde: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
0000bee: 3136                                     16  ; export name
0000bf0: 00                                        ; export kind
0000bf1: c801                                      ; export func index
0000bf3: 12                                        ; string length
0000bf4: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
0000c04: 3332                                     32  ; export name
0000c06: 00                                        ; export kind
0000c07: c901                                      ; export func index
0000c09: 12                                        ; string length
0000c0a: 6933 322e 6174 6f6d 6963 2e72 6d77 2e61  i32.atomic.rmw.a
0000c1a: 6464                                     dd  ; export name
0000c1c: 00                                        ; export kind
0000c1d: ca01                                      ; export func index
0000c1f: 12                                        ; string length
0000c20: 6936 342e 6174 6f6d 6963 2e72 6d77 2e61  i64.atomic.rmw.a
0000c30: 6464                                     dd  ; export name
0000c32: 00                                        ; export kind
0000c33: cb01                                      ; export func index
0000c35: 15                                        ; string length
0000c36: 6933 322e 6174 6f6d 6963 2e72 6d77 385f  i32.atomic.rmw8_
0000c46: 752e 6164 64                             u.add  ; export name
0000c4b: 00                                        ; export kind
0000c4c: cc01                                      ; export func index
0000c4e: 16                                        ; string length
0000c4f: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0000c5f: 5f75 2e61 6464                           _u.add  ; export name
0000c65: 00                                        ; export kind
0000c66: cd01                                      ; export func index
0000c68: 15                                        ; string length
0000c69: 6936 342e 6174 6f6d 6963 2e72 6d77 385f  i64.atomic.rmw8_
0000c79: 752e 6164 64                             u.add  ; export name
0000c7e: 00                                        ; export kind
0000c7f: ce01                                      ; export func index
0000c81: 16                                        ; string length
0000c82: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0000c92: 5f75 2e61 6464                           _u.add  ; export name
0000c98: 00                                        ; export kind
0000c99: cf01                                      ; export func index
0000c9b: 16                                        ; string length
0000c9c: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0000cac: 5f75 2e61 6464                           _u.add  ; export name
0000cb2: 00                                        ; export kind
0000cb3: d001                                      ; export func index
0000cb5: 12                                        ; string length
0000cb6: 6933 322e 6174 6f6d 6963 2e72 6d77 2e73  i32.atomic.rmw.s
0000cc6: 7562                                     ub  ; export name
0000cc8: 00                                        ; export kind
0000cc9: d101                                      ; export func index
0000ccb: 12                                        ; string length
0000ccc: 6936 342e 6174 6f6d 6963 2e72 6d77 2e73  i64.atomic.rmw.s
0000cdc: 7562                                     ub  ; export name
0000cde: 00                                        ; export kind
0000cdf: d201                                      ; export func index
0000ce1: 15                                        ; string length
0000ce2: 6933 322e 6174 6f6d 6963 2e72 6d77 385f  i32.atomic.rmw8_
0000cf2: 752e 7375 62                             u.sub  ; export name
0000cf7: 00                                        ; export kind
0000cf8: d301                                      ; export func index
0000cfa: 16                                        ; string length
0000cfb: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0000d0b: 5f75 2e73 7562                           _u.sub  ; export name
0000d11: 00                                        ; export kind
0000d12: d401                                      ; export func index
0000d14: 15                                        ; string length
0000d15: 6936 342e 6174 6f6d 6963 2e72 6d77 385f  i64.atomic.rmw8_
0000d25: 752e 7375 62                             u.sub  ; export name
0000d2a: 00                                        ; export kind
0000d2b: d501                                      ; export func index
0000d2d: 16                                        ; string length
0000d2e: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0000d3e: 5f75 2e73 7562                           _u.sub  ; export name
0000d44: 00                                        ; export kind
0000d45: d601                                      ; export func index
0000d47: 16                                        ; string length
0000d48: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0000d58: 5f75 2e73 7562                           _u.sub  ; export name
0000d5e: 00                                        ; export kind
0000d5f: d701                                      ; export func index
0000d61: 12                                        ; string length
0000d62: 6933 322e 6174 6f6d 6963 2e72 6d77 2e61  i32.atomic.rmw.a
0000d72: 6e64                                     nd  ; export name
0000d74: 00                                        ; export kind
0000d75: d801                                      ; export func index
0000d77: 12                                        ; string length
0000d78: 6936 342e 6174 6f6d 6963 2e72 6d77 2e61  i64.atomic.rmw.a
0000d88: 6e64                                     nd  ; export name
0000d8a: 00                                        ; export kind
0000d8b: d901                                      ; export func index
0000d8d: 15                                        ; string length
0000d8e: 6933 322e 6174 6f6d 6963 2e72 6d77 385f  i32.atomic.rmw8_
0000d9e: 752e 616e 64                             u.and  ; export name
0000da3: 00                                        ; export kind
0000da4: da01                                      ; export func index
0000da6: 16                                        ; string length
0000da7: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0000db7: 5f75 2e61 6e64                           _u.and  ; export name
0000dbd: 00                                        ; export kind
0000dbe: db01                                      ; export func index
0000dc0: 15                                        ; string length
0000dc1: 6936 342e 6174 6f6d 6963 2e72 6d77 385f  i64.atomic.rmw8_
0000dd1: 752e 616e 64                             u.and  ; export name
0000dd6: 00                                        ; export kind
0000dd7: dc01                                      ; export func index
0000dd9: 16                                        ; string length
0000dda: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0000dea: 5f75 2e61 6e64                           _u.and  ; export name
0000df0: 00                                        ; export kind
0000df1: dd01                                      ; export func index
0000df3: 16                                        ; string length
0000df4: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0000e04: 5f75 2e61 6e64                           _u.and  ; export name
0000e0a: 00                                        ; export kind
0000e0b: de01                                      ; export func index
0000e0d: 11                                        ; string length
0000e0e: 6933 322e 6174 6f6d 6963 2e72 6d77 2e6f  i32.atomic.rmw.o
0000e1e: 72                                       r  ; export name
0000e1f: 00                                        ; export kind
0000e20: df01                                      ; export func index
0000e22: 11                                        ; string length
0000e23: 6936 342e 6174 6f6d 6963 2e72 6d77 2e6f  i64.atomic.rmw.o
0000e33: 72                                       r  ; export name
0000e34: 00                                        ; export kind
0000e35: e001                                      ; export func index
0000e37: 14                                        ; string length
0000e38: 6933 322e 6174 6f6d 6963 2e72 6d77 385f  i32.atomic.rmw8_
0000e48: 752e 6f72                                u.or  ; export name
0000e4c: 00                                        ; export kind
0000e4d: e101                                      ; export func index
0000e4f: 15                                        ; string length
0000e50: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0000e60: 5f75 2e6f 72                             _u.or  ; export name
0000e65: 00                                        ; export kind
0000e66: e201                                      ; export func index
0000e68: 14                                        ; string length
0000e69: 6936 342e 6174 6f6d 6963 2e72 6d77 385f  i64.atomic.rmw8_
0000e79: 752e 6f72                                u.or  ; export name
0000e7d: 00                                        ; export kind
0000e7e: e301                                      ; export func index
0000e80: 15                                        ; string length
0000e81: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0000e91: 5f75 2e6f 72                             _u.or  ; export name
0000e96: 00                                        ; export kind
0000e97: e401                                      ; export func index
0000e99: 15                                        ; string length
0000e9a: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0000eaa: 5f75 2e6f 72                             _u.or  ; export name
0000eaf: 00                                        ; export kind
0000eb0: e501                                      ; export func index
0000eb2: 12                                        ; string length
0000eb3: 6933 322e 6174 6f6d 6963 2e72 6d77 2e78  i32.atomic.rmw.x
0000ec3: 6f72                                     or  ; export name
0000ec5: 00                                        ; export kind
0000ec6: e601                                      ; export func index
0000ec8: 12                                        ; string length
0000ec9: 6936 342e 6174 6f6d 6963 2e72 6d77 2e78  i64.atomic.rmw.x
0000ed9: 6f72                                     or  ; export name
0000edb: 00                                        ; export kind
0000edc: e701                                      ; export func index
0000ede: 15                                        ; string length
0000edf: 6933 322e 6174 6f6d 6963 2e72 6d77 385f  i32.atomic.rmw8_
0000eef: 752e 786f 72                             u.xor  ; export name
0000ef4: 00                                        ; export kind
0000ef5: e801                                      ; export func index
0000ef7: 16                                        ; string length
0000ef8: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0000f08: 5f75 2e78 6f72                           _u.xor  ; export name
0000f0e: 00                                        ; export kind
0000f0f: e901                                      ; export func index
0000f11: 15                                        ; string length
0000f12: 6936 342e 6174 6f6d 6963 2e72 6d77 385f  i64.atomic.rmw8_
0000f22: 752e 786f 72                             u.xor  ; export name
0000f27: 00                                        ; export kind
0000f28: ea01                                      ; export func index
0000f2a: 16                                        ; string length
0000f2b: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0000f3b: 5f75 2e78 6f72                           _u.xor  ; export name
0000f41: 00                                        ; export kind
0000f42: eb01                                      ; export func index
0000f44: 16                                        ; string length
0000f45: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0000f55: 5f75 2e78 6f72                           _u.xor  ; export name
0000f5b: 00                                        ; export kind
0000f5c: ec01                                      ; export func index
0000f5e: 13                                        ; string length
0000f5f: 6933 322e 6174 6f6d 6963 2e72 6d77 2e78  i32.atomic.rmw.x
0000f6f: 6368 67                                  chg  ; export name
0000f72: 00                                        ; export kind
0000f73: ed01                                      ; export func index
0000f75: 13                                        ; string length
0000f76: 6936 342e 6174 6f6d 6963 2e72 6d77 2e78  i64.atomic.rmw.x
0000f86: 6368 67                                  chg  ; export name
0000f89: 00                                        ; export kind
0000f8a: ee01                                      ; export func index
0000f8c: 16                                        ; string length
0000f8d: 6933 322e 6174 6f6d 6963 2e72 6d77 385f  i32.atomic.rmw8_
0000f9d: 752e 7863 6867                           u.xchg  ; export name
0000fa3: 00                                        ; export kind
0000fa4: ef01                                      ; export func index
0000fa6: 17                                        ; string length
0000fa7: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0000fb7: 5f75 2e78 6368 67                        _u.xchg  ; export name
0000fbe: 00                                        ; export kind
0000fbf: f001                                      ; export func index
0000fc1: 16                                        ; string length
0000fc2: 6936 342e 6174 6f6d 6963 2e72 6d77 385f  i64.atomic.rmw8_
0000fd2: 752e 7863 6867                           u.xchg  ; export name
0000fd8: 00                                        ; export kind
0000fd9: f101                                      ; export func index
0000fdb: 17                                        ; string length
0000fdc: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0000fec: 5f75 2e78 6368 67                        _u.xchg  ; export name
0000ff3: 00                                        ; export kind
0000ff4: f201                                      ; export func index
0000ff6: 17                                        ; string length
0000ff7: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001007: 5f75 2e78 6368 67                        _u.xchg  ; export name
000100e: 00                                        ; export kind
000100f: f301                                      ; export func index
0001011: 16                                        ; string length
0001012: 6933 322e 6174 6f6d 6963 2e72 6d77 2e63  i32.atomic.rmw.c
0001022: 6d70 7863 6867                           mpxchg  ; export name
0001028: 00                                        ; export kind
0001029: f401                                      ; export func index
000102b: 16                                        ; string length
000102c: 6936 342e 6174 6f6d 6963 2e72 6d77 2e63  i64.atomic.rmw.c
000103c: 6d70 7863 6867                           mpxchg  ; export name
0001042: 00                                        ; export kind
0001043: f501                                      ; export func index
0001045: 19                                        ; string length
0001046: 6933 322e 6174 6f6d 6963 2e72 6d77 385f  i32.atomic.rmw8_
0001056: 752e 636d 7078 6368 67                   u.cmpxchg  ; export name
000105f: 00                                        ; export kind
0001060: f601                                      ; export func index
0001062: 1a                                        ; string length
0001063: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001073: 5f75 2e63 6d70 7863 6867                 _u.cmpxchg  ; export name
000107d: 00                                        ; export kind
000107e: f701                                      ; export func index
0001080: 19                                        ; string length
0001081: 6936 342e 6174 6f6d 6963 2e72 6d77 385f  i64.atomic.rmw8_
0001091: 752e 636d 7078 6368 67                   u.cmpxchg  ; export name
000109a: 00                                        ; export kind
000109b: f801                                      ; export func index
000109d: 1a                                        ; string length
000109e: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
00010ae: 5f75 2e63 6d70 7863 6867                 _u.cmpxchg  ; export name
00010b8: 00                                        ; export kind
00010b9: f901                                      ; export func index
00010bb: 1a                                        ; string length
00010bc: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
00010cc: 5f75 2e63 6d70 7863 6867                 _u.cmpxchg  ; export name
00010d6: 00                                        ; export kind
00010d7: fa01                                      ; export func index
; move data: [138, 10d9) -> [139, 10da)
0000137: a11f                                      ; FIXUP section size
; section "Elem" (9)
00010da: 09                                        ; section code
00010db: 00                                        ; section size (guess)
00010dc: 01                                        ; num elem segments
; elem segment header 0
00010dd: 00                                        ; table index
00010de: 41                                        ; i32.const
00010df: 00                                        ; i32 literal
00010e0: 0b                                        ; end
00010e1: 02                                        ; num function indices
00010e2: 01                                        ; function index
00010e3: 01                                        ; function index
00010db: 08                                        ; FIXUP section size
; section "Code" (10)
00010e4: 0a                                        ; section code
00010e5: 00                                        ; section size (guess)
00010e6: fa01                                      ; num functions
; function body 0
00010e8: 00                                        ; func body size (guess)
00010e9: 00                                        ; local decl count
00010ea: 0b                                        ; end
00010e8: 02                                        ; FIXUP func body size
; function body 1
00010eb: 00                                        ; func body size (guess)
00010ec: 00                                        ; local decl count
00010ed: 00                                        ; unreachable
00010ee: 0b                                        ; end
00010eb: 03                                        ; FIXUP func body size
; function body 2
00010ef: 00                                        ; func body size (guess)
00010f0: 00                                        ; local decl count
00010f1: 0c                                        ; br
00010f2: 00                                        ; break depth
00010f3: 0b                                        ; end
00010ef: 04                                        ; FIXUP func body size
; function body 3
00010f4: 00                                        ; func body size (guess)
00010f5: 00                                        ; local decl count
00010f6: 41                                        ; i32.const
00010f7: 01                                        ; i32 literal
00010f8: 0e                                        ; br_table
00010f9: 00                                        ; num targets
00010fa: 00                                        ; break depth for default
00010fb: 0b                                        ; end
00010f4: 07                                        ; FIXUP func body size
; function body 4
00010fc: 00                                        ; func body size (guess)
00010fd: 00                                        ; local decl count
00010fe: 0f                                        ; return
00010ff: 0b                                        ; end
00010fc: 03                                        ; FIXUP func body size
; function body 5
0001100: 00                                        ; func body size (guess)
0001101: 00                                        ; local decl count
0001102: 10                                        ; call
0001103: 01                                        ; function index
0001104: 0b                                        ; end
0001100: 04                                        ; FIXUP func body size
; function body 6
0001105: 00                                        ; func body size (guess)
0001106: 00                                        ; local decl count
0001107: 41                                        ; i32.const
0001108: 01                                        ; i32 literal
0001109: 11                                        ; call_indirect
000110a: 00                                        ; signature index
000110b: 00                                        ; call_indirect reserved
000110c: 0b                                        ; end
0001105: 07                                        ; FIXUP func body size
; function body 7
000110d: 00                                        ; func body size (guess)
000110e: 00                                        ; local decl count
000110f: 41                                        ; i32.const
0001110: 01                                        ; i32 literal
0001111: 1a                                        ; drop
0001112: 0b                                        ; end
000110d: 05                                        ; FIXUP func body size
; function body 8
0001113: 00                                        ; func body size (guess)
0001114: 00                                        ; local decl count
0001115: 41                                        ; i32.const
0001116: 01                                        ; i32 literal
0001117: 41                                        ; i32.const
0001118: 02                                        ; i32 literal
0001119: 41                                        ; i32.const
000111a: 03                                        ; i32 literal
000111b: 1b                                        ; select
000111c: 1a                                        ; drop
000111d: 0b                                        ; end
0001113: 0a                                        ; FIXUP func body size
; function body 9
000111e: 00                                        ; func body size (guess)
000111f: 01                                        ; local decl count
0001120: 01                                        ; local type count
0001121: 7f                                        ; i32
0001122: 20                                        ; get_local
0001123: 00                                        ; local index
0001124: 1a                                        ; drop
0001125: 0b                                        ; end
000111e: 07                                        ; FIXUP func body size
; function body 10
0001126: 00                                        ; func body size (guess)
0001127: 01                                        ; local decl count
0001128: 01                                        ; local type count
0001129: 7f                                        ; i32
000112a: 41                                        ; i32.const
000112b: 01                                        ; i32 literal
000112c: 21                                        ; set_local
000112d: 00                                        ; local index
000112e: 0b                                        ; end
0001126: 08                                        ; FIXUP func body size
; function body 11
000112f: 00                                        ; func body size (guess)
0001130: 01                                        ; local decl count
0001131: 01                                        ; local type count
0001132: 7f                                        ; i32
0001133: 41                                        ; i32.const
0001134: 01                                        ; i32 literal
0001135: 22                                        ; tee_local
0001136: 00                                        ; local index
0001137: 1a                                        ; drop
0001138: 0b                                        ; end
000112f: 09                                        ; FIXUP func body size
; function body 12
0001139: 00                                        ; func body size (guess)
000113a: 00                                        ; local decl count
000113b: 23                                        ; get_global
000113c: 00                                        ; global index
000113d: 1a                                        ; drop
000113e: 0b                                        ; end
0001139: 05                                        ; FIXUP func body size
; function body 13
000113f: 00                                        ; func body size (guess)
0001140: 00                                        ; local decl count
0001141: 41                                        ; i32.const
0001142: 01                                        ; i32 literal
0001143: 24                                        ; set_global
0001144: 00                                        ; global index
0001145: 0b                                        ; end
000113f: 06                                        ; FIXUP func body size
; function body 14
0001146: 00                                        ; func body size (guess)
0001147: 00                                        ; local decl count
0001148: 41                                        ; i32.const
0001149: 01                                        ; i32 literal
000114a: 28                                        ; i32.load
000114b: 02                                        ; alignment
000114c: 02                                        ; load offset
000114d: 1a                                        ; drop
000114e: 0b                                        ; end
0001146: 08                                        ; FIXUP func body size
; function body 15
000114f: 00                                        ; func body size (guess)
0001150: 00                                        ; local decl count
0001151: 41                                        ; i32.const
0001152: 01                                        ; i32 literal
0001153: 29                                        ; i64.load
0001154: 03                                        ; alignment
0001155: 02                                        ; load offset
0001156: 1a                                        ; drop
0001157: 0b                                        ; end
000114f: 08                                        ; FIXUP func body size
; function body 16
0001158: 00                                        ; func body size (guess)
0001159: 00                                        ; local decl count
000115a: 41                                        ; i32.const
000115b: 01                                        ; i32 literal
000115c: 2a                                        ; f32.load
000115d: 02                                        ; alignment
000115e: 02                                        ; load offset
000115f: 1a                                        ; drop
0001160: 0b                                        ; end
0001158: 08                                        ; FIXUP func body size
; function body 17
0001161: 00                                        ; func body size (guess)
0001162: 00                                        ; local decl count
0001163: 41                                        ; i32.const
0001164: 01                                        ; i32 literal
0001165: 2b                                        ; f64.load
0001166: 03                                        ; alignment
0001167: 02                                        ; load offset
0001168: 1a                                        ; drop
0001169: 0b                                        ; end
0001161: 08                                        ; FIXUP func body size
; function body 18
000116a: 00                                        ; func body size (guess)
000116b: 00                                        ; local decl count
000116c: 41                                        ; i32.const
000116d: 01                                        ; i32 literal
000116e: 2c                                        ; i32.load8_s
000116f: 00                                        ; alignment
0001170: 02                                        ; load offset
0001171: 1a                                        ; drop
0001172: 0b                                        ; end
000116a: 08                                        ; FIXUP func body size
; function body 19
0001173: 00                                        ; func body size (guess)
0001174: 00                                        ; local decl count
0001175: 41                                        ; i32.const
0001176: 01                                        ; i32 literal
0001177: 2d                                        ; i32.load8_u
0001178: 00                                        ; alignment
0001179: 02                                        ; load offset
000117a: 1a                                        ; drop
000117b: 0b                                        ; end
0001173: 08                                        ; FIXUP func body size
; function body 20
000117c: 00                                        ; func body size (guess)
000117d: 00                                        ; local decl count
000117e: 41                                        ; i32.const
000117f: 01                                        ; i32 literal
0001180: 2e                                        ; i32.load16_s
0001181: 01                                        ; alignment
0001182: 02                                        ; load offset
0001183: 1a                                        ; drop
0001184: 0b                                        ; end
000117c: 08                                        ; FIXUP func body size
; function body 21
0001185: 00                                        ; func body size (guess)
0001186: 00                                        ; local decl count
0001187: 41                                        ; i32.const
0001188: 01                                        ; i32 literal
0001189: 2f                                        ; i32.load16_u
000118a: 01                                        ; alignment
000118b: 02                                        ; load offset
000118c: 1a                                        ; drop
000118d: 0b                                        ; end
0001185: 08                                        ; FIXUP func body size
; function body 22
000118e: 00                                        ; func body size (guess)
000118f: 00                                        ; local decl count
0001190: 41                                        ; i32.const
0001191: 01                                        ; i32 literal
0001192: 30                                        ; i64.load8_s
0001193: 00                                        ; alignment
0001194: 02                                        ; load offset
0001195: 1a                                        ; drop
0001196: 0b                                        ; end
000118e: 08                                        ; FIXUP func body size
; function body 23
0001197: 00                                        ; func body size (guess)
0001198: 00                                        ; local decl count
0001199: 41                                        ; i32.const
000119a: 01                                        ; i32 literal
000119b: 31                                        ; i64.load8_u
000119c: 00                                        ; alignment
000119d: 02                                        ; load offset
000119e: 1a                                        ; drop
000119f: 0b                                        ; end
0001197: 08                                        ; FIXUP func body size
; function body 24
00011a0: 00                                        ; func body size (guess)
00011a1: 00                                        ; local decl count
00011a2: 41                                        ; i32.const
00011a3: 01                                        ; i32 literal
00011a4: 32                                        ; i64.load16_s
00011a5: 01                                        ; alignment
00011a6: 02                                        ; load offset
00011a7: 1a                                        ; drop
00011a8: 0b                                        ; end
00011a0: 08                                        ; FIXUP func body size
; function body 25
00011a9: 00                                        ; func body size (guess)
00011aa: 00                                        ; local decl count
00011ab: 41                                        ; i32.const
00011ac: 01                                        ; i32 literal
00011ad: 33                                        ; i64.load16_u
00011ae: 01                                        ; alignment
00011af: 02                                        ; load offset
00011b0: 1a                                        ; drop
00011b1: 0b                                        ; end
00011a9: 08                                        ; FIXUP func body size
; function body 26
00011b2: 00                                        ; func body size (guess)
00011b3: 00                                        ; local decl count
00011b4: 41                                        ; i32.const
00011b5: 01                                        ; i32 literal
00011b6: 34                                        ; i64.load32_s
00011b7: 02                                        ; alignment
00011b8: 02                                        ; load offset
00011b9: 1a                                        ; drop
00011ba: 0b                                        ; end
00011b2: 08                                        ; FIXUP func body size
; function body 27
00011bb: 00                                        ; func body size (guess)
00011bc: 00                                        ; local decl count
00011bd: 41                                        ; i32.const
00011be: 01                                        ; i32 literal
00011bf: 35                                        ; i64.load32_u
00011c0: 02                                        ; alignment
00011c1: 02                                        ; load offset
00011c2: 1a                                        ; drop
00011c3: 0b                                        ; end
00011bb: 08                                        ; FIXUP func body size
; function body 28
00011c4: 00                                        ; func body size (guess)
00011c5: 00                                        ; local decl count
00011c6: 41                                        ; i32.const
00011c7: 01                                        ; i32 literal
00011c8: 41                                        ; i32.const
00011c9: 02                                        ; i32 literal
00011ca: 36                                        ; i32.store
00011cb: 02                                        ; alignment
00011cc: 02                                        ; store offset
00011cd: 0b                                        ; end
00011c4: 09                                        ; FIXUP func body size
; function body 29
00011ce: 00                                        ; func body size (guess)
00011cf: 00                                        ; local decl count
00011d0: 41                                        ; i32.const
00011d1: 01                                        ; i32 literal
00011d2: 42                                        ; i64.const
00011d3: 02                                        ; i64 literal
00011d4: 37                                        ; i64.store
00011d5: 03                                        ; alignment
00011d6: 02                                        ; store offset
00011d7: 0b                                        ; end
00011ce: 09                                        ; FIXUP func body size
; function body 30
00011d8: 00                                        ; func body size (guess)
00011d9: 00                                        ; local decl count
00011da: 41                                        ; i32.const
00011db: 01                                        ; i32 literal
00011dc: 43                                        ; f32.const
00011dd: 0000 0040                                 ; f32 literal
00011e1: 38                                        ; f32.store
00011e2: 02                                        ; alignment
00011e3: 02                                        ; store offset
00011e4: 0b                                        ; end
00011d8: 0c                                        ; FIXUP func body size
; function body 31
00011e5: 00                                        ; func body size (guess)
00011e6: 00                                        ; local decl count
00011e7: 41                                        ; i32.const
00011e8: 01                                        ; i32 literal
00011e9: 44                                        ; f64.const
00011ea: 0000 0000 0000 0040                       ; f64 literal
00011f2: 39                                        ; f64.store
00011f3: 03                                        ; alignment
00011f4: 02                                        ; store offset
00011f5: 0b                                        ; end
00011e5: 10                                        ; FIXUP func body size
; function body 32
00011f6: 00                                        ; func body size (guess)
00011f7: 00                                        ; local decl count
00011f8: 41                                        ; i32.const
00011f9: 01                                        ; i32 literal
00011fa: 41                                        ; i32.const
00011fb: 02                                        ; i32 literal
00011fc: 3a                                        ; i32.store8
00011fd: 00                                        ; alignment
00011fe: 02                                        ; store offset
00011ff: 0b                                        ; end
00011f6: 09                                        ; FIXUP func body size
; function body 33
0001200: 00                                        ; func body size (guess)
0001201: 00                                        ; local decl count
0001202: 41                                        ; i32.const
0001203: 01                                        ; i32 literal
0001204: 41                                        ; i32.const
0001205: 02                                        ; i32 literal
0001206: 3b                                        ; i32.store16
0001207: 01                                        ; alignment
0001208: 02                                        ; store offset
0001209: 0b                                        ; end
0001200: 09                                        ; FIXUP func body size
; function body 34
000120a: 00                                        ; func body size (guess)
000120b: 00                                        ; local decl count
000120c: 41                                        ; i32.const
000120d: 01                                        ; i32 literal
000120e: 42                                        ; i64.const
000120f: 02                                        ; i64 literal
0001210: 3c                                        ; i64.store8
0001211: 00                                        ; alignment
0001212: 02                                        ; store offset
0001213: 0b                                        ; end
000120a: 09                                        ; FIXUP func body size
; function body 35
0001214: 00                                        ; func body size (guess)
0001215: 00                                        ; local decl count
0001216: 41                                        ; i32.const
0001217: 01                                        ; i32 literal
0001218: 42                                        ; i64.const
0001219: 02                                        ; i64 literal
000121a: 3d                                        ; i64.store16
000121b: 01                                        ; alignment
000121c: 02                                        ; store offset
000121d: 0b                                        ; end
0001214: 09                                        ; FIXUP func body size
; function body 36
000121e: 00                                        ; func body size (guess)
000121f: 00                                        ; local decl count
0001220: 41                                        ; i32.const
0001221: 01                                        ; i32 literal
0001222: 42                                        ; i64.const
0001223: 02                                        ; i64 literal
0001224: 3e                                        ; i64.store32
0001225: 02                                        ; alignment
0001226: 02                                        ; store offset
0001227: 0b                                        ; end
000121e: 09                                        ; FIXUP func body size
; function body 37
0001228: 00                                        ; func body size (guess)
0001229: 00                                        ; local decl count
000122a: 3f                                        ; current_memory
000122b: 00                                        ; current_memory reserved
000122c: 1a                                        ; drop
000122d: 0b                                        ; end
0001228: 05                                        ; FIXUP func body size
; function body 38
000122e: 00                                        ; func body size (guess)
000122f: 00                                        ; local decl count
0001230: 41                                        ; i32.const
0001231: 01                                        ; i32 literal
0001232: 40                                        ; grow_memory
0001233: 00                                        ; grow_memory reserved
0001234: 1a                                        ; drop
0001235: 0b                                        ; end
000122e: 07                                        ; FIXUP func body size
; function body 39
0001236: 00                                        ; func body size (guess)
0001237: 00                                        ; local decl count
0001238: 41                                        ; i32.const
0001239: 01                                        ; i32 literal
000123a: 1a                                        ; drop
000123b: 0b                                        ; end
0001236: 05                                        ; FIXUP func body size
; function body 40
000123c: 00                                        ; func body size (guess)
000123d: 00                                        ; local decl count
000123e: 42                                        ; i64.const
000123f: 01                                        ; i64 literal
0001240: 1a                                        ; drop
0001241: 0b                                        ; end
000123c: 05                                        ; FIXUP func body size
; function body 41
0001242: 00                                        ; func body size (guess)
0001243: 00                                        ; local decl count
0001244: 43                                        ; f32.const
0001245: 0000 803f                                 ; f32 literal
0001249: 1a                                        ; drop
000124a: 0b                                        ; end
0001242: 08                                        ; FIXUP func body size
; function body 42
000124b: 00                                        ; func body size (guess)
000124c: 00                                        ; local decl count
000124d: 44                                        ; f64.const
000124e: 0000 0000 0000 f03f                       ; f64 literal
0001256: 1a                                        ; drop
0001257: 0b                                        ; end
000124b: 0c                                        ; FIXUP func body size
; function body 43
0001258: 00                                        ; func body size (guess)
0001259: 00                                        ; local decl count
000125a: 41                                        ; i32.const
000125b: 01                                        ; i32 literal
000125c: 45                                        ; i32.eqz
000125d: 1a                                        ; drop
000125e: 0b                                        ; end
0001258: 06                                        ; FIXUP func body size
; function body 44
000125f: 00                                        ; func body size (guess)
0001260: 00                                        ; local decl count
0001261: 41                                        ; i32.const
0001262: 01                                        ; i32 literal
0001263: 41                                        ; i32.const
0001264: 02                                        ; i32 literal
0001265: 46                                        ; i32.eq
0001266: 1a                                        ; drop
0001267: 0b                                        ; end
000125f: 08                                        ; FIXUP func body size
; function body 45
0001268: 00                                        ; func body size (guess)
0001269: 00                                        ; local decl count
000126a: 41                                        ; i32.const
000126b: 01                                        ; i32 literal
000126c: 41                                        ; i32.const
000126d: 02                                        ; i32 literal
000126e: 47                                        ; i32.ne
000126f: 1a                                        ; drop
0001270: 0b                                        ; end
0001268: 08                                        ; FIXUP func body size
; function body 46
0001271: 00                                        ; func body size (guess)
0001272: 00                                        ; local decl count
0001273: 41                                        ; i32.const
0001274: 01                                        ; i32 literal
0001275: 41                                        ; i32.const
0001276: 02                                        ; i32 literal
0001277: 48                                        ; i32.lt_s
0001278: 1a                                        ; drop
0001279: 0b                                        ; end
0001271: 08                                        ; FIXUP func body size
; function body 47
000127a: 00                                        ; func body size (guess)
000127b: 00                                        ; local decl count
000127c: 41                                        ; i32.const
000127d: 01                                        ; i32 literal
000127e: 41                                        ; i32.const
000127f: 02                                        ; i32 literal
0001280: 49                                        ; i32.lt_u
0001281: 1a                                        ; drop
0001282: 0b                                        ; end
000127a: 08                                        ; FIXUP func body size
; function body 48
0001283: 00                                        ; func body size (guess)
0001284: 00                                        ; local decl count
0001285: 41                                        ; i32.const
0001286: 01                                        ; i32 literal
0001287: 41                                        ; i32.const
0001288: 02                                        ; i32 literal
0001289: 4a                                        ; i32.gt_s
000128a: 1a                                        ; drop
000128b: 0b                                        ; end
0001283: 08                                        ; FIXUP func body size
; function body 49
000128c: 00                                        ; func body size (guess)
000128d: 00                                        ; local decl count
000128e: 41                                        ; i32.const
000128f: 01                                        ; i32 literal
0001290: 41                                        ; i32.const
0001291: 02                                        ; i32 literal
0001292: 4b                                        ; i32.gt_u
0001293: 1a                                        ; drop
0001294: 0b                                        ; end
000128c: 08                                        ; FIXUP func body size
; function body 50
0001295: 00                                        ; func body size (guess)
0001296: 00                                        ; local decl count
0001297: 41                                        ; i32.const
0001298: 01                                        ; i32 literal
0001299: 41                                        ; i32.const
000129a: 02                                        ; i32 literal
000129b: 4c                                        ; i32.le_s
000129c: 1a                                        ; drop
000129d: 0b                                        ; end
0001295: 08                                        ; FIXUP func body size
; function body 51
000129e: 00                                        ; func body size (guess)
000129f: 00                                        ; local decl count
00012a0: 41                                        ; i32.const
00012a1: 01                                        ; i32 literal
00012a2: 41                                        ; i32.const
00012a3: 02                                        ; i32 literal
00012a4: 4d                                        ; i32.le_u
00012a5: 1a                                        ; drop
00012a6: 0b                                        ; end
000129e: 08                                        ; FIXUP func body size
; function body 52
00012a7: 00                                        ; func body size (guess)
00012a8: 00                                        ; local decl count
00012a9: 41                                        ; i32.const
00012aa: 01                                        ; i32 literal
00012ab: 41                                        ; i32.const
00012ac: 02                                        ; i32 literal
00012ad: 4e                                        ; i32.ge_s
00012ae: 1a                                        ; drop
00012af: 0b                                        ; end
00012a7: 08                                        ; FIXUP func body size
; function body 53
00012b0: 00                                        ; func body size (guess)
00012b1: 00                                        ; local decl count
00012b2: 41                                        ; i32.const
00012b3: 01                                        ; i32 literal
00012b4: 41                                        ; i32.const
00012b5: 02                                        ; i32 literal
00012b6: 4f                                        ; i32.ge_u
00012b7: 1a                                        ; drop
00012b8: 0b                                        ; end
00012b0: 08                                        ; FIXUP func body size
; function body 54
00012b9: 00                                        ; func body size (guess)
00012ba: 00                                        ; local decl count
00012bb: 42                                        ; i64.const
00012bc: 01                                        ; i64 literal
00012bd: 50                                        ; i64.eqz
00012be: 1a                                        ; drop
00012bf: 0b                                        ; end
00012b9: 06                                        ; FIXUP func body size
; function body 55
00012c0: 00                                        ; func body size (guess)
00012c1: 00                                        ; local decl count
00012c2: 42                                        ; i64.const
00012c3: 01                                        ; i64 literal
00012c4: 42                                        ; i64.const
00012c5: 02                                        ; i64 literal
00012c6: 51                                        ; i64.eq
00012c7: 1a                                        ; drop
00012c8: 0b                                        ; end
00012c0: 08                                        ; FIXUP func body size
; function body 56
00012c9: 00                                        ; func body size (guess)
00012ca: 00                                        ; local decl count
00012cb: 42                                        ; i64.const
00012cc: 01                                        ; i64 literal
00012cd: 42                                        ; i64.const
00012ce: 02                                        ; i64 literal
00012cf: 52                                        ; i64.ne
00012d0: 1a                                        ; drop
00012d1: 0b                                        ; end
00012c9: 08                                        ; FIXUP func body size
; function body 57
00012d2: 00                                        ; func body size (guess)
00012d3: 00                                        ; local decl count
00012d4: 42                                        ; i64.const
00012d5: 01                                        ; i64 literal
00012d6: 42                                        ; i64.const
00012d7: 02                                        ; i64 literal
00012d8: 53                                        ; i64.lt_s
00012d9: 1a                                        ; drop
00012da: 0b                                        ; end
00012d2: 08                                        ; FIXUP func body size
; function body 58
00012db: 00                                        ; func body size (guess)
00012dc: 00                                        ; local decl count
00012dd: 42                                        ; i64.const
00012de: 01                                        ; i64 literal
00012df: 42                                        ; i64.const
00012e0: 02                                        ; i64 literal
00012e1: 54                                        ; i64.lt_u
00012e2: 1a                                        ; drop
00012e3: 0b                                        ; end
00012db: 08                                        ; FIXUP func body size
; function body 59
00012e4: 00                                        ; func body size (guess)
00012e5: 00                                        ; local decl count
00012e6: 42                                        ; i64.const
00012e7: 01                                        ; i64 literal
00012e8: 42                                        ; i64.const
00012e9: 02                                        ; i64 literal
00012ea: 55                                        ; i64.gt_s
00012eb: 1a                                        ; drop
00012ec: 0b                                        ; end
00012e4: 08                                        ; FIXUP func body size
; function body 60
00012ed: 00                                        ; func body size (guess)
00012ee: 00                                        ; local decl count
00012ef: 42                                        ; i64.const
00012f0: 01                                        ; i64 literal
00012f1: 42                                        ; i64.const
00012f2: 02                                        ; i64 literal
00012f3: 56                                        ; i64.gt_u
00012f4: 1a                                        ; drop
00012f5: 0b                                        ; end
00012ed: 08                                        ; FIXUP func body size
; function body 61
00012f6: 00                                        ; func body size (guess)
00012f7: 00                                        ; local decl count
00012f8: 42                                        ; i64.const
00012f9: 01                                        ; i64 literal
00012fa: 42                                        ; i64.const
00012fb: 02                                        ; i64 literal
00012fc: 57                                        ; i64.le_s
00012fd: 1a                                        ; drop
00012fe: 0b                                        ; end
00012f6: 08                                        ; FIXUP func body size
; function body 62
00012ff: 00                                        ; func body size (guess)
0001300: 00                                        ; local decl count
0001301: 42                                        ; i64.const
0001302: 01                                        ; i64 literal
0001303: 42                                        ; i64.const
0001304: 02                                        ; i64 literal
0001305: 58                                        ; i64.le_u
0001306: 1a                                        ; drop
0001307: 0b                                        ; end
00012ff: 08                                        ; FIXUP func body size
; function body 63
0001308: 00                                        ; func body size (guess)
0001309: 00                                        ; local decl count
000130a: 42                                        ; i64.const
000130b: 01                                        ; i64 literal
000130c: 42                                        ; i64.const
000130d: 02                                        ; i64 literal
000130e: 59                                        ; i64.ge_s
000130f: 1a                                        ; drop
0001310: 0b                                        ; end
0001308: 08                                        ; FIXUP func body size
; function body 64
0001311: 00                                        ; func body size (guess)
0001312: 00                                        ; local decl count
0001313: 42                                        ; i64.const
0001314: 01                                        ; i64 literal
0001315: 42                                        ; i64.const
0001316: 02                                        ; i64 literal
0001317: 5a                                        ; i64.ge_u
0001318: 1a                                        ; drop
0001319: 0b                                        ; end
0001311: 08                                        ; FIXUP func body size
; function body 65
000131a: 00                                        ; func body size (guess)
000131b: 00                                        ; local decl count
000131c: 43                                        ; f32.const
000131d: 0000 803f                                 ; f32 literal
0001321: 43                                        ; f32.const
0001322: 0000 0040                                 ; f32 literal
0001326: 5b                                        ; f32.eq
0001327: 1a                                        ; drop
0001328: 0b                                        ; end
000131a: 0e                                        ; FIXUP func body size
; function body 66
0001329: 00                                        ; func body size (guess)
000132a: 00                                        ; local decl count
000132b: 43                                        ; f32.const
000132c: 0000 803f                                 ; f32 literal
0001330: 43                                        ; f32.const
0001331: 0000 0040                                 ; f32 literal
0001335: 5c                                        ; f32.ne
0001336: 1a                                        ; drop
0001337: 0b                                        ; end
0001329: 0e                                        ; FIXUP func body size
; function body 67
0001338: 00                                        ; func body size (guess)
0001339: 00                                        ; local decl count
000133a: 43                                        ; f32.const
000133b: 0000 803f                                 ; f32 literal
000133f: 43                                        ; f32.const
0001340: 0000 0040                                 ; f32 literal
0001344: 5d                                        ; f32.lt
0001345: 1a                                        ; drop
0001346: 0b                                        ; end
0001338: 0e                                        ; FIXUP func body size
; function body 68
0001347: 00                                        ; func body size (guess)
0001348: 00                                        ; local decl count
0001349: 43                                        ; f32.const
000134a: 0000 803f                                 ; f32 literal
000134e: 43                                        ; f32.const
000134f: 0000 0040                                 ; f32 literal
0001353: 5e                                        ; f32.gt
0001354: 1a                                        ; drop
0001355: 0b                                        ; end
0001347: 0e                                        ; FIXUP func body size
; function body 69
0001356: 00                                        ; func body size (guess)
0001357: 00                                        ; local decl count
0001358: 43                                        ; f32.const
0001359: 0000 803f                                 ; f32 literal
000135d: 43                                        ; f32.const
000135e: 0000 0040                                 ; f32 literal
0001362: 5f                                        ; f32.le
0001363: 1a                                        ; drop
0001364: 0b                                        ; end
0001356: 0e                                        ; FIXUP func body size
; function body 70
0001365: 00                                        ; func body size (guess)
0001366: 00                                        ; local decl count
0001367: 43                                        ; f32.const
0001368: 0000 803f                                 ; f32 literal
000136c: 43                                        ; f32.const
000136d: 0000 0040                                 ; f32 literal
0001371: 60                                        ; f32.ge
0001372: 1a                                        ; drop
0001373: 0b                                        ; end
0001365: 0e                                        ; FIXUP func body size
; function body 71
0001374: 00                                        ; func body size (guess)
0001375: 00                                        ; local decl count
0001376: 44                                        ; f64.const
0001377: 0000 0000 0000 f03f                       ; f64 literal
000137f: 44                                        ; f64.const
0001380: 0000 0000 0000 0040                       ; f64 literal
0001388: 61                                        ; f64.eq
0001389: 1a                                        ; drop
000138a: 0b                                        ; end
0001374: 16                                        ; FIXUP func body size
; function body 72
000138b: 00                                        ; func body size (guess)
000138c: 00                                        ; local decl count
000138d: 44                                        ; f64.const
000138e: 0000 0000 0000 f03f                       ; f64 literal
0001396: 44                                        ; f64.const
0001397: 0000 0000 0000 0040                       ; f64 literal
000139f: 62                                        ; f64.ne
00013a0: 1a                                        ; drop
00013a1: 0b                                        ; end
000138b: 16                                        ; FIXUP func body size
; function body 73
00013a2: 00                                        ; func body size (guess)
00013a3: 00                                        ; local decl count
00013a4: 44                                        ; f64.const
00013a5: 0000 0000 0000 f03f                       ; f64 literal
00013ad: 44                                        ; f64.const
00013ae: 0000 0000 0000 0040                       ; f64 literal
00013b6: 63                                        ; f64.lt
00013b7: 1a                                        ; drop
00013b8: 0b                                        ; end
00013a2: 16                                        ; FIXUP func body size
; function body 74
00013b9: 00                                        ; func body size (guess)
00013ba: 00                                        ; local decl count
00013bb: 44                                        ; f64.const
00013bc: 0000 0000 0000 f03f                       ; f64 literal
00013c4: 44                                        ; f64.const
00013c5: 0000 0000 0000 0040                       ; f64 literal
00013cd: 64                                        ; f64.gt
00013ce: 1a                                        ; drop
00013cf: 0b                                        ; end
00013b9: 16                                        ; FIXUP func body size
; function body 75
00013d0: 00                                        ; func body size (guess)
00013d1: 00                                        ; local decl count
00013d2: 44                                        ; f64.const
00013d3: 0000 0000 0000 f03f                       ; f64 literal
00013db: 44                                        ; f64.const
00013dc: 0000 0000 0000 0040                       ; f64 literal
00013e4: 65                                        ; f64.le
00013e5: 1a                                        ; drop
00013e6: 0b                                        ; end
00013d0: 16                                        ; FIXUP func body size
; function body 76
00013e7: 00                                        ; func body size (guess)
00013e8: 00                                        ; local decl count
00013e9: 44                                        ; f64.const
00013ea: 0000 0000 0000 f03f                       ; f64 literal
00013f2: 44                                        ; f64.const
00013f3: 0000 0000 0000 0040                       ; f64 literal
00013fb: 66                                        ; f64.ge
00013fc: 1a                                        ; drop
00013fd: 0b                                        ; end
00013e7: 16                                        ; FIXUP func body size
; function body 77
00013fe: 00                                        ; func body size (guess)
00013ff: 00                                        ; local decl count
0001400: 41                                        ; i32.const
0001401: 01                                        ; i32 literal
0001402: 67                                        ; i32.clz
0001403: 1a                                        ; drop
0001404: 0b                                        ; end
00013fe: 06                                        ; FIXUP func body size
; function body 78
0001405: 00                                        ; func body size (guess)
0001406: 00                                        ; local decl count
0001407: 41                                        ; i32.const
0001408: 01                                        ; i32 literal
0001409: 68                                        ; i32.ctz
000140a: 1a                                        ; drop
000140b: 0b                                        ; end
0001405: 06                                        ; FIXUP func body size
; function body 79
000140c: 00                                        ; func body size (guess)
000140d: 00                                        ; local decl count
000140e: 41                                        ; i32.const
000140f: 01                                        ; i32 literal
0001410: 69                                        ; i32.popcnt
0001411: 1a                                        ; drop
0001412: 0b                                        ; end
000140c: 06                                        ; FIXUP func body size
; function body 80
0001413: 00                                        ; func body size (guess)
0001414: 00                                        ; local decl count
0001415: 41                                        ; i32.const
0001416: 01                                        ; i32 literal
0001417: 41                                        ; i32.const
0001418: 02                                        ; i32 literal
0001419: 6a                                        ; i32.add
000141a: 1a                                        ; drop
000141b: 0b                                        ; end
0001413: 08                                        ; FIXUP func body size
; function body 81
000141c: 00                                        ; func body size (guess)
000141d: 00                                        ; local decl count
000141e: 41                                        ; i32.const
000141f: 01                                        ; i32 literal
0001420: 41                                        ; i32.const
0001421: 02                                        ; i32 literal
0001422: 6b                                        ; i32.sub
0001423: 1a                                        ; drop
0001424: 0b                                        ; end
000141c: 08                                        ; FIXUP func body size
; function body 82
0001425: 00                                        ; func body size (guess)
0001426: 00                                        ; local decl count
0001427: 41                                        ; i32.const
0001428: 01                                        ; i32 literal
0001429: 41                                        ; i32.const
000142a: 02                                        ; i32 literal
000142b: 6c                                        ; i32.mul
000142c: 1a                                        ; drop
000142d: 0b                                        ; end
0001425: 08                                        ; FIXUP func body size
; function body 83
000142e: 00                                        ; func body size (guess)
000142f: 00                                        ; local decl count
0001430: 41                                        ; i32.const
0001431: 01                                        ; i32 literal
0001432: 41                                        ; i32.const
0001433: 02                                        ; i32 literal
0001434: 6d                                        ; i32.div_s
0001435: 1a                                        ; drop
0001436: 0b                                        ; end
000142e: 08                                        ; FIXUP func body size
; function body 84
0001437: 00                                        ; func body size (guess)
0001438: 00                                        ; local decl count
0001439: 41                                        ; i32.const
000143a: 01                                        ; i32 literal
000143b: 41                                        ; i32.const
000143c: 02                                        ; i32 literal
000143d: 6e                                        ; i32.div_u
000143e: 1a                                        ; drop
000143f: 0b                                        ; end
0001437: 08                                        ; FIXUP func body size
; function body 85
0001440: 00                                        ; func body size (guess)
0001441: 00                                        ; local decl count
0001442: 41                                        ; i32.const
0001443: 01                                        ; i32 literal
0001444: 41                                        ; i32.const
0001445: 02                                        ; i32 literal
0001446: 6f                                        ; i32.rem_s
0001447: 1a                                        ; drop
0001448: 0b                                        ; end
0001440: 08                                        ; FIXUP func body size
; function body 86
0001449: 00                                        ; func body size (guess)
000144a: 00                                        ; local decl count
000144b: 41                                        ; i32.const
000144c: 01                                        ; i32 literal
000144d: 41                                        ; i32.const
000144e: 02                                        ; i32 literal
000144f: 70                                        ; i32.rem_u
0001450: 1a                                        ; drop
0001451: 0b                                        ; end
0001449: 08                                        ; FIXUP func body size
; function body 87
0001452: 00                                        ; func body size (guess)
0001453: 00                                        ; local decl count
0001454: 41                                        ; i32.const
0001455: 01                                        ; i32 literal
0001456: 41                                        ; i32.const
0001457: 02                                        ; i32 literal
0001458: 71                                        ; i32.and
0001459: 1a                                        ; drop
000145a: 0b                                        ; end
0001452: 08                                        ; FIXUP func body size
; function body 88
000145b: 00                                        ; func body size (guess)
000145c: 00                                        ; local decl count
000145d: 41                                        ; i32.const
000145e: 01                                        ; i32 literal
000145f: 41                                        ; i32.const
0001460: 02                                        ; i32 literal
0001461: 72                                        ; i32.or
0001462: 1a                                        ; drop
0001463: 0b                                        ; end
000145b: 08                                        ; FIXUP func body size
; function body 89
0001464: 00                                        ; func body size (guess)
0001465: 00                                        ; local decl count
0001466: 41                                        ; i32.const
0001467: 01                                        ; i32 literal
0001468: 41                                        ; i32.const
0001469: 02                                        ; i32 literal
000146a: 73                                        ; i32.xor
000146b: 1a                                        ; drop
000146c: 0b                                        ; end
0001464: 08                                        ; FIXUP func body size
; function body 90
000146d: 00                                        ; func body size (guess)
000146e: 00                                        ; local decl count
000146f: 41                                        ; i32.const
0001470: 01                                        ; i32 literal
0001471: 41                                        ; i32.const
0001472: 02                                        ; i32 literal
0001473: 74                                        ; i32.shl
0001474: 1a                                        ; drop
0001475: 0b                                        ; end
000146d: 08                                        ; FIXUP func body size
; function body 91
0001476: 00                                        ; func body size (guess)
0001477: 00                                        ; local decl count
0001478: 41                                        ; i32.const
0001479: 01                                        ; i32 literal
000147a: 41                                        ; i32.const
000147b: 02                                        ; i32 literal
000147c: 75                                        ; i32.shr_s
000147d: 1a                                        ; drop
000147e: 0b                                        ; end
0001476: 08                                        ; FIXUP func body size
; function body 92
000147f: 00                                        ; func body size (guess)
0001480: 00                                        ; local decl count
0001481: 41                                        ; i32.const
0001482: 01                                        ; i32 literal
0001483: 41                                        ; i32.const
0001484: 02                                        ; i32 literal
0001485: 76                                        ; i32.shr_u
0001486: 1a                                        ; drop
0001487: 0b                                        ; end
000147f: 08                                        ; FIXUP func body size
; function body 93
0001488: 00                                        ; func body size (guess)
0001489: 00                                        ; local decl count
000148a: 41                                        ; i32.const
000148b: 01                                        ; i32 literal
000148c: 41                                        ; i32.const
000148d: 02                                        ; i32 literal
000148e: 77                                        ; i32.rotl
000148f: 1a                                        ; drop
0001490: 0b                                        ; end
0001488: 08                                        ; FIXUP func body size
; function body 94
0001491: 00                                        ; func body size (guess)
0001492: 00                                        ; local decl count
0001493: 41                                        ; i32.const
0001494: 01                                        ; i32 literal
0001495: 41                                        ; i32.const
0001496: 02                                        ; i32 literal
0001497: 78                                        ; i32.rotr
0001498: 1a                                        ; drop
0001499: 0b                                        ; end
0001491: 08                                        ; FIXUP func body size
; function body 95
000149a: 00                                        ; func body size (guess)
000149b: 00                                        ; local decl count
000149c: 42                                        ; i64.const
000149d: 01                                        ; i64 literal
000149e: 79                                        ; i64.clz
000149f: 1a                                        ; drop
00014a0: 0b                                        ; end
000149a: 06                                        ; FIXUP func body size
; function body 96
00014a1: 00                                        ; func body size (guess)
00014a2: 00                                        ; local decl count
00014a3: 42                                        ; i64.const
00014a4: 01                                        ; i64 literal
00014a5: 7a                                        ; i64.ctz
00014a6: 1a                                        ; drop
00014a7: 0b                                        ; end
00014a1: 06                                        ; FIXUP func body size
; function body 97
00014a8: 00                                        ; func body size (guess)
00014a9: 00                                        ; local decl count
00014aa: 42                                        ; i64.const
00014ab: 01                                        ; i64 literal
00014ac: 7b                                        ; i64.popcnt
00014ad: 1a                                        ; drop
00014ae: 0b                                        ; end
00014a8: 06                                        ; FIXUP func body size
; function body 98
00014af: 00                                        ; func body size (guess)
00014b0: 00                                        ; local decl count
00014b1: 42                                        ; i64.const
00014b2: 01                                        ; i64 literal
00014b3: 42                                        ; i64.const
00014b4: 02                                        ; i64 literal
00014b5: 7c                                        ; i64.add
00014b6: 1a                                        ; drop
00014b7: 0b                                        ; end
00014af: 08                                        ; FIXUP func body size
; function body 99
00014b8: 00                                        ; func body size (guess)
00014b9: 00                                        ; local decl count
00014ba: 42                                        ; i64.const
00014bb: 01                                        ; i64 literal
00014bc: 42                                        ; i64.const
00014bd: 02                                        ; i64 literal
00014be: 7d                                        ; i64.sub
00014bf: 1a                                        ; drop
00014c0: 0b                                        ; end
00014b8: 08                                        ; FIXUP func body size
; function body 100
00014c1: 00                                        ; func body size (guess)
00014c2: 00                                        ; local decl count
00014c3: 42                                        ; i64.const
00014c4: 01                                        ; i64 literal
00014c5: 42                                        ; i64.const
00014c6: 02                                        ; i64 literal
00014c7: 7e                                        ; i64.mul
00014c8: 1a                                        ; drop
00014c9: 0b                                        ; end
00014c1: 08                                        ; FIXUP func body size
; function body 101
00014ca: 00                                        ; func body size (guess)
00014cb: 00                                        ; local decl count
00014cc: 42                                        ; i64.const
00014cd: 01                                        ; i64 literal
00014ce: 42                                        ; i64.const
00014cf: 02                                        ; i64 literal
00014d0: 7f                                        ; i64.div_s
00014d1: 1a                                        ; drop
00014d2: 0b                                        ; end
00014ca: 08                                        ; FIXUP func body size
; function body 102
00014d3: 00                                        ; func body size (guess)
00014d4: 00                                        ; local decl count
00014d5: 42                                        ; i64.const
00014d6: 01                                        ; i64 literal
00014d7: 42                                        ; i64.const
00014d8: 02                                        ; i64 literal
00014d9: 80                                        ; i64.div_u
00014da: 1a                                        ; drop
00014db: 0b                                        ; end
00014d3: 08                                        ; FIXUP func body size
; function body 103
00014dc: 00                                        ; func body size (guess)
00014dd: 00                                        ; local decl count
00014de: 42                                        ; i64.const
00014df: 01                                        ; i64 literal
00014e0: 42                                        ; i64.const
00014e1: 02                                        ; i64 literal
00014e2: 81                                        ; i64.rem_s
00014e3: 1a                                        ; drop
00014e4: 0b                                        ; end
00014dc: 08                                        ; FIXUP func body size
; function body 104
00014e5: 00                                        ; func body size (guess)
00014e6: 00                                        ; local decl count
00014e7: 42                                        ; i64.const
00014e8: 01                                        ; i64 literal
00014e9: 42                                        ; i64.const
00014ea: 02                                        ; i64 literal
00014eb: 82                                        ; i64.rem_u
00014ec: 1a                                        ; drop
00014ed: 0b                                        ; end
00014e5: 08                                        ; FIXUP func body size
; function body 105
00014ee: 00                                        ; func body size (guess)
00014ef: 00                                        ; local decl count
00014f0: 42                                        ; i64.const
00014f1: 01                                        ; i64 literal
00014f2: 42                                        ; i64.const
00014f3: 02                                        ; i64 literal
00014f4: 83                                        ; i64.and
00014f5: 1a                                        ; drop
00014f6: 0b                                        ; end
00014ee: 08                                        ; FIXUP func body size
; function body 106
00014f7: 00                                        ; func body size (guess)
00014f8: 00                                        ; local decl count
00014f9: 42                                        ; i64.const
00014fa: 01                                        ; i64 literal
00014fb: 42                                        ; i64.const
00014fc: 02                                        ; i64 literal
00014fd: 84                                        ; i64.or
00014fe: 1a                                        ; drop
00014ff: 0b                                        ; end
00014f7: 08                                        ; FIXUP func body size
; function body 107
0001500: 00                                        ; func body size (guess)
0001501: 00                                        ; local decl count
0001502: 42                                        ; i64.const
0001503: 01                                        ; i64 literal
0001504: 42                                        ; i64.const
0001505: 02                                        ; i64 literal
0001506: 85                                        ; i64.xor
0001507: 1a                                        ; drop
0001508: 0b                                        ; end
0001500: 08                                        ; FIXUP func body size
; function body 108
0001509: 00                                        ; func body size (guess)
000150a: 00                                        ; local decl count
000150b: 42                                        ; i64.const
000150c: 01                                        ; i64 literal
000150d: 42                                        ; i64.const
000150e: 02                                        ; i64 literal
000150f: 86                                        ; i64.shl
0001510: 1a                                        ; drop
0001511: 0b                                        ; end
0001509: 08                                        ; FIXUP func body size
; function body 109
0001512: 00                                        ; func body size (guess)
0001513: 00                                        ; local decl count
0001514: 42                                        ; i64.const
0001515: 01                                        ; i64 literal
0001516: 42                                        ; i64.const
0001517: 02                                        ; i64 literal
0001518: 87                                        ; i64.shr_s
0001519: 1a                                        ; drop
000151a: 0b                                        ; end
0001512: 08                                        ; FIXUP func body size
; function body 110
000151b: 00                                        ; func body size (guess)
000151c: 00                                        ; local decl count
000151d: 42                                        ; i64.const
000151e: 01                                        ; i64 literal
000151f: 42                                        ; i64.const
0001520: 02                                        ; i64 literal
0001521: 88                                        ; i64.shr_u
0001522: 1a                                        ; drop
0001523: 0b                                        ; end
000151b: 08                                        ; FIXUP func body size
; function body 111
0001524: 00                                        ; func body size (guess)
0001525: 00                                        ; local decl count
0001526: 42                                        ; i64.const
0001527: 01                                        ; i64 literal
0001528: 42                                        ; i64.const
0001529: 02                                        ; i64 literal
000152a: 89                                        ; i64.rotl
000152b: 1a                                        ; drop
000152c: 0b                                        ; end
0001524: 08                                        ; FIXUP func body size
; function body 112
000152d: 00                                        ; func body size (guess)
000152e: 00                                        ; local decl count
000152f: 42                                        ; i64.const
0001530: 01                                        ; i64 literal
0001531: 42                                        ; i64.const
0001532: 02                                        ; i64 literal
0001533: 8a                                        ; i64.rotr
0001534: 1a                                        ; drop
0001535: 0b                                        ; end
000152d: 08                                        ; FIXUP func body size
; function body 113
0001536: 00                                        ; func body size (guess)
0001537: 00                                        ; local decl count
0001538: 43                                        ; f32.const
0001539: 0000 803f                                 ; f32 literal
000153d: 8b                                        ; f32.abs
000153e: 1a                                        ; drop
000153f: 0b                                        ; end
0001536: 09                                        ; FIXUP func body size
; function body 114
0001540: 00                                        ; func body size (guess)
0001541: 00                                        ; local decl count
0001542: 43                                        ; f32.const
0001543: 0000 803f                                 ; f32 literal
0001547: 8c                                        ; f32.neg
0001548: 1a                                        ; drop
0001549: 0b                                        ; end
0001540: 09                                        ; FIXUP func body size
; function body 115
000154a: 00                                        ; func body size (guess)
000154b: 00                                        ; local decl count
000154c: 43                                        ; f32.const
000154d: 0000 803f                                 ; f32 literal
0001551: 8d                                        ; f32.ceil
0001552: 1a                                        ; drop
0001553: 0b                                        ; end
000154a: 09                                        ; FIXUP func body size
; function body 116
0001554: 00                                        ; func body size (guess)
0001555: 00                                        ; local decl count
0001556: 43                                        ; f32.const
0001557: 0000 803f                                 ; f32 literal
000155b: 8e                                        ; f32.floor
000155c: 1a                                        ; drop
000155d: 0b                                        ; end
0001554: 09                                        ; FIXUP func body size
; function body 117
000155e: 00                                        ; func body size (guess)
000155f: 00                                        ; local decl count
0001560: 43                                        ; f32.const
0001561: 0000 803f                                 ; f32 literal
0001565: 8f                                        ; f32.trunc
0001566: 1a                                        ; drop
0001567: 0b                                        ; end
000155e: 09                                        ; FIXUP func body size
; function body 118
0001568: 00                                        ; func body size (guess)
0001569: 00                                        ; local decl count
000156a: 43                                        ; f32.const
000156b: 0000 803f                                 ; f32 literal
000156f: 90                                        ; f32.nearest
0001570: 1a                                        ; drop
0001571: 0b                                        ; end
0001568: 09                                        ; FIXUP func body size
; function body 119
0001572: 00                                        ; func body size (guess)
0001573: 00                                        ; local decl count
0001574: 43                                        ; f32.const
0001575: 0000 803f                                 ; f32 literal
0001579: 91                                        ; f32.sqrt
000157a: 1a                                        ; drop
000157b: 0b                                        ; end
0001572: 09                                        ; FIXUP func body size
; function body 120
000157c: 00                                        ; func body size (guess)
000157d: 00                                        ; local decl count
000157e: 43                                        ; f32.const
000157f: 0000 803f                                 ; f32 literal
0001583: 43                                        ; f32.const
0001584: 0000 0040                                 ; f32 literal
0001588: 92                                        ; f32.add
0001589: 1a                                        ; drop
000158a: 0b                                        ; end
000157c: 0e                                        ; FIXUP func body size
; function body 121
000158b: 00                                        ; func body size (guess)
000158c: 00                                        ; local decl count
000158d: 43                                        ; f32.const
000158e: 0000 803f                                 ; f32 literal
0001592: 43                                        ; f32.const
0001593: 0000 0040                                 ; f32 literal
0001597: 93                                        ; f32.sub
0001598: 1a                                        ; drop
0001599: 0b                                        ; end
000158b: 0e                                        ; FIXUP func body size
; function body 122
000159a: 00                                        ; func body size (guess)
000159b: 00                                        ; local decl count
000159c: 43                                        ; f32.const
000159d: 0000 803f                                 ; f32 literal
00015a1: 43                                        ; f32.const
00015a2: 0000 0040                                 ; f32 literal
00015a6: 94                                        ; f32.mul
00015a7: 1a                                        ; drop
00015a8: 0b                                        ; end
000159a: 0e                                        ; FIXUP func body size
; function body 123
00015a9: 00                                        ; func body size (guess)
00015aa: 00                                        ; local decl count
00015ab: 43                                        ; f32.const
00015ac: 0000 803f                                 ; f32 literal
00015b0: 43                                        ; f32.const
00015b1: 0000 0040                                 ; f32 literal
00015b5: 95                                        ; f32.div
00015b6: 1a                                        ; drop
00015b7: 0b                                        ; end
00015a9: 0e                                        ; FIXUP func body size
; function body 124
00015b8: 00                                        ; func body size (guess)
00015b9: 00                                        ; local decl count
00015ba: 43                                        ; f32.const
00015bb: 0000 803f                                 ; f32 literal
00015bf: 43                                        ; f32.const
00015c0: 0000 0040                                 ; f32 literal
00015c4: 96                                        ; f32.min
00015c5: 1a                                        ; drop
00015c6: 0b                                        ; end
00015b8: 0e                                        ; FIXUP func body size
; function body 125
00015c7: 00                                        ; func body size (guess)
00015c8: 00                                        ; local decl count
00015c9: 43                                        ; f32.const
00015ca: 0000 803f                                 ; f32 literal
00015ce: 43                                        ; f32.const
00015cf: 0000 0040                                 ; f32 literal
00015d3: 97                                        ; f32.max
00015d4: 1a                                        ; drop
00015d5: 0b                                        ; end
00015c7: 0e                                        ; FIXUP func body size
; function body 126
00015d6: 00                                        ; func body size (guess)
00015d7: 00                                        ; local decl count
00015d8: 43                                        ; f32.const
00015d9: 0000 803f                                 ; f32 literal
00015dd: 43                                        ; f32.const
00015de: 0000 0040                                 ; f32 literal
00015e2: 98                                        ; f32.copysign
00015e3: 1a                                        ; drop
00015e4: 0b                                        ; end
00015d6: 0e                                        ; FIXUP func body size
; function body 127
00015e5: 00                                        ; func body size (guess)
00015e6: 00                                        ; local decl count
00015e7: 44                                        ; f64.const
00015e8: 0000 0000 0000 f03f                       ; f64 literal
00015f0: 99                                        ; f64.abs
00015f1: 1a                                        ; drop
00015f2: 0b                                        ; end
00015e5: 0d                                        ; FIXUP func body size
; function body 128
00015f3: 00                                        ; func body size (guess)
00015f4: 00                                        ; local decl count
00015f5: 44                                        ; f64.const
00015f6: 0000 0000 0000 f03f                       ; f64 literal
00015fe: 9a                                        ; f64.neg
00015ff: 1a                                        ; drop
0001600: 0b                                        ; end
00015f3: 0d                                        ; FIXUP func body size
; function body 129
0001601: 00                                        ; func body size (guess)
0001602: 00                                        ; local decl count
0001603: 44                                        ; f64.const
0001604: 0000 0000 0000 f03f                       ; f64 literal
000160c: 9b                                        ; f64.ceil
000160d: 1a                                        ; drop
000160e: 0b                                        ; end
0001601: 0d                                        ; FIXUP func body size
; function body 130
000160f: 00                                        ; func body size (guess)
0001610: 00                                        ; local decl count
0001611: 44                                        ; f64.const
0001612: 0000 0000 0000 f03f                       ; f64 literal
000161a: 9c                                        ; f64.floor
000161b: 1a                                        ; drop
000161c: 0b                                        ; end
000160f: 0d                                        ; FIXUP func body size
; function body 131
000161d: 00                                        ; func body size (guess)
000161e: 00                                        ; local decl count
000161f: 44                                        ; f64.const
0001620: 0000 0000 0000 f03f                       ; f64 literal
0001628: 9d                                        ; f64.trunc
0001629: 1a                                        ; drop
000162a: 0b                                        ; end
000161d: 0d                                        ; FIXUP func body size
; function body 132
000162b: 00                                        ; func body size (guess)
000162c: 00                                        ; local decl count
000162d: 44                                        ; f64.const
000162e: 0000 0000 0000 f03f                       ; f64 literal
0001636: 9e                                        ; f64.nearest
0001637: 1a                                        ; drop
0001638: 0b                                        ; end
000162b: 0d                                        ; FIXUP func body size
; function body 133
0001639: 00                                        ; func body size (guess)
000163a: 00                                        ; local decl count
000163b: 44                                        ; f64.const
000163c: 0000 0000 0000 f03f                       ; f64 literal
0001644: 9f                                        ; f64.sqrt
0001645: 1a                                        ; drop
0001646: 0b                                        ; end
0001639: 0d                                        ; FIXUP func body size
; function body 134
0001647: 00                                        ; func body size (guess)
0001648: 00                                        ; local decl count
0001649: 44                                        ; f64.const
000164a: 0000 0000 0000 f03f                       ; f64 literal
0001652: 44                                        ; f64.const
0001653: 0000 0000 0000 0040                       ; f64 literal
000165b: a0                                        ; f64.add
000165c: 1a                                        ; drop
000165d: 0b                                        ; end
0001647: 16                                        ; FIXUP func body size
; function body 135
000165e: 00                                        ; func body size (guess)
000165f: 00                                        ; local decl count
0001660: 44                                        ; f64.const
0001661: 0000 0000 0000 f03f                       ; f64 literal
0001669: 44                                        ; f64.const
000166a: 0000 0000 0000 0040                       ; f64 literal
0001672: a1                                        ; f64.sub
0001673: 1a                                        ; drop
0001674: 0b                                        ; end
000165e: 16                                        ; FIXUP func body size
; function body 136
0001675: 00                                        ; func body size (guess)
0001676: 00                                        ; local decl count
0001677: 44                                        ; f64.const
0001678: 0000 0000 0000 f03f                       ; f64 literal
0001680: 44                                        ; f64.const
0001681: 0000 0000 0000 0040                       ; f64 literal
0001689: a2                                        ; f64.mul
000168a: 1a                                        ; drop
000168b: 0b                                        ; end
0001675: 16                                        ; FIXUP func body size
; function body 137
000168c: 00                                        ; func body size (guess)
000168d: 00                                        ; local decl count
000168e: 44                                        ; f64.const
000168f: 0000 0000 0000 f03f                       ; f64 literal
0001697: 44                                        ; f64.const
0001698: 0000 0000 0000 0040                       ; f64 literal
00016a0: a3                                        ; f64.div
00016a1: 1a                                        ; drop
00016a2: 0b                                        ; end
000168c: 16                                        ; FIXUP func body size
; function body 138
00016a3: 00                                        ; func body size (guess)
00016a4: 00                                        ; local decl count
00016a5: 44                                        ; f64.const
00016a6: 0000 0000 0000 f03f                       ; f64 literal
00016ae: 44                                        ; f64.const
00016af: 0000 0000 0000 0040                       ; f64 literal
00016b7: a4                                        ; f64.min
00016b8: 1a                                        ; drop
00016b9: 0b                                        ; end
00016a3: 16                                        ; FIXUP func body size
; function body 139
00016ba: 00                                        ; func body size (guess)
00016bb: 00                                        ; local decl count
00016bc: 44                                        ; f64.const
00016bd: 0000 0000 0000 f03f                       ; f64 literal
00016c5: 44                                        ; f64.const
00016c6: 0000 0000 0000 0040                       ; f64 literal
00016ce: a5                                        ; f64.max
00016cf: 1a                                        ; drop
00016d0: 0b                                        ; end
00016ba: 16                                        ; FIXUP func body size
; function body 140
00016d1: 00                                        ; func body size (guess)
00016d2: 00                                        ; local decl count
00016d3: 44                                        ; f64.const
00016d4: 0000 0000 0000 f03f                       ; f64 literal
00016dc: 44                                        ; f64.const
00016dd: 0000 0000 0000 0040                       ; f64 literal
00016e5: a6                                        ; f64.copysign
00016e6: 1a                                        ; drop
00016e7: 0b                                        ; end
00016d1: 16                                        ; FIXUP func body size
; function body 141
00016e8: 00                                        ; func body size (guess)
00016e9: 00                                        ; local decl count
00016ea: 42                                        ; i64.const
00016eb: 01                                        ; i64 literal
00016ec: a7                                        ; i32.wrap/i64
00016ed: 1a                                        ; drop
00016ee: 0b                                        ; end
00016e8: 06                                        ; FIXUP func body size
; function body 142
00016ef: 00                                        ; func body size (guess)
00016f0: 00                                        ; local decl count
00016f1: 43                                        ; f32.const
00016f2: 0000 803f                                 ; f32 literal
00016f6: a8                                        ; i32.trunc_s/f32
00016f7: 1a                                        ; drop
00016f8: 0b                                        ; end
00016ef: 09                                        ; FIXUP func body size
; function body 143
00016f9: 00                                        ; func body size (guess)
00016fa: 00                                        ; local decl count
00016fb: 43                                        ; f32.const
00016fc: 0000 803f                                 ; f32 literal
0001700: a9                                        ; i32.trunc_u/f32
0001701: 1a                                        ; drop
0001702: 0b                                        ; end
00016f9: 09                                        ; FIXUP func body size
; function body 144
0001703: 00                                        ; func body size (guess)
0001704: 00                                        ; local decl count
0001705: 44                                        ; f64.const
0001706: 0000 0000 0000 f03f                       ; f64 literal
000170e: aa                                        ; i32.trunc_s/f64
000170f: 1a                                        ; drop
0001710: 0b                                        ; end
0001703: 0d                                        ; FIXUP func body size
; function body 145
0001711: 00                                        ; func body size (guess)
0001712: 00                                        ; local decl count
0001713: 44                                        ; f64.const
0001714: 0000 0000 0000 f03f                       ; f64 literal
000171c: ab                                        ; i32.trunc_u/f64
000171d: 1a                                        ; drop
000171e: 0b                                        ; end
0001711: 0d                                        ; FIXUP func body size
; function body 146
000171f: 00                                        ; func body size (guess)
0001720: 00                                        ; local decl count
0001721: 41                                        ; i32.const
0001722: 01                                        ; i32 literal
0001723: ac                                        ; i64.extend_s/i32
0001724: 1a                                        ; drop
0001725: 0b                                        ; end
000171f: 06                                        ; FIXUP func body size
; function body 147
0001726: 00                                        ; func body size (guess)
0001727: 00                                        ; local decl count
0001728: 41                                        ; i32.const
0001729: 01                                        ; i32 literal
000172a: ad                                        ; i64.extend_u/i32
000172b: 1a                                        ; drop
000172c: 0b                                        ; end
0001726: 06                                        ; FIXUP func body size
; function body 148
000172d: 00                                        ; func body size (guess)
000172e: 00                                        ; local decl count
000172f: 43                                        ; f32.const
0001730: 0000 803f                                 ; f32 literal
0001734: ae                                        ; i64.trunc_s/f32
0001735: 1a                                        ; drop
0001736: 0b                                        ; end
000172d: 09                                        ; FIXUP func body size
; function body 149
0001737: 00                                        ; func body size (guess)
0001738: 00                                        ; local decl count
0001739: 43                                        ; f32.const
000173a: 0000 803f                                 ; f32 literal
000173e: af                                        ; i64.trunc_u/f32
000173f: 1a                                        ; drop
0001740: 0b                                        ; end
0001737: 09                                        ; FIXUP func body size
; function body 150
0001741: 00                                        ; func body size (guess)
0001742: 00                                        ; local decl count
0001743: 44                                        ; f64.const
0001744: 0000 0000 0000 f03f                       ; f64 literal
000174c: b0                                        ; i64.trunc_s/f64
000174d: 1a                                        ; drop
000174e: 0b                                        ; end
0001741: 0d                                        ; FIXUP func body size
; function body 151
000174f: 00                                        ; func body size (guess)
0001750: 00                                        ; local decl count
0001751: 44                                        ; f64.const
0001752: 0000 0000 0000 f03f                       ; f64 literal
000175a: b1                                        ; i64.trunc_u/f64
000175b: 1a                                        ; drop
000175c: 0b                                        ; end
000174f: 0d                                        ; FIXUP func body size
; function body 152
000175d: 00                                        ; func body size (guess)
000175e: 00                                        ; local decl count
000175f: 41                                        ; i32.const
0001760: 01                                        ; i32 literal
0001761: b2                                        ; f32.convert_s/i32
0001762: 1a                                        ; drop
0001763: 0b                                        ; end
000175d: 06                                        ; FIXUP func body size
; function body 153
0001764: 00                                        ; func body size (guess)
0001765: 00                                        ; local decl count
0001766: 41                                        ; i32.const
0001767: 01                                        ; i32 literal
0001768: b3                                        ; f32.convert_u/i32
0001769: 1a                                        ; drop
000176a: 0b                                        ; end
0001764: 06                                        ; FIXUP func body size
; function body 154
000176b: 00                                        ; func body size (guess)
000176c: 00                                        ; local decl count
000176d: 42                                        ; i64.const
000176e: 01                                        ; i64 literal
000176f: b4                                        ; f32.convert_s/i64
0001770: 1a                                        ; drop
0001771: 0b                                        ; end
000176b: 06                                        ; FIXUP func body size
; function body 155
0001772: 00                                        ; func body size (guess)
0001773: 00                                        ; local decl count
0001774: 42                                        ; i64.const
0001775: 01                                        ; i64 literal
0001776: b5                                        ; f32.convert_u/i64
0001777: 1a                                        ; drop
0001778: 0b                                        ; end
0001772: 06                                        ; FIXUP func body size
; function body 156
0001779: 00                                        ; func body size (guess)
000177a: 00                                        ; local decl count
000177b: 44                                        ; f64.const
000177c: 0000 0000 0000 f03f                       ; f64 literal
0001784: b6                                        ; f32.demote/f64
0001785: 1a                                        ; drop
0001786: 0b                                        ; end
0001779: 0d                                        ; FIXUP func body size
; function body 157
0001787: 00                                        ; func body size (guess)
0001788: 00                                        ; local decl count
0001789: 41                                        ; i32.const
000178a: 01                                        ; i32 literal
000178b: b7                                        ; f64.convert_s/i32
000178c: 1a                                        ; drop
000178d: 0b                                        ; end
0001787: 06                                        ; FIXUP func body size
; function body 158
000178e: 00                                        ; func body size (guess)
000178f: 00                                        ; local decl count
0001790: 41                                        ; i32.const
0001791: 01                                        ; i32 literal
0001792: b8                                        ; f64.convert_u/i32
0001793: 1a                                        ; drop
0001794: 0b                                        ; end
000178e: 06                                        ; FIXUP func body size
; function body 159
0001795: 00                                        ; func body size (guess)
0001796: 00                                        ; local decl count
0001797: 42                                        ; i64.const
0001798: 01                                        ; i64 literal
0001799: b9                                        ; f64.convert_s/i64
000179a: 1a                                        ; drop
000179b: 0b                                        ; end
0001795: 06                                        ; FIXUP func body size
; function body 160
000179c: 00                                        ; func body size (guess)
000179d: 00                                        ; local decl count
000179e: 42                                        ; i64.const
000179f: 01                                        ; i64 literal
00017a0: ba                                        ; f64.convert_u/i64
00017a1: 1a                                        ; drop
00017a2: 0b                                        ; end
000179c: 06                                        ; FIXUP func body size
; function body 161
00017a3: 00                                        ; func body size (guess)
00017a4: 00                                        ; local decl count
00017a5: 43                                        ; f32.const
00017a6: 0000 803f                                 ; f32 literal
00017aa: bb                                        ; f64.promote/f32
00017ab: 1a                                        ; drop
00017ac: 0b                                        ; end
00017a3: 09                                        ; FIXUP func body size
; function body 162
00017ad: 00                                        ; func body size (guess)
00017ae: 00                                        ; local decl count
00017af: 41                                        ; i32.const
00017b0: 01                                        ; i32 literal
00017b1: be                                        ; f32.reinterpret/i32
00017b2: 1a                                        ; drop
00017b3: 0b                                        ; end
00017ad: 06                                        ; FIXUP func body size
; function body 163
00017b4: 00                                        ; func body size (guess)
00017b5: 00                                        ; local decl count
00017b6: 43                                        ; f32.const
00017b7: 0000 803f                                 ; f32 literal
00017bb: bc                                        ; i32.reinterpret/f32
00017bc: 1a                                        ; drop
00017bd: 0b                                        ; end
00017b4: 09                                        ; FIXUP func body size
; function body 164
00017be: 00                                        ; func body size (guess)
00017bf: 00                                        ; local decl count
00017c0: 42                                        ; i64.const
00017c1: 01                                        ; i64 literal
00017c2: bf                                        ; f64.reinterpret/i64
00017c3: 1a                                        ; drop
00017c4: 0b                                        ; end
00017be: 06                                        ; FIXUP func body size
; function body 165
00017c5: 00                                        ; func body size (guess)
00017c6: 00                                        ; local decl count
00017c7: 44                                        ; f64.const
00017c8: 0000 0000 0000 f03f                       ; f64 literal
00017d0: bd                                        ; i64.reinterpret/f64
00017d1: 1a                                        ; drop
00017d2: 0b                                        ; end
00017c5: 0d                                        ; FIXUP func body size
; function body 166
00017d3: 00                                        ; func body size (guess)
00017d4: 00                                        ; local decl count
00017d5: 41                                        ; i32.const
00017d6: 01                                        ; i32 literal
00017d7: c0                                        ; i32.extend8_s
00017d8: 1a                                        ; drop
00017d9: 0b                                        ; end
00017d3: 06                                        ; FIXUP func body size
; function body 167
00017da: 00                                        ; func body size (guess)
00017db: 00                                        ; local decl count
00017dc: 41                                        ; i32.const
00017dd: 01                                        ; i32 literal
00017de: c1                                        ; i32.extend16_s
00017df: 1a                                        ; drop
00017e0: 0b                                        ; end
00017da: 06                                        ; FIXUP func body size
; function body 168
00017e1: 00                                        ; func body size (guess)
00017e2: 00                                        ; local decl count
00017e3: 42                                        ; i64.const
00017e4: 01                                        ; i64 literal
00017e5: c2                                        ; i64.extend8_s
00017e6: 1a                                        ; drop
00017e7: 0b                                        ; end
00017e1: 06                                        ; FIXUP func body size
; function body 169
00017e8: 00                                        ; func body size (guess)
00017e9: 00                                        ; local decl count
00017ea: 42                                        ; i64.const
00017eb: 01                                        ; i64 literal
00017ec: c3                                        ; i64.extend16_s
00017ed: 1a                                        ; drop
00017ee: 0b                                        ; end
00017e8: 06                                        ; FIXUP func body size
; function body 170
00017ef: 00                                        ; func body size (guess)
00017f0: 00                                        ; local decl count
00017f1: 42                                        ; i64.const
00017f2: 01                                        ; i64 literal
00017f3: c4                                        ; i64.extend32_s
00017f4: 1a                                        ; drop
00017f5: 0b                                        ; end
00017ef: 06                                        ; FIXUP func body size
; function body 171
00017f6: 00                                        ; func body size (guess)
00017f7: 01                                        ; local decl count
00017f8: 01                                        ; local type count
00017f9: 7f                                        ; i32
00017fa: 0b                                        ; end
00017f6: 04                                        ; FIXUP func body size
; function body 172
00017fb: 00                                        ; func body size (guess)
00017fc: 00                                        ; local decl count
00017fd: 41                                        ; i32.const
00017fe: 01                                        ; i32 literal
00017ff: 0d                                        ; br_if
0001800: 00                                        ; break depth
0001801: 0b                                        ; end
00017fb: 06                                        ; FIXUP func body size
; function body 173
0001802: 00                                        ; func body size (guess)
0001803: 00                                        ; local decl count
0001804: 41                                        ; i32.const
0001805: 01                                        ; i32 literal
0001806: 10                                        ; call
0001807: 00                                        ; function index
0001808: 0b                                        ; end
0001802: 06                                        ; FIXUP func body size
; function body 174
0001809: 00                                        ; func body size (guess)
000180a: 00                                        ; local decl count
000180b: 41                                        ; i32.const
000180c: 01                                        ; i32 literal
000180d: 0e                                        ; br_table
000180e: 00                                        ; num targets
000180f: 00                                        ; break depth for default
0001810: 0b                                        ; end
0001809: 07                                        ; FIXUP func body size
; function body 175
0001811: 00                                        ; func body size (guess)
0001812: 00                                        ; local decl count
0001813: 02                                        ; block
0001814: 7f                                        ; i32
0001815: 41                                        ; i32.const
0001816: 01                                        ; i32 literal
0001817: 41                                        ; i32.const
0001818: 02                                        ; i32 literal
0001819: 0c                                        ; br
000181a: 00                                        ; break depth
000181b: 0b                                        ; end
000181c: 1a                                        ; drop
000181d: 0b                                        ; end
0001811: 0c                                        ; FIXUP func body size
; function body 176
000181e: 00                                        ; func body size (guess)
000181f: 00                                        ; local decl count
0001820: 43                                        ; f32.const
0001821: 0000 803f                                 ; f32 literal
0001825: fc                                        ; prefix
0001826: 00                                        ; i32.trunc_s:sat/f32
0001827: 1a                                        ; drop
0001828: 0b                                        ; end
000181e: 0a                                        ; FIXUP func body size
; function body 177
0001829: 00                                        ; func body size (guess)
000182a: 00                                        ; local decl count
000182b: 43                                        ; f32.const
000182c: 0000 803f                                 ; f32 literal
0001830: fc                                        ; prefix
0001831: 01                                        ; i32.trunc_u:sat/f32
0001832: 1a                                        ; drop
0001833: 0b                                        ; end
0001829: 0a                                        ; FIXUP func body size
; function body 178
0001834: 00                                        ; func body size (guess)
0001835: 00                                        ; local decl count
0001836: 44                                        ; f64.const
0001837: 0000 0000 0000 f03f                       ; f64 literal
000183f: fc                                        ; prefix
0001840: 02                                        ; i32.trunc_s:sat/f64
0001841: 1a                                        ; drop
0001842: 0b                                        ; end
0001834: 0e                                        ; FIXUP func body size
; function body 179
0001843: 00                                        ; func body size (guess)
0001844: 00                                        ; local decl count
0001845: 44                                        ; f64.const
0001846: 0000 0000 0000 f03f                       ; f64 literal
000184e: fc                                        ; prefix
000184f: 03                                        ; i32.trunc_u:sat/f64
0001850: 1a                                        ; drop
0001851: 0b                                        ; end
0001843: 0e                                        ; FIXUP func body size
; function body 180
0001852: 00                                        ; func body size (guess)
0001853: 00                                        ; local decl count
0001854: 43                                        ; f32.const
0001855: 0000 803f                                 ; f32 literal
0001859: fc                                        ; prefix
000185a: 04                                        ; i64.trunc_s:sat/f32
000185b: 1a                                        ; drop
000185c: 0b                                        ; end
0001852: 0a                                        ; FIXUP func body size
; function body 181
000185d: 00                                        ; func body size (guess)
000185e: 00                                        ; local decl count
000185f: 43                                        ; f32.const
0001860: 0000 803f                                 ; f32 literal
0001864: fc                                        ; prefix
0001865: 05                                        ; i64.trunc_u:sat/f32
0001866: 1a                                        ; drop
0001867: 0b                                        ; end
000185d: 0a                                        ; FIXUP func body size
; function body 182
0001868: 00                                        ; func body size (guess)
0001869: 00                                        ; local decl count
000186a: 44                                        ; f64.const
000186b: 0000 0000 0000 f03f                       ; f64 literal
0001873: fc                                        ; prefix
0001874: 06                                        ; i64.trunc_s:sat/f64
0001875: 1a                                        ; drop
0001876: 0b                                        ; end
0001868: 0e                                        ; FIXUP func body size
; function body 183
0001877: 00                                        ; func body size (guess)
0001878: 00                                        ; local decl count
0001879: 44                                        ; f64.const
000187a: 0000 0000 0000 f03f                       ; f64 literal
0001882: fc                                        ; prefix
0001883: 07                                        ; i64.trunc_u:sat/f64
0001884: 1a                                        ; drop
0001885: 0b                                        ; end
0001877: 0e                                        ; FIXUP func body size
; function body 184
0001886: 00                                        ; func body size (guess)
0001887: 00                                        ; local decl count
0001888: 41                                        ; i32.const
0001889: 01                                        ; i32 literal
000188a: 41                                        ; i32.const
000188b: 02                                        ; i32 literal
000188c: fe                                        ; prefix
000188d: 00                                        ; atomic.wake
000188e: 02                                        ; alignment
000188f: 03                                        ; memory offset
0001890: 1a                                        ; drop
0001891: 0b                                        ; end
0001886: 0b                                        ; FIXUP func body size
; function body 185
0001892: 00                                        ; func body size (guess)
0001893: 00                                        ; local decl count
0001894: 41                                        ; i32.const
0001895: 01                                        ; i32 literal
0001896: 41                                        ; i32.const
0001897: 02                                        ; i32 literal
0001898: 42                                        ; i64.const
0001899: 03                                        ; i64 literal
000189a: fe                                        ; prefix
000189b: 01                                        ; i32.atomic.wait
000189c: 02                                        ; alignment
000189d: 03                                        ; memory offset
000189e: 1a                                        ; drop
000189f: 0b                                        ; end
0001892: 0d                                        ; FIXUP func body size
; function body 186
00018a0: 00                                        ; func body size (guess)
00018a1: 00                                        ; local decl count
00018a2: 41                                        ; i32.const
00018a3: 01                                        ; i32 literal
00018a4: 42                                        ; i64.const
00018a5: 02                                        ; i64 literal
00018a6: 42                                        ; i64.const
00018a7: 03                                        ; i64 literal
00018a8: fe                                        ; prefix
00018a9: 02                                        ; i64.atomic.wait
00018aa: 03                                        ; alignment
00018ab: 03                                        ; memory offset
00018ac: 1a                                        ; drop
00018ad: 0b                                        ; end
00018a0: 0d                                        ; FIXUP func body size
; function body 187
00018ae: 00                                        ; func body size (guess)
00018af: 00                                        ; local decl count
00018b0: 41                                        ; i32.const
00018b1: 01                                        ; i32 literal
00018b2: fe                                        ; prefix
00018b3: 10                                        ; i32.atomic.load
00018b4: 02                                        ; alignment
00018b5: 03                                        ; memory offset
00018b6: 1a                                        ; drop
00018b7: 0b                                        ; end
00018ae: 09                                        ; FIXUP func body size
; function body 188
00018b8: 00                                        ; func body size (guess)
00018b9: 00                                        ; local decl count
00018ba: 41                                        ; i32.const
00018bb: 01                                        ; i32 literal
00018bc: fe                                        ; prefix
00018bd: 11                                        ; i64.atomic.load
00018be: 03                                        ; alignment
00018bf: 07                                        ; memory offset
00018c0: 1a                                        ; drop
00018c1: 0b                                        ; end
00018b8: 09                                        ; FIXUP func body size
; function body 189
00018c2: 00                                        ; func body size (guess)
00018c3: 00                                        ; local decl count
00018c4: 41                                        ; i32.const
00018c5: 01                                        ; i32 literal
00018c6: fe                                        ; prefix
00018c7: 12                                        ; i32.atomic.load8_u
00018c8: 00                                        ; alignment
00018c9: 03                                        ; memory offset
00018ca: 1a                                        ; drop
00018cb: 0b                                        ; end
00018c2: 09                                        ; FIXUP func body size
; function body 190
00018cc: 00                                        ; func body size (guess)
00018cd: 00                                        ; local decl count
00018ce: 41                                        ; i32.const
00018cf: 01                                        ; i32 literal
00018d0: fe                                        ; prefix
00018d1: 13                                        ; i32.atomic.load16_u
00018d2: 01                                        ; alignment
00018d3: 03                                        ; memory offset
00018d4: 1a                                        ; drop
00018d5: 0b                                        ; end
00018cc: 09                                        ; FIXUP func body size
; function body 191
00018d6: 00                                        ; func body size (guess)
00018d7: 00                                        ; local decl count
00018d8: 41                                        ; i32.const
00018d9: 01                                        ; i32 literal
00018da: fe                                        ; prefix
00018db: 14                                        ; i64.atomic.load8_u
00018dc: 00                                        ; alignment
00018dd: 03                                        ; memory offset
00018de: 1a                                        ; drop
00018df: 0b                                        ; end
00018d6: 09                                        ; FIXUP func body size
; function body 192
00018e0: 00                                        ; func body size (guess)
00018e1: 00                                        ; local decl count
00018e2: 41                                        ; i32.const
00018e3: 01                                        ; i32 literal
00018e4: fe                                        ; prefix
00018e5: 15                                        ; i64.atomic.load16_u
00018e6: 01                                        ; alignment
00018e7: 03                                        ; memory offset
00018e8: 1a                                        ; drop
00018e9: 0b                                        ; end
00018e0: 09                                        ; FIXUP func body size
; function body 193
00018ea: 00                                        ; func body size (guess)
00018eb: 00                                        ; local decl count
00018ec: 41                                        ; i32.const
00018ed: 01                                        ; i32 literal
00018ee: fe                                        ; prefix
00018ef: 16                                        ; i64.atomic.load32_u
00018f0: 02                                        ; alignment
00018f1: 03                                        ; memory offset
00018f2: 1a                                        ; drop
00018f3: 0b                                        ; end
00018ea: 09                                        ; FIXUP func body size
; function body 194
00018f4: 00                                        ; func body size (guess)
00018f5: 00                                        ; local decl count
00018f6: 41                                        ; i32.const
00018f7: 01                                        ; i32 literal
00018f8: 41                                        ; i32.const
00018f9: 02                                        ; i32 literal
00018fa: fe                                        ; prefix
00018fb: 17                                        ; i32.atomic.store
00018fc: 02                                        ; alignment
00018fd: 03                                        ; memory offset
00018fe: 0b                                        ; end
00018f4: 0a                                        ; FIXUP func body size
; function body 195
00018ff: 00                                        ; func body size (guess)
0001900: 00                                        ; local decl count
0001901: 41                                        ; i32.const
0001902: 01                                        ; i32 literal
0001903: 42                                        ; i64.const
0001904: 02                                        ; i64 literal
0001905: fe                                        ; prefix
0001906: 18                                        ; i64.atomic.store
0001907: 03                                        ; alignment
0001908: 07                                        ; memory offset
0001909: 0b                                        ; end
00018ff: 0a                                        ; FIXUP func body size
; function body 196
000190a: 00                                        ; func body size (guess)
000190b: 00                                        ; local decl count
000190c: 41                                        ; i32.const
000190d: 01                                        ; i32 literal
000190e: 41                                        ; i32.const
000190f: 02                                        ; i32 literal
0001910: fe                                        ; prefix
0001911: 19                                        ; i32.atomic.store8
0001912: 00                                        ; alignment
0001913: 03                                        ; memory offset
0001914: 0b                                        ; end
000190a: 0a                                        ; FIXUP func body size
; function body 197
0001915: 00                                        ; func body size (guess)
0001916: 00                                        ; local decl count
0001917: 41                                        ; i32.const
0001918: 01                                        ; i32 literal
0001919: 41                                        ; i32.const
000191a: 02                                        ; i32 literal
000191b: fe                                        ; prefix
000191c: 1a                                        ; i32.atomic.store16
000191d: 01                                        ; alignment
000191e: 03                                        ; memory offset
000191f: 0b                                        ; end
0001915: 0a                                        ; FIXUP func body size
; function body 198
0001920: 00                                        ; func body size (guess)
0001921: 00                                        ; local decl count
0001922: 41                                        ; i32.const
0001923: 01                                        ; i32 literal
0001924: 42                                        ; i64.const
0001925: 02                                        ; i64 literal
0001926: fe                                        ; prefix
0001927: 1b                                        ; i64.atomic.store8
0001928: 00                                        ; alignment
0001929: 03                                        ; memory offset
000192a: 0b                                        ; end
0001920: 0a                                        ; FIXUP func body size
; function body 199
000192b: 00                                        ; func body size (guess)
000192c: 00                                        ; local decl count
000192d: 41                                        ; i32.const
000192e: 01                                        ; i32 literal
000192f: 42                                        ; i64.const
0001930: 02                                        ; i64 literal
0001931: fe                                        ; prefix
0001932: 1c                                        ; i64.atomic.store16
0001933: 01                                        ; alignment
0001934: 03                                        ; memory offset
0001935: 0b                                        ; end
000192b: 0a                                        ; FIXUP func body size
; function body 200
0001936: 00                                        ; func body size (guess)
0001937: 00                                        ; local decl count
0001938: 41                                        ; i32.const
0001939: 01                                        ; i32 literal
000193a: 42                                        ; i64.const
000193b: 02                                        ; i64 literal
000193c: fe                                        ; prefix
000193d: 1d                                        ; i64.atomic.store32
000193e: 02                                        ; alignment
000193f: 03                                        ; memory offset
0001940: 0b                                        ; end
0001936: 0a                                        ; FIXUP func body size
; function body 201
0001941: 00                                        ; func body size (guess)
0001942: 00                                        ; local decl count
0001943: 41                                        ; i32.const
0001944: 01                                        ; i32 literal
0001945: 41                                        ; i32.const
0001946: 02                                        ; i32 literal
0001947: fe                                        ; prefix
0001948: 1e                                        ; i32.atomic.rmw.add
0001949: 02                                        ; alignment
000194a: 03                                        ; memory offset
000194b: 1a                                        ; drop
000194c: 0b                                        ; end
0001941: 0b                                        ; FIXUP func body size
; function body 202
000194d: 00                                        ; func body size (guess)
000194e: 00                                        ; local decl count
000194f: 41                                        ; i32.const
0001950: 01                                        ; i32 literal
0001951: 42                                        ; i64.const
0001952: 02                                        ; i64 literal
0001953: fe                                        ; prefix
0001954: 1f                                        ; i64.atomic.rmw.add
0001955: 03                                        ; alignment
0001956: 07                                        ; memory offset
0001957: 1a                                        ; drop
0001958: 0b                                        ; end
000194d: 0b                                        ; FIXUP func body size
; function body 203
0001959: 00                                        ; func body size (guess)
000195a: 00                                        ; local decl count
000195b: 41                                        ; i32.const
000195c: 01                                        ; i32 literal
000195d: 41                                        ; i32.const
000195e: 02                                        ; i32 literal
000195f: fe                                        ; prefix
0001960: 20                                        ; i32.atomic.rmw8_u.add
0001961: 00                                        ; alignment
0001962: 03                                        ; memory offset
0001963: 1a                                        ; drop
0001964: 0b                                        ; end
0001959: 0b                                        ; FIXUP func body size
; function body 204
0001965: 00                                        ; func body size (guess)
0001966: 00                                        ; local decl count
0001967: 41                                        ; i32.const
0001968: 01                                        ; i32 literal
0001969: 41                                        ; i32.const
000196a: 02                                        ; i32 literal
000196b: fe                                        ; prefix
000196c: 21                                        ; i32.atomic.rmw16_u.add
000196d: 01                                        ; alignment
000196e: 03                                        ; memory offset
000196f: 1a                                        ; drop
0001970: 0b                                        ; end
0001965: 0b                                        ; FIXUP func body size
; function body 205
0001971: 00                                        ; func body size (guess)
0001972: 00                                        ; local decl count
0001973: 41                                        ; i32.const
0001974: 01                                        ; i32 literal
0001975: 42                                        ; i64.const
0001976: 02                                        ; i64 literal
0001977: fe                                        ; prefix
0001978: 22                                        ; i64.atomic.rmw8_u.add
0001979: 00                                        ; alignment
000197a: 03                                        ; memory offset
000197b: 1a                                        ; drop
000197c: 0b                                        ; end
0001971: 0b                                        ; FIXUP func body size
; function body 206
000197d: 00                                        ; func body size (guess)
000197e: 00                                        ; local decl count
000197f: 41                                        ; i32.const
0001980: 01                                        ; i32 literal
0001981: 42                                        ; i64.const
0001982: 02                                        ; i64 literal
0001983: fe                                        ; prefix
0001984: 23                                        ; i64.atomic.rmw16_u.add
0001985: 01                                        ; alignment
0001986: 03                                        ; memory offset
0001987: 1a                                        ; drop
0001988: 0b                                        ; end
000197d: 0b                                        ; FIXUP func body size
; function body 207
0001989: 00                                        ; func body size (guess)
000198a: 00                                        ; local decl count
000198b: 41                                        ; i32.const
000198c: 01                                        ; i32 literal
000198d: 42                                        ; i64.const
000198e: 02                                        ; i64 literal
000198f: fe                                        ; prefix
0001990: 24                                        ; i64.atomic.rmw32_u.add
0001991: 02                                        ; alignment
0001992: 03                                        ; memory offset
0001993: 1a                                        ; drop
0001994: 0b                                        ; end
0001989: 0b                                        ; FIXUP func body size
; function body 208
0001995: 00                                        ; func body size (guess)
0001996: 00                                        ; local decl count
0001997: 41                                        ; i32.const
0001998: 01                                        ; i32 literal
0001999: 41                                        ; i32.const
000199a: 02                                        ; i32 literal
000199b: fe                                        ; prefix
000199c: 25                                        ; i32.atomic.rmw.sub
000199d: 02                                        ; alignment
000199e: 03                                        ; memory offset
000199f: 1a                                        ; drop
00019a0: 0b                                        ; end
0001995: 0b                                        ; FIXUP func body size
; function body 209
00019a1: 00                                        ; func body size (guess)
00019a2: 00                                        ; local decl count
00019a3: 41                                        ; i32.const
00019a4: 01                                        ; i32 literal
00019a5: 42                                        ; i64.const
00019a6: 02                                        ; i64 literal
00019a7: fe                                        ; prefix
00019a8: 26                                        ; i64.atomic.rmw.sub
00019a9: 03                                        ; alignment
00019aa: 07                                        ; memory offset
00019ab: 1a                                        ; drop
00019ac: 0b                                        ; end
00019a1: 0b                                        ; FIXUP func body size
; function body 210
00019ad: 00                                        ; func body size (guess)
00019ae: 00                                        ; local decl count
00019af: 41                                        ; i32.const
00019b0: 01                                        ; i32 literal
00019b1: 41                                        ; i32.const
00019b2: 02                                        ; i32 literal
00019b3: fe                                        ; prefix
00019b4: 27                                        ; i32.atomic.rmw8_u.sub
00019b5: 00                                        ; alignment
00019b6: 03                                        ; memory offset
00019b7: 1a                                        ; drop
00019b8: 0b                                        ; end
00019ad: 0b                                        ; FIXUP func body size
; function body 211
00019b9: 00                                        ; func body size (guess)
00019ba: 00                                        ; local decl count
00019bb: 41                                        ; i32.const
00019bc: 01                                        ; i32 literal
00019bd: 41                                        ; i32.const
00019be: 02                                        ; i32 literal
00019bf: fe                                        ; prefix
00019c0: 28                                        ; i32.atomic.rmw16_u.sub
00019c1: 01                                        ; alignment
00019c2: 03                                        ; memory offset
00019c3: 1a                                        ; drop
00019c4: 0b                                        ; end
00019b9: 0b                                        ; FIXUP func body size
; function body 212
00019c5: 00                                        ; func body size (guess)
00019c6: 00                                        ; local decl count
00019c7: 41                                        ; i32.const
00019c8: 01                                        ; i32 literal
00019c9: 42                                        ; i64.const
00019ca: 02                                        ; i64 literal
00019cb: fe                                        ; prefix
00019cc: 29                                        ; i64.atomic.rmw8_u.sub
00019cd: 00                                        ; alignment
00019ce: 03                                        ; memory offset
00019cf: 1a                                        ; drop
00019d0: 0b                                        ; end
00019c5: 0b                                        ; FIXUP func body size
; function body 213
00019d1: 00                                        ; func body size (guess)
00019d2: 00                                        ; local decl count
00019d3: 41                                        ; i32.const
00019d4: 01                                        ; i32 literal
00019d5: 42                                        ; i64.const
00019d6: 02                                        ; i64 literal
00019d7: fe                                        ; prefix
00019d8: 2a                                        ; i64.atomic.rmw16_u.sub
00019d9: 01                                        ; alignment
00019da: 03                                        ; memory offset
00019db: 1a                                        ; drop
00019dc: 0b                                        ; end
00019d1: 0b                                        ; FIXUP func body size
; function body 214
00019dd: 00                                        ; func body size (guess)
00019de: 00                                        ; local decl count
00019df: 41                                        ; i32.const
00019e0: 01                                        ; i32 literal
00019e1: 42                                        ; i64.const
00019e2: 02                                        ; i64 literal
00019e3: fe                                        ; prefix
00019e4: 2b                                        ; i64.atomic.rmw32_u.sub
00019e5: 02                                        ; alignment
00019e6: 03                                        ; memory offset
00019e7: 1a                                        ; drop
00019e8: 0b                                        ; end
00019dd: 0b                                        ; FIXUP func body size
; function body 215
00019e9: 00                                        ; func body size (guess)
00019ea: 00                                        ; local decl count
00019eb: 41                                        ; i32.const
00019ec: 01                                        ; i32 literal
00019ed: 41                                        ; i32.const
00019ee: 02                                        ; i32 literal
00019ef: fe                                        ; prefix
00019f0: 2c                                        ; i32.atomic.rmw.and
00019f1: 02                                        ; alignment
00019f2: 03                                        ; memory offset
00019f3: 1a                                        ; drop
00019f4: 0b                                        ; end
00019e9: 0b                                        ; FIXUP func body size
; function body 216
00019f5: 00                                        ; func body size (guess)
00019f6: 00                                        ; local decl count
00019f7: 41                                        ; i32.const
00019f8: 01                                        ; i32 literal
00019f9: 42                                        ; i64.const
00019fa: 02                                        ; i64 literal
00019fb: fe                                        ; prefix
00019fc: 2d                                        ; i64.atomic.rmw.and
00019fd: 03                                        ; alignment
00019fe: 07                                        ; memory offset
00019ff: 1a                                        ; drop
0001a00: 0b                                        ; end
00019f5: 0b                                        ; FIXUP func body size
; function body 217
0001a01: 00                                        ; func body size (guess)
0001a02: 00                                        ; local decl count
0001a03: 41                                        ; i32.const
0001a04: 01                                        ; i32 literal
0001a05: 41                                        ; i32.const
0001a06: 02                                        ; i32 literal
0001a07: fe                                        ; prefix
0001a08: 2e                                        ; i32.atomic.rmw8_u.and
0001a09: 00                                        ; alignment
0001a0a: 03                                        ; memory offset
0001a0b: 1a                                        ; drop
0001a0c: 0b                                        ; end
0001a01: 0b                                        ; FIXUP func body size
; function body 218
0001a0d: 00                                        ; func body size (guess)
0001a0e: 00                                        ; local decl count
0001a0f: 41                                        ; i32.const
0001a10: 01                                        ; i32 literal
0001a11: 41                                        ; i32.const
0001a12: 02                                        ; i32 literal
0001a13: fe                                        ; prefix
0001a14: 2f                                        ; i32.atomic.rmw16_u.and
0001a15: 01                                        ; alignment
0001a16: 03                                        ; memory offset
0001a17: 1a                                        ; drop
0001a18: 0b                                        ; end
0001a0d: 0b                                        ; FIXUP func body size
; function body 219
0001a19: 00                                        ; func body size (guess)
0001a1a: 00                                        ; local decl count
0001a1b: 41                                        ; i32.const
0001a1c: 01                                        ; i32 literal
0001a1d: 42                                        ; i64.const
0001a1e: 02                                        ; i64 literal
0001a1f: fe                                        ; prefix
0001a20: 30                                        ; i64.atomic.rmw8_u.and
0001a21: 00                                        ; alignment
0001a22: 03                                        ; memory offset
0001a23: 1a                                        ; drop
0001a24: 0b                                        ; end
0001a19: 0b                                        ; FIXUP func body size
; function body 220
0001a25: 00                                        ; func body size (guess)
0001a26: 00                                        ; local decl count
0001a27: 41                                        ; i32.const
0001a28: 01                                        ; i32 literal
0001a29: 42                                        ; i64.const
0001a2a: 02                                        ; i64 literal
0001a2b: fe                                        ; prefix
0001a2c: 31                                        ; i64.atomic.rmw16_u.and
0001a2d: 01                                        ; alignment
0001a2e: 03                                        ; memory offset
0001a2f: 1a                                        ; drop
0001a30: 0b                                        ; end
0001a25: 0b                                        ; FIXUP func body size
; function body 221
0001a31: 00                                        ; func body size (guess)
0001a32: 00                                        ; local decl count
0001a33: 41                                        ; i32.const
0001a34: 01                                        ; i32 literal
0001a35: 42                                        ; i64.const
0001a36: 02                                        ; i64 literal
0001a37: fe                                        ; prefix
0001a38: 32                                        ; i64.atomic.rmw32_u.and
0001a39: 02                                        ; alignment
0001a3a: 03                                        ; memory offset
0001a3b: 1a                                        ; drop
0001a3c: 0b                                        ; end
0001a31: 0b                                        ; FIXUP func body size
; function body 222
0001a3d: 00                                        ; func body size (guess)
0001a3e: 00                                        ; local decl count
0001a3f: 41                                        ; i32.const
0001a40: 01                                        ; i32 literal
0001a41: 41                                        ; i32.const
0001a42: 02                                        ; i32 literal
0001a43: fe                                        ; prefix
0001a44: 33                                        ; i32.atomic.rmw.or
0001a45: 02                                        ; alignment
0001a46: 03                                        ; memory offset
0001a47: 1a                                        ; drop
0001a48: 0b                                        ; end
0001a3d: 0b                                        ; FIXUP func body size
; function body 223
0001a49: 00                                        ; func body size (guess)
0001a4a: 00                                        ; local decl count
0001a4b: 41                                        ; i32.const
0001a4c: 01                                        ; i32 literal
0001a4d: 42                                        ; i64.const
0001a4e: 02                                        ; i64 literal
0001a4f: fe                                        ; prefix
0001a50: 34                                        ; i64.atomic.rmw.or
0001a51: 03                                        ; alignment
0001a52: 07                                        ; memory offset
0001a53: 1a                                        ; drop
0001a54: 0b                                        ; end
0001a49: 0b                                        ; FIXUP func body size
; function body 224
0001a55: 00                                        ; func body size (guess)
0001a56: 00                                        ; local decl count
0001a57: 41                                        ; i32.const
0001a58: 01                                        ; i32 literal
0001a59: 41                                        ; i32.const
0001a5a: 02                                        ; i32 literal
0001a5b: fe                                        ; prefix
0001a5c: 35                                        ; i32.atomic.rmw8_u.or
0001a5d: 00                                        ; alignment
0001a5e: 03                                        ; memory offset
0001a5f: 1a                                        ; drop
0001a60: 0b                                        ; end
0001a55: 0b                                        ; FIXUP func body size
; function body 225
0001a61: 00                                        ; func body size (guess)
0001a62: 00                                        ; local decl count
0001a63: 41                                        ; i32.const
0001a64: 01                                        ; i32 literal
0001a65: 41                                        ; i32.const
0001a66: 02                                        ; i32 literal
0001a67: fe                                        ; prefix
0001a68: 36                                        ; i32.atomic.rmw16_u.or
0001a69: 01                                        ; alignment
0001a6a: 03                                        ; memory offset
0001a6b: 1a                                        ; drop
0001a6c: 0b                                        ; end
0001a61: 0b                                        ; FIXUP func body size
; function body 226
0001a6d: 00                                        ; func body size (guess)
0001a6e: 00                                        ; local decl count
0001a6f: 41                                        ; i32.const
0001a70: 01                                        ; i32 literal
0001a71: 42                                        ; i64.const
0001a72: 02                                        ; i64 literal
0001a73: fe                                        ; prefix
0001a74: 37                                        ; i64.atomic.rmw8_u.or
0001a75: 00                                        ; alignment
0001a76: 03                                        ; memory offset
0001a77: 1a                                        ; drop
0001a78: 0b                                        ; end
0001a6d: 0b                                        ; FIXUP func body size
; function body 227
0001a79: 00                                        ; func body size (guess)
0001a7a: 00                                        ; local decl count
0001a7b: 41                                        ; i32.const
0001a7c: 01                                        ; i32 literal
0001a7d: 42                                        ; i64.const
0001a7e: 02                                        ; i64 literal
0001a7f: fe                                        ; prefix
0001a80: 38                                        ; i64.atomic.rmw16_u.or
0001a81: 01                                        ; alignment
0001a82: 03                                        ; memory offset
0001a83: 1a                                        ; drop
0001a84: 0b                                        ; end
0001a79: 0b                                        ; FIXUP func body size
; function body 228
0001a85: 00                                        ; func body size (guess)
0001a86: 00                                        ; local decl count
0001a87: 41                                        ; i32.const
0001a88: 01                                        ; i32 literal
0001a89: 42                                        ; i64.const
0001a8a: 02                                        ; i64 literal
0001a8b: fe                                        ; prefix
0001a8c: 39                                        ; i64.atomic.rmw32_u.or
0001a8d: 02                                        ; alignment
0001a8e: 03                                        ; memory offset
0001a8f: 1a                                        ; drop
0001a90: 0b                                        ; end
0001a85: 0b                                        ; FIXUP func body size
; function body 229
0001a91: 00                                        ; func body size (guess)
0001a92: 00                                        ; local decl count
0001a93: 41                                        ; i32.const
0001a94: 01                                        ; i32 literal
0001a95: 41                                        ; i32.const
0001a96: 02                                        ; i32 literal
0001a97: fe                                        ; prefix
0001a98: 3a                                        ; i32.atomic.rmw.xor
0001a99: 02                                        ; alignment
0001a9a: 03                                        ; memory offset
0001a9b: 1a                                        ; drop
0001a9c: 0b                                        ; end
0001a91: 0b                                        ; FIXUP func body size
; function body 230
0001a9d: 00                                        ; func body size (guess)
0001a9e: 00                                        ; local decl count
0001a9f: 41                                        ; i32.const
0001aa0: 01                                        ; i32 literal
0001aa1: 42                                        ; i64.const
0001aa2: 02                                        ; i64 literal
0001aa3: fe                                        ; prefix
0001aa4: 3b                                        ; i64.atomic.rmw.xor
0001aa5: 03                                        ; alignment
0001aa6: 07                                        ; memory offset
0001aa7: 1a                                        ; drop
0001aa8: 0b                                        ; end
0001a9d: 0b                                        ; FIXUP func body size
; function body 231
0001aa9: 00                                        ; func body size (guess)
0001aaa: 00                                        ; local decl count
0001aab: 41                                        ; i32.const
0001aac: 01                                        ; i32 literal
0001aad: 41                                        ; i32.const
0001aae: 02                                        ; i32 literal
0001aaf: fe                                        ; prefix
0001ab0: 3c                                        ; i32.atomic.rmw8_u.xor
0001ab1: 00                                        ; alignment
0001ab2: 03                                        ; memory offset
0001ab3: 1a                                        ; drop
0001ab4: 0b                                        ; end
0001aa9: 0b                                        ; FIXUP func body size
; function body 232
0001ab5: 00                                        ; func body size (guess)
0001ab6: 00                                        ; local decl count
0001ab7: 41                                        ; i32.const
0001ab8: 01                                        ; i32 literal
0001ab9: 41                                        ; i32.const
0001aba: 02                                        ; i32 literal
0001abb: fe                                        ; prefix
0001abc: 3d                                        ; i32.atomic.rmw16_u.xor
0001abd: 01                                        ; alignment
0001abe: 03                                        ; memory offset
0001abf: 1a                                        ; drop
0001ac0: 0b                                        ; end
0001ab5: 0b                                        ; FIXUP func body size
; function body 233
0001ac1: 00                                        ; func body size (guess)
0001ac2: 00                                        ; local decl count
0001ac3: 41                                        ; i32.const
0001ac4: 01                                        ; i32 literal
0001ac5: 42                                        ; i64.const
0001ac6: 02                                        ; i64 literal
0001ac7: fe                                        ; prefix
0001ac8: 3e                                        ; i64.atomic.rmw8_u.xor
0001ac9: 00                                        ; alignment
0001aca: 03                                        ; memory offset
0001acb: 1a                                        ; drop
0001acc: 0b                                        ; end
0001ac1: 0b                                        ; FIXUP func body size
; function body 234
0001acd: 00                                        ; func body size (guess)
0001ace: 00                                        ; local decl count
0001acf: 41                                        ; i32.const
0001ad0: 01                                        ; i32 literal
0001ad1: 42                                        ; i64.const
0001ad2: 02                                        ; i64 literal
0001ad3: fe                                        ; prefix
0001ad4: 3f                                        ; i64.atomic.rmw16_u.xor
0001ad5: 01                                        ; alignment
0001ad6: 03                                        ; memory offset
0001ad7: 1a                                        ; drop
0001ad8: 0b                                        ; end
0001acd: 0b                                        ; FIXUP func body size
; function body 235
0001ad9: 00                                        ; func body size (guess)
0001ada: 00                                        ; local decl count
0001adb: 41                                        ; i32.const
0001adc: 01                                        ; i32 literal
0001add: 42                                        ; i64.const
0001ade: 02                                        ; i64 literal
0001adf: fe                                        ; prefix
0001ae0: 40                                        ; i64.atomic.rmw32_u.xor
0001ae1: 02                                        ; alignment
0001ae2: 03                                        ; memory offset
0001ae3: 1a                                        ; drop
0001ae4: 0b                                        ; end
0001ad9: 0b                                        ; FIXUP func body size
; function body 236
0001ae5: 00                                        ; func body size (guess)
0001ae6: 00                                        ; local decl count
0001ae7: 41                                        ; i32.const
0001ae8: 01                                        ; i32 literal
0001ae9: 41                                        ; i32.const
0001aea: 02                                        ; i32 literal
0001aeb: fe                                        ; prefix
0001aec: 41                                        ; i32.atomic.rmw.xchg
0001aed: 02                                        ; alignment
0001aee: 03                                        ; memory offset
0001aef: 1a                                        ; drop
0001af0: 0b                                        ; end
0001ae5: 0b                                        ; FIXUP func body size
; function body 237
0001af1: 00                                        ; func body size (guess)
0001af2: 00                                        ; local decl count
0001af3: 41                                        ; i32.const
0001af4: 01                                        ; i32 literal
0001af5: 42                                        ; i64.const
0001af6: 02                                        ; i64 literal
0001af7: fe                                        ; prefix
0001af8: 42                                        ; i64.atomic.rmw.xchg
0001af9: 03                                        ; alignment
0001afa: 07                                        ; memory offset
0001afb: 1a                                        ; drop
0001afc: 0b                                        ; end
0001af1: 0b                                        ; FIXUP func body size
; function body 238
0001afd: 00                                        ; func body size (guess)
0001afe: 00                                        ; local decl count
0001aff: 41                                        ; i32.const
0001b00: 01                                        ; i32 literal
0001b01: 41                                        ; i32.const
0001b02: 02                                        ; i32 literal
0001b03: fe                                        ; prefix
0001b04: 43                                        ; i32.atomic.rmw8_u.xchg
0001b05: 00                                        ; alignment
0001b06: 03                                        ; memory offset
0001b07: 1a                                        ; drop
0001b08: 0b                                        ; end
0001afd: 0b                                        ; FIXUP func body size
; function body 239
0001b09: 00                                        ; func body size (guess)
0001b0a: 00                                        ; local decl count
0001b0b: 41                                        ; i32.const
0001b0c: 01                                        ; i32 literal
0001b0d: 41                                        ; i32.const
0001b0e: 02                                        ; i32 literal
0001b0f: fe                                        ; prefix
0001b10: 44                                        ; i32.atomic.rmw16_u.xchg
0001b11: 01                                        ; alignment
0001b12: 03                                        ; memory offset
0001b13: 1a                                        ; drop
0001b14: 0b                                        ; end
0001b09: 0b                                        ; FIXUP func body size
; function body 240
0001b15: 00                                        ; func body size (guess)
0001b16: 00                                        ; local decl count
0001b17: 41                                        ; i32.const
0001b18: 01                                        ; i32 literal
0001b19: 42                                        ; i64.const
0001b1a: 02                                        ; i64 literal
0001b1b: fe                                        ; prefix
0001b1c: 45                                        ; i64.atomic.rmw8_u.xchg
0001b1d: 00                                        ; alignment
0001b1e: 03                                        ; memory offset
0001b1f: 1a                                        ; drop
0001b20: 0b                                        ; end
0001b15: 0b                                        ; FIXUP func body size
; function body 241
0001b21: 00                                        ; func body size (guess)
0001b22: 00                                        ; local decl count
0001b23: 41                                        ; i32.const
0001b24: 01                                        ; i32 literal
0001b25: 42                                        ; i64.const
0001b26: 02                                        ; i64 literal
0001b27: fe                                        ; prefix
0001b28: 46                                        ; i64.atomic.rmw16_u.xchg
0001b29: 01                                        ; alignment
0001b2a: 03                                        ; memory offset
0001b2b: 1a                                        ; drop
0001b2c: 0b                                        ; end
0001b21: 0b                                        ; FIXUP func body size
; function body 242
0001b2d: 00                                        ; func body size (guess)
0001b2e: 00                                        ; local decl count
0001b2f: 41                                        ; i32.const
0001b30: 01                                        ; i32 literal
0001b31: 42                                        ; i64.const
0001b32: 02                                        ; i64 literal
0001b33: fe                                        ; prefix
0001b34: 47                                        ; i64.atomic.rmw32_u.xchg
0001b35: 02                                        ; alignment
0001b36: 03                                        ; memory offset
0001b37: 1a                                        ; drop
0001b38: 0b                                        ; end
0001b2d: 0b                                        ; FIXUP func body size
; function body 243
0001b39: 00                                        ; func body size (guess)
0001b3a: 00                                        ; local decl count
0001b3b: 41                                        ; i32.const
0001b3c: 01                                        ; i32 literal
0001b3d: 41                                        ; i32.const
0001b3e: 02                                        ; i32 literal
0001b3f: 41                                        ; i32.const
0001b40: 03                                        ; i32 literal
0001b41: fe                                        ; prefix
0001b42: 48                                        ; i32.atomic.rmw.cmpxchg
0001b43: 02                                        ; alignment
0001b44: 03                                        ; memory offset
0001b45: 1a                                        ; drop
0001b46: 0b                                        ; end
0001b39: 0d                                        ; FIXUP func body size
; function body 244
0001b47: 00                                        ; func body size (guess)
0001b48: 00                                        ; local decl count
0001b49: 41                                        ; i32.const
0001b4a: 01                                        ; i32 literal
0001b4b: 42                                        ; i64.const
0001b4c: 02                                        ; i64 literal
0001b4d: 42                                        ; i64.const
0001b4e: 03                                        ; i64 literal
0001b4f: fe                                        ; prefix
0001b50: 49                                        ; i64.atomic.rmw.cmpxchg
0001b51: 03                                        ; alignment
0001b52: 07                                        ; memory offset
0001b53: 1a                                        ; drop
0001b54: 0b                                        ; end
0001b47: 0d                                        ; FIXUP func body size
; function body 245
0001b55: 00                                        ; func body size (guess)
0001b56: 00                                        ; local decl count
0001b57: 41                                        ; i32.const
0001b58: 01                                        ; i32 literal
0001b59: 41                                        ; i32.const
0001b5a: 02                                        ; i32 literal
0001b5b: 41                                        ; i32.const
0001b5c: 03                                        ; i32 literal
0001b5d: fe                                        ; prefix
0001b5e: 4a                                        ; i32.atomic.rmw8_u.cmpxchg
0001b5f: 00                                        ; alignment
0001b60: 03                                        ; memory offset
0001b61: 1a                                        ; drop
0001b62: 0b                                        ; end
0001b55: 0d                                        ; FIXUP func body size
; function body 246
0001b63: 00                                        ; func body size (guess)
0001b64: 00                                        ; local decl count
0001b65: 41                                        ; i32.const
0001b66: 01                                        ; i32 literal
0001b67: 41                                        ; i32.const
0001b68: 02                                        ; i32 literal
0001b69: 41                                        ; i32.const
0001b6a: 03                                        ; i32 literal
0001b6b: fe                                        ; prefix
0001b6c: 4b                                        ; i32.atomic.rmw16_u.cmpxchg
0001b6d: 01                                        ; alignment
0001b6e: 03                                        ; memory offset
0001b6f: 1a                                        ; drop
0001b70: 0b                                        ; end
0001b63: 0d                                        ; FIXUP func body size
; function body 247
0001b71: 00                                        ; func body size (guess)
0001b72: 00                                        ; local decl count
0001b73: 41                                        ; i32.const
0001b74: 01                                        ; i32 literal
0001b75: 42                                        ; i64.const
0001b76: 02                                        ; i64 literal
0001b77: 42                                        ; i64.const
0001b78: 03                                        ; i64 literal
0001b79: fe                                        ; prefix
0001b7a: 4c                                        ; i64.atomic.rmw8_u.cmpxchg
0001b7b: 00                                        ; alignment
0001b7c: 03                                        ; memory offset
0001b7d: 1a                                        ; drop
0001b7e: 0b                                        ; end
0001b71: 0d                                        ; FIXUP func body size
; function body 248
0001b7f: 00                                        ; func body size (guess)
0001b80: 00                                        ; local decl count
0001b81: 41                                        ; i32.const
0001b82: 01                                        ; i32 literal
0001b83: 42                                        ; i64.const
0001b84: 02                                        ; i64 literal
0001b85: 42                                        ; i64.const
0001b86: 03                                        ; i64 literal
0001b87: fe                                        ; prefix
0001b88: 4d                                        ; i64.atomic.rmw16_u.cmpxchg
0001b89: 01                                        ; alignment
0001b8a: 03                                        ; memory offset
0001b8b: 1a                                        ; drop
0001b8c: 0b                                        ; end
0001b7f: 0d                                        ; FIXUP func body size
; function body 249
0001b8d: 00                                        ; func body size (guess)
0001b8e: 00                                        ; local decl count
0001b8f: 41                                        ; i32.const
0001b90: 01                                        ; i32 literal
0001b91: 42                                        ; i64.const
0001b92: 02                                        ; i64 literal
0001b93: 42                                        ; i64.const
0001b94: 03                                        ; i64 literal
0001b95: fe                                        ; prefix
0001b96: 4e                                        ; i64.atomic.rmw32_u.cmpxchg
0001b97: 02                                        ; alignment
0001b98: 03                                        ; memory offset
0001b99: 1a                                        ; drop
0001b9a: 0b                                        ; end
0001b8d: 0d                                        ; FIXUP func body size
; move data: [10e6, 1b9b) -> [10e7, 1b9c)
00010e5: b515                                      ; FIXUP section size
BeginModule(version: 1)
  BeginTypeSection(8)
    OnTypeCount(2)
    OnType(index: 0, params: [], results: [])
    OnType(index: 1, params: [i32], results: [])
  EndTypeSection
  BeginImportSection(14)
    OnImportCount(1)
    OnImport(index: 0, module: "host", field: "print")
    OnImportFunc(import_index: 0, func_index: 0, sig_index: 1)
  EndImportSection
  BeginFunctionSection(252)
    OnFunctionCount(250)
    OnFunction(index: 1, sig_index: 0)
    OnFunction(index: 2, sig_index: 0)
    OnFunction(index: 3, sig_index: 0)
    OnFunction(index: 4, sig_index: 0)
    OnFunction(index: 5, sig_index: 0)
    OnFunction(index: 6, sig_index: 0)
    OnFunction(index: 7, sig_index: 0)
    OnFunction(index: 8, sig_index: 0)
    OnFunction(index: 9, sig_index: 0)
    OnFunction(index: 10, sig_index: 0)
    OnFunction(index: 11, sig_index: 0)
    OnFunction(index: 12, sig_index: 0)
    OnFunction(index: 13, sig_index: 0)
    OnFunction(index: 14, sig_index: 0)
    OnFunction(index: 15, sig_index: 0)
    OnFunction(index: 16, sig_index: 0)
    OnFunction(index: 17, sig_index: 0)
    OnFunction(index: 18, sig_index: 0)
    OnFunction(index: 19, sig_index: 0)
    OnFunction(index: 20, sig_index: 0)
    OnFunction(index: 21, sig_index: 0)
    OnFunction(index: 22, sig_index: 0)
    OnFunction(index: 23, sig_index: 0)
    OnFunction(index: 24, sig_index: 0)
    OnFunction(index: 25, sig_index: 0)
    OnFunction(index: 26, sig_index: 0)
    OnFunction(index: 27, sig_index: 0)
    OnFunction(index: 28, sig_index: 0)
    OnFunction(index: 29, sig_index: 0)
    OnFunction(index: 30, sig_index: 0)
    OnFunction(index: 31, sig_index: 0)
    OnFunction(index: 32, sig_index: 0)
    OnFunction(index: 33, sig_index: 0)
    OnFunction(index: 34, sig_index: 0)
    OnFunction(index: 35, sig_index: 0)
    OnFunction(index: 36, sig_index: 0)
    OnFunction(index: 37, sig_index: 0)
    OnFunction(index: 38, sig_index: 0)
    OnFunction(index: 39, sig_index: 0)
    OnFunction(index: 40, sig_index: 0)
    OnFunction(index: 41, sig_index: 0)
    OnFunction(index: 42, sig_index: 0)
    OnFunction(index: 43, sig_index: 0)
    OnFunction(index: 44, sig_index: 0)
    OnFunction(index: 45, sig_index: 0)
    OnFunction(index: 46, sig_index: 0)
    OnFunction(index: 47, sig_index: 0)
    OnFunction(index: 48, sig_index: 0)
    OnFunction(index: 49, sig_index: 0)
    OnFunction(index: 50, sig_index: 0)
    OnFunction(index: 51, sig_index: 0)
    OnFunction(index: 52, sig_index: 0)
    OnFunction(index: 53, sig_index: 0)
    OnFunction(index: 54, sig_index: 0)
    OnFunction(index: 55, sig_index: 0)
    OnFunction(index: 56, sig_index: 0)
    OnFunction(index: 57, sig_index: 0)
    OnFunction(index: 58, sig_index: 0)
    OnFunction(index: 59, sig_index: 0)
    OnFunction(index: 60, sig_index: 0)
    OnFunction(index: 61, sig_index: 0)
    OnFunction(index: 62, sig_index: 0)
    OnFunction(index: 63, sig_index: 0)
    OnFunction(index: 64, sig_index: 0)
    OnFunction(index: 65, sig_index: 0)
    OnFunction(index: 66, sig_index: 0)
    OnFunction(index: 67, sig_index: 0)
    OnFunction(index: 68, sig_index: 0)
    OnFunction(index: 69, sig_index: 0)
    OnFunction(index: 70, sig_index: 0)
    OnFunction(index: 71, sig_index: 0)
    OnFunction(index: 72, sig_index: 0)
    OnFunction(index: 73, sig_index: 0)
    OnFunction(index: 74, sig_index: 0)
    OnFunction(index: 75, sig_index: 0)
    OnFunction(index: 76, sig_index: 0)
    OnFunction(index: 77, sig_index: 0)
    OnFunction(index: 78, sig_index: 0)
    OnFunction(index: 79, sig_index: 0)
    OnFunction(index: 80, sig_index: 0)
    OnFunction(index: 81, sig_index: 0)
    OnFunction(index: 82, sig_index: 0)
    OnFunction(index: 83, sig_index: 0)
    OnFunction(index: 84, sig_index: 0)
    OnFunction(index: 85, sig_index: 0)
    OnFunction(index: 86, sig_index: 0)
    OnFunction(index: 87, sig_index: 0)
    OnFunction(index: 88, sig_index: 0)
    OnFunction(index: 89, sig_index: 0)
    OnFunction(index: 90, sig_index: 0)
    OnFunction(index: 91, sig_index: 0)
    OnFunction(index: 92, sig_index: 0)
    OnFunction(index: 93, sig_index: 0)
    OnFunction(index: 94, sig_index: 0)
    OnFunction(index: 95, sig_index: 0)
    OnFunction(index: 96, sig_index: 0)
    OnFunction(index: 97, sig_index: 0)
    OnFunction(index: 98, sig_index: 0)
    OnFunction(index: 99, sig_index: 0)
    OnFunction(index: 100, sig_index: 0)
    OnFunction(index: 101, sig_index: 0)
    OnFunction(index: 102, sig_index: 0)
    OnFunction(index: 103, sig_index: 0)
    OnFunction(index: 104, sig_index: 0)
    OnFunction(index: 105, sig_index: 0)
    OnFunction(index: 106, sig_index: 0)
    OnFunction(index: 107, sig_index: 0)
    OnFunction(index: 108, sig_index: 0)
    OnFunction(index: 109, sig_index: 0)
    OnFunction(index: 110, sig_index: 0)
    OnFunction(index: 111, sig_index: 0)
    OnFunction(index: 112, sig_index: 0)
    OnFunction(index: 113, sig_index: 0)
    OnFunction(index: 114, sig_index: 0)
    OnFunction(index: 115, sig_index: 0)
    OnFunction(index: 116, sig_index: 0)
    OnFunction(index: 117, sig_index: 0)
    OnFunction(index: 118, sig_index: 0)
    OnFunction(index: 119, sig_index: 0)
    OnFunction(index: 120, sig_index: 0)
    OnFunction(index: 121, sig_index: 0)
    OnFunction(index: 122, sig_index: 0)
    OnFunction(index: 123, sig_index: 0)
    OnFunction(index: 124, sig_index: 0)
    OnFunction(index: 125, sig_index: 0)
    OnFunction(index: 126, sig_index: 0)
    OnFunction(index: 127, sig_index: 0)
    OnFunction(index: 128, sig_index: 0)
    OnFunction(index: 129, sig_index: 0)
    OnFunction(index: 130, sig_index: 0)
    OnFunction(index: 131, sig_index: 0)
    OnFunction(index: 132, sig_index: 0)
    OnFunction(index: 133, sig_index: 0)
    OnFunction(index: 134, sig_index: 0)
    OnFunction(index: 135, sig_index: 0)
    OnFunction(index: 136, sig_index: 0)
    OnFunction(index: 137, sig_index: 0)
    OnFunction(index: 138, sig_index: 0)
    OnFunction(index: 139, sig_index: 0)
    OnFunction(index: 140, sig_index: 0)
    OnFunction(index: 141, sig_index: 0)
    OnFunction(index: 142, sig_index: 0)
    OnFunction(index: 143, sig_index: 0)
    OnFunction(index: 144, sig_index: 0)
    OnFunction(index: 145, sig_index: 0)
    OnFunction(index: 146, sig_index: 0)
    OnFunction(index: 147, sig_index: 0)
    OnFunction(index: 148, sig_index: 0)
    OnFunction(index: 149, sig_index: 0)
    OnFunction(index: 150, sig_index: 0)
    OnFunction(index: 151, sig_index: 0)
    OnFunction(index: 152, sig_index: 0)
    OnFunction(index: 153, sig_index: 0)
    OnFunction(index: 154, sig_index: 0)
    OnFunction(index: 155, sig_index: 0)
    OnFunction(index: 156, sig_index: 0)
    OnFunction(index: 157, sig_index: 0)
    OnFunction(index: 158, sig_index: 0)
    OnFunction(index: 159, sig_index: 0)
    OnFunction(index: 160, sig_index: 0)
    OnFunction(index: 161, sig_index: 0)
    OnFunction(index: 162, sig_index: 0)
    OnFunction(index: 163, sig_index: 0)
    OnFunction(index: 164, sig_index: 0)
    OnFunction(index: 165, sig_index: 0)
    OnFunction(index: 166, sig_index: 0)
    OnFunction(index: 167, sig_index: 0)
    OnFunction(index: 168, sig_index: 0)
    OnFunction(index: 169, sig_index: 0)
    OnFunction(index: 170, sig_index: 0)
    OnFunction(index: 171, sig_index: 0)
    OnFunction(index: 172, sig_index: 0)
    OnFunction(index: 173, sig_index: 0)
    OnFunction(index: 174, sig_index: 0)
    OnFunction(index: 175, sig_index: 0)
    OnFunction(index: 176, sig_index: 0)
    OnFunction(index: 177, sig_index: 0)
    OnFunction(index: 178, sig_index: 0)
    OnFunction(index: 179, sig_index: 0)
    OnFunction(index: 180, sig_index: 0)
    OnFunction(index: 181, sig_index: 0)
    OnFunction(index: 182, sig_index: 0)
    OnFunction(index: 183, sig_index: 0)
    OnFunction(index: 184, sig_index: 0)
    OnFunction(index: 185, sig_index: 0)
    OnFunction(index: 186, sig_index: 0)
    OnFunction(index: 187, sig_index: 0)
    OnFunction(index: 188, sig_index: 0)
    OnFunction(index: 189, sig_index: 0)
    OnFunction(index: 190, sig_index: 0)
    OnFunction(index: 191, sig_index: 0)
    OnFunction(index: 192, sig_index: 0)
    OnFunction(index: 193, sig_index: 0)
    OnFunction(index: 194, sig_index: 0)
    OnFunction(index: 195, sig_index: 0)
    OnFunction(index: 196, sig_index: 0)
    OnFunction(index: 197, sig_index: 0)
    OnFunction(index: 198, sig_index: 0)
    OnFunction(index: 199, sig_index: 0)
    OnFunction(index: 200, sig_index: 0)
    OnFunction(index: 201, sig_index: 0)
    OnFunction(index: 202, sig_index: 0)
    OnFunction(index: 203, sig_index: 0)
    OnFunction(index: 204, sig_index: 0)
    OnFunction(index: 205, sig_index: 0)
    OnFunction(index: 206, sig_index: 0)
    OnFunction(index: 207, sig_index: 0)
    OnFunction(index: 208, sig_index: 0)
    OnFunction(index: 209, sig_index: 0)
    OnFunction(index: 210, sig_index: 0)
    OnFunction(index: 211, sig_index: 0)
    OnFunction(index: 212, sig_index: 0)
    OnFunction(index: 213, sig_index: 0)
    OnFunction(index: 214, sig_index: 0)
    OnFunction(index: 215, sig_index: 0)
    OnFunction(index: 216, sig_index: 0)
    OnFunction(index: 217, sig_index: 0)
    OnFunction(index: 218, sig_index: 0)
    OnFunction(index: 219, sig_index: 0)
    OnFunction(index: 220, sig_index: 0)
    OnFunction(index: 221, sig_index: 0)
    OnFunction(index: 222, sig_index: 0)
    OnFunction(index: 223, sig_index: 0)
    OnFunction(index: 224, sig_index: 0)
    OnFunction(index: 225, sig_index: 0)
    OnFunction(index: 226, sig_index: 0)
    OnFunction(index: 227, sig_index: 0)
    OnFunction(index: 228, sig_index: 0)
    OnFunction(index: 229, sig_index: 0)
    OnFunction(index: 230, sig_index: 0)
    OnFunction(index: 231, sig_index: 0)
    OnFunction(index: 232, sig_index: 0)
    OnFunction(index: 233, sig_index: 0)
    OnFunction(index: 234, sig_index: 0)
    OnFunction(index: 235, sig_index: 0)
    OnFunction(index: 236, sig_index: 0)
    OnFunction(index: 237, sig_index: 0)
    OnFunction(index: 238, sig_index: 0)
    OnFunction(index: 239, sig_index: 0)
    OnFunction(index: 240, sig_index: 0)
    OnFunction(index: 241, sig_index: 0)
    OnFunction(index: 242, sig_index: 0)
    OnFunction(index: 243, sig_index: 0)
    OnFunction(index: 244, sig_index: 0)
    OnFunction(index: 245, sig_index: 0)
    OnFunction(index: 246, sig_index: 0)
    OnFunction(index: 247, sig_index: 0)
    OnFunction(index: 248, sig_index: 0)
    OnFunction(index: 249, sig_index: 0)
    OnFunction(index: 250, sig_index: 0)
  EndFunctionSection
  BeginTableSection(5)
    OnTableCount(1)
    OnTable(index: 0, elem_type: anyfunc, initial: 2, max: 2)
  EndTableSection
  BeginMemorySection(4)
    OnMemoryCount(1)
    OnMemory(index: 0, initial: 1, max: 1)
  EndMemorySection
  BeginGlobalSection(6)
    OnGlobalCount(1)
    BeginGlobal(index: 0, type: i32, mutable: true)
    BeginGlobalInitExpr(0)
    OnInitExprI32ConstExpr(index: 0, value: 0)
    EndGlobalInitExpr(0)
    EndGlobal(0)
  EndGlobalSection
  BeginExportSection(4001)
    OnExportCount(249)
    OnExport(index: 0, kind: func, item_index: 2, name: "unreachable")
    OnExport(index: 1, kind: func, item_index: 3, name: "br")
    OnExport(index: 2, kind: func, item_index: 4, name: "br_table")
    OnExport(index: 3, kind: func, item_index: 5, name: "return")
    OnExport(index: 4, kind: func, item_index: 6, name: "call")
    OnExport(index: 5, kind: func, item_index: 7, name: "call_indirect")
    OnExport(index: 6, kind: func, item_index: 8, name: "drop")
    OnExport(index: 7, kind: func, item_index: 9, name: "select")
    OnExport(index: 8, kind: func, item_index: 10, name: "get_local")
    OnExport(index: 9, kind: func, item_index: 11, name: "set_local")
    OnExport(index: 10, kind: func, item_index: 12, name: "tee_local")
    OnExport(index: 11, kind: func, item_index: 13, name: "get_global")
    OnExport(index: 12, kind: func, item_index: 14, name: "set_global")
    OnExport(index: 13, kind: func, item_index: 15, name: "i32.load")
    OnExport(index: 14, kind: func, item_index: 16, name: "i64.load")
    OnExport(index: 15, kind: func, item_index: 17, name: "f32.load")
    OnExport(index: 16, kind: func, item_index: 18, name: "f64.load")
    OnExport(index: 17, kind: func, item_index: 19, name: "i32.load8_s")
    OnExport(index: 18, kind: func, item_index: 20, name: "i32.load8_u")
    OnExport(index: 19, kind: func, item_index: 21, name: "i32.load16_s")
    OnExport(index: 20, kind: func, item_index: 22, name: "i32.load16_u")
    OnExport(index: 21, kind: func, item_index: 23, name: "i64.load8_s")
    OnExport(index: 22, kind: func, item_index: 24, name: "i64.load8_u")
    OnExport(index: 23, kind: func, item_index: 25, name: "i64.load16_s")
    OnExport(index: 24, kind: func, item_index: 26, name: "i64.load16_u")
    OnExport(index: 25, kind: func, item_index: 27, name: "i64.load32_s")
    OnExport(index: 26, kind: func, item_index: 28, name: "i64.load32_u")
    OnExport(index: 27, kind: func, item_index: 29, name: "i32.store")
    OnExport(index: 28, kind: func, item_index: 30, name: "i64.store")
    OnExport(index: 29, kind: func, item_index: 31, name: "f32.store")
    OnExport(index: 30, kind: func, item_index: 32, name: "f64.store")
    OnExport(index: 31, kind: func, item_index: 33, name: "i32.store8")
    OnExport(index: 32, kind: func, item_index: 34, name: "i32.store16")
    OnExport(index: 33, kind: func, item_index: 35, name: "i64.store8")
    OnExport(index: 34, kind: func, item_index: 36, name: "i64.store16")
    OnExport(index: 35, kind: func, item_index: 37, name: "i64.store32")
    OnExport(index: 36, kind: func, item_index: 38, name: "current_memory")
    OnExport(index: 37, kind: func, item_index: 39, name: "grow_memory")
    OnExport(index: 38, kind: func, item_index: 40, name: "i32.const")
    OnExport(index: 39, kind: func, item_index: 41, name: "i64.const")
    OnExport(index: 40, kind: func, item_index: 42, name: "f32.const")
    OnExport(index: 41, kind: func, item_index: 43, name: "f64.const")
    OnExport(index: 42, kind: func, item_index: 44, name: "i32.eqz")
    OnExport(index: 43, kind: func, item_index: 45, name: "i32.eq")
    OnExport(index: 44, kind: func, item_index: 46, name: "i32.ne")
    OnExport(index: 45, kind: func, item_index: 47, name: "i32.lt_s")
    OnExport(index: 46, kind: func, item_index: 48, name: "i32.lt_u")
    OnExport(index: 47, kind: func, item_index: 49, name: "i32.gt_s")
    OnExport(index: 48, kind: func, item_index: 50, name: "i32.gt_u")
    OnExport(index: 49, kind: func, item_index: 51, name: "i32.le_s")
    OnExport(index: 50, kind: func, item_index: 52, name: "i32.le_u")
    OnExport(index: 51, kind: func, item_index: 53, name: "i32.ge_s")
    OnExport(index: 52, kind: func, item_index: 54, name: "i32.ge_u")
    OnExport(index: 53, kind: func, item_index: 55, name: "i64.eqz")
    OnExport(index: 54, kind: func, item_index: 56, name: "i64.eq")
    OnExport(index: 55, kind: func, item_index: 57, name: "i64.ne")
    OnExport(index: 56, kind: func, item_index: 58, name: "i64.lt_s")
    OnExport(index: 57, kind: func, item_index: 59, name: "i64.lt_u")
    OnExport(index: 58, kind: func, item_index: 60, name: "i64.gt_s")
    OnExport(index: 59, kind: func, item_index: 61, name: "i64.gt_u")
    OnExport(index: 60, kind: func, item_index: 62, name: "i64.le_s")
    OnExport(index: 61, kind: func, item_index: 63, name: "i64.le_u")
    OnExport(index: 62, kind: func, item_index: 64, name: "i64.ge_s")
    OnExport(index: 63, kind: func, item_index: 65, name: "i64.ge_u")
    OnExport(index: 64, kind: func, item_index: 66, name: "f32.eq")
    OnExport(index: 65, kind: func, item_index: 67, name: "f32.ne")
    OnExport(index: 66, kind: func, item_index: 68, name: "f32.lt")
    OnExport(index: 67, kind: func, item_index: 69, name: "f32.gt")
    OnExport(index: 68, kind: func, item_index: 70, name: "f32.le")
    OnExport(index: 69, kind: func, item_index: 71, name: "f32.ge")
    OnExport(index: 70, kind: func, item_index: 72, name: "f64.eq")
    OnExport(index: 71, kind: func, item_index: 73, name: "f64.ne")
    OnExport(index: 72, kind: func, item_index: 74, name: "f64.lt")
    OnExport(index: 73, kind: func, item_index: 75, name: "f64.gt")
    OnExport(index: 74, kind: func, item_index: 76, name: "f64.le")
    OnExport(index: 75, kind: func, item_index: 77, name: "f64.ge")
    OnExport(index: 76, kind: func, item_index: 78, name: "i32.clz")
    OnExport(index: 77, kind: func, item_index: 79, name: "i32.ctz")
    OnExport(index: 78, kind: func, item_index: 80, name: "i32.popcnt")
    OnExport(index: 79, kind: func, item_index: 81, name: "i32.add")
    OnExport(index: 80, kind: func, item_index: 82, name: "i32.sub")
    OnExport(index: 81, kind: func, item_index: 83, name: "i32.mul")
    OnExport(index: 82, kind: func, item_index: 84, name: "i32.div_s")
    OnExport(index: 83, kind: func, item_index: 85, name: "i32.div_u")
    OnExport(index: 84, kind: func, item_index: 86, name: "i32.rem_s")
    OnExport(index: 85, kind: func, item_index: 87, name: "i32.rem_u")
    OnExport(index: 86, kind: func, item_index: 88, name: "i32.and")
    OnExport(index: 87, kind: func, item_index: 89, name: "i32.or")
    OnExport(index: 88, kind: func, item_index: 90, name: "i32.xor")
    OnExport(index: 89, kind: func, item_index: 91, name: "i32.shl")
    OnExport(index: 90, kind: func, item_index: 92, name: "i32.shr_s")
    OnExport(index: 91, kind: func, item_index: 93, name: "i32.shr_u")
    OnExport(index: 92, kind: func, item_index: 94, name: "i32.rotl")
    OnExport(index: 93, kind: func, item_index: 95, name: "i32.rotr")
    OnExport(index: 94, kind: func, item_index: 96, name: "i64.clz")
    OnExport(index: 95, kind: func, item_index: 97, name: "i64.ctz")
    OnExport(index: 96, kind: func, item_index: 98, name: "i64.popcnt")
    OnExport(index: 97, kind: func, item_index: 99, name: "i64.add")
    OnExport(index: 98, kind: func, item_index: 100, name: "i64.sub")
    OnExport(index: 99, kind: func, item_index: 101, name: "i64.mul")
    OnExport(index: 100, kind: func, item_index: 102, name: "i64.div_s")
    OnExport(index: 101, kind: func, item_index: 103, name: "i64.div_u")
    OnExport(index: 102, kind: func, item_index: 104, name: "i64.rem_s")
    OnExport(index: 103, kind: func, item_index: 105, name: "i64.rem_u")
    OnExport(index: 104, kind: func, item_index: 106, name: "i64.and")
    OnExport(index: 105, kind: func, item_index: 107, name: "i64.or")
    OnExport(index: 106, kind: func, item_index: 108, name: "i64.xor")
    OnExport(index: 107, kind: func, item_index: 109, name: "i64.shl")
    OnExport(index: 108, kind: func, item_index: 110, name: "i64.shr_s")
    OnExport(index: 109, kind: func, item_index: 111, name: "i64.shr_u")
    OnExport(index: 110, kind: func, item_index: 112, name: "i64.rotl")
    OnExport(index: 111, kind: func, item_index: 113, name: "i64.rotr")
    OnExport(index: 112, kind: func, item_index: 114, name: "f32.abs")
    OnExport(index: 113, kind: func, item_index: 115, name: "f32.neg")
    OnExport(index: 114, kind: func, item_index: 116, name: "f32.ceil")
    OnExport(index: 115, kind: func, item_index: 117, name: "f32.floor")
    OnExport(index: 116, kind: func, item_index: 118, name: "f32.trunc")
    OnExport(index: 117, kind: func, item_index: 119, name: "f32.nearest")
    OnExport(index: 118, kind: func, item_index: 120, name: "f32.sqrt")
    OnExport(index: 119, kind: func, item_index: 121, name: "f32.add")
    OnExport(index: 120, kind: func, item_index: 122, name: "f32.sub")
    OnExport(index: 121, kind: func, item_index: 123, name: "f32.mul")
    OnExport(index: 122, kind: func, item_index: 124, name: "f32.div")
    OnExport(index: 123, kind: func, item_index: 125, name: "f32.min")
    OnExport(index: 124, kind: func, item_index: 126, name: "f32.max")
    OnExport(index: 125, kind: func, item_index: 127, name: "f32.copysign")
    OnExport(index: 126, kind: func, item_index: 128, name: "f64.abs")
    OnExport(index: 127, kind: func, item_index: 129, name: "f64.neg")
    OnExport(index: 128, kind: func, item_index: 130, name: "f64.ceil")
    OnExport(index: 129, kind: func, item_index: 131, name: "f64.floor")
    OnExport(index: 130, kind: func, item_index: 132, name: "f64.trunc")
    OnExport(index: 131, kind: func, item_index: 133, name: "f64.nearest")
    OnExport(index: 132, kind: func, item_index: 134, name: "f64.sqrt")
    OnExport(index: 133, kind: func, item_index: 135, name: "f64.add")
    OnExport(index: 134, kind: func, item_index: 136, name: "f64.sub")
    OnExport(index: 135, kind: func, item_index: 137, name: "f64.mul")
    OnExport(index: 136, kind: func, item_index: 138, name: "f64.div")
    OnExport(index: 137, kind: func, item_index: 139, name: "f64.min")
    OnExport(index: 138, kind: func, item_index: 140, name: "f64.max")
    OnExport(index: 139, kind: func, item_index: 141, name: "f64.copysign")
    OnExport(index: 140, kind: func, item_index: 142, name: "i32.wrap/i64")
    OnExport(index: 141, kind: func, item_index: 143, name: "i32.trunc_s/f32")
    OnExport(index: 142, kind: func, item_index: 144, name: "i32.trunc_u/f32")
    OnExport(index: 143, kind: func, item_index: 145, name: "i32.trunc_s/f64")
    OnExport(index: 144, kind: func, item_index: 146, name: "i32.trunc_u/f64")
    OnExport(index: 145, kind: func, item_index: 147, name: "i64.extend_s/i32")
    OnExport(index: 146, kind: func, item_index: 148, name: "i64.extend_u/i32")
    OnExport(index: 147, kind: func, item_index: 149, name: "i64.trunc_s/f32")
    OnExport(index: 148, kind: func, item_index: 150, name: "i64.trunc_u/f32")
    OnExport(index: 149, kind: func, item_index: 151, name: "i64.trunc_s/f64")
    OnExport(index: 150, kind: func, item_index: 152, name: "i64.trunc_u/f64")
    OnExport(index: 151, kind: func, item_index: 153, name: "f32.convert_s/i32")
    OnExport(index: 152, kind: func, item_index: 154, name: "f32.convert_u/i32")
    OnExport(index: 153, kind: func, item_index: 155, name: "f32.convert_s/i64")
    OnExport(index: 154, kind: func, item_index: 156, name: "f32.convert_u/i64")
    OnExport(index: 155, kind: func, item_index: 157, name: "f32.demote/f64")
    OnExport(index: 156, kind: func, item_index: 158, name: "f64.convert_s/i32")
    OnExport(index: 157, kind: func, item_index: 159, name: "f64.convert_u/i32")
    OnExport(index: 158, kind: func, item_index: 160, name: "f64.convert_s/i64")
    OnExport(index: 159, kind: func, item_index: 161, name: "f64.convert_u/i64")
    OnExport(index: 160, kind: func, item_index: 162, name: "f64.promote/f32")
    OnExport(index: 161, kind: func, item_index: 163, name: "i32.reinterpret/f32")
    OnExport(index: 162, kind: func, item_index: 164, name: "f32.reinterpret/i32")
    OnExport(index: 163, kind: func, item_index: 165, name: "i64.reinterpret/f64")
    OnExport(index: 164, kind: func, item_index: 166, name: "f64.reinterpret/i64")
    OnExport(index: 165, kind: func, item_index: 167, name: "i32.extend8_s")
    OnExport(index: 166, kind: func, item_index: 168, name: "i32.extend16_s")
    OnExport(index: 167, kind: func, item_index: 169, name: "i64.extend8_s")
    OnExport(index: 168, kind: func, item_index: 170, name: "i64.extend16_s")
    OnExport(index: 169, kind: func, item_index: 171, name: "i64.extend32_s")
    OnExport(index: 170, kind: func, item_index: 172, name: "alloca")
    OnExport(index: 171, kind: func, item_index: 173, name: "br_unless")
    OnExport(index: 172, kind: func, item_index: 174, name: "call_host")
    OnExport(index: 173, kind: func, item_index: 175, name: "data")
    OnExport(index: 174, kind: func, item_index: 176, name: "drop_keep")
    OnExport(index: 175, kind: func, item_index: 177, name: "i32.trunc_s:sat/f32")
    OnExport(index: 176, kind: func, item_index: 178, name: "i32.trunc_u:sat/f32")
    OnExport(index: 177, kind: func, item_index: 179, name: "i32.trunc_s:sat/f64")
    OnExport(index: 178, kind: func, item_index: 180, name: "i32.trunc_u:sat/f64")
    OnExport(index: 179, kind: func, item_index: 181, name: "i64.trunc_s:sat/f32")
    OnExport(index: 180, kind: func, item_index: 182, name: "i64.trunc_u:sat/f32")
    OnExport(index: 181, kind: func, item_index: 183, name: "i64.trunc_s:sat/f64")
    OnExport(index: 182, kind: func, item_index: 184, name: "i64.trunc_u:sat/f64")
    OnExport(index: 183, kind: func, item_index: 185, name: "atomic.wake")
    OnExport(index: 184, kind: func, item_index: 186, name: "i32.atomic.wait")
    OnExport(index: 185, kind: func, item_index: 187, name: "i64.atomic.wait")
    OnExport(index: 186, kind: func, item_index: 188, name: "i32.atomic.load")
    OnExport(index: 187, kind: func, item_index: 189, name: "i64.atomic.load")
    OnExport(index: 188, kind: func, item_index: 190, name: "i32.atomic.load8_u")
    OnExport(index: 189, kind: func, item_index: 191, name: "i32.atomic.load16_u")
    OnExport(index: 190, kind: func, item_index: 192, name: "i64.atomic.load8_u")
    OnExport(index: 191, kind: func, item_index: 193, name: "i64.atomic.load16_u")
    OnExport(index: 192, kind: func, item_index: 194, name: "i64.atomic.load32_u")
    OnExport(index: 193, kind: func, item_index: 195, name: "i32.atomic.store")
    OnExport(index: 194, kind: func, item_index: 196, name: "i64.atomic.store")
    OnExport(index: 195, kind: func, item_index: 197, name: "i32.atomic.store8")
    OnExport(index: 196, kind: func, item_index: 198, name: "i32.atomic.store16")
    OnExport(index: 197, kind: func, item_index: 199, name: "i64.atomic.store8")
    OnExport(index: 198, kind: func, item_index: 200, name: "i64.atomic.store16")
    OnExport(index: 199, kind: func, item_index: 201, name: "i64.atomic.store32")
    OnExport(index: 200, kind: func, item_index: 202, name: "i32.atomic.rmw.add")
    OnExport(index: 201, kind: func, item_index: 203, name: "i64.atomic.rmw.add")
    OnExport(index: 202, kind: func, item_index: 204, name: "i32.atomic.rmw8_u.add")
    OnExport(index: 203, kind: func, item_index: 205, name: "i32.atomic.rmw16_u.add")
    OnExport(index: 204, kind: func, item_index: 206, name: "i64.atomic.rmw8_u.add")
    OnExport(index: 205, kind: func, item_index: 207, name: "i64.atomic.rmw16_u.add")
    OnExport(index: 206, kind: func, item_index: 208, name: "i64.atomic.rmw32_u.add")
    OnExport(index: 207, kind: func, item_index: 209, name: "i32.atomic.rmw.sub")
    OnExport(index: 208, kind: func, item_index: 210, name: "i64.atomic.rmw.sub")
    OnExport(index: 209, kind: func, item_index: 211, name: "i32.atomic.rmw8_u.sub")
    OnExport(index: 210, kind: func, item_index: 212, name: "i32.atomic.rmw16_u.sub")
    OnExport(index: 211, kind: func, item_index: 213, name: "i64.atomic.rmw8_u.sub")
    OnExport(index: 212, kind: func, item_index: 214, name: "i64.atomic.rmw16_u.sub")
    OnExport(index: 213, kind: func, item_index: 215, name: "i64.atomic.rmw32_u.sub")
    OnExport(index: 214, kind: func, item_index: 216, name: "i32.atomic.rmw.and")
    OnExport(index: 215, kind: func, item_index: 217, name: "i64.atomic.rmw.and")
    OnExport(index: 216, kind: func, item_index: 218, name: "i32.atomic.rmw8_u.and")
    OnExport(index: 217, kind: func, item_index: 219, name: "i32.atomic.rmw16_u.and")
    OnExport(index: 218, kind: func, item_index: 220, name: "i64.atomic.rmw8_u.and")
    OnExport(index: 219, kind: func, item_index: 221, name: "i64.atomic.rmw16_u.and")
    OnExport(index: 220, kind: func, item_index: 222, name: "i64.atomic.rmw32_u.and")
    OnExport(index: 221, kind: func, item_index: 223, name: "i32.atomic.rmw.or")
    OnExport(index: 222, kind: func, item_index: 224, name: "i64.atomic.rmw.or")
    OnExport(index: 223, kind: func, item_index: 225, name: "i32.atomic.rmw8_u.or")
    OnExport(index: 224, kind: func, item_index: 226, name: "i32.atomic.rmw16_u.or")
    OnExport(index: 225, kind: func, item_index: 227, name: "i64.atomic.rmw8_u.or")
    OnExport(index: 226, kind: func, item_index: 228, name: "i64.atomic.rmw16_u.or")
    OnExport(index: 227, kind: func, item_index: 229, name: "i64.atomic.rmw32_u.or")
    OnExport(index: 228, kind: func, item_index: 230, name: "i32.atomic.rmw.xor")
    OnExport(index: 229, kind: func, item_index: 231, name: "i64.atomic.rmw.xor")
    OnExport(index: 230, kind: func, item_index: 232, name: "i32.atomic.rmw8_u.xor")
    OnExport(index: 231, kind: func, item_index: 233, name: "i32.atomic.rmw16_u.xor")
    OnExport(index: 232, kind: func, item_index: 234, name: "i64.atomic.rmw8_u.xor")
    OnExport(index: 233, kind: func, item_index: 235, name: "i64.atomic.rmw16_u.xor")
    OnExport(index: 234, kind: func, item_index: 236, name: "i64.atomic.rmw32_u.xor")
    OnExport(index: 235, kind: func, item_index: 237, name: "i32.atomic.rmw.xchg")
    OnExport(index: 236, kind: func, item_index: 238, name: "i64.atomic.rmw.xchg")
    OnExport(index: 237, kind: func, item_index: 239, name: "i32.atomic.rmw8_u.xchg")
    OnExport(index: 238, kind: func, item_index: 240, name: "i32.atomic.rmw16_u.xchg")
    OnExport(index: 239, kind: func, item_index: 241, name: "i64.atomic.rmw8_u.xchg")
    OnExport(index: 240, kind: func, item_index: 242, name: "i64.atomic.rmw16_u.xchg")
    OnExport(index: 241, kind: func, item_index: 243, name: "i64.atomic.rmw32_u.xchg")
    OnExport(index: 242, kind: func, item_index: 244, name: "i32.atomic.rmw.cmpxchg")
    OnExport(index: 243, kind: func, item_index: 245, name: "i64.atomic.rmw.cmpxchg")
    OnExport(index: 244, kind: func, item_index: 246, name: "i32.atomic.rmw8_u.cmpxchg")
    OnExport(index: 245, kind: func, item_index: 247, name: "i32.atomic.rmw16_u.cmpxchg")
    OnExport(index: 246, kind: func, item_index: 248, name: "i64.atomic.rmw8_u.cmpxchg")
    OnExport(index: 247, kind: func, item_index: 249, name: "i64.atomic.rmw16_u.cmpxchg")
    OnExport(index: 248, kind: func, item_index: 250, name: "i64.atomic.rmw32_u.cmpxchg")
  EndExportSection
  BeginElemSection(8)
    OnElemSegmentCount(1)
    BeginElemSegment(index: 0, table_index: 0)
    BeginElemSegmentInitExpr(0)
    OnInitExprI32ConstExpr(index: 0, value: 0)
    EndElemSegmentInitExpr(0)
    OnElemSegmentFunctionIndexCount(index: 0, count: 2)
    OnElemSegmentFunctionIndex(index: 0, func_index: 1)
    OnElemSegmentFunctionIndex(index: 0, func_index: 1)
    EndElemSegment(0)
  EndElemSection
  BeginCodeSection(2741)
    OnFunctionBodyCount(250)
    BeginFunctionBody(1)
    OnLocalDeclCount(0)
    EndFunctionBody(1)
    BeginFunctionBody(2)
    OnLocalDeclCount(0)
    OnUnreachableExpr
    EndFunctionBody(2)
    BeginFunctionBody(3)
    OnLocalDeclCount(0)
    OnBrExpr(depth: 0)
    EndFunctionBody(3)
    BeginFunctionBody(4)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrTableExpr(num_targets: 0, depths: [], default: 0)
    EndFunctionBody(4)
    BeginFunctionBody(5)
    OnLocalDeclCount(0)
    OnReturnExpr
    EndFunctionBody(5)
    BeginFunctionBody(6)
    OnLocalDeclCount(0)
    OnCallExpr(func_index: 1)
    EndFunctionBody(6)
    BeginFunctionBody(7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnCallIndirectExpr(sig_index: 0)
    EndFunctionBody(7)
    BeginFunctionBody(8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(8)
    BeginFunctionBody(9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnSelectExpr
    OnDropExpr
    EndFunctionBody(9)
    BeginFunctionBody(10)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnGetLocalExpr(index: 0)
    OnDropExpr
    EndFunctionBody(10)
    BeginFunctionBody(11)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnI32ConstExpr(1 (0x1))
    OnSetLocalExpr(index: 0)
    EndFunctionBody(11)
    BeginFunctionBody(12)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnI32ConstExpr(1 (0x1))
    OnTeeLocalExpr(index: 0)
    OnDropExpr
    EndFunctionBody(12)
    BeginFunctionBody(13)
    OnLocalDeclCount(0)
    OnGetGlobalExpr(index: 0)
    OnDropExpr
    EndFunctionBody(13)
    BeginFunctionBody(14)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnSetGlobalExpr(index: 0)
    EndFunctionBody(14)
    BeginFunctionBody(15)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load" (40), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(15)
    BeginFunctionBody(16)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load" (41), align log2: 3, offset: 2)
    OnDropExpr
    EndFunctionBody(16)
    BeginFunctionBody(17)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "f32.load" (42), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(17)
    BeginFunctionBody(18)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "f64.load" (43), align log2: 3, offset: 2)
    OnDropExpr
    EndFunctionBody(18)
    BeginFunctionBody(19)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load8_s" (44), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(19)
    BeginFunctionBody(20)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load8_u" (45), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(20)
    BeginFunctionBody(21)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load16_s" (46), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(21)
    BeginFunctionBody(22)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load16_u" (47), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(22)
    BeginFunctionBody(23)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load8_s" (48), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(23)
    BeginFunctionBody(24)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load8_u" (49), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(24)
    BeginFunctionBody(25)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load16_s" (50), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(25)
    BeginFunctionBody(26)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load16_u" (51), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(26)
    BeginFunctionBody(27)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load32_s" (52), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(27)
    BeginFunctionBody(28)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load32_u" (53), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(28)
    BeginFunctionBody(29)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store" (54), align log2: 2, offset: 2)
    EndFunctionBody(29)
    BeginFunctionBody(30)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store" (55), align log2: 3, offset: 2)
    EndFunctionBody(30)
    BeginFunctionBody(31)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnF32ConstExpr(2 (0x0440000000))
    OnStoreExpr(opcode: "f32.store" (56), align log2: 2, offset: 2)
    EndFunctionBody(31)
    BeginFunctionBody(32)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnStoreExpr(opcode: "f64.store" (57), align log2: 3, offset: 2)
    EndFunctionBody(32)
    BeginFunctionBody(33)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store8" (58), align log2: 0, offset: 2)
    EndFunctionBody(33)
    BeginFunctionBody(34)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store16" (59), align log2: 1, offset: 2)
    EndFunctionBody(34)
    BeginFunctionBody(35)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store8" (60), align log2: 0, offset: 2)
    EndFunctionBody(35)
    BeginFunctionBody(36)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store16" (61), align log2: 1, offset: 2)
    EndFunctionBody(36)
    BeginFunctionBody(37)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store32" (62), align log2: 2, offset: 2)
    EndFunctionBody(37)
    BeginFunctionBody(38)
    OnLocalDeclCount(0)
    OnCurrentMemoryExpr
    OnDropExpr
    EndFunctionBody(38)
    BeginFunctionBody(39)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnGrowMemoryExpr
    OnDropExpr
    EndFunctionBody(39)
    BeginFunctionBody(40)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(40)
    BeginFunctionBody(41)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(41)
    BeginFunctionBody(42)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnDropExpr
    EndFunctionBody(42)
    BeginFunctionBody(43)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnDropExpr
    EndFunctionBody(43)
    BeginFunctionBody(44)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i32.eqz" (69))
    OnDropExpr
    EndFunctionBody(44)
    BeginFunctionBody(45)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.eq" (70))
    OnDropExpr
    EndFunctionBody(45)
    BeginFunctionBody(46)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ne" (71))
    OnDropExpr
    EndFunctionBody(46)
    BeginFunctionBody(47)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.lt_s" (72))
    OnDropExpr
    EndFunctionBody(47)
    BeginFunctionBody(48)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.lt_u" (73))
    OnDropExpr
    EndFunctionBody(48)
    BeginFunctionBody(49)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.gt_s" (74))
    OnDropExpr
    EndFunctionBody(49)
    BeginFunctionBody(50)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.gt_u" (75))
    OnDropExpr
    EndFunctionBody(50)
    BeginFunctionBody(51)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.le_s" (76))
    OnDropExpr
    EndFunctionBody(51)
    BeginFunctionBody(52)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.le_u" (77))
    OnDropExpr
    EndFunctionBody(52)
    BeginFunctionBody(53)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ge_s" (78))
    OnDropExpr
    EndFunctionBody(53)
    BeginFunctionBody(54)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ge_u" (79))
    OnDropExpr
    EndFunctionBody(54)
    BeginFunctionBody(55)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("i64.eqz" (80))
    OnDropExpr
    EndFunctionBody(55)
    BeginFunctionBody(56)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.eq" (81))
    OnDropExpr
    EndFunctionBody(56)
    BeginFunctionBody(57)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ne" (82))
    OnDropExpr
    EndFunctionBody(57)
    BeginFunctionBody(58)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.lt_s" (83))
    OnDropExpr
    EndFunctionBody(58)
    BeginFunctionBody(59)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.lt_u" (84))
    OnDropExpr
    EndFunctionBody(59)
    BeginFunctionBody(60)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.gt_s" (85))
    OnDropExpr
    EndFunctionBody(60)
    BeginFunctionBody(61)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.gt_u" (86))
    OnDropExpr
    EndFunctionBody(61)
    BeginFunctionBody(62)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.le_s" (87))
    OnDropExpr
    EndFunctionBody(62)
    BeginFunctionBody(63)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.le_u" (88))
    OnDropExpr
    EndFunctionBody(63)
    BeginFunctionBody(64)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ge_s" (89))
    OnDropExpr
    EndFunctionBody(64)
    BeginFunctionBody(65)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ge_u" (90))
    OnDropExpr
    EndFunctionBody(65)
    BeginFunctionBody(66)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.eq" (91))
    OnDropExpr
    EndFunctionBody(66)
    BeginFunctionBody(67)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.ne" (92))
    OnDropExpr
    EndFunctionBody(67)
    BeginFunctionBody(68)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.lt" (93))
    OnDropExpr
    EndFunctionBody(68)
    BeginFunctionBody(69)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.gt" (94))
    OnDropExpr
    EndFunctionBody(69)
    BeginFunctionBody(70)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.le" (95))
    OnDropExpr
    EndFunctionBody(70)
    BeginFunctionBody(71)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.ge" (96))
    OnDropExpr
    EndFunctionBody(71)
    BeginFunctionBody(72)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.eq" (97))
    OnDropExpr
    EndFunctionBody(72)
    BeginFunctionBody(73)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.ne" (98))
    OnDropExpr
    EndFunctionBody(73)
    BeginFunctionBody(74)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.lt" (99))
    OnDropExpr
    EndFunctionBody(74)
    BeginFunctionBody(75)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.gt" (100))
    OnDropExpr
    EndFunctionBody(75)
    BeginFunctionBody(76)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.le" (101))
    OnDropExpr
    EndFunctionBody(76)
    BeginFunctionBody(77)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.ge" (102))
    OnDropExpr
    EndFunctionBody(77)
    BeginFunctionBody(78)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.clz" (103))
    OnDropExpr
    EndFunctionBody(78)
    BeginFunctionBody(79)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.ctz" (104))
    OnDropExpr
    EndFunctionBody(79)
    BeginFunctionBody(80)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.popcnt" (105))
    OnDropExpr
    EndFunctionBody(80)
    BeginFunctionBody(81)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.add" (106))
    OnDropExpr
    EndFunctionBody(81)
    BeginFunctionBody(82)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.sub" (107))
    OnDropExpr
    EndFunctionBody(82)
    BeginFunctionBody(83)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.mul" (108))
    OnDropExpr
    EndFunctionBody(83)
    BeginFunctionBody(84)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.div_s" (109))
    OnDropExpr
    EndFunctionBody(84)
    BeginFunctionBody(85)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.div_u" (110))
    OnDropExpr
    EndFunctionBody(85)
    BeginFunctionBody(86)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rem_s" (111))
    OnDropExpr
    EndFunctionBody(86)
    BeginFunctionBody(87)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rem_u" (112))
    OnDropExpr
    EndFunctionBody(87)
    BeginFunctionBody(88)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.and" (113))
    OnDropExpr
    EndFunctionBody(88)
    BeginFunctionBody(89)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.or" (114))
    OnDropExpr
    EndFunctionBody(89)
    BeginFunctionBody(90)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.xor" (115))
    OnDropExpr
    EndFunctionBody(90)
    BeginFunctionBody(91)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shl" (116))
    OnDropExpr
    EndFunctionBody(91)
    BeginFunctionBody(92)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shr_s" (117))
    OnDropExpr
    EndFunctionBody(92)
    BeginFunctionBody(93)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shr_u" (118))
    OnDropExpr
    EndFunctionBody(93)
    BeginFunctionBody(94)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rotl" (119))
    OnDropExpr
    EndFunctionBody(94)
    BeginFunctionBody(95)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rotr" (120))
    OnDropExpr
    EndFunctionBody(95)
    BeginFunctionBody(96)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.clz" (121))
    OnDropExpr
    EndFunctionBody(96)
    BeginFunctionBody(97)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.ctz" (122))
    OnDropExpr
    EndFunctionBody(97)
    BeginFunctionBody(98)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.popcnt" (123))
    OnDropExpr
    EndFunctionBody(98)
    BeginFunctionBody(99)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.add" (124))
    OnDropExpr
    EndFunctionBody(99)
    BeginFunctionBody(100)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.sub" (125))
    OnDropExpr
    EndFunctionBody(100)
    BeginFunctionBody(101)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.mul" (126))
    OnDropExpr
    EndFunctionBody(101)
    BeginFunctionBody(102)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.div_s" (127))
    OnDropExpr
    EndFunctionBody(102)
    BeginFunctionBody(103)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.div_u" (128))
    OnDropExpr
    EndFunctionBody(103)
    BeginFunctionBody(104)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rem_s" (129))
    OnDropExpr
    EndFunctionBody(104)
    BeginFunctionBody(105)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rem_u" (130))
    OnDropExpr
    EndFunctionBody(105)
    BeginFunctionBody(106)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.and" (131))
    OnDropExpr
    EndFunctionBody(106)
    BeginFunctionBody(107)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.or" (132))
    OnDropExpr
    EndFunctionBody(107)
    BeginFunctionBody(108)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.xor" (133))
    OnDropExpr
    EndFunctionBody(108)
    BeginFunctionBody(109)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shl" (134))
    OnDropExpr
    EndFunctionBody(109)
    BeginFunctionBody(110)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shr_s" (135))
    OnDropExpr
    EndFunctionBody(110)
    BeginFunctionBody(111)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shr_u" (136))
    OnDropExpr
    EndFunctionBody(111)
    BeginFunctionBody(112)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rotl" (137))
    OnDropExpr
    EndFunctionBody(112)
    BeginFunctionBody(113)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rotr" (138))
    OnDropExpr
    EndFunctionBody(113)
    BeginFunctionBody(114)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.abs" (139))
    OnDropExpr
    EndFunctionBody(114)
    BeginFunctionBody(115)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.neg" (140))
    OnDropExpr
    EndFunctionBody(115)
    BeginFunctionBody(116)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.ceil" (141))
    OnDropExpr
    EndFunctionBody(116)
    BeginFunctionBody(117)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.floor" (142))
    OnDropExpr
    EndFunctionBody(117)
    BeginFunctionBody(118)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.trunc" (143))
    OnDropExpr
    EndFunctionBody(118)
    BeginFunctionBody(119)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.nearest" (144))
    OnDropExpr
    EndFunctionBody(119)
    BeginFunctionBody(120)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.sqrt" (145))
    OnDropExpr
    EndFunctionBody(120)
    BeginFunctionBody(121)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.add" (146))
    OnDropExpr
    EndFunctionBody(121)
    BeginFunctionBody(122)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.sub" (147))
    OnDropExpr
    EndFunctionBody(122)
    BeginFunctionBody(123)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.mul" (148))
    OnDropExpr
    EndFunctionBody(123)
    BeginFunctionBody(124)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.div" (149))
    OnDropExpr
    EndFunctionBody(124)
    BeginFunctionBody(125)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.min" (150))
    OnDropExpr
    EndFunctionBody(125)
    BeginFunctionBody(126)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.max" (151))
    OnDropExpr
    EndFunctionBody(126)
    BeginFunctionBody(127)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.copysign" (152))
    OnDropExpr
    EndFunctionBody(127)
    BeginFunctionBody(128)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.abs" (153))
    OnDropExpr
    EndFunctionBody(128)
    BeginFunctionBody(129)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.neg" (154))
    OnDropExpr
    EndFunctionBody(129)
    BeginFunctionBody(130)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.ceil" (155))
    OnDropExpr
    EndFunctionBody(130)
    BeginFunctionBody(131)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.floor" (156))
    OnDropExpr
    EndFunctionBody(131)
    BeginFunctionBody(132)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.trunc" (157))
    OnDropExpr
    EndFunctionBody(132)
    BeginFunctionBody(133)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.nearest" (158))
    OnDropExpr
    EndFunctionBody(133)
    BeginFunctionBody(134)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.sqrt" (159))
    OnDropExpr
    EndFunctionBody(134)
    BeginFunctionBody(135)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.add" (160))
    OnDropExpr
    EndFunctionBody(135)
    BeginFunctionBody(136)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.sub" (161))
    OnDropExpr
    EndFunctionBody(136)
    BeginFunctionBody(137)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.mul" (162))
    OnDropExpr
    EndFunctionBody(137)
    BeginFunctionBody(138)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.div" (163))
    OnDropExpr
    EndFunctionBody(138)
    BeginFunctionBody(139)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.min" (164))
    OnDropExpr
    EndFunctionBody(139)
    BeginFunctionBody(140)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.max" (165))
    OnDropExpr
    EndFunctionBody(140)
    BeginFunctionBody(141)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.copysign" (166))
    OnDropExpr
    EndFunctionBody(141)
    BeginFunctionBody(142)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("i32.wrap/i64" (167))
    OnDropExpr
    EndFunctionBody(142)
    BeginFunctionBody(143)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_s/f32" (168))
    OnDropExpr
    EndFunctionBody(143)
    BeginFunctionBody(144)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_u/f32" (169))
    OnDropExpr
    EndFunctionBody(144)
    BeginFunctionBody(145)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_s/f64" (170))
    OnDropExpr
    EndFunctionBody(145)
    BeginFunctionBody(146)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_u/f64" (171))
    OnDropExpr
    EndFunctionBody(146)
    BeginFunctionBody(147)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i64.extend_s/i32" (172))
    OnDropExpr
    EndFunctionBody(147)
    BeginFunctionBody(148)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i64.extend_u/i32" (173))
    OnDropExpr
    EndFunctionBody(148)
    BeginFunctionBody(149)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_s/f32" (174))
    OnDropExpr
    EndFunctionBody(149)
    BeginFunctionBody(150)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_u/f32" (175))
    OnDropExpr
    EndFunctionBody(150)
    BeginFunctionBody(151)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_s/f64" (176))
    OnDropExpr
    EndFunctionBody(151)
    BeginFunctionBody(152)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_u/f64" (177))
    OnDropExpr
    EndFunctionBody(152)
    BeginFunctionBody(153)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_s/i32" (178))
    OnDropExpr
    EndFunctionBody(153)
    BeginFunctionBody(154)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_u/i32" (179))
    OnDropExpr
    EndFunctionBody(154)
    BeginFunctionBody(155)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_s/i64" (180))
    OnDropExpr
    EndFunctionBody(155)
    BeginFunctionBody(156)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_u/i64" (181))
    OnDropExpr
    EndFunctionBody(156)
    BeginFunctionBody(157)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("f32.demote/f64" (182))
    OnDropExpr
    EndFunctionBody(157)
    BeginFunctionBody(158)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_s/i32" (183))
    OnDropExpr
    EndFunctionBody(158)
    BeginFunctionBody(159)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_u/i32" (184))
    OnDropExpr
    EndFunctionBody(159)
    BeginFunctionBody(160)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_s/i64" (185))
    OnDropExpr
    EndFunctionBody(160)
    BeginFunctionBody(161)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_u/i64" (186))
    OnDropExpr
    EndFunctionBody(161)
    BeginFunctionBody(162)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("f64.promote/f32" (187))
    OnDropExpr
    EndFunctionBody(162)
    BeginFunctionBody(163)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.reinterpret/i32" (190))
    OnDropExpr
    EndFunctionBody(163)
    BeginFunctionBody(164)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.reinterpret/f32" (188))
    OnDropExpr
    EndFunctionBody(164)
    BeginFunctionBody(165)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.reinterpret/i64" (191))
    OnDropExpr
    EndFunctionBody(165)
    BeginFunctionBody(166)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.reinterpret/f64" (189))
    OnDropExpr
    EndFunctionBody(166)
    BeginFunctionBody(167)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.extend8_s" (192))
    OnDropExpr
    EndFunctionBody(167)
    BeginFunctionBody(168)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.extend16_s" (193))
    OnDropExpr
    EndFunctionBody(168)
    BeginFunctionBody(169)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend8_s" (194))
    OnDropExpr
    EndFunctionBody(169)
    BeginFunctionBody(170)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend16_s" (195))
    OnDropExpr
    EndFunctionBody(170)
    BeginFunctionBody(171)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend32_s" (196))
    OnDropExpr
    EndFunctionBody(171)
    BeginFunctionBody(172)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    EndFunctionBody(172)
    BeginFunctionBody(173)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrIfExpr(depth: 0)
    EndFunctionBody(173)
    BeginFunctionBody(174)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnCallExpr(func_index: 0)
    EndFunctionBody(174)
    BeginFunctionBody(175)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrTableExpr(num_targets: 0, depths: [], default: 0)
    EndFunctionBody(175)
    BeginFunctionBody(176)
    OnLocalDeclCount(0)
    OnBlockExpr(sig: [i32])
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBrExpr(depth: 0)
    OnEndExpr
    OnDropExpr
    EndFunctionBody(176)
    BeginFunctionBody(177)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_s:sat/f32" (0))
    OnDropExpr
    EndFunctionBody(177)
    BeginFunctionBody(178)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_u:sat/f32" (1))
    OnDropExpr
    EndFunctionBody(178)
    BeginFunctionBody(179)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_s:sat/f64" (2))
    OnDropExpr
    EndFunctionBody(179)
    BeginFunctionBody(180)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_u:sat/f64" (3))
    OnDropExpr
    EndFunctionBody(180)
    BeginFunctionBody(181)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_s:sat/f32" (4))
    OnDropExpr
    EndFunctionBody(181)
    BeginFunctionBody(182)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_u:sat/f32" (5))
    OnDropExpr
    EndFunctionBody(182)
    BeginFunctionBody(183)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_s:sat/f64" (6))
    OnDropExpr
    EndFunctionBody(183)
    BeginFunctionBody(184)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_u:sat/f64" (7))
    OnDropExpr
    EndFunctionBody(184)
    BeginFunctionBody(185)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicWakeExpr(opcode: "atomic.wake" (0), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(185)
    BeginFunctionBody(186)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicWaitExpr(opcode: "i32.atomic.wait" (1), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(186)
    BeginFunctionBody(187)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicWaitExpr(opcode: "i64.atomic.wait" (2), align log2: 3, offset: 3)
    OnDropExpr
    EndFunctionBody(187)
    BeginFunctionBody(188)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load" (16), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(188)
    BeginFunctionBody(189)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load" (17), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(189)
    BeginFunctionBody(190)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load8_u" (18), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(190)
    BeginFunctionBody(191)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load16_u" (19), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(191)
    BeginFunctionBody(192)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load8_u" (20), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(192)
    BeginFunctionBody(193)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load16_u" (21), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(193)
    BeginFunctionBody(194)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load32_u" (22), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(194)
    BeginFunctionBody(195)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store" (23), align log2: 2, offset: 3)
    EndFunctionBody(195)
    BeginFunctionBody(196)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store" (24), align log2: 3, offset: 7)
    EndFunctionBody(196)
    BeginFunctionBody(197)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store8" (25), align log2: 0, offset: 3)
    EndFunctionBody(197)
    BeginFunctionBody(198)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store16" (26), align log2: 1, offset: 3)
    EndFunctionBody(198)
    BeginFunctionBody(199)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store8" (27), align log2: 0, offset: 3)
    EndFunctionBody(199)
    BeginFunctionBody(200)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store16" (28), align log2: 1, offset: 3)
    EndFunctionBody(200)
    BeginFunctionBody(201)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store32" (29), align log2: 2, offset: 3)
    EndFunctionBody(201)
    BeginFunctionBody(202)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.add" (30), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(202)
    BeginFunctionBody(203)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.add" (31), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(203)
    BeginFunctionBody(204)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8_u.add" (32), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(204)
    BeginFunctionBody(205)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16_u.add" (33), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(205)
    BeginFunctionBody(206)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8_u.add" (34), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(206)
    BeginFunctionBody(207)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16_u.add" (35), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(207)
    BeginFunctionBody(208)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32_u.add" (36), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(208)
    BeginFunctionBody(209)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.sub" (37), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(209)
    BeginFunctionBody(210)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.sub" (38), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(210)
    BeginFunctionBody(211)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8_u.sub" (39), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(211)
    BeginFunctionBody(212)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16_u.sub" (40), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(212)
    BeginFunctionBody(213)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8_u.sub" (41), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(213)
    BeginFunctionBody(214)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16_u.sub" (42), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(214)
    BeginFunctionBody(215)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32_u.sub" (43), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(215)
    BeginFunctionBody(216)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.and" (44), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(216)
    BeginFunctionBody(217)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.and" (45), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(217)
    BeginFunctionBody(218)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8_u.and" (46), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(218)
    BeginFunctionBody(219)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16_u.and" (47), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(219)
    BeginFunctionBody(220)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8_u.and" (48), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(220)
    BeginFunctionBody(221)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16_u.and" (49), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(221)
    BeginFunctionBody(222)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32_u.and" (50), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(222)
    BeginFunctionBody(223)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.or" (51), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(223)
    BeginFunctionBody(224)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.or" (52), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(224)
    BeginFunctionBody(225)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8_u.or" (53), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(225)
    BeginFunctionBody(226)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16_u.or" (54), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(226)
    BeginFunctionBody(227)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8_u.or" (55), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(227)
    BeginFunctionBody(228)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16_u.or" (56), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(228)
    BeginFunctionBody(229)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32_u.or" (57), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(229)
    BeginFunctionBody(230)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.xor" (58), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(230)
    BeginFunctionBody(231)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.xor" (59), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(231)
    BeginFunctionBody(232)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8_u.xor" (60), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(232)
    BeginFunctionBody(233)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16_u.xor" (61), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(233)
    BeginFunctionBody(234)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8_u.xor" (62), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(234)
    BeginFunctionBody(235)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16_u.xor" (63), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(235)
    BeginFunctionBody(236)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32_u.xor" (64), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(236)
    BeginFunctionBody(237)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.xchg" (65), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(237)
    BeginFunctionBody(238)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.xchg" (66), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(238)
    BeginFunctionBody(239)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8_u.xchg" (67), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(239)
    BeginFunctionBody(240)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16_u.xchg" (68), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(240)
    BeginFunctionBody(241)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8_u.xchg" (69), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(241)
    BeginFunctionBody(242)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16_u.xchg" (70), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(242)
    BeginFunctionBody(243)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32_u.xchg" (71), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(243)
    BeginFunctionBody(244)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw.cmpxchg" (72), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(244)
    BeginFunctionBody(245)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw.cmpxchg" (73), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(245)
    BeginFunctionBody(246)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw8_u.cmpxchg" (74), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(246)
    BeginFunctionBody(247)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw16_u.cmpxchg" (75), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(247)
    BeginFunctionBody(248)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw8_u.cmpxchg" (76), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(248)
    BeginFunctionBody(249)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw16_u.cmpxchg" (77), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(249)
    BeginFunctionBody(250)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw32_u.cmpxchg" (78), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(250)
  EndCodeSection
EndModule
   0| return
   1| unreachable
   2| return
   3| br @8
   8| return
   9| i32.const $1
  14| br_table %[-1], $#0, table:$28
  23| data $9
  28|   entry 0: offset: 37 drop: 0 keep: 0
  37| return
  38| return
  39| return
  40| call @0
  45| return
  46| i32.const $1
  51| call_indirect $0:0, %[-1]
  60| return
  61| i32.const $1
  66| drop
  67| return
  68| i32.const $1
  73| i32.const $2
  78| i32.const $3
  83| select %[-3], %[-2], %[-1]
  84| drop
  85| return
  86| alloca $1
  91| get_local $1
  96| drop
  97| drop
  98| return
  99| alloca $1
 104| i32.const $1
 109| set_local $1, %[-1]
 114| drop
 115| return
 116| alloca $1
 121| i32.const $1
 126| tee_local $2, %[-1]
 131| drop
 132| drop
 133| return
 134| get_global $0
 139| drop
 140| return
 141| i32.const $1
 146| set_global $0, %[-1]
 151| return
 152| i32.const $1
 157| i32.load $0:%[-1]+$2
 166| drop
 167| return
 168| i32.const $1
 173| i64.load $0:%[-1]+$2
 182| drop
 183| return
 184| i32.const $1
 189| f32.load $0:%[-1]+$2
 198| drop
 199| return
 200| i32.const $1
 205| f64.load $0:%[-1]+$2
 214| drop
 215| return
 216| i32.const $1
 221| i32.load8_s $0:%[-1]+$2
 230| drop
 231| return
 232| i32.const $1
 237| i32.load8_u $0:%[-1]+$2
 246| drop
 247| return
 248| i32.const $1
 253| i32.load16_s $0:%[-1]+$2
 262| drop
 263| return
 264| i32.const $1
 269| i32.load16_u $0:%[-1]+$2
 278| drop
 279| return
 280| i32.const $1
 285| i64.load8_s $0:%[-1]+$2
 294| drop
 295| return
 296| i32.const $1
 301| i64.load8_u $0:%[-1]+$2
 310| drop
 311| return
 312| i32.const $1
 317| i64.load16_s $0:%[-1]+$2
 326| drop
 327| return
 328| i32.const $1
 333| i64.load16_u $0:%[-1]+$2
 342| drop
 343| return
 344| i32.const $1
 349| i64.load32_s $0:%[-1]+$2
 358| drop
 359| return
 360| i32.const $1
 365| i64.load32_u $0:%[-1]+$2
 374| drop
 375| return
 376| i32.const $1
 381| i32.const $2
 386| i32.store $0:%[-2]+$2, %[-1]
 395| return
 396| i32.const $1
 401| i64.const $2
 410| i64.store $0:%[-2]+$2, %[-1]
 419| return
 420| i32.const $1
 425| f32.const $2
 430| f32.store $0:%[-2]+$2, %[-1]
 439| return
 440| i32.const $1
 445| f64.const $2
 454| f64.store $0:%[-2]+$2, %[-1]
 463| return
 464| i32.const $1
 469| i32.const $2
 474| i32.store8 $0:%[-2]+$2, %[-1]
 483| return
 484| i32.const $1
 489| i32.const $2
 494| i32.store16 $0:%[-2]+$2, %[-1]
 503| return
 504| i32.const $1
 509| i64.const $2
 518| i64.store8 $0:%[-2]+$2, %[-1]
 527| return
 528| i32.const $1
 533| i64.const $2
 542| i64.store16 $0:%[-2]+$2, %[-1]
 551| return
 552| i32.const $1
 557| i64.const $2
 566| i64.store32 $0:%[-2]+$2, %[-1]
 575| return
 576| current_memory $0
 581| drop
 582| return
 583| i32.const $1
 588| grow_memory $0:%[-1]
 593| drop
 594| return
 595| i32.const $1
 600| drop
 601| return
 602| i64.const $1
 611| drop
 612| return
 613| f32.const $1
 618| drop
 619| return
 620| f64.const $1
 629| drop
 630| return
 631| i32.const $1
 636| i32.eqz %[-1]
 637| drop
 638| return
 639| i32.const $1
 644| i32.const $2
 649| i32.eq %[-2], %[-1]
 650| drop
 651| return
 652| i32.const $1
 657| i32.const $2
 662| i32.ne %[-2], %[-1]
 663| drop
 664| return
 665| i32.const $1
 670| i32.const $2
 675| i32.lt_s %[-2], %[-1]
 676| drop
 677| return
 678| i32.const $1
 683| i32.const $2
 688| i32.lt_u %[-2], %[-1]
 689| drop
 690| return
 691| i32.const $1
 696| i32.const $2
 701| i32.gt_s %[-2], %[-1]
 702| drop
 703| return
 704| i32.const $1
 709| i32.const $2
 714| i32.gt_u %[-2], %[-1]
 715| drop
 716| return
 717| i32.const $1
 722| i32.const $2
 727| i32.le_s %[-2], %[-1]
 728| drop
 729| return
 730| i32.const $1
 735| i32.const $2
 740| i32.le_u %[-2], %[-1]
 741| drop
 742| return
 743| i32.const $1
 748| i32.const $2
 753| i32.ge_s %[-2], %[-1]
 754| drop
 755| return
 756| i32.const $1
 761| i32.const $2
 766| i32.ge_u %[-2], %[-1]
 767| drop
 768| return
 769| i64.const $1
 778| i64.eqz %[-1]
 779| drop
 780| return
 781| i64.const $1
 790| i64.const $2
 799| i64.eq %[-2], %[-1]
 800| drop
 801| return
 802| i64.const $1
 811| i64.const $2
 820| i64.ne %[-2], %[-1]
 821| drop
 822| return
 823| i64.const $1
 832| i64.const $2
 841| i64.lt_s %[-2], %[-1]
 842| drop
 843| return
 844| i64.const $1
 853| i64.const $2
 862| i64.lt_u %[-2], %[-1]
 863| drop
 864| return
 865| i64.const $1
 874| i64.const $2
 883| i64.gt_s %[-2], %[-1]
 884| drop
 885| return
 886| i64.const $1
 895| i64.const $2
 904| i64.gt_u %[-2], %[-1]
 905| drop
 906| return
 907| i64.const $1
 916| i64.const $2
 925| i64.le_s %[-2], %[-1]
 926| drop
 927| return
 928| i64.const $1
 937| i64.const $2
 946| i64.le_u %[-2], %[-1]
 947| drop
 948| return
 949| i64.const $1
 958| i64.const $2
 967| i64.ge_s %[-2], %[-1]
 968| drop
 969| return
 970| i64.const $1
 979| i64.const $2
 988| i64.ge_u %[-2], %[-1]
 989| drop
 990| return
 991| f32.const $1
 996| f32.const $2
1001| f32.eq %[-2], %[-1]
1002| drop
1003| return
1004| f32.const $1
1009| f32.const $2
1014| f32.ne %[-2], %[-1]
1015| drop
1016| return
1017| f32.const $1
1022| f32.const $2
1027| f32.lt %[-2], %[-1]
1028| drop
1029| return
1030| f32.const $1
1035| f32.const $2
1040| f32.gt %[-2], %[-1]
1041| drop
1042| return
1043| f32.const $1
1048| f32.const $2
1053| f32.le %[-2], %[-1]
1054| drop
1055| return
1056| f32.const $1
1061| f32.const $2
1066| f32.ge %[-2], %[-1]
1067| drop
1068| return
1069| f64.const $1
1078| f64.const $2
1087| f64.eq %[-2], %[-1]
1088| drop
1089| return
1090| f64.const $1
1099| f64.const $2
1108| f64.ne %[-2], %[-1]
1109| drop
1110| return
1111| f64.const $1
1120| f64.const $2
1129| f64.lt %[-2], %[-1]
1130| drop
1131| return
1132| f64.const $1
1141| f64.const $2
1150| f64.gt %[-2], %[-1]
1151| drop
1152| return
1153| f64.const $1
1162| f64.const $2
1171| f64.le %[-2], %[-1]
1172| drop
1173| return
1174| f64.const $1
1183| f64.const $2
1192| f64.ge %[-2], %[-1]
1193| drop
1194| return
1195| i32.const $1
1200| i32.clz %[-1]
1201| drop
1202| return
1203| i32.const $1
1208| i32.ctz %[-1]
1209| drop
1210| return
1211| i32.const $1
1216| i32.popcnt %[-1]
1217| drop
1218| return
1219| i32.const $1
1224| i32.const $2
1229| i32.add %[-2], %[-1]
1230| drop
1231| return
1232| i32.const $1
1237| i32.const $2
1242| i32.sub %[-2], %[-1]
1243| drop
1244| return
1245| i32.const $1
1250| i32.const $2
1255| i32.mul %[-2], %[-1]
1256| drop
1257| return
1258| i32.const $1
1263| i32.const $2
1268| i32.div_s %[-2], %[-1]
1269| drop
1270| return
1271| i32.const $1
1276| i32.const $2
1281| i32.div_u %[-2], %[-1]
1282| drop
1283| return
1284| i32.const $1
1289| i32.const $2
1294| i32.rem_s %[-2], %[-1]
1295| drop
1296| return
1297| i32.const $1
1302| i32.const $2
1307| i32.rem_u %[-2], %[-1]
1308| drop
1309| return
1310| i32.const $1
1315| i32.const $2
1320| i32.and %[-2], %[-1]
1321| drop
1322| return
1323| i32.const $1
1328| i32.const $2
1333| i32.or %[-2], %[-1]
1334| drop
1335| return
1336| i32.const $1
1341| i32.const $2
1346| i32.xor %[-2], %[-1]
1347| drop
1348| return
1349| i32.const $1
1354| i32.const $2
1359| i32.shl %[-2], %[-1]
1360| drop
1361| return
1362| i32.const $1
1367| i32.const $2
1372| i32.shr_s %[-2], %[-1]
1373| drop
1374| return
1375| i32.const $1
1380| i32.const $2
1385| i32.shr_u %[-2], %[-1]
1386| drop
1387| return
1388| i32.const $1
1393| i32.const $2
1398| i32.rotl %[-2], %[-1]
1399| drop
1400| return
1401| i32.const $1
1406| i32.const $2
1411| i32.rotr %[-2], %[-1]
1412| drop
1413| return
1414| i64.const $1
1423| i64.clz %[-1]
1424| drop
1425| return
1426| i64.const $1
1435| i64.ctz %[-1]
1436| drop
1437| return
1438| i64.const $1
1447| i64.popcnt %[-1]
1448| drop
1449| return
1450| i64.const $1
1459| i64.const $2
1468| i64.add %[-2], %[-1]
1469| drop
1470| return
1471| i64.const $1
1480| i64.const $2
1489| i64.sub %[-2], %[-1]
1490| drop
1491| return
1492| i64.const $1
1501| i64.const $2
1510| i64.mul %[-2], %[-1]
1511| drop
1512| return
1513| i64.const $1
1522| i64.const $2
1531| i64.div_s %[-2], %[-1]
1532| drop
1533| return
1534| i64.const $1
1543| i64.const $2
1552| i64.div_u %[-2], %[-1]
1553| drop
1554| return
1555| i64.const $1
1564| i64.const $2
1573| i64.rem_s %[-2], %[-1]
1574| drop
1575| return
1576| i64.const $1
1585| i64.const $2
1594| i64.rem_u %[-2], %[-1]
1595| drop
1596| return
1597| i64.const $1
1606| i64.const $2
1615| i64.and %[-2], %[-1]
1616| drop
1617| return
1618| i64.const $1
1627| i64.const $2
1636| i64.or %[-2], %[-1]
1637| drop
1638| return
1639| i64.const $1
1648| i64.const $2
1657| i64.xor %[-2], %[-1]
1658| drop
1659| return
1660| i64.const $1
1669| i64.const $2
1678| i64.shl %[-2], %[-1]
1679| drop
1680| return
1681| i64.const $1
1690| i64.const $2
1699| i64.shr_s %[-2], %[-1]
1700| drop
1701| return
1702| i64.const $1
1711| i64.const $2
1720| i64.shr_u %[-2], %[-1]
1721| drop
1722| return
1723| i64.const $1
1732| i64.const $2
1741| i64.rotl %[-2], %[-1]
1742| drop
1743| return
1744| i64.const $1
1753| i64.const $2
1762| i64.rotr %[-2], %[-1]
1763| drop
1764| return
1765| f32.const $1
1770| f32.abs %[-1]
1771| drop
1772| return
1773| f32.const $1
1778| f32.neg %[-1]
1779| drop
1780| return
1781| f32.const $1
1786| f32.ceil %[-1]
1787| drop
1788| return
1789| f32.const $1
1794| f32.floor %[-1]
1795| drop
1796| return
1797| f32.const $1
1802| f32.trunc %[-1]
1803| drop
1804| return
1805| f32.const $1
1810| f32.nearest %[-1]
1811| drop
1812| return
1813| f32.const $1
1818| f32.sqrt %[-1]
1819| drop
1820| return
1821| f32.const $1
1826| f32.const $2
1831| f32.add %[-2], %[-1]
1832| drop
1833| return
1834| f32.const $1
1839| f32.const $2
1844| f32.sub %[-2], %[-1]
1845| drop
1846| return
1847| f32.const $1
1852| f32.const $2
1857| f32.mul %[-2], %[-1]
1858| drop
1859| return
1860| f32.const $1
1865| f32.const $2
1870| f32.div %[-2], %[-1]
1871| drop
1872| return
1873| f32.const $1
1878| f32.const $2
1883| f32.min %[-2], %[-1]
1884| drop
1885| return
1886| f32.const $1
1891| f32.const $2
1896| f32.max %[-2], %[-1]
1897| drop
1898| return
1899| f32.const $1
1904| f32.const $2
1909| f32.copysign %[-2], %[-1]
1910| drop
1911| return
1912| f64.const $1
1921| f64.abs %[-1]
1922| drop
1923| return
1924| f64.const $1
1933| f64.neg %[-1]
1934| drop
1935| return
1936| f64.const $1
1945| f64.ceil %[-1]
1946| drop
1947| return
1948| f64.const $1
1957| f64.floor %[-1]
1958| drop
1959| return
1960| f64.const $1
1969| f64.trunc %[-1]
1970| drop
1971| return
1972| f64.const $1
1981| f64.nearest %[-1]
1982| drop
1983| return
1984| f64.const $1
1993| f64.sqrt %[-1]
1994| drop
1995| return
1996| f64.const $1
2005| f64.const $2
2014| f64.add %[-2], %[-1]
2015| drop
2016| return
2017| f64.const $1
2026| f64.const $2
2035| f64.sub %[-2], %[-1]
2036| drop
2037| return
2038| f64.const $1
2047| f64.const $2
2056| f64.mul %[-2], %[-1]
2057| drop
2058| return
2059| f64.const $1
2068| f64.const $2
2077| f64.div %[-2], %[-1]
2078| drop
2079| return
2080| f64.const $1
2089| f64.const $2
2098| f64.min %[-2], %[-1]
2099| drop
2100| return
2101| f64.const $1
2110| f64.const $2
2119| f64.max %[-2], %[-1]
2120| drop
2121| return
2122| f64.const $1
2131| f64.const $2
2140| f64.copysign %[-2], %[-1]
2141| drop
2142| return
2143| i64.const $1
2152| i32.wrap/i64 %[-1]
2153| drop
2154| return
2155| f32.const $1
2160| i32.trunc_s/f32 %[-1]
2161| drop
2162| return
2163| f32.const $1
2168| i32.trunc_u/f32 %[-1]
2169| drop
2170| return
2171| f64.const $1
2180| i32.trunc_s/f64 %[-1]
2181| drop
2182| return
2183| f64.const $1
2192| i32.trunc_u/f64 %[-1]
2193| drop
2194| return
2195| i32.const $1
2200| i64.extend_s/i32 %[-1]
2201| drop
2202| return
2203| i32.const $1
2208| i64.extend_u/i32 %[-1]
2209| drop
2210| return
2211| f32.const $1
2216| i64.trunc_s/f32 %[-1]
2217| drop
2218| return
2219| f32.const $1
2224| i64.trunc_u/f32 %[-1]
2225| drop
2226| return
2227| f64.const $1
2236| i64.trunc_s/f64 %[-1]
2237| drop
2238| return
2239| f64.const $1
2248| i64.trunc_u/f64 %[-1]
2249| drop
2250| return
2251| i32.const $1
2256| f32.convert_s/i32 %[-1]
2257| drop
2258| return
2259| i32.const $1
2264| f32.convert_u/i32 %[-1]
2265| drop
2266| return
2267| i64.const $1
2276| f32.convert_s/i64 %[-1]
2277| drop
2278| return
2279| i64.const $1
2288| f32.convert_u/i64 %[-1]
2289| drop
2290| return
2291| f64.const $1
2300| f32.demote/f64 %[-1]
2301| drop
2302| return
2303| i32.const $1
2308| f64.convert_s/i32 %[-1]
2309| drop
2310| return
2311| i32.const $1
2316| f64.convert_u/i32 %[-1]
2317| drop
2318| return
2319| i64.const $1
2328| f64.convert_s/i64 %[-1]
2329| drop
2330| return
2331| i64.const $1
2340| f64.convert_u/i64 %[-1]
2341| drop
2342| return
2343| f32.const $1
2348| f64.promote/f32 %[-1]
2349| drop
2350| return
2351| i32.const $1
2356| f32.reinterpret/i32 %[-1]
2357| drop
2358| return
2359| f32.const $1
2364| i32.reinterpret/f32 %[-1]
2365| drop
2366| return
2367| i64.const $1
2376| f64.reinterpret/i64 %[-1]
2377| drop
2378| return
2379| f64.const $1
2388| i64.reinterpret/f64 %[-1]
2389| drop
2390| return
2391| i32.const $1
2396| i32.extend8_s %[-1]
2397| drop
2398| return
2399| i32.const $1
2404| i32.extend16_s %[-1]
2405| drop
2406| return
2407| i64.const $1
2416| i64.extend8_s %[-1]
2417| drop
2418| return
2419| i64.const $1
2428| i64.extend16_s %[-1]
2429| drop
2430| return
2431| i64.const $1
2440| i64.extend32_s %[-1]
2441| drop
2442| return
2443| alloca $1
2448| drop
2449| return
2450| i32.const $1
2455| br_unless @2465, %[-1]
2460| br @2465
2465| return
2466| i32.const $1
2471| call_host $0
2476| return
2477| i32.const $1
2482| br_table %[-1], $#0, table:$2496
2491| data $9
2496|   entry 0: offset: 2505 drop: 0 keep: 0
2505| return
2506| i32.const $1
2511| i32.const $2
2516| drop_keep $1 $1
2522| br @2527
2527| drop
2528| return
2529| f32.const $1
2534| i32.trunc_s:sat/f32 %[-1]
2536| drop
2537| return
2538| f32.const $1
2543| i32.trunc_u:sat/f32 %[-1]
2545| drop
2546| return
2547| f64.const $1
2556| i32.trunc_s:sat/f64 %[-1]
2558| drop
2559| return
2560| f64.const $1
2569| i32.trunc_u:sat/f64 %[-1]
2571| drop
2572| return
2573| f32.const $1
2578| i64.trunc_s:sat/f32 %[-1]
2580| drop
2581| return
2582| f32.const $1
2587| i64.trunc_u:sat/f32 %[-1]
2589| drop
2590| return
2591| f64.const $1
2600| i64.trunc_s:sat/f64 %[-1]
2602| drop
2603| return
2604| f64.const $1
2613| i64.trunc_u:sat/f64 %[-1]
2615| drop
2616| return
2617| i32.const $1
2622| i32.const $2
2627| atomic.wake $0:%[-2]+$3, %[-1]
2637| drop
2638| return
2639| i32.const $1
2644| i32.const $2
2649| i64.const $3
2658| i32.atomic.wait $0:%[-3]+$3, %[-2], %[-1]
2668| drop
2669| return
2670| i32.const $1
2675| i64.const $2
2684| i64.const $3
2693| i64.atomic.wait $0:%[-3]+$3, %[-2], %[-1]
2703| drop
2704| return
2705| i32.const $1
2710| i32.atomic.load $0:%[-1]+$3
2720| drop
2721| return
2722| i32.const $1
2727| i64.atomic.load $0:%[-1]+$7
2737| drop
2738| return
2739| i32.const $1
2744| i32.atomic.load8_u $0:%[-1]+$3
2754| drop
2755| return
2756| i32.const $1
2761| i32.atomic.load16_u $0:%[-1]+$3
2771| drop
2772| return
2773| i32.const $1
2778| i64.atomic.load8_u $0:%[-1]+$3
2788| drop
2789| return
2790| i32.const $1
2795| i64.atomic.load16_u $0:%[-1]+$3
2805| drop
2806| return
2807| i32.const $1
2812| i64.atomic.load32_u $0:%[-1]+$3
2822| drop
2823| return
2824| i32.const $1
2829| i32.const $2
2834| i32.atomic.store $0:%[-2]+$3, %[-1]
2844| return
2845| i32.const $1
2850| i64.const $2
2859| i64.atomic.store $0:%[-2]+$7, %[-1]
2869| return
2870| i32.const $1
2875| i32.const $2
2880| i32.atomic.store8 $0:%[-2]+$3, %[-1]
2890| return
2891| i32.const $1
2896| i32.const $2
2901| i32.atomic.store16 $0:%[-2]+$3, %[-1]
2911| return
2912| i32.const $1
2917| i64.const $2
2926| i64.atomic.store8 $0:%[-2]+$3, %[-1]
2936| return
2937| i32.const $1
2942| i64.const $2
2951| i64.atomic.store16 $0:%[-2]+$3, %[-1]
2961| return
2962| i32.const $1
2967| i64.const $2
2976| i64.atomic.store32 $0:%[-2]+$3, %[-1]
2986| return
2987| i32.const $1
2992| i32.const $2
2997| i32.atomic.rmw.add $0:%[-2]+$3, %[-1]
3007| drop
3008| return
3009| i32.const $1
3014| i64.const $2
3023| i64.atomic.rmw.add $0:%[-2]+$7, %[-1]
3033| drop
3034| return
3035| i32.const $1
3040| i32.const $2
3045| i32.atomic.rmw8_u.add $0:%[-2]+$3, %[-1]
3055| drop
3056| return
3057| i32.const $1
3062| i32.const $2
3067| i32.atomic.rmw16_u.add $0:%[-2]+$3, %[-1]
3077| drop
3078| return
3079| i32.const $1
3084| i64.const $2
3093| i64.atomic.rmw8_u.add $0:%[-2]+$3, %[-1]
3103| drop
3104| return
3105| i32.const $1
3110| i64.const $2
3119| i64.atomic.rmw16_u.add $0:%[-2]+$3, %[-1]
3129| drop
3130| return
3131| i32.const $1
3136| i64.const $2
3145| i64.atomic.rmw32_u.add $0:%[-2]+$3, %[-1]
3155| drop
3156| return
3157| i32.const $1
3162| i32.const $2
3167| i32.atomic.rmw.sub $0:%[-2]+$3, %[-1]
3177| drop
3178| return
3179| i32.const $1
3184| i64.const $2
3193| i64.atomic.rmw.sub $0:%[-2]+$7, %[-1]
3203| drop
3204| return
3205| i32.const $1
3210| i32.const $2
3215| i32.atomic.rmw8_u.sub $0:%[-2]+$3, %[-1]
3225| drop
3226| return
3227| i32.const $1
3232| i32.const $2
3237| i32.atomic.rmw16_u.sub $0:%[-2]+$3, %[-1]
3247| drop
3248| return
3249| i32.const $1
3254| i64.const $2
3263| i64.atomic.rmw8_u.sub $0:%[-2]+$3, %[-1]
3273| drop
3274| return
3275| i32.const $1
3280| i64.const $2
3289| i64.atomic.rmw16_u.sub $0:%[-2]+$3, %[-1]
3299| drop
3300| return
3301| i32.const $1
3306| i64.const $2
3315| i64.atomic.rmw32_u.sub $0:%[-2]+$3, %[-1]
3325| drop
3326| return
3327| i32.const $1
3332| i32.const $2
3337| i32.atomic.rmw.and $0:%[-2]+$3, %[-1]
3347| drop
3348| return
3349| i32.const $1
3354| i64.const $2
3363| i64.atomic.rmw.and $0:%[-2]+$7, %[-1]
3373| drop
3374| return
3375| i32.const $1
3380| i32.const $2
3385| i32.atomic.rmw8_u.and $0:%[-2]+$3, %[-1]
3395| drop
3396| return
3397| i32.const $1
3402| i32.const $2
3407| i32.atomic.rmw16_u.and $0:%[-2]+$3, %[-1]
3417| drop
3418| return
3419| i32.const $1
3424| i64.const $2
3433| i64.atomic.rmw8_u.and $0:%[-2]+$3, %[-1]
3443| drop
3444| return
3445| i32.const $1
3450| i64.const $2
3459| i64.atomic.rmw16_u.and $0:%[-2]+$3, %[-1]
3469| drop
3470| return
3471| i32.const $1
3476| i64.const $2
3485| i64.atomic.rmw32_u.and $0:%[-2]+$3, %[-1]
3495| drop
3496| return
3497| i32.const $1
3502| i32.const $2
3507| i32.atomic.rmw.or $0:%[-2]+$3, %[-1]
3517| drop
3518| return
3519| i32.const $1
3524| i64.const $2
3533| i64.atomic.rmw.or $0:%[-2]+$7, %[-1]
3543| drop
3544| return
3545| i32.const $1
3550| i32.const $2
3555| i32.atomic.rmw8_u.or $0:%[-2]+$3, %[-1]
3565| drop
3566| return
3567| i32.const $1
3572| i32.const $2
3577| i32.atomic.rmw16_u.or $0:%[-2]+$3, %[-1]
3587| drop
3588| return
3589| i32.const $1
3594| i64.const $2
3603| i64.atomic.rmw8_u.or $0:%[-2]+$3, %[-1]
3613| drop
3614| return
3615| i32.const $1
3620| i64.const $2
3629| i64.atomic.rmw16_u.or $0:%[-2]+$3, %[-1]
3639| drop
3640| return
3641| i32.const $1
3646| i64.const $2
3655| i64.atomic.rmw32_u.or $0:%[-2]+$3, %[-1]
3665| drop
3666| return
3667| i32.const $1
3672| i32.const $2
3677| i32.atomic.rmw.xor $0:%[-2]+$3, %[-1]
3687| drop
3688| return
3689| i32.const $1
3694| i64.const $2
3703| i64.atomic.rmw.xor $0:%[-2]+$7, %[-1]
3713| drop
3714| return
3715| i32.const $1
3720| i32.const $2
3725| i32.atomic.rmw8_u.xor $0:%[-2]+$3, %[-1]
3735| drop
3736| return
3737| i32.const $1
3742| i32.const $2
3747| i32.atomic.rmw16_u.xor $0:%[-2]+$3, %[-1]
3757| drop
3758| return
3759| i32.const $1
3764| i64.const $2
3773| i64.atomic.rmw8_u.xor $0:%[-2]+$3, %[-1]
3783| drop
3784| return
3785| i32.const $1
3790| i64.const $2
3799| i64.atomic.rmw16_u.xor $0:%[-2]+$3, %[-1]
3809| drop
3810| return
3811| i32.const $1
3816| i64.const $2
3825| i64.atomic.rmw32_u.xor $0:%[-2]+$3, %[-1]
3835| drop
3836| return
3837| i32.const $1
3842| i32.const $2
3847| i32.atomic.rmw.xchg $0:%[-2]+$3, %[-1]
3857| drop
3858| return
3859| i32.const $1
3864| i64.const $2
3873| i64.atomic.rmw.xchg $0:%[-2]+$7, %[-1]
3883| drop
3884| return
3885| i32.const $1
3890| i32.const $2
3895| i32.atomic.rmw8_u.xchg $0:%[-2]+$3, %[-1]
3905| drop
3906| return
3907| i32.const $1
3912| i32.const $2
3917| i32.atomic.rmw16_u.xchg $0:%[-2]+$3, %[-1]
3927| drop
3928| return
3929| i32.const $1
3934| i64.const $2
3943| i64.atomic.rmw8_u.xchg $0:%[-2]+$3, %[-1]
3953| drop
3954| return
3955| i32.const $1
3960| i64.const $2
3969| i64.atomic.rmw16_u.xchg $0:%[-2]+$3, %[-1]
3979| drop
3980| return
3981| i32.const $1
3986| i64.const $2
3995| i64.atomic.rmw32_u.xchg $0:%[-2]+$3, %[-1]
4005| drop
4006| return
4007| i32.const $1
4012| i32.const $2
4017| i32.const $3
4022| i32.atomic.rmw.cmpxchg $0:%[-3]+$3, %[-2], %[-1]
4032| drop
4033| return
4034| i32.const $1
4039| i64.const $2
4048| i64.const $3
4057| i64.atomic.rmw.cmpxchg $0:%[-3]+$7, %[-2], %[-1]
4067| drop
4068| return
4069| i32.const $1
4074| i32.const $2
4079| i32.const $3
4084| i32.atomic.rmw8_u.cmpxchg $0:%[-3]+$3, %[-2], %[-1]
4094| drop
4095| return
4096| i32.const $1
4101| i32.const $2
4106| i32.const $3
4111| i32.atomic.rmw16_u.cmpxchg $0:%[-3]+$3, %[-2], %[-1]
4121| drop
4122| return
4123| i32.const $1
4128| i64.const $2
4137| i64.const $3
4146| i64.atomic.rmw8_u.cmpxchg $0:%[-3]+$3, %[-2], %[-1]
4156| drop
4157| return
4158| i32.const $1
4163| i64.const $2
4172| i64.const $3
4181| i64.atomic.rmw16_u.cmpxchg $0:%[-3]+$3, %[-2], %[-1]
4191| drop
4192| return
4193| i32.const $1
4198| i64.const $2
4207| i64.const $3
4216| i64.atomic.rmw32_u.cmpxchg $0:%[-3]+$3, %[-2], %[-1]
4226| drop
4227| return
unreachable() => error: unreachable executed
br() =>
br_table() =>
return() =>
call() =>
call_indirect() =>
drop() =>
select() =>
get_local() =>
set_local() =>
tee_local() =>
get_global() =>
set_global() =>
i32.load() =>
i64.load() =>
f32.load() =>
f64.load() =>
i32.load8_s() =>
i32.load8_u() =>
i32.load16_s() =>
i32.load16_u() =>
i64.load8_s() =>
i64.load8_u() =>
i64.load16_s() =>
i64.load16_u() =>
i64.load32_s() =>
i64.load32_u() =>
i32.store() =>
i64.store() =>
f32.store() =>
f64.store() =>
i32.store8() =>
i32.store16() =>
i64.store8() =>
i64.store16() =>
i64.store32() =>
current_memory() =>
grow_memory() =>
i32.const() =>
i64.const() =>
f32.const() =>
f64.const() =>
i32.eqz() =>
i32.eq() =>
i32.ne() =>
i32.lt_s() =>
i32.lt_u() =>
i32.gt_s() =>
i32.gt_u() =>
i32.le_s() =>
i32.le_u() =>
i32.ge_s() =>
i32.ge_u() =>
i64.eqz() =>
i64.eq() =>
i64.ne() =>
i64.lt_s() =>
i64.lt_u() =>
i64.gt_s() =>
i64.gt_u() =>
i64.le_s() =>
i64.le_u() =>
i64.ge_s() =>
i64.ge_u() =>
f32.eq() =>
f32.ne() =>
f32.lt() =>
f32.gt() =>
f32.le() =>
f32.ge() =>
f64.eq() =>
f64.ne() =>
f64.lt() =>
f64.gt() =>
f64.le() =>
f64.ge() =>
i32.clz() =>
i32.ctz() =>
i32.popcnt() =>
i32.add() =>
i32.sub() =>
i32.mul() =>
i32.div_s() =>
i32.div_u() =>
i32.rem_s() =>
i32.rem_u() =>
i32.and() =>
i32.or() =>
i32.xor() =>
i32.shl() =>
i32.shr_s() =>
i32.shr_u() =>
i32.rotl() =>
i32.rotr() =>
i64.clz() =>
i64.ctz() =>
i64.popcnt() =>
i64.add() =>
i64.sub() =>
i64.mul() =>
i64.div_s() =>
i64.div_u() =>
i64.rem_s() =>
i64.rem_u() =>
i64.and() =>
i64.or() =>
i64.xor() =>
i64.shl() =>
i64.shr_s() =>
i64.shr_u() =>
i64.rotl() =>
i64.rotr() =>
f32.abs() =>
f32.neg() =>
f32.ceil() =>
f32.floor() =>
f32.trunc() =>
f32.nearest() =>
f32.sqrt() =>
f32.add() =>
f32.sub() =>
f32.mul() =>
f32.div() =>
f32.min() =>
f32.max() =>
f32.copysign() =>
f64.abs() =>
f64.neg() =>
f64.ceil() =>
f64.floor() =>
f64.trunc() =>
f64.nearest() =>
f64.sqrt() =>
f64.add() =>
f64.sub() =>
f64.mul() =>
f64.div() =>
f64.min() =>
f64.max() =>
f64.copysign() =>
i32.wrap/i64() =>
i32.trunc_s/f32() =>
i32.trunc_u/f32() =>
i32.trunc_s/f64() =>
i32.trunc_u/f64() =>
i64.extend_s/i32() =>
i64.extend_u/i32() =>
i64.trunc_s/f32() =>
i64.trunc_u/f32() =>
i64.trunc_s/f64() =>
i64.trunc_u/f64() =>
f32.convert_s/i32() =>
f32.convert_u/i32() =>
f32.convert_s/i64() =>
f32.convert_u/i64() =>
f32.demote/f64() =>
f64.convert_s/i32() =>
f64.convert_u/i32() =>
f64.convert_s/i64() =>
f64.convert_u/i64() =>
f64.promote/f32() =>
i32.reinterpret/f32() =>
f32.reinterpret/i32() =>
i64.reinterpret/f64() =>
f64.reinterpret/i64() =>
i32.extend8_s() =>
i32.extend16_s() =>
i64.extend8_s() =>
i64.extend16_s() =>
i64.extend32_s() =>
alloca() =>
br_unless() =>
called host host.print(i32:1) =>
call_host() =>
data() =>
drop_keep() =>
i32.trunc_s:sat/f32() =>
i32.trunc_u:sat/f32() =>
i32.trunc_s:sat/f64() =>
i32.trunc_u:sat/f64() =>
i64.trunc_s:sat/f32() =>
i64.trunc_u:sat/f32() =>
i64.trunc_s:sat/f64() =>
i64.trunc_u:sat/f64() =>
atomic.wake() => error: unreachable executed
i32.atomic.wait() => error: unreachable executed
i64.atomic.wait() => error: unreachable executed
i32.atomic.load() =>
i64.atomic.load() =>
i32.atomic.load8_u() =>
i32.atomic.load16_u() =>
i64.atomic.load8_u() =>
i64.atomic.load16_u() =>
i64.atomic.load32_u() =>
i32.atomic.store() =>
i64.atomic.store() =>
i32.atomic.store8() =>
i32.atomic.store16() =>
i64.atomic.store8() =>
i64.atomic.store16() =>
i64.atomic.store32() =>
i32.atomic.rmw.add() =>
i64.atomic.rmw.add() =>
i32.atomic.rmw8_u.add() =>
i32.atomic.rmw16_u.add() =>
i64.atomic.rmw8_u.add() =>
i64.atomic.rmw16_u.add() =>
i64.atomic.rmw32_u.add() =>
i32.atomic.rmw.sub() =>
i64.atomic.rmw.sub() =>
i32.atomic.rmw8_u.sub() =>
i32.atomic.rmw16_u.sub() =>
i64.atomic.rmw8_u.sub() =>
i64.atomic.rmw16_u.sub() =>
i64.atomic.rmw32_u.sub() =>
i32.atomic.rmw.and() =>
i64.atomic.rmw.and() =>
i32.atomic.rmw8_u.and() =>
i32.atomic.rmw16_u.and() =>
i64.atomic.rmw8_u.and() =>
i64.atomic.rmw16_u.and() =>
i64.atomic.rmw32_u.and() =>
i32.atomic.rmw.or() =>
i64.atomic.rmw.or() =>
i32.atomic.rmw8_u.or() =>
i32.atomic.rmw16_u.or() =>
i64.atomic.rmw8_u.or() =>
i64.atomic.rmw16_u.or() =>
i64.atomic.rmw32_u.or() =>
i32.atomic.rmw.xor() =>
i64.atomic.rmw.xor() =>
i32.atomic.rmw8_u.xor() =>
i32.atomic.rmw16_u.xor() =>
i64.atomic.rmw8_u.xor() =>
i64.atomic.rmw16_u.xor() =>
i64.atomic.rmw32_u.xor() =>
i32.atomic.rmw.xchg() =>
i64.atomic.rmw.xchg() =>
i32.atomic.rmw8_u.xchg() =>
i32.atomic.rmw16_u.xchg() =>
i64.atomic.rmw8_u.xchg() =>
i64.atomic.rmw16_u.xchg() =>
i64.atomic.rmw32_u.xchg() =>
i32.atomic.rmw.cmpxchg() =>
i64.atomic.rmw.cmpxchg() =>
i32.atomic.rmw8_u.cmpxchg() =>
i32.atomic.rmw16_u.cmpxchg() =>
i64.atomic.rmw8_u.cmpxchg() =>
i64.atomic.rmw16_u.cmpxchg() =>
i64.atomic.rmw32_u.cmpxchg() =>
;;; STDOUT ;;)
