;;; TOOL: run-interp
;;; ARGS*: -v --enable-all
;;; ARGS1: --host-print

(module
  (import "host" "print" (func $print (param i32)))

  (type $empty (func))
  (func $empty)
  (memory 1 1 shared)
  (table $table1 anyfunc (elem $empty $empty))
  (global $g (mut i32) (i32.const 0))
  (data "")
  (elem funcref)

  (; 0x00 ;) (func (export "unreachable") unreachable)
  (; 0x01 ;) ;; nop       -- not generated in interpreter
  (; 0x02 ;) ;; block     -- not generated in interpreter
  (; 0x03 ;) ;; loop      -- not generated in interpreter
  (; 0x04 ;) ;; if        -- not generated in interpreter
  (; 0x05 ;) ;; else      -- not generated in interpreter
  (; 0x06 ;) ;; try       -- not implemented
  (; 0x07 ;) ;; catch     -- not implemented
  (; 0x08 ;) ;; throw     -- not implemented
  (; 0x09 ;) ;; rethrow   -- not implemented
  (; 0x0a ;) ;; catch_all -- not implemented
  (; 0x0b ;) ;; end       -- not generated in interpreter
  (; 0x0c ;) (func (export "br") br 0)
  (; 0x0d ;) ;; 0x0d br_if  ;; not generated in interpreter
  (; 0x0e ;) (func (export "br_table") i32.const 1 br_table 0)
  (; 0x0f ;) (func (export "return") return)
  (; 0x10 ;) (func (export "call") call $empty)
  (; 0x11 ;) (func (export "call_indirect") i32.const 1 call_indirect (type $empty))

  ;; --enable-tail-call
  (; 0x12 ;) (func (export "return_call") return_call $empty)
  (; 0x13 ;) (func (export "return_call_indirect") i32.const 1 return_call_indirect (type $empty))

  (; 0x1a ;) (func (export "drop") i32.const 1 drop)
  (; 0x1b ;) (func (export "select") i32.const 1 i32.const 2 i32.const 3 select drop)
  (; 0x1c ;) (func (export "select_t") i32.const 1 i32.const 2 i32.const 3 select (result i32) drop)
  (; 0x20 ;) (func (export "get_local") (local i32) get_local 0 drop)
  (; 0x21 ;) (func (export "set_local") (local i32) i32.const 1 set_local 0)
  (; 0x22 ;) (func (export "tee_local") (local i32) i32.const 1 tee_local 0 drop)
  (; 0x23 ;) (func (export "get_global") get_global 0 drop)
  (; 0x24 ;) (func (export "set_global") i32.const 1 set_global 0)
  (; 0x28 ;) (func (export "i32.load") i32.const 1 i32.load offset=2 drop)
  (; 0x29 ;) (func (export "i64.load") i32.const 1 i64.load offset=2 drop)
  (; 0x2a ;) (func (export "f32.load") i32.const 1 f32.load offset=2 drop)
  (; 0x2b ;) (func (export "f64.load") i32.const 1 f64.load offset=2 drop)
  (; 0x2c ;) (func (export "i32.load8_s") i32.const 1 i32.load8_s offset=2 drop)
  (; 0x2d ;) (func (export "i32.load8_u") i32.const 1 i32.load8_u offset=2 drop)
  (; 0x2e ;) (func (export "i32.load16_s") i32.const 1 i32.load16_s offset=2 drop)
  (; 0x2f ;) (func (export "i32.load16_u") i32.const 1 i32.load16_u offset=2 drop)
  (; 0x30 ;) (func (export "i64.load8_s") i32.const 1 i64.load8_s offset=2 drop)
  (; 0x31 ;) (func (export "i64.load8_u") i32.const 1 i64.load8_u offset=2 drop)
  (; 0x32 ;) (func (export "i64.load16_s") i32.const 1 i64.load16_s offset=2 drop)
  (; 0x33 ;) (func (export "i64.load16_u") i32.const 1 i64.load16_u offset=2 drop)
  (; 0x34 ;) (func (export "i64.load32_s") i32.const 1 i64.load32_s offset=2 drop)
  (; 0x35 ;) (func (export "i64.load32_u") i32.const 1 i64.load32_u offset=2 drop)
  (; 0x36 ;) (func (export "i32.store") i32.const 1 i32.const 2 i32.store offset=2)
  (; 0x37 ;) (func (export "i64.store") i32.const 1 i64.const 2 i64.store offset=2)
  (; 0x38 ;) (func (export "f32.store") i32.const 1 f32.const 2 f32.store offset=2)
  (; 0x39 ;) (func (export "f64.store") i32.const 1 f64.const 2 f64.store offset=2)
  (; 0x3a ;) (func (export "i32.store8") i32.const 1 i32.const 2 i32.store8 offset=2)
  (; 0x3b ;) (func (export "i32.store16") i32.const 1 i32.const 2 i32.store16 offset=2)
  (; 0x3c ;) (func (export "i64.store8") i32.const 1 i64.const 2 i64.store8 offset=2)
  (; 0x3d ;) (func (export "i64.store16") i32.const 1 i64.const 2 i64.store16 offset=2)
  (; 0x3e ;) (func (export "i64.store32") i32.const 1 i64.const 2 i64.store32 offset=2)
  (; 0x3f ;) (func (export "current_memory") current_memory drop)
  (; 0x40 ;) (func (export "grow_memory") i32.const 1 grow_memory drop)
  (; 0x41 ;) (func (export "i32.const") i32.const 1 drop)
  (; 0x42 ;) (func (export "i64.const") i64.const 1 drop)
  (; 0x43 ;) (func (export "f32.const") f32.const 1 drop)
  (; 0x44 ;) (func (export "f64.const") f64.const 1 drop)
  (; 0x45 ;) (func (export "i32.eqz") i32.const 1 i32.eqz drop)
  (; 0x46 ;) (func (export "i32.eq") i32.const 1 i32.const 2 i32.eq drop)
  (; 0x47 ;) (func (export "i32.ne") i32.const 1 i32.const 2 i32.ne drop)
  (; 0x48 ;) (func (export "i32.lt_s") i32.const 1 i32.const 2 i32.lt_s drop)
  (; 0x49 ;) (func (export "i32.lt_u") i32.const 1 i32.const 2 i32.lt_u drop)
  (; 0x4a ;) (func (export "i32.gt_s") i32.const 1 i32.const 2 i32.gt_s drop)
  (; 0x4b ;) (func (export "i32.gt_u") i32.const 1 i32.const 2 i32.gt_u drop)
  (; 0x4c ;) (func (export "i32.le_s") i32.const 1 i32.const 2 i32.le_s drop)
  (; 0x4d ;) (func (export "i32.le_u") i32.const 1 i32.const 2 i32.le_u drop)
  (; 0x4e ;) (func (export "i32.ge_s") i32.const 1 i32.const 2 i32.ge_s drop)
  (; 0x4f ;) (func (export "i32.ge_u") i32.const 1 i32.const 2 i32.ge_u drop)
  (; 0x50 ;) (func (export "i64.eqz") i64.const 1 i64.eqz drop)
  (; 0x51 ;) (func (export "i64.eq") i64.const 1 i64.const 2 i64.eq drop)
  (; 0x52 ;) (func (export "i64.ne") i64.const 1 i64.const 2 i64.ne drop)
  (; 0x53 ;) (func (export "i64.lt_s") i64.const 1 i64.const 2 i64.lt_s drop)
  (; 0x54 ;) (func (export "i64.lt_u") i64.const 1 i64.const 2 i64.lt_u drop)
  (; 0x55 ;) (func (export "i64.gt_s") i64.const 1 i64.const 2 i64.gt_s drop)
  (; 0x56 ;) (func (export "i64.gt_u") i64.const 1 i64.const 2 i64.gt_u drop)
  (; 0x57 ;) (func (export "i64.le_s") i64.const 1 i64.const 2 i64.le_s drop)
  (; 0x58 ;) (func (export "i64.le_u") i64.const 1 i64.const 2 i64.le_u drop)
  (; 0x59 ;) (func (export "i64.ge_s") i64.const 1 i64.const 2 i64.ge_s drop)
  (; 0x5a ;) (func (export "i64.ge_u") i64.const 1 i64.const 2 i64.ge_u drop)
  (; 0x5b ;) (func (export "f32.eq") f32.const 1 f32.const 2 f32.eq drop)
  (; 0x5c ;) (func (export "f32.ne") f32.const 1 f32.const 2 f32.ne drop)
  (; 0x5d ;) (func (export "f32.lt") f32.const 1 f32.const 2 f32.lt drop)
  (; 0x5e ;) (func (export "f32.gt") f32.const 1 f32.const 2 f32.gt drop)
  (; 0x5f ;) (func (export "f32.le") f32.const 1 f32.const 2 f32.le drop)
  (; 0x60 ;) (func (export "f32.ge") f32.const 1 f32.const 2 f32.ge drop)
  (; 0x61 ;) (func (export "f64.eq") f64.const 1 f64.const 2 f64.eq drop)
  (; 0x62 ;) (func (export "f64.ne") f64.const 1 f64.const 2 f64.ne drop)
  (; 0x63 ;) (func (export "f64.lt") f64.const 1 f64.const 2 f64.lt drop)
  (; 0x64 ;) (func (export "f64.gt") f64.const 1 f64.const 2 f64.gt drop)
  (; 0x65 ;) (func (export "f64.le") f64.const 1 f64.const 2 f64.le drop)
  (; 0x66 ;) (func (export "f64.ge") f64.const 1 f64.const 2 f64.ge drop)
  (; 0x67 ;) (func (export "i32.clz") i32.const 1 i32.clz drop)
  (; 0x68 ;) (func (export "i32.ctz") i32.const 1 i32.ctz drop)
  (; 0x69 ;) (func (export "i32.popcnt") i32.const 1 i32.popcnt drop)
  (; 0x6a ;) (func (export "i32.add") i32.const 1 i32.const 2 i32.add drop)
  (; 0x6b ;) (func (export "i32.sub") i32.const 1 i32.const 2 i32.sub drop)
  (; 0x6c ;) (func (export "i32.mul") i32.const 1 i32.const 2 i32.mul drop)
  (; 0x6d ;) (func (export "i32.div_s") i32.const 1 i32.const 2 i32.div_s drop)
  (; 0x6e ;) (func (export "i32.div_u") i32.const 1 i32.const 2 i32.div_u drop)
  (; 0x6f ;) (func (export "i32.rem_s") i32.const 1 i32.const 2 i32.rem_s drop)
  (; 0x70 ;) (func (export "i32.rem_u") i32.const 1 i32.const 2 i32.rem_u drop)
  (; 0x71 ;) (func (export "i32.and") i32.const 1 i32.const 2 i32.and drop)
  (; 0x72 ;) (func (export "i32.or") i32.const 1 i32.const 2 i32.or drop)
  (; 0x73 ;) (func (export "i32.xor") i32.const 1 i32.const 2 i32.xor drop)
  (; 0x74 ;) (func (export "i32.shl") i32.const 1 i32.const 2 i32.shl drop)
  (; 0x75 ;) (func (export "i32.shr_s") i32.const 1 i32.const 2 i32.shr_s drop)
  (; 0x76 ;) (func (export "i32.shr_u") i32.const 1 i32.const 2 i32.shr_u drop)
  (; 0x77 ;) (func (export "i32.rotl") i32.const 1 i32.const 2 i32.rotl drop)
  (; 0x78 ;) (func (export "i32.rotr") i32.const 1 i32.const 2 i32.rotr drop)
  (; 0x79 ;) (func (export "i64.clz") i64.const 1 i64.clz drop)
  (; 0x7a ;) (func (export "i64.ctz") i64.const 1 i64.ctz drop)
  (; 0x7b ;) (func (export "i64.popcnt") i64.const 1 i64.popcnt drop)
  (; 0x7c ;) (func (export "i64.add") i64.const 1 i64.const 2 i64.add drop)
  (; 0x7d ;) (func (export "i64.sub") i64.const 1 i64.const 2 i64.sub drop)
  (; 0x7e ;) (func (export "i64.mul") i64.const 1 i64.const 2 i64.mul drop)
  (; 0x7f ;) (func (export "i64.div_s") i64.const 1 i64.const 2 i64.div_s drop)
  (; 0x80 ;) (func (export "i64.div_u") i64.const 1 i64.const 2 i64.div_u drop)
  (; 0x81 ;) (func (export "i64.rem_s") i64.const 1 i64.const 2 i64.rem_s drop)
  (; 0x82 ;) (func (export "i64.rem_u") i64.const 1 i64.const 2 i64.rem_u drop)
  (; 0x83 ;) (func (export "i64.and") i64.const 1 i64.const 2 i64.and drop)
  (; 0x84 ;) (func (export "i64.or") i64.const 1 i64.const 2 i64.or drop)
  (; 0x85 ;) (func (export "i64.xor") i64.const 1 i64.const 2 i64.xor drop)
  (; 0x86 ;) (func (export "i64.shl") i64.const 1 i64.const 2 i64.shl drop)
  (; 0x87 ;) (func (export "i64.shr_s") i64.const 1 i64.const 2 i64.shr_s drop)
  (; 0x88 ;) (func (export "i64.shr_u") i64.const 1 i64.const 2 i64.shr_u drop)
  (; 0x89 ;) (func (export "i64.rotl") i64.const 1 i64.const 2 i64.rotl drop)
  (; 0x8a ;) (func (export "i64.rotr") i64.const 1 i64.const 2 i64.rotr drop)
  (; 0x8b ;) (func (export "f32.abs") f32.const 1 f32.abs drop)
  (; 0x8c ;) (func (export "f32.neg") f32.const 1 f32.neg drop)
  (; 0x8d ;) (func (export "f32.ceil") f32.const 1 f32.ceil drop)
  (; 0x8e ;) (func (export "f32.floor") f32.const 1 f32.floor drop)
  (; 0x8f ;) (func (export "f32.trunc") f32.const 1 f32.trunc drop)
  (; 0x90 ;) (func (export "f32.nearest") f32.const 1 f32.nearest drop)
  (; 0x91 ;) (func (export "f32.sqrt") f32.const 1 f32.sqrt drop)
  (; 0x92 ;) (func (export "f32.add") f32.const 1 f32.const 2 f32.add drop)
  (; 0x93 ;) (func (export "f32.sub") f32.const 1 f32.const 2 f32.sub drop)
  (; 0x94 ;) (func (export "f32.mul") f32.const 1 f32.const 2 f32.mul drop)
  (; 0x95 ;) (func (export "f32.div") f32.const 1 f32.const 2 f32.div drop)
  (; 0x96 ;) (func (export "f32.min") f32.const 1 f32.const 2 f32.min drop)
  (; 0x97 ;) (func (export "f32.max") f32.const 1 f32.const 2 f32.max drop)
  (; 0x98 ;) (func (export "f32.copysign") f32.const 1 f32.const 2 f32.copysign drop)
  (; 0x99 ;) (func (export "f64.abs") f64.const 1 f64.abs drop)
  (; 0x9a ;) (func (export "f64.neg") f64.const 1 f64.neg drop)
  (; 0x9b ;) (func (export "f64.ceil") f64.const 1 f64.ceil drop)
  (; 0x9c ;) (func (export "f64.floor") f64.const 1 f64.floor drop)
  (; 0x9d ;) (func (export "f64.trunc") f64.const 1 f64.trunc drop)
  (; 0x9e ;) (func (export "f64.nearest") f64.const 1 f64.nearest drop)
  (; 0x9f ;) (func (export "f64.sqrt") f64.const 1 f64.sqrt drop)
  (; 0xa0 ;) (func (export "f64.add") f64.const 1 f64.const 2 f64.add drop)
  (; 0xa1 ;) (func (export "f64.sub") f64.const 1 f64.const 2 f64.sub drop)
  (; 0xa2 ;) (func (export "f64.mul") f64.const 1 f64.const 2 f64.mul drop)
  (; 0xa3 ;) (func (export "f64.div") f64.const 1 f64.const 2 f64.div drop)
  (; 0xa4 ;) (func (export "f64.min") f64.const 1 f64.const 2 f64.min drop)
  (; 0xa5 ;) (func (export "f64.max") f64.const 1 f64.const 2 f64.max drop)
  (; 0xa6 ;) (func (export "f64.copysign") f64.const 1 f64.const 2 f64.copysign drop)
  (; 0xa7 ;) (func (export "i32.wrap/i64") i64.const 1 i32.wrap/i64 drop)
  (; 0xa8 ;) (func (export "i32.trunc_s/f32") f32.const 1 i32.trunc_s/f32 drop)
  (; 0xa9 ;) (func (export "i32.trunc_u/f32") f32.const 1 i32.trunc_u/f32 drop)
  (; 0xaa ;) (func (export "i32.trunc_s/f64") f64.const 1 i32.trunc_s/f64 drop)
  (; 0xab ;) (func (export "i32.trunc_u/f64") f64.const 1 i32.trunc_u/f64 drop)
  (; 0xac ;) (func (export "i64.extend_s/i32") i32.const 1 i64.extend_s/i32 drop)
  (; 0xad ;) (func (export "i64.extend_u/i32") i32.const 1 i64.extend_u/i32 drop)
  (; 0xae ;) (func (export "i64.trunc_s/f32") f32.const 1 i64.trunc_s/f32 drop)
  (; 0xaf ;) (func (export "i64.trunc_u/f32") f32.const 1 i64.trunc_u/f32 drop)
  (; 0xb0 ;) (func (export "i64.trunc_s/f64") f64.const 1 i64.trunc_s/f64 drop)
  (; 0xb1 ;) (func (export "i64.trunc_u/f64") f64.const 1 i64.trunc_u/f64 drop)
  (; 0xb2 ;) (func (export "f32.convert_s/i32") i32.const 1 f32.convert_s/i32 drop)
  (; 0xb3 ;) (func (export "f32.convert_u/i32") i32.const 1 f32.convert_u/i32 drop)
  (; 0xb4 ;) (func (export "f32.convert_s/i64") i64.const 1 f32.convert_s/i64 drop)
  (; 0xb5 ;) (func (export "f32.convert_u/i64") i64.const 1 f32.convert_u/i64 drop)
  (; 0xb6 ;) (func (export "f32.demote/f64") f64.const 1 f32.demote/f64 drop)
  (; 0xb7 ;) (func (export "f64.convert_s/i32") i32.const 1 f64.convert_s/i32 drop)
  (; 0xb8 ;) (func (export "f64.convert_u/i32") i32.const 1 f64.convert_u/i32 drop)
  (; 0xb9 ;) (func (export "f64.convert_s/i64") i64.const 1 f64.convert_s/i64 drop)
  (; 0xba ;) (func (export "f64.convert_u/i64") i64.const 1 f64.convert_u/i64 drop)
  (; 0xbb ;) (func (export "f64.promote/f32") f32.const 1 f64.promote/f32 drop)
  (; 0xbc ;) (func (export "i32.reinterpret/f32") i32.const 1 f32.reinterpret/i32 drop)
  (; 0xbd ;) (func (export "f32.reinterpret/i32") f32.const 1 i32.reinterpret/f32 drop)
  (; 0xbe ;) (func (export "i64.reinterpret/f64") i64.const 1 f64.reinterpret/i64 drop)
  (; 0xbf ;) (func (export "f64.reinterpret/i64") f64.const 1 i64.reinterpret/f64 drop)

  ;; --enable-sign-extension
  (; 0xc0 ;) (func (export "i32.extend8_s") i32.const 1 i32.extend8_s drop)
  (; 0xc1 ;) (func (export "i32.extend16_s") i32.const 1 i32.extend16_s drop)
  (; 0xc2 ;) (func (export "i64.extend8_s") i64.const 1 i64.extend8_s drop)
  (; 0xc3 ;) (func (export "i64.extend16_s") i64.const 1 i64.extend16_s drop)
  (; 0xc4 ;) (func (export "i64.extend32_s") i64.const 1 i64.extend32_s drop)

  ;; Interpreter opcodes
  (; 0xe0 ;) (func (export "alloca") (local i32))
  (; 0xe1 ;) (func (export "br_unless") i32.const 1 br_if 0)
  (; 0xe2 ;) (func (export "call_host") i32.const 1 call $print)
  (; 0xe3 ;) (func (export "data") i32.const 1 br_table 0)
  (; 0xe4 ;) (func (export "drop_keep") block (result i32) i32.const 1 i32.const 2 br 0 end drop)

  ;; --enable-saturating-float-to-int
  (; 0xfc 0x00 ;) (func (export "i32.trunc_s:sat/f32") f32.const 1 i32.trunc_s:sat/f32 drop)
  (; 0xfc 0x01 ;) (func (export "i32.trunc_u:sat/f32") f32.const 1 i32.trunc_u:sat/f32 drop)
  (; 0xfc 0x02 ;) (func (export "i32.trunc_s:sat/f64") f64.const 1 i32.trunc_s:sat/f64 drop)
  (; 0xfc 0x03 ;) (func (export "i32.trunc_u:sat/f64") f64.const 1 i32.trunc_u:sat/f64 drop)
  (; 0xfc 0x04 ;) (func (export "i64.trunc_s:sat/f32") f32.const 1 i64.trunc_s:sat/f32 drop)
  (; 0xfc 0x05 ;) (func (export "i64.trunc_u:sat/f32") f32.const 1 i64.trunc_u:sat/f32 drop)
  (; 0xfc 0x06 ;) (func (export "i64.trunc_s:sat/f64") f64.const 1 i64.trunc_s:sat/f64 drop)
  (; 0xfc 0x07 ;) (func (export "i64.trunc_u:sat/f64") f64.const 1 i64.trunc_u:sat/f64 drop)

  (; 0xfc 0x08 ;) (func (export "memory.init") i32.const 1 i32.const 2 i32.const 3 memory.init 0)
  (; 0xfc 0x09 ;) (func (export "data.drop") data.drop 0)
  (; 0xfc 0x0a ;) (func (export "memory.copy") i32.const 1 i32.const 2 i32.const 3 memory.copy)
  (; 0xfc 0x0b ;) (func (export "memory.fill") i32.const 1 i32.const 2 i32.const 3 memory.fill)
  (; 0xfc 0x0c ;) (func (export "table.init") i32.const 1 i32.const 2 i32.const 3 table.init 0)
  (; 0xfc 0x0d ;) (func (export "elem.drop") elem.drop 0)
  (; 0xfc 0x0e ;) (func (export "table.copy") i32.const 1 i32.const 2 i32.const 3 table.copy $table1 $table1)

  ;; --enable-simd
  (; 0xfd 0x00 ;) (func (export "v128.load") i32.const 1 v128.load offset=3 drop)
  (; 0xfd 0x01 ;) (func (export "v128.store") i32.const 1 v128.const i32x4 1 1 1 1 v128.store offset=3)
  (; 0xfd 0x02 ;) (func (export "v128.const") v128.const i32x4 1 1 1 1 drop)
  (; 0xfd 0x04 ;) (func (export "i8x16.splat") i32.const 1 i8x16.splat drop)
  (; 0xfd 0x05 ;) (func (export "i8x16.extract_lane_s") v128.const i32x4 1 1 1 1 i8x16.extract_lane_s 15 drop)
  (; 0xfd 0x06 ;) (func (export "i8x16.extract_lane_u") v128.const i32x4 1 1 1 1 i8x16.extract_lane_u 15 drop)
  (; 0xfd 0x07 ;) (func (export "i8x16.replace_lane") v128.const i32x4 1 1 1 1 i32.const 0 i8x16.replace_lane 15 drop)
  (; 0xfd 0x08 ;) (func (export "i16x8.splat") i32.const 1 i16x8.splat drop)
  (; 0xfd 0x09 ;) (func (export "i16x8.extract_lane_s") v128.const i32x4 1 1 1 1 i16x8.extract_lane_s 7 drop)
  (; 0xfd 0x0a ;) (func (export "i16x8.extract_lane_u") v128.const i32x4 1 1 1 1 i16x8.extract_lane_u 7 drop)
  (; 0xfd 0x0b ;) (func (export "i16x8.replace_lane") v128.const i32x4 1 1 1 1 i32.const 0 i16x8.replace_lane 7 drop)
  (; 0xfd 0x0c ;) (func (export "i32x4.splat") i32.const 1 i32x4.splat drop)
  (; 0xfd 0x0d ;) (func (export "i32x4.extract_lane") v128.const i32x4 1 1 1 1 i32x4.extract_lane 3 drop)
  (; 0xfd 0x0e ;) (func (export "i32x4.replace_lane") v128.const i32x4 1 1 1 1 i32.const 0 i32x4.replace_lane 3 drop)
  (; 0xfd 0x0f ;) (func (export "i64x2.splat") i64.const 1 i64x2.splat drop)
  (; 0xfd 0x10 ;) (func (export "i64x2.extract_lane") v128.const i32x4 1 1 1 1 i64x2.extract_lane 1 drop)
  (; 0xfd 0x11 ;) (func (export "i64x2.replace_lane") v128.const i32x4 1 1 1 1 i64.const 0 i64x2.replace_lane 1 drop)
  (; 0xfd 0x12 ;) (func (export "f32x4.splat") f32.const 1 f32x4.splat drop)
  (; 0xfd 0x13 ;) (func (export "f32x4.extract_lane") v128.const i32x4 1 1 1 1 f32x4.extract_lane 3 drop)
  (; 0xfd 0x14 ;) (func (export "f32x4.replace_lane") v128.const i32x4 1 1 1 1 f32.const 0 f32x4.replace_lane 3 drop)
  (; 0xfd 0x15 ;) (func (export "f64x2.splat") f64.const 1 f64x2.splat drop)
  (; 0xfd 0x16 ;) (func (export "f64x2.extract_lane") v128.const i32x4 1 1 1 1 f64x2.extract_lane 1 drop)
  (; 0xfd 0x17 ;) (func (export "f64x2.replace_lane") v128.const i32x4 1 1 1 1 f64.const 0 f64x2.replace_lane 1 drop)
  (; 0xfd 0x18 ;) (func (export "i8x16.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.eq drop)
  (; 0xfd 0x19 ;) (func (export "i8x16.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.ne drop)
  (; 0xfd 0x1a ;) (func (export "i8x16.lt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.lt_s drop)
  (; 0xfd 0x1b ;) (func (export "i8x16.lt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.lt_u drop)
  (; 0xfd 0x1c ;) (func (export "i8x16.gt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.gt_s drop)
  (; 0xfd 0x1d ;) (func (export "i8x16.gt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.gt_u drop)
  (; 0xfd 0x1e ;) (func (export "i8x16.le_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.le_s drop)
  (; 0xfd 0x1f ;) (func (export "i8x16.le_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.le_u drop)
  (; 0xfd 0x20 ;) (func (export "i8x16.ge_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.ge_s drop)
  (; 0xfd 0x21 ;) (func (export "i8x16.ge_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.ge_u drop)
  (; 0xfd 0x22 ;) (func (export "i16x8.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.eq drop)
  (; 0xfd 0x23 ;) (func (export "i16x8.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.ne drop)
  (; 0xfd 0x24 ;) (func (export "i16x8.lt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.lt_s drop)
  (; 0xfd 0x25 ;) (func (export "i16x8.lt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.lt_u drop)
  (; 0xfd 0x26 ;) (func (export "i16x8.gt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.gt_s drop)
  (; 0xfd 0x27 ;) (func (export "i16x8.gt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.gt_u drop)
  (; 0xfd 0x28 ;) (func (export "i16x8.le_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.le_s drop)
  (; 0xfd 0x29 ;) (func (export "i16x8.le_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.le_u drop)
  (; 0xfd 0x2a ;) (func (export "i16x8.ge_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.ge_s drop)
  (; 0xfd 0x2b ;) (func (export "i16x8.ge_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.ge_u drop)
  (; 0xfd 0x2c ;) (func (export "i32x4.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.eq drop)
  (; 0xfd 0x2d ;) (func (export "i32x4.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.ne drop)
  (; 0xfd 0x2e ;) (func (export "i32x4.lt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.lt_s drop)
  (; 0xfd 0x2f ;) (func (export "i32x4.lt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.lt_u drop)
  (; 0xfd 0x30 ;) (func (export "i32x4.gt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.gt_s drop)
  (; 0xfd 0x31 ;) (func (export "i32x4.gt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.gt_u drop)
  (; 0xfd 0x32 ;) (func (export "i32x4.le_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.le_s drop)
  (; 0xfd 0x33 ;) (func (export "i32x4.le_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.le_u drop)
  (; 0xfd 0x34 ;) (func (export "i32x4.ge_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.ge_s drop)
  (; 0xfd 0x35 ;) (func (export "i32x4.ge_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.ge_u drop)
  (; 0xfd 0x40 ;) (func (export "f32x4.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.eq drop)
  (; 0xfd 0x41 ;) (func (export "f32x4.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.ne drop)
  (; 0xfd 0x42 ;) (func (export "f32x4.lt") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.lt drop)
  (; 0xfd 0x43 ;) (func (export "f32x4.gt") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.gt drop)
  (; 0xfd 0x44 ;) (func (export "f32x4.le") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.le drop)
  (; 0xfd 0x45 ;) (func (export "f32x4.ge") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.ge drop)
  (; 0xfd 0x46 ;) (func (export "f64x2.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.eq drop)
  (; 0xfd 0x47 ;) (func (export "f64x2.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.ne drop)
  (; 0xfd 0x48 ;) (func (export "f64x2.lt") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.lt drop)
  (; 0xfd 0x49 ;) (func (export "f64x2.gt") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.gt drop)
  (; 0xfd 0x4a ;) (func (export "f64x2.le") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.le drop)
  (; 0xfd 0x4b ;) (func (export "f64x2.ge") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.ge drop)
  (; 0xfd 0x4c ;) (func (export "v128.not") v128.const i32x4 1 1 1 1 v128.not drop)
  (; 0xfd 0x4d ;) (func (export "v128.and") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.and drop)
  (; 0xfd 0x4e ;) (func (export "v128.or") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.or drop)
  (; 0xfd 0x4f ;) (func (export "v128.xor") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.xor drop)
  (; 0xfd 0x50 ;) (func (export "v128.bitselect") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.const i32x4 3 3 3 3 v128.bitselect drop)
  (; 0xfd 0x51 ;) (func (export "i8x16.neg") v128.const i32x4 1 1 1 1 i8x16.neg drop)
  (; 0xfd 0x52 ;) (func (export "i8x16.any_true") v128.const i32x4 1 1 1 1 i8x16.any_true drop)
  (; 0xfd 0x53 ;) (func (export "i8x16.all_true") v128.const i32x4 1 1 1 1 i8x16.all_true drop)
  (; 0xfd 0x54 ;) (func (export "i8x16.shl") v128.const i32x4 1 1 1 1 i32.const 0 i8x16.shl drop)
  (; 0xfd 0x55 ;) (func (export "i8x16.shr_s") v128.const i32x4 1 1 1 1 i32.const 0 i8x16.shr_s drop)
  (; 0xfd 0x56 ;) (func (export "i8x16.shr_u") v128.const i32x4 1 1 1 1 i32.const 0 i8x16.shr_u drop)
  (; 0xfd 0x57 ;) (func (export "i8x16.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.add drop)
  (; 0xfd 0x58 ;) (func (export "i8x16.add_saturate_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.add_saturate_s drop)
  (; 0xfd 0x59 ;) (func (export "i8x16.add_saturate_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.add_saturate_u drop)
  (; 0xfd 0x5a ;) (func (export "i8x16.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.sub drop)
  (; 0xfd 0x5b ;) (func (export "i8x16.sub_saturate_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.sub_saturate_s drop)
  (; 0xfd 0x5c ;) (func (export "i8x16.sub_saturate_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.sub_saturate_u drop)
  (; 0xfd 0x5d ;) (func (export "i8x16.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.mul drop)
  (; 0xfd 0x62 ;) (func (export "i16x8.neg") v128.const i32x4 1 1 1 1 i16x8.neg drop)
  (; 0xfd 0x63 ;) (func (export "i16x8.any_true") v128.const i32x4 1 1 1 1 i16x8.any_true drop)
  (; 0xfd 0x64 ;) (func (export "i16x8.all_true") v128.const i32x4 1 1 1 1 i16x8.all_true drop)
  (; 0xfd 0x65 ;) (func (export "i16x8.shl") v128.const i32x4 1 1 1 1 i32.const 0 i16x8.shl drop)
  (; 0xfd 0x66 ;) (func (export "i16x8.shr_s") v128.const i32x4 1 1 1 1 i32.const 0 i16x8.shr_s drop)
  (; 0xfd 0x67 ;) (func (export "i16x8.shr_u") v128.const i32x4 1 1 1 1 i32.const 0 i16x8.shr_u drop)
  (; 0xfd 0x68 ;) (func (export "i16x8.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.add drop)
  (; 0xfd 0x69 ;) (func (export "i16x8.add_saturate_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.add_saturate_s drop)
  (; 0xfd 0x6a ;) (func (export "i16x8.add_saturate_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.add_saturate_u drop)
  (; 0xfd 0x6b ;) (func (export "i16x8.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.sub drop)
  (; 0xfd 0x6c ;) (func (export "i16x8.sub_saturate_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.sub_saturate_s drop)
  (; 0xfd 0x6d ;) (func (export "i16x8.sub_saturate_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.sub_saturate_u drop)
  (; 0xfd 0x6e ;) (func (export "i16x8.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.mul drop)
  (; 0xfd 0x73 ;) (func (export "i32x4.neg") v128.const i32x4 1 1 1 1 i32x4.neg drop)
  (; 0xfd 0x74 ;) (func (export "i32x4.any_true") v128.const i32x4 1 1 1 1 i32x4.any_true drop)
  (; 0xfd 0x75 ;) (func (export "i32x4.all_true") v128.const i32x4 1 1 1 1 i32x4.all_true drop)
  (; 0xfd 0x76 ;) (func (export "i32x4.shl") v128.const i32x4 1 1 1 1 i32.const 0 i32x4.shl drop)
  (; 0xfd 0x77 ;) (func (export "i32x4.shr_s") v128.const i32x4 1 1 1 1 i32.const 0 i32x4.shr_s drop)
  (; 0xfd 0x78 ;) (func (export "i32x4.shr_u") v128.const i32x4 1 1 1 1 i32.const 0 i32x4.shr_u drop)
  (; 0xfd 0x79 ;) (func (export "i32x4.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.add drop)
  (; 0xfd 0x7c ;) (func (export "i32x4.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.sub drop)
  (; 0xfd 0x7f ;) (func (export "i32x4.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.mul drop)
  (; 0xfd 0x84 ;) (func (export "i64x2.neg") v128.const i32x4 1 1 1 1 i64x2.neg drop)
  (; 0xfd 0x85 ;) (func (export "i64x2.any_true") v128.const i32x4 1 1 1 1 i64x2.any_true drop)
  (; 0xfd 0x86 ;) (func (export "i64x2.all_true") v128.const i32x4 1 1 1 1 i64x2.all_true drop)
  (; 0xfd 0x87 ;) (func (export "i64x2.shl") v128.const i32x4 1 1 1 1 i32.const 0 i64x2.shl drop)
  (; 0xfd 0x88 ;) (func (export "i64x2.shr_s") v128.const i32x4 1 1 1 1 i32.const 0 i64x2.shr_s drop)
  (; 0xfd 0x89 ;) (func (export "i64x2.shr_u") v128.const i32x4 1 1 1 1 i32.const 0 i64x2.shr_u drop)
  (; 0xfd 0x8a ;) (func (export "i64x2.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i64x2.add drop)
  (; 0xfd 0x8d ;) (func (export "i64x2.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i64x2.sub drop)
  (; 0xfd 0x95 ;) (func (export "f32x4.abs") v128.const i32x4 1 1 1 1 f32x4.abs drop)
  (; 0xfd 0x96 ;) (func (export "f32x4.neg") v128.const i32x4 1 1 1 1 f32x4.neg drop)
  (; 0xfd 0x97 ;) (func (export "f32x4.sqrt") v128.const i32x4 1 1 1 1 f32x4.sqrt drop)
  (; 0xfd 0x9a ;) (func (export "f32x4.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.add drop)
  (; 0xfd 0x9b ;) (func (export "f32x4.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.sub drop)
  (; 0xfd 0x9c ;) (func (export "f32x4.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.mul drop)
  (; 0xfd 0x9d ;) (func (export "f32x4.div") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.div drop)
  (; 0xfd 0x9e ;) (func (export "f32x4.min") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.min drop)
  (; 0xfd 0x9f ;) (func (export "f32x4.max") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.max drop)
  (; 0xfd 0xa0 ;) (func (export "f64x2.abs") v128.const i32x4 1 1 1 1 f64x2.abs drop)
  (; 0xfd 0xa1 ;) (func (export "f64x2.neg") v128.const i32x4 1 1 1 1 f64x2.neg drop)
  (; 0xfd 0xa2 ;) (func (export "f64x2.sqrt") v128.const i32x4 1 1 1 1 f64x2.sqrt drop)
  (; 0xfd 0xa5 ;) (func (export "f64x2.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.add drop)
  (; 0xfd 0xa6 ;) (func (export "f64x2.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.sub drop)
  (; 0xfd 0xa7 ;) (func (export "f64x2.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.mul drop)
  (; 0xfd 0xa8 ;) (func (export "f64x2.div") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.div drop)
  (; 0xfd 0xa9 ;) (func (export "f64x2.min") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.min drop)
  (; 0xfd 0xaa ;) (func (export "f64x2.max") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.max drop)
  (; 0xfd 0xab ;) (func (export "i32x4.trunc_sat_f32x4_s") v128.const i32x4 1 1 1 1 i32x4.trunc_sat_f32x4_s drop)
  (; 0xfd 0xac ;) (func (export "i32x4.trunc_sat_f32x4_u") v128.const i32x4 1 1 1 1 i32x4.trunc_sat_f32x4_u drop)
  (; 0xfd 0xad ;) (func (export "i64x2.trunc_sat_f64x2_s") v128.const i32x4 1 1 1 1 i64x2.trunc_sat_f64x2_s drop)
  (; 0xfd 0xae ;) (func (export "i64x2.trunc_sat_f64x2_u") v128.const i32x4 1 1 1 1 i64x2.trunc_sat_f64x2_u drop)
  (; 0xfd 0xaf ;) (func (export "f32x4.convert_i32x4_s") v128.const i32x4 1 1 1 1 f32x4.convert_i32x4_s drop)
  (; 0xfd 0xb0 ;) (func (export "f32x4.convert_i32x4_u") v128.const i32x4 1 1 1 1 f32x4.convert_i32x4_u drop)
  (; 0xfd 0xb1 ;) (func (export "f64x2.convert_i64x2_s") v128.const i32x4 1 1 1 1 f64x2.convert_i64x2_s drop)
  (; 0xfd 0xb2 ;) (func (export "f64x2.convert_i64x2_u") v128.const i32x4 1 1 1 1 f64x2.convert_i64x2_u drop)
  (; 0xfd 0xc0 ;) (func (export "v8x16.swizzle") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v8x16.swizzle drop)
  (; 0xfd 0xc1 ;) (func (export "v8x16.shuffle") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v8x16.shuffle 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 drop)
  (; 0xfd 0xc2 ;) (func (export "i8x16.load_splat") i32.const 1 i8x16.load_splat drop)
  (; 0xfd 0xc3 ;) (func (export "i16x8.load_splat") i32.const 1 i16x8.load_splat drop)
  (; 0xfd 0xc4 ;) (func (export "i32x4.load_splat") i32.const 1 i32x4.load_splat drop)
  (; 0xfd 0xc5 ;) (func (export "i64x2.load_splat") i32.const 1 i64x2.load_splat drop)
  (; 0xfd 0xc6 ;) (func (export "i8x16.narrow_i16x8_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.narrow_i16x8_s drop)
  (; 0xfd 0xc7 ;) (func (export "i8x16.narrow_i16x8_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.narrow_i16x8_u drop)
  (; 0xfd 0xc8 ;) (func (export "i16x8.narrow_i32x4_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.narrow_i32x4_s drop)
  (; 0xfd 0xc9 ;) (func (export "i16x8.narrow_i32x4_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.narrow_i32x4_u drop)
  (; 0xfd 0xca ;) (func (export "i16x8.widen_low_i8x16_s") v128.const i32x4 1 1 1 1 i16x8.widen_low_i8x16_s drop)
  (; 0xfd 0xcb ;) (func (export "i16x8.widen_high_i8x16_s") v128.const i32x4 1 1 1 1 i16x8.widen_high_i8x16_s drop)
  (; 0xfd 0xcc ;) (func (export "i16x8.widen_low_i8x16_u") v128.const i32x4 1 1 1 1 i16x8.widen_low_i8x16_u drop)
  (; 0xfd 0xcd ;) (func (export "i16x8.widen_high_i8x16_u") v128.const i32x4 1 1 1 1 i16x8.widen_high_i8x16_u drop)
  (; 0xfd 0xce ;) (func (export "i32x4.widen_low_i16x8_s") v128.const i32x4 1 1 1 1 i32x4.widen_low_i16x8_s drop)
  (; 0xfd 0xcf ;) (func (export "i32x4.widen_high_i16x8_s") v128.const i32x4 1 1 1 1 i32x4.widen_high_i16x8_s drop)
  (; 0xfd 0xd0 ;) (func (export "i32x4.widen_low_i16x8_u") v128.const i32x4 1 1 1 1 i32x4.widen_low_i16x8_u drop)
  (; 0xfd 0xd1 ;) (func (export "i32x4.widen_high_i16x8_u") v128.const i32x4 1 1 1 1 i32x4.widen_high_i16x8_u drop)

  ;; --enable-threads
  (; 0xfe 0x00 ;) (func (export "atomic.notify") i32.const 1 i32.const 2 atomic.notify offset=3 drop)
  (; 0xfe 0x01 ;) (func (export "i32.atomic.wait") i32.const 1 i32.const 2 i64.const 3 i32.atomic.wait offset=3 drop)
  (; 0xfe 0x02 ;) (func (export "i64.atomic.wait") i32.const 1 i64.const 2 i64.const 3 i64.atomic.wait offset=3 drop)
  (; 0xfe 0x10 ;) (func (export "i32.atomic.load") i32.const 1 i32.atomic.load offset=3 drop)
  (; 0xfe 0x11 ;) (func (export "i64.atomic.load") i32.const 1 i64.atomic.load offset=7 drop)
  (; 0xfe 0x12 ;) (func (export "i32.atomic.load8_u") i32.const 1 i32.atomic.load8_u offset=3 drop)
  (; 0xfe 0x13 ;) (func (export "i32.atomic.load16_u") i32.const 1 i32.atomic.load16_u offset=3 drop)
  (; 0xfe 0x14 ;) (func (export "i64.atomic.load8_u") i32.const 1 i64.atomic.load8_u offset=3 drop)
  (; 0xfe 0x15 ;) (func (export "i64.atomic.load16_u") i32.const 1 i64.atomic.load16_u offset=3 drop)
  (; 0xfe 0x16 ;) (func (export "i64.atomic.load32_u") i32.const 1 i64.atomic.load32_u offset=3 drop)
  (; 0xfe 0x17 ;) (func (export "i32.atomic.store") i32.const 1 i32.const 2 i32.atomic.store offset=3)
  (; 0xfe 0x18 ;) (func (export "i64.atomic.store") i32.const 1 i64.const 2 i64.atomic.store offset=7)
  (; 0xfe 0x19 ;) (func (export "i32.atomic.store8") i32.const 1 i32.const 2 i32.atomic.store8 offset=3)
  (; 0xfe 0x1a ;) (func (export "i32.atomic.store16") i32.const 1 i32.const 2 i32.atomic.store16 offset=3)
  (; 0xfe 0x1b ;) (func (export "i64.atomic.store8") i32.const 1 i64.const 2 i64.atomic.store8 offset=3)
  (; 0xfe 0x1c ;) (func (export "i64.atomic.store16") i32.const 1 i64.const 2 i64.atomic.store16 offset=3)
  (; 0xfe 0x1d ;) (func (export "i64.atomic.store32") i32.const 1 i64.const 2 i64.atomic.store32 offset=3)
  (; 0xfe 0x1e ;) (func (export "i32.atomic.rmw.add") i32.const 1 i32.const 2 i32.atomic.rmw.add offset=3 drop)
  (; 0xfe 0x1f ;) (func (export "i64.atomic.rmw.add") i32.const 1 i64.const 2 i64.atomic.rmw.add offset=7 drop)
  (; 0xfe 0x20 ;) (func (export "i32.atomic.rmw8.add_u") i32.const 1 i32.const 2 i32.atomic.rmw8.add_u offset=3 drop)
  (; 0xfe 0x21 ;) (func (export "i32.atomic.rmw16.add_u") i32.const 1 i32.const 2 i32.atomic.rmw16.add_u offset=3 drop)
  (; 0xfe 0x22 ;) (func (export "i64.atomic.rmw8.add_u") i32.const 1 i64.const 2 i64.atomic.rmw8.add_u offset=3 drop)
  (; 0xfe 0x23 ;) (func (export "i64.atomic.rmw16.add_u") i32.const 1 i64.const 2 i64.atomic.rmw16.add_u offset=3 drop)
  (; 0xfe 0x24 ;) (func (export "i64.atomic.rmw32.add_u") i32.const 1 i64.const 2 i64.atomic.rmw32.add_u offset=3 drop)
  (; 0xfe 0x25 ;) (func (export "i32.atomic.rmw.sub") i32.const 1 i32.const 2 i32.atomic.rmw.sub offset=3 drop)
  (; 0xfe 0x26 ;) (func (export "i64.atomic.rmw.sub") i32.const 1 i64.const 2 i64.atomic.rmw.sub offset=7 drop)
  (; 0xfe 0x27 ;) (func (export "i32.atomic.rmw8.sub_u") i32.const 1 i32.const 2 i32.atomic.rmw8.sub_u offset=3 drop)
  (; 0xfe 0x28 ;) (func (export "i32.atomic.rmw16.sub_u") i32.const 1 i32.const 2 i32.atomic.rmw16.sub_u offset=3 drop)
  (; 0xfe 0x29 ;) (func (export "i64.atomic.rmw8.sub_u") i32.const 1 i64.const 2 i64.atomic.rmw8.sub_u offset=3 drop)
  (; 0xfe 0x2a ;) (func (export "i64.atomic.rmw16.sub_u") i32.const 1 i64.const 2 i64.atomic.rmw16.sub_u offset=3 drop)
  (; 0xfe 0x2b ;) (func (export "i64.atomic.rmw32.sub_u") i32.const 1 i64.const 2 i64.atomic.rmw32.sub_u offset=3 drop)
  (; 0xfe 0x2c ;) (func (export "i32.atomic.rmw.and") i32.const 1 i32.const 2 i32.atomic.rmw.and offset=3 drop)
  (; 0xfe 0x2d ;) (func (export "i64.atomic.rmw.and") i32.const 1 i64.const 2 i64.atomic.rmw.and offset=7 drop)
  (; 0xfe 0x2e ;) (func (export "i32.atomic.rmw8.and_u") i32.const 1 i32.const 2 i32.atomic.rmw8.and_u offset=3 drop)
  (; 0xfe 0x2f ;) (func (export "i32.atomic.rmw16.and_u") i32.const 1 i32.const 2 i32.atomic.rmw16.and_u offset=3 drop)
  (; 0xfe 0x30 ;) (func (export "i64.atomic.rmw8.and_u") i32.const 1 i64.const 2 i64.atomic.rmw8.and_u offset=3 drop)
  (; 0xfe 0x31 ;) (func (export "i64.atomic.rmw16.and_u") i32.const 1 i64.const 2 i64.atomic.rmw16.and_u offset=3 drop)
  (; 0xfe 0x32 ;) (func (export "i64.atomic.rmw32.and_u") i32.const 1 i64.const 2 i64.atomic.rmw32.and_u offset=3 drop)
  (; 0xfe 0x33 ;) (func (export "i32.atomic.rmw.or") i32.const 1 i32.const 2 i32.atomic.rmw.or offset=3 drop)
  (; 0xfe 0x34 ;) (func (export "i64.atomic.rmw.or") i32.const 1 i64.const 2 i64.atomic.rmw.or offset=7 drop)
  (; 0xfe 0x35 ;) (func (export "i32.atomic.rmw8.or_u") i32.const 1 i32.const 2 i32.atomic.rmw8.or_u offset=3 drop)
  (; 0xfe 0x36 ;) (func (export "i32.atomic.rmw16.or_u") i32.const 1 i32.const 2 i32.atomic.rmw16.or_u offset=3 drop)
  (; 0xfe 0x37 ;) (func (export "i64.atomic.rmw8.or_u") i32.const 1 i64.const 2 i64.atomic.rmw8.or_u offset=3 drop)
  (; 0xfe 0x38 ;) (func (export "i64.atomic.rmw16.or_u") i32.const 1 i64.const 2 i64.atomic.rmw16.or_u offset=3 drop)
  (; 0xfe 0x39 ;) (func (export "i64.atomic.rmw32.or_u") i32.const 1 i64.const 2 i64.atomic.rmw32.or_u offset=3 drop)
  (; 0xfe 0x3a ;) (func (export "i32.atomic.rmw.xor") i32.const 1 i32.const 2 i32.atomic.rmw.xor offset=3 drop)
  (; 0xfe 0x3b ;) (func (export "i64.atomic.rmw.xor") i32.const 1 i64.const 2 i64.atomic.rmw.xor offset=7 drop)
  (; 0xfe 0x3c ;) (func (export "i32.atomic.rmw8.xor_u") i32.const 1 i32.const 2 i32.atomic.rmw8.xor_u offset=3 drop)
  (; 0xfe 0x3d ;) (func (export "i32.atomic.rmw16.xor_u") i32.const 1 i32.const 2 i32.atomic.rmw16.xor_u offset=3 drop)
  (; 0xfe 0x3e ;) (func (export "i64.atomic.rmw8.xor_u") i32.const 1 i64.const 2 i64.atomic.rmw8.xor_u offset=3 drop)
  (; 0xfe 0x3f ;) (func (export "i64.atomic.rmw16.xor_u") i32.const 1 i64.const 2 i64.atomic.rmw16.xor_u offset=3 drop)
  (; 0xfe 0x40 ;) (func (export "i64.atomic.rmw32.xor_u") i32.const 1 i64.const 2 i64.atomic.rmw32.xor_u offset=3 drop)
  (; 0xfe 0x41 ;) (func (export "i32.atomic.rmw.xchg") i32.const 1 i32.const 2 i32.atomic.rmw.xchg offset=3 drop)
  (; 0xfe 0x42 ;) (func (export "i64.atomic.rmw.xchg") i32.const 1 i64.const 2 i64.atomic.rmw.xchg offset=7 drop)
  (; 0xfe 0x43 ;) (func (export "i32.atomic.rmw8.xchg_u") i32.const 1 i32.const 2 i32.atomic.rmw8.xchg_u offset=3 drop)
  (; 0xfe 0x44 ;) (func (export "i32.atomic.rmw16.xchg_u") i32.const 1 i32.const 2 i32.atomic.rmw16.xchg_u offset=3 drop)
  (; 0xfe 0x45 ;) (func (export "i64.atomic.rmw8.xchg_u") i32.const 1 i64.const 2 i64.atomic.rmw8.xchg_u offset=3 drop)
  (; 0xfe 0x46 ;) (func (export "i64.atomic.rmw16.xchg_u") i32.const 1 i64.const 2 i64.atomic.rmw16.xchg_u offset=3 drop)
  (; 0xfe 0x47 ;) (func (export "i64.atomic.rmw32.xchg_u") i32.const 1 i64.const 2 i64.atomic.rmw32.xchg_u offset=3 drop)

  (; 0xfe 0x48 ;) (func (export "i32.atomic.rmw.cmpxchg") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw.cmpxchg offset=3 drop)
  (; 0xfe 0x49 ;) (func (export "i64.atomic.rmw.cmpxchg") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw.cmpxchg offset=7 drop)
  (; 0xfe 0x4a ;) (func (export "i32.atomic.rmw8.cmpxchg_u") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw8.cmpxchg_u offset=3 drop)
  (; 0xfe 0x4b ;) (func (export "i32.atomic.rmw16.cmpxchg_u") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw16.cmpxchg_u offset=3 drop)
  (; 0xfe 0x4c ;) (func (export "i64.atomic.rmw8.cmpxchg_u") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw8.cmpxchg_u offset=3 drop)
  (; 0xfe 0x4d ;) (func (export "i64.atomic.rmw16.cmpxchg_u") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw16.cmpxchg_u offset=3 drop)
  (; 0xfe 0x4e ;) (func (export "i64.atomic.rmw32.cmpxchg_u") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw32.cmpxchg_u offset=3 drop)
)

(;; STDOUT ;;;
0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 02                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 00                                        ; num params
000000d: 00                                        ; num results
; type 1
000000e: 60                                        ; func
000000f: 01                                        ; num params
0000010: 7f                                        ; i32
0000011: 00                                        ; num results
0000009: 08                                        ; FIXUP section size
; section "Import" (2)
0000012: 02                                        ; section code
0000013: 00                                        ; section size (guess)
0000014: 01                                        ; num imports
; import header 0
0000015: 04                                        ; string length
0000016: 686f 7374                                host  ; import module name
000001a: 05                                        ; string length
000001b: 7072 696e 74                             print  ; import field name
0000020: 00                                        ; import kind
0000021: 01                                        ; import signature index
0000013: 0e                                        ; FIXUP section size
; section "Function" (3)
0000022: 03                                        ; section code
0000023: 00                                        ; section size (guess)
0000024: a103                                      ; num functions
0000026: 00                                        ; function 0 signature index
0000027: 00                                        ; function 1 signature index
0000028: 00                                        ; function 2 signature index
0000029: 00                                        ; function 3 signature index
000002a: 00                                        ; function 4 signature index
000002b: 00                                        ; function 5 signature index
000002c: 00                                        ; function 6 signature index
000002d: 00                                        ; function 7 signature index
000002e: 00                                        ; function 8 signature index
000002f: 00                                        ; function 9 signature index
0000030: 00                                        ; function 10 signature index
0000031: 00                                        ; function 11 signature index
0000032: 00                                        ; function 12 signature index
0000033: 00                                        ; function 13 signature index
0000034: 00                                        ; function 14 signature index
0000035: 00                                        ; function 15 signature index
0000036: 00                                        ; function 16 signature index
0000037: 00                                        ; function 17 signature index
0000038: 00                                        ; function 18 signature index
0000039: 00                                        ; function 19 signature index
000003a: 00                                        ; function 20 signature index
000003b: 00                                        ; function 21 signature index
000003c: 00                                        ; function 22 signature index
000003d: 00                                        ; function 23 signature index
000003e: 00                                        ; function 24 signature index
000003f: 00                                        ; function 25 signature index
0000040: 00                                        ; function 26 signature index
0000041: 00                                        ; function 27 signature index
0000042: 00                                        ; function 28 signature index
0000043: 00                                        ; function 29 signature index
0000044: 00                                        ; function 30 signature index
0000045: 00                                        ; function 31 signature index
0000046: 00                                        ; function 32 signature index
0000047: 00                                        ; function 33 signature index
0000048: 00                                        ; function 34 signature index
0000049: 00                                        ; function 35 signature index
000004a: 00                                        ; function 36 signature index
000004b: 00                                        ; function 37 signature index
000004c: 00                                        ; function 38 signature index
000004d: 00                                        ; function 39 signature index
000004e: 00                                        ; function 40 signature index
000004f: 00                                        ; function 41 signature index
0000050: 00                                        ; function 42 signature index
0000051: 00                                        ; function 43 signature index
0000052: 00                                        ; function 44 signature index
0000053: 00                                        ; function 45 signature index
0000054: 00                                        ; function 46 signature index
0000055: 00                                        ; function 47 signature index
0000056: 00                                        ; function 48 signature index
0000057: 00                                        ; function 49 signature index
0000058: 00                                        ; function 50 signature index
0000059: 00                                        ; function 51 signature index
000005a: 00                                        ; function 52 signature index
000005b: 00                                        ; function 53 signature index
000005c: 00                                        ; function 54 signature index
000005d: 00                                        ; function 55 signature index
000005e: 00                                        ; function 56 signature index
000005f: 00                                        ; function 57 signature index
0000060: 00                                        ; function 58 signature index
0000061: 00                                        ; function 59 signature index
0000062: 00                                        ; function 60 signature index
0000063: 00                                        ; function 61 signature index
0000064: 00                                        ; function 62 signature index
0000065: 00                                        ; function 63 signature index
0000066: 00                                        ; function 64 signature index
0000067: 00                                        ; function 65 signature index
0000068: 00                                        ; function 66 signature index
0000069: 00                                        ; function 67 signature index
000006a: 00                                        ; function 68 signature index
000006b: 00                                        ; function 69 signature index
000006c: 00                                        ; function 70 signature index
000006d: 00                                        ; function 71 signature index
000006e: 00                                        ; function 72 signature index
000006f: 00                                        ; function 73 signature index
0000070: 00                                        ; function 74 signature index
0000071: 00                                        ; function 75 signature index
0000072: 00                                        ; function 76 signature index
0000073: 00                                        ; function 77 signature index
0000074: 00                                        ; function 78 signature index
0000075: 00                                        ; function 79 signature index
0000076: 00                                        ; function 80 signature index
0000077: 00                                        ; function 81 signature index
0000078: 00                                        ; function 82 signature index
0000079: 00                                        ; function 83 signature index
000007a: 00                                        ; function 84 signature index
000007b: 00                                        ; function 85 signature index
000007c: 00                                        ; function 86 signature index
000007d: 00                                        ; function 87 signature index
000007e: 00                                        ; function 88 signature index
000007f: 00                                        ; function 89 signature index
0000080: 00                                        ; function 90 signature index
0000081: 00                                        ; function 91 signature index
0000082: 00                                        ; function 92 signature index
0000083: 00                                        ; function 93 signature index
0000084: 00                                        ; function 94 signature index
0000085: 00                                        ; function 95 signature index
0000086: 00                                        ; function 96 signature index
0000087: 00                                        ; function 97 signature index
0000088: 00                                        ; function 98 signature index
0000089: 00                                        ; function 99 signature index
000008a: 00                                        ; function 100 signature index
000008b: 00                                        ; function 101 signature index
000008c: 00                                        ; function 102 signature index
000008d: 00                                        ; function 103 signature index
000008e: 00                                        ; function 104 signature index
000008f: 00                                        ; function 105 signature index
0000090: 00                                        ; function 106 signature index
0000091: 00                                        ; function 107 signature index
0000092: 00                                        ; function 108 signature index
0000093: 00                                        ; function 109 signature index
0000094: 00                                        ; function 110 signature index
0000095: 00                                        ; function 111 signature index
0000096: 00                                        ; function 112 signature index
0000097: 00                                        ; function 113 signature index
0000098: 00                                        ; function 114 signature index
0000099: 00                                        ; function 115 signature index
000009a: 00                                        ; function 116 signature index
000009b: 00                                        ; function 117 signature index
000009c: 00                                        ; function 118 signature index
000009d: 00                                        ; function 119 signature index
000009e: 00                                        ; function 120 signature index
000009f: 00                                        ; function 121 signature index
00000a0: 00                                        ; function 122 signature index
00000a1: 00                                        ; function 123 signature index
00000a2: 00                                        ; function 124 signature index
00000a3: 00                                        ; function 125 signature index
00000a4: 00                                        ; function 126 signature index
00000a5: 00                                        ; function 127 signature index
00000a6: 00                                        ; function 128 signature index
00000a7: 00                                        ; function 129 signature index
00000a8: 00                                        ; function 130 signature index
00000a9: 00                                        ; function 131 signature index
00000aa: 00                                        ; function 132 signature index
00000ab: 00                                        ; function 133 signature index
00000ac: 00                                        ; function 134 signature index
00000ad: 00                                        ; function 135 signature index
00000ae: 00                                        ; function 136 signature index
00000af: 00                                        ; function 137 signature index
00000b0: 00                                        ; function 138 signature index
00000b1: 00                                        ; function 139 signature index
00000b2: 00                                        ; function 140 signature index
00000b3: 00                                        ; function 141 signature index
00000b4: 00                                        ; function 142 signature index
00000b5: 00                                        ; function 143 signature index
00000b6: 00                                        ; function 144 signature index
00000b7: 00                                        ; function 145 signature index
00000b8: 00                                        ; function 146 signature index
00000b9: 00                                        ; function 147 signature index
00000ba: 00                                        ; function 148 signature index
00000bb: 00                                        ; function 149 signature index
00000bc: 00                                        ; function 150 signature index
00000bd: 00                                        ; function 151 signature index
00000be: 00                                        ; function 152 signature index
00000bf: 00                                        ; function 153 signature index
00000c0: 00                                        ; function 154 signature index
00000c1: 00                                        ; function 155 signature index
00000c2: 00                                        ; function 156 signature index
00000c3: 00                                        ; function 157 signature index
00000c4: 00                                        ; function 158 signature index
00000c5: 00                                        ; function 159 signature index
00000c6: 00                                        ; function 160 signature index
00000c7: 00                                        ; function 161 signature index
00000c8: 00                                        ; function 162 signature index
00000c9: 00                                        ; function 163 signature index
00000ca: 00                                        ; function 164 signature index
00000cb: 00                                        ; function 165 signature index
00000cc: 00                                        ; function 166 signature index
00000cd: 00                                        ; function 167 signature index
00000ce: 00                                        ; function 168 signature index
00000cf: 00                                        ; function 169 signature index
00000d0: 00                                        ; function 170 signature index
00000d1: 00                                        ; function 171 signature index
00000d2: 00                                        ; function 172 signature index
00000d3: 00                                        ; function 173 signature index
00000d4: 00                                        ; function 174 signature index
00000d5: 00                                        ; function 175 signature index
00000d6: 00                                        ; function 176 signature index
00000d7: 00                                        ; function 177 signature index
00000d8: 00                                        ; function 178 signature index
00000d9: 00                                        ; function 179 signature index
00000da: 00                                        ; function 180 signature index
00000db: 00                                        ; function 181 signature index
00000dc: 00                                        ; function 182 signature index
00000dd: 00                                        ; function 183 signature index
00000de: 00                                        ; function 184 signature index
00000df: 00                                        ; function 185 signature index
00000e0: 00                                        ; function 186 signature index
00000e1: 00                                        ; function 187 signature index
00000e2: 00                                        ; function 188 signature index
00000e3: 00                                        ; function 189 signature index
00000e4: 00                                        ; function 190 signature index
00000e5: 00                                        ; function 191 signature index
00000e6: 00                                        ; function 192 signature index
00000e7: 00                                        ; function 193 signature index
00000e8: 00                                        ; function 194 signature index
00000e9: 00                                        ; function 195 signature index
00000ea: 00                                        ; function 196 signature index
00000eb: 00                                        ; function 197 signature index
00000ec: 00                                        ; function 198 signature index
00000ed: 00                                        ; function 199 signature index
00000ee: 00                                        ; function 200 signature index
00000ef: 00                                        ; function 201 signature index
00000f0: 00                                        ; function 202 signature index
00000f1: 00                                        ; function 203 signature index
00000f2: 00                                        ; function 204 signature index
00000f3: 00                                        ; function 205 signature index
00000f4: 00                                        ; function 206 signature index
00000f5: 00                                        ; function 207 signature index
00000f6: 00                                        ; function 208 signature index
00000f7: 00                                        ; function 209 signature index
00000f8: 00                                        ; function 210 signature index
00000f9: 00                                        ; function 211 signature index
00000fa: 00                                        ; function 212 signature index
00000fb: 00                                        ; function 213 signature index
00000fc: 00                                        ; function 214 signature index
00000fd: 00                                        ; function 215 signature index
00000fe: 00                                        ; function 216 signature index
00000ff: 00                                        ; function 217 signature index
0000100: 00                                        ; function 218 signature index
0000101: 00                                        ; function 219 signature index
0000102: 00                                        ; function 220 signature index
0000103: 00                                        ; function 221 signature index
0000104: 00                                        ; function 222 signature index
0000105: 00                                        ; function 223 signature index
0000106: 00                                        ; function 224 signature index
0000107: 00                                        ; function 225 signature index
0000108: 00                                        ; function 226 signature index
0000109: 00                                        ; function 227 signature index
000010a: 00                                        ; function 228 signature index
000010b: 00                                        ; function 229 signature index
000010c: 00                                        ; function 230 signature index
000010d: 00                                        ; function 231 signature index
000010e: 00                                        ; function 232 signature index
000010f: 00                                        ; function 233 signature index
0000110: 00                                        ; function 234 signature index
0000111: 00                                        ; function 235 signature index
0000112: 00                                        ; function 236 signature index
0000113: 00                                        ; function 237 signature index
0000114: 00                                        ; function 238 signature index
0000115: 00                                        ; function 239 signature index
0000116: 00                                        ; function 240 signature index
0000117: 00                                        ; function 241 signature index
0000118: 00                                        ; function 242 signature index
0000119: 00                                        ; function 243 signature index
000011a: 00                                        ; function 244 signature index
000011b: 00                                        ; function 245 signature index
000011c: 00                                        ; function 246 signature index
000011d: 00                                        ; function 247 signature index
000011e: 00                                        ; function 248 signature index
000011f: 00                                        ; function 249 signature index
0000120: 00                                        ; function 250 signature index
0000121: 00                                        ; function 251 signature index
0000122: 00                                        ; function 252 signature index
0000123: 00                                        ; function 253 signature index
0000124: 00                                        ; function 254 signature index
0000125: 00                                        ; function 255 signature index
0000126: 00                                        ; function 256 signature index
0000127: 00                                        ; function 257 signature index
0000128: 00                                        ; function 258 signature index
0000129: 00                                        ; function 259 signature index
000012a: 00                                        ; function 260 signature index
000012b: 00                                        ; function 261 signature index
000012c: 00                                        ; function 262 signature index
000012d: 00                                        ; function 263 signature index
000012e: 00                                        ; function 264 signature index
000012f: 00                                        ; function 265 signature index
0000130: 00                                        ; function 266 signature index
0000131: 00                                        ; function 267 signature index
0000132: 00                                        ; function 268 signature index
0000133: 00                                        ; function 269 signature index
0000134: 00                                        ; function 270 signature index
0000135: 00                                        ; function 271 signature index
0000136: 00                                        ; function 272 signature index
0000137: 00                                        ; function 273 signature index
0000138: 00                                        ; function 274 signature index
0000139: 00                                        ; function 275 signature index
000013a: 00                                        ; function 276 signature index
000013b: 00                                        ; function 277 signature index
000013c: 00                                        ; function 278 signature index
000013d: 00                                        ; function 279 signature index
000013e: 00                                        ; function 280 signature index
000013f: 00                                        ; function 281 signature index
0000140: 00                                        ; function 282 signature index
0000141: 00                                        ; function 283 signature index
0000142: 00                                        ; function 284 signature index
0000143: 00                                        ; function 285 signature index
0000144: 00                                        ; function 286 signature index
0000145: 00                                        ; function 287 signature index
0000146: 00                                        ; function 288 signature index
0000147: 00                                        ; function 289 signature index
0000148: 00                                        ; function 290 signature index
0000149: 00                                        ; function 291 signature index
000014a: 00                                        ; function 292 signature index
000014b: 00                                        ; function 293 signature index
000014c: 00                                        ; function 294 signature index
000014d: 00                                        ; function 295 signature index
000014e: 00                                        ; function 296 signature index
000014f: 00                                        ; function 297 signature index
0000150: 00                                        ; function 298 signature index
0000151: 00                                        ; function 299 signature index
0000152: 00                                        ; function 300 signature index
0000153: 00                                        ; function 301 signature index
0000154: 00                                        ; function 302 signature index
0000155: 00                                        ; function 303 signature index
0000156: 00                                        ; function 304 signature index
0000157: 00                                        ; function 305 signature index
0000158: 00                                        ; function 306 signature index
0000159: 00                                        ; function 307 signature index
000015a: 00                                        ; function 308 signature index
000015b: 00                                        ; function 309 signature index
000015c: 00                                        ; function 310 signature index
000015d: 00                                        ; function 311 signature index
000015e: 00                                        ; function 312 signature index
000015f: 00                                        ; function 313 signature index
0000160: 00                                        ; function 314 signature index
0000161: 00                                        ; function 315 signature index
0000162: 00                                        ; function 316 signature index
0000163: 00                                        ; function 317 signature index
0000164: 00                                        ; function 318 signature index
0000165: 00                                        ; function 319 signature index
0000166: 00                                        ; function 320 signature index
0000167: 00                                        ; function 321 signature index
0000168: 00                                        ; function 322 signature index
0000169: 00                                        ; function 323 signature index
000016a: 00                                        ; function 324 signature index
000016b: 00                                        ; function 325 signature index
000016c: 00                                        ; function 326 signature index
000016d: 00                                        ; function 327 signature index
000016e: 00                                        ; function 328 signature index
000016f: 00                                        ; function 329 signature index
0000170: 00                                        ; function 330 signature index
0000171: 00                                        ; function 331 signature index
0000172: 00                                        ; function 332 signature index
0000173: 00                                        ; function 333 signature index
0000174: 00                                        ; function 334 signature index
0000175: 00                                        ; function 335 signature index
0000176: 00                                        ; function 336 signature index
0000177: 00                                        ; function 337 signature index
0000178: 00                                        ; function 338 signature index
0000179: 00                                        ; function 339 signature index
000017a: 00                                        ; function 340 signature index
000017b: 00                                        ; function 341 signature index
000017c: 00                                        ; function 342 signature index
000017d: 00                                        ; function 343 signature index
000017e: 00                                        ; function 344 signature index
000017f: 00                                        ; function 345 signature index
0000180: 00                                        ; function 346 signature index
0000181: 00                                        ; function 347 signature index
0000182: 00                                        ; function 348 signature index
0000183: 00                                        ; function 349 signature index
0000184: 00                                        ; function 350 signature index
0000185: 00                                        ; function 351 signature index
0000186: 00                                        ; function 352 signature index
0000187: 00                                        ; function 353 signature index
0000188: 00                                        ; function 354 signature index
0000189: 00                                        ; function 355 signature index
000018a: 00                                        ; function 356 signature index
000018b: 00                                        ; function 357 signature index
000018c: 00                                        ; function 358 signature index
000018d: 00                                        ; function 359 signature index
000018e: 00                                        ; function 360 signature index
000018f: 00                                        ; function 361 signature index
0000190: 00                                        ; function 362 signature index
0000191: 00                                        ; function 363 signature index
0000192: 00                                        ; function 364 signature index
0000193: 00                                        ; function 365 signature index
0000194: 00                                        ; function 366 signature index
0000195: 00                                        ; function 367 signature index
0000196: 00                                        ; function 368 signature index
0000197: 00                                        ; function 369 signature index
0000198: 00                                        ; function 370 signature index
0000199: 00                                        ; function 371 signature index
000019a: 00                                        ; function 372 signature index
000019b: 00                                        ; function 373 signature index
000019c: 00                                        ; function 374 signature index
000019d: 00                                        ; function 375 signature index
000019e: 00                                        ; function 376 signature index
000019f: 00                                        ; function 377 signature index
00001a0: 00                                        ; function 378 signature index
00001a1: 00                                        ; function 379 signature index
00001a2: 00                                        ; function 380 signature index
00001a3: 00                                        ; function 381 signature index
00001a4: 00                                        ; function 382 signature index
00001a5: 00                                        ; function 383 signature index
00001a6: 00                                        ; function 384 signature index
00001a7: 00                                        ; function 385 signature index
00001a8: 00                                        ; function 386 signature index
00001a9: 00                                        ; function 387 signature index
00001aa: 00                                        ; function 388 signature index
00001ab: 00                                        ; function 389 signature index
00001ac: 00                                        ; function 390 signature index
00001ad: 00                                        ; function 391 signature index
00001ae: 00                                        ; function 392 signature index
00001af: 00                                        ; function 393 signature index
00001b0: 00                                        ; function 394 signature index
00001b1: 00                                        ; function 395 signature index
00001b2: 00                                        ; function 396 signature index
00001b3: 00                                        ; function 397 signature index
00001b4: 00                                        ; function 398 signature index
00001b5: 00                                        ; function 399 signature index
00001b6: 00                                        ; function 400 signature index
00001b7: 00                                        ; function 401 signature index
00001b8: 00                                        ; function 402 signature index
00001b9: 00                                        ; function 403 signature index
00001ba: 00                                        ; function 404 signature index
00001bb: 00                                        ; function 405 signature index
00001bc: 00                                        ; function 406 signature index
00001bd: 00                                        ; function 407 signature index
00001be: 00                                        ; function 408 signature index
00001bf: 00                                        ; function 409 signature index
00001c0: 00                                        ; function 410 signature index
00001c1: 00                                        ; function 411 signature index
00001c2: 00                                        ; function 412 signature index
00001c3: 00                                        ; function 413 signature index
00001c4: 00                                        ; function 414 signature index
00001c5: 00                                        ; function 415 signature index
00001c6: 00                                        ; function 416 signature index
; move data: [24, 1c7) -> [25, 1c8)
0000023: a303                                      ; FIXUP section size
; section "Table" (4)
00001c8: 04                                        ; section code
00001c9: 00                                        ; section size (guess)
00001ca: 01                                        ; num tables
; table 0
00001cb: 70                                        ; funcref
00001cc: 01                                        ; limits: flags
00001cd: 02                                        ; limits: initial
00001ce: 02                                        ; limits: max
00001c9: 05                                        ; FIXUP section size
; section "Memory" (5)
00001cf: 05                                        ; section code
00001d0: 00                                        ; section size (guess)
00001d1: 01                                        ; num memories
; memory 0
00001d2: 03                                        ; limits: flags
00001d3: 01                                        ; limits: initial
00001d4: 01                                        ; limits: max
00001d0: 04                                        ; FIXUP section size
; section "Global" (6)
00001d5: 06                                        ; section code
00001d6: 00                                        ; section size (guess)
00001d7: 01                                        ; num globals
00001d8: 7f                                        ; i32
00001d9: 01                                        ; global mutability
00001da: 41                                        ; i32.const
00001db: 00                                        ; i32 literal
00001dc: 0b                                        ; end
00001d6: 06                                        ; FIXUP section size
; section "Export" (7)
00001dd: 07                                        ; section code
00001de: 00                                        ; section size (guess)
00001df: a003                                      ; num exports
00001e1: 0b                                        ; string length
00001e2: 756e 7265 6163 6861 626c 65              unreachable  ; export name
00001ed: 00                                        ; export kind
00001ee: 02                                        ; export func index
00001ef: 02                                        ; string length
00001f0: 6272                                     br  ; export name
00001f2: 00                                        ; export kind
00001f3: 03                                        ; export func index
00001f4: 08                                        ; string length
00001f5: 6272 5f74 6162 6c65                      br_table  ; export name
00001fd: 00                                        ; export kind
00001fe: 04                                        ; export func index
00001ff: 06                                        ; string length
0000200: 7265 7475 726e                           return  ; export name
0000206: 00                                        ; export kind
0000207: 05                                        ; export func index
0000208: 04                                        ; string length
0000209: 6361 6c6c                                call  ; export name
000020d: 00                                        ; export kind
000020e: 06                                        ; export func index
000020f: 0d                                        ; string length
0000210: 6361 6c6c 5f69 6e64 6972 6563 74         call_indirect  ; export name
000021d: 00                                        ; export kind
000021e: 07                                        ; export func index
000021f: 0b                                        ; string length
0000220: 7265 7475 726e 5f63 616c 6c              return_call  ; export name
000022b: 00                                        ; export kind
000022c: 08                                        ; export func index
000022d: 14                                        ; string length
000022e: 7265 7475 726e 5f63 616c 6c5f 696e 6469  return_call_indi
000023e: 7265 6374                                rect  ; export name
0000242: 00                                        ; export kind
0000243: 09                                        ; export func index
0000244: 04                                        ; string length
0000245: 6472 6f70                                drop  ; export name
0000249: 00                                        ; export kind
000024a: 0a                                        ; export func index
000024b: 06                                        ; string length
000024c: 7365 6c65 6374                           select  ; export name
0000252: 00                                        ; export kind
0000253: 0b                                        ; export func index
0000254: 08                                        ; string length
0000255: 7365 6c65 6374 5f74                      select_t  ; export name
000025d: 00                                        ; export kind
000025e: 0c                                        ; export func index
000025f: 09                                        ; string length
0000260: 6765 745f 6c6f 6361 6c                   get_local  ; export name
0000269: 00                                        ; export kind
000026a: 0d                                        ; export func index
000026b: 09                                        ; string length
000026c: 7365 745f 6c6f 6361 6c                   set_local  ; export name
0000275: 00                                        ; export kind
0000276: 0e                                        ; export func index
0000277: 09                                        ; string length
0000278: 7465 655f 6c6f 6361 6c                   tee_local  ; export name
0000281: 00                                        ; export kind
0000282: 0f                                        ; export func index
0000283: 0a                                        ; string length
0000284: 6765 745f 676c 6f62 616c                 get_global  ; export name
000028e: 00                                        ; export kind
000028f: 10                                        ; export func index
0000290: 0a                                        ; string length
0000291: 7365 745f 676c 6f62 616c                 set_global  ; export name
000029b: 00                                        ; export kind
000029c: 11                                        ; export func index
000029d: 08                                        ; string length
000029e: 6933 322e 6c6f 6164                      i32.load  ; export name
00002a6: 00                                        ; export kind
00002a7: 12                                        ; export func index
00002a8: 08                                        ; string length
00002a9: 6936 342e 6c6f 6164                      i64.load  ; export name
00002b1: 00                                        ; export kind
00002b2: 13                                        ; export func index
00002b3: 08                                        ; string length
00002b4: 6633 322e 6c6f 6164                      f32.load  ; export name
00002bc: 00                                        ; export kind
00002bd: 14                                        ; export func index
00002be: 08                                        ; string length
00002bf: 6636 342e 6c6f 6164                      f64.load  ; export name
00002c7: 00                                        ; export kind
00002c8: 15                                        ; export func index
00002c9: 0b                                        ; string length
00002ca: 6933 322e 6c6f 6164 385f 73              i32.load8_s  ; export name
00002d5: 00                                        ; export kind
00002d6: 16                                        ; export func index
00002d7: 0b                                        ; string length
00002d8: 6933 322e 6c6f 6164 385f 75              i32.load8_u  ; export name
00002e3: 00                                        ; export kind
00002e4: 17                                        ; export func index
00002e5: 0c                                        ; string length
00002e6: 6933 322e 6c6f 6164 3136 5f73            i32.load16_s  ; export name
00002f2: 00                                        ; export kind
00002f3: 18                                        ; export func index
00002f4: 0c                                        ; string length
00002f5: 6933 322e 6c6f 6164 3136 5f75            i32.load16_u  ; export name
0000301: 00                                        ; export kind
0000302: 19                                        ; export func index
0000303: 0b                                        ; string length
0000304: 6936 342e 6c6f 6164 385f 73              i64.load8_s  ; export name
000030f: 00                                        ; export kind
0000310: 1a                                        ; export func index
0000311: 0b                                        ; string length
0000312: 6936 342e 6c6f 6164 385f 75              i64.load8_u  ; export name
000031d: 00                                        ; export kind
000031e: 1b                                        ; export func index
000031f: 0c                                        ; string length
0000320: 6936 342e 6c6f 6164 3136 5f73            i64.load16_s  ; export name
000032c: 00                                        ; export kind
000032d: 1c                                        ; export func index
000032e: 0c                                        ; string length
000032f: 6936 342e 6c6f 6164 3136 5f75            i64.load16_u  ; export name
000033b: 00                                        ; export kind
000033c: 1d                                        ; export func index
000033d: 0c                                        ; string length
000033e: 6936 342e 6c6f 6164 3332 5f73            i64.load32_s  ; export name
000034a: 00                                        ; export kind
000034b: 1e                                        ; export func index
000034c: 0c                                        ; string length
000034d: 6936 342e 6c6f 6164 3332 5f75            i64.load32_u  ; export name
0000359: 00                                        ; export kind
000035a: 1f                                        ; export func index
000035b: 09                                        ; string length
000035c: 6933 322e 7374 6f72 65                   i32.store  ; export name
0000365: 00                                        ; export kind
0000366: 20                                        ; export func index
0000367: 09                                        ; string length
0000368: 6936 342e 7374 6f72 65                   i64.store  ; export name
0000371: 00                                        ; export kind
0000372: 21                                        ; export func index
0000373: 09                                        ; string length
0000374: 6633 322e 7374 6f72 65                   f32.store  ; export name
000037d: 00                                        ; export kind
000037e: 22                                        ; export func index
000037f: 09                                        ; string length
0000380: 6636 342e 7374 6f72 65                   f64.store  ; export name
0000389: 00                                        ; export kind
000038a: 23                                        ; export func index
000038b: 0a                                        ; string length
000038c: 6933 322e 7374 6f72 6538                 i32.store8  ; export name
0000396: 00                                        ; export kind
0000397: 24                                        ; export func index
0000398: 0b                                        ; string length
0000399: 6933 322e 7374 6f72 6531 36              i32.store16  ; export name
00003a4: 00                                        ; export kind
00003a5: 25                                        ; export func index
00003a6: 0a                                        ; string length
00003a7: 6936 342e 7374 6f72 6538                 i64.store8  ; export name
00003b1: 00                                        ; export kind
00003b2: 26                                        ; export func index
00003b3: 0b                                        ; string length
00003b4: 6936 342e 7374 6f72 6531 36              i64.store16  ; export name
00003bf: 00                                        ; export kind
00003c0: 27                                        ; export func index
00003c1: 0b                                        ; string length
00003c2: 6936 342e 7374 6f72 6533 32              i64.store32  ; export name
00003cd: 00                                        ; export kind
00003ce: 28                                        ; export func index
00003cf: 0e                                        ; string length
00003d0: 6375 7272 656e 745f 6d65 6d6f 7279       current_memory  ; export name
00003de: 00                                        ; export kind
00003df: 29                                        ; export func index
00003e0: 0b                                        ; string length
00003e1: 6772 6f77 5f6d 656d 6f72 79              grow_memory  ; export name
00003ec: 00                                        ; export kind
00003ed: 2a                                        ; export func index
00003ee: 09                                        ; string length
00003ef: 6933 322e 636f 6e73 74                   i32.const  ; export name
00003f8: 00                                        ; export kind
00003f9: 2b                                        ; export func index
00003fa: 09                                        ; string length
00003fb: 6936 342e 636f 6e73 74                   i64.const  ; export name
0000404: 00                                        ; export kind
0000405: 2c                                        ; export func index
0000406: 09                                        ; string length
0000407: 6633 322e 636f 6e73 74                   f32.const  ; export name
0000410: 00                                        ; export kind
0000411: 2d                                        ; export func index
0000412: 09                                        ; string length
0000413: 6636 342e 636f 6e73 74                   f64.const  ; export name
000041c: 00                                        ; export kind
000041d: 2e                                        ; export func index
000041e: 07                                        ; string length
000041f: 6933 322e 6571 7a                        i32.eqz  ; export name
0000426: 00                                        ; export kind
0000427: 2f                                        ; export func index
0000428: 06                                        ; string length
0000429: 6933 322e 6571                           i32.eq  ; export name
000042f: 00                                        ; export kind
0000430: 30                                        ; export func index
0000431: 06                                        ; string length
0000432: 6933 322e 6e65                           i32.ne  ; export name
0000438: 00                                        ; export kind
0000439: 31                                        ; export func index
000043a: 08                                        ; string length
000043b: 6933 322e 6c74 5f73                      i32.lt_s  ; export name
0000443: 00                                        ; export kind
0000444: 32                                        ; export func index
0000445: 08                                        ; string length
0000446: 6933 322e 6c74 5f75                      i32.lt_u  ; export name
000044e: 00                                        ; export kind
000044f: 33                                        ; export func index
0000450: 08                                        ; string length
0000451: 6933 322e 6774 5f73                      i32.gt_s  ; export name
0000459: 00                                        ; export kind
000045a: 34                                        ; export func index
000045b: 08                                        ; string length
000045c: 6933 322e 6774 5f75                      i32.gt_u  ; export name
0000464: 00                                        ; export kind
0000465: 35                                        ; export func index
0000466: 08                                        ; string length
0000467: 6933 322e 6c65 5f73                      i32.le_s  ; export name
000046f: 00                                        ; export kind
0000470: 36                                        ; export func index
0000471: 08                                        ; string length
0000472: 6933 322e 6c65 5f75                      i32.le_u  ; export name
000047a: 00                                        ; export kind
000047b: 37                                        ; export func index
000047c: 08                                        ; string length
000047d: 6933 322e 6765 5f73                      i32.ge_s  ; export name
0000485: 00                                        ; export kind
0000486: 38                                        ; export func index
0000487: 08                                        ; string length
0000488: 6933 322e 6765 5f75                      i32.ge_u  ; export name
0000490: 00                                        ; export kind
0000491: 39                                        ; export func index
0000492: 07                                        ; string length
0000493: 6936 342e 6571 7a                        i64.eqz  ; export name
000049a: 00                                        ; export kind
000049b: 3a                                        ; export func index
000049c: 06                                        ; string length
000049d: 6936 342e 6571                           i64.eq  ; export name
00004a3: 00                                        ; export kind
00004a4: 3b                                        ; export func index
00004a5: 06                                        ; string length
00004a6: 6936 342e 6e65                           i64.ne  ; export name
00004ac: 00                                        ; export kind
00004ad: 3c                                        ; export func index
00004ae: 08                                        ; string length
00004af: 6936 342e 6c74 5f73                      i64.lt_s  ; export name
00004b7: 00                                        ; export kind
00004b8: 3d                                        ; export func index
00004b9: 08                                        ; string length
00004ba: 6936 342e 6c74 5f75                      i64.lt_u  ; export name
00004c2: 00                                        ; export kind
00004c3: 3e                                        ; export func index
00004c4: 08                                        ; string length
00004c5: 6936 342e 6774 5f73                      i64.gt_s  ; export name
00004cd: 00                                        ; export kind
00004ce: 3f                                        ; export func index
00004cf: 08                                        ; string length
00004d0: 6936 342e 6774 5f75                      i64.gt_u  ; export name
00004d8: 00                                        ; export kind
00004d9: 40                                        ; export func index
00004da: 08                                        ; string length
00004db: 6936 342e 6c65 5f73                      i64.le_s  ; export name
00004e3: 00                                        ; export kind
00004e4: 41                                        ; export func index
00004e5: 08                                        ; string length
00004e6: 6936 342e 6c65 5f75                      i64.le_u  ; export name
00004ee: 00                                        ; export kind
00004ef: 42                                        ; export func index
00004f0: 08                                        ; string length
00004f1: 6936 342e 6765 5f73                      i64.ge_s  ; export name
00004f9: 00                                        ; export kind
00004fa: 43                                        ; export func index
00004fb: 08                                        ; string length
00004fc: 6936 342e 6765 5f75                      i64.ge_u  ; export name
0000504: 00                                        ; export kind
0000505: 44                                        ; export func index
0000506: 06                                        ; string length
0000507: 6633 322e 6571                           f32.eq  ; export name
000050d: 00                                        ; export kind
000050e: 45                                        ; export func index
000050f: 06                                        ; string length
0000510: 6633 322e 6e65                           f32.ne  ; export name
0000516: 00                                        ; export kind
0000517: 46                                        ; export func index
0000518: 06                                        ; string length
0000519: 6633 322e 6c74                           f32.lt  ; export name
000051f: 00                                        ; export kind
0000520: 47                                        ; export func index
0000521: 06                                        ; string length
0000522: 6633 322e 6774                           f32.gt  ; export name
0000528: 00                                        ; export kind
0000529: 48                                        ; export func index
000052a: 06                                        ; string length
000052b: 6633 322e 6c65                           f32.le  ; export name
0000531: 00                                        ; export kind
0000532: 49                                        ; export func index
0000533: 06                                        ; string length
0000534: 6633 322e 6765                           f32.ge  ; export name
000053a: 00                                        ; export kind
000053b: 4a                                        ; export func index
000053c: 06                                        ; string length
000053d: 6636 342e 6571                           f64.eq  ; export name
0000543: 00                                        ; export kind
0000544: 4b                                        ; export func index
0000545: 06                                        ; string length
0000546: 6636 342e 6e65                           f64.ne  ; export name
000054c: 00                                        ; export kind
000054d: 4c                                        ; export func index
000054e: 06                                        ; string length
000054f: 6636 342e 6c74                           f64.lt  ; export name
0000555: 00                                        ; export kind
0000556: 4d                                        ; export func index
0000557: 06                                        ; string length
0000558: 6636 342e 6774                           f64.gt  ; export name
000055e: 00                                        ; export kind
000055f: 4e                                        ; export func index
0000560: 06                                        ; string length
0000561: 6636 342e 6c65                           f64.le  ; export name
0000567: 00                                        ; export kind
0000568: 4f                                        ; export func index
0000569: 06                                        ; string length
000056a: 6636 342e 6765                           f64.ge  ; export name
0000570: 00                                        ; export kind
0000571: 50                                        ; export func index
0000572: 07                                        ; string length
0000573: 6933 322e 636c 7a                        i32.clz  ; export name
000057a: 00                                        ; export kind
000057b: 51                                        ; export func index
000057c: 07                                        ; string length
000057d: 6933 322e 6374 7a                        i32.ctz  ; export name
0000584: 00                                        ; export kind
0000585: 52                                        ; export func index
0000586: 0a                                        ; string length
0000587: 6933 322e 706f 7063 6e74                 i32.popcnt  ; export name
0000591: 00                                        ; export kind
0000592: 53                                        ; export func index
0000593: 07                                        ; string length
0000594: 6933 322e 6164 64                        i32.add  ; export name
000059b: 00                                        ; export kind
000059c: 54                                        ; export func index
000059d: 07                                        ; string length
000059e: 6933 322e 7375 62                        i32.sub  ; export name
00005a5: 00                                        ; export kind
00005a6: 55                                        ; export func index
00005a7: 07                                        ; string length
00005a8: 6933 322e 6d75 6c                        i32.mul  ; export name
00005af: 00                                        ; export kind
00005b0: 56                                        ; export func index
00005b1: 09                                        ; string length
00005b2: 6933 322e 6469 765f 73                   i32.div_s  ; export name
00005bb: 00                                        ; export kind
00005bc: 57                                        ; export func index
00005bd: 09                                        ; string length
00005be: 6933 322e 6469 765f 75                   i32.div_u  ; export name
00005c7: 00                                        ; export kind
00005c8: 58                                        ; export func index
00005c9: 09                                        ; string length
00005ca: 6933 322e 7265 6d5f 73                   i32.rem_s  ; export name
00005d3: 00                                        ; export kind
00005d4: 59                                        ; export func index
00005d5: 09                                        ; string length
00005d6: 6933 322e 7265 6d5f 75                   i32.rem_u  ; export name
00005df: 00                                        ; export kind
00005e0: 5a                                        ; export func index
00005e1: 07                                        ; string length
00005e2: 6933 322e 616e 64                        i32.and  ; export name
00005e9: 00                                        ; export kind
00005ea: 5b                                        ; export func index
00005eb: 06                                        ; string length
00005ec: 6933 322e 6f72                           i32.or  ; export name
00005f2: 00                                        ; export kind
00005f3: 5c                                        ; export func index
00005f4: 07                                        ; string length
00005f5: 6933 322e 786f 72                        i32.xor  ; export name
00005fc: 00                                        ; export kind
00005fd: 5d                                        ; export func index
00005fe: 07                                        ; string length
00005ff: 6933 322e 7368 6c                        i32.shl  ; export name
0000606: 00                                        ; export kind
0000607: 5e                                        ; export func index
0000608: 09                                        ; string length
0000609: 6933 322e 7368 725f 73                   i32.shr_s  ; export name
0000612: 00                                        ; export kind
0000613: 5f                                        ; export func index
0000614: 09                                        ; string length
0000615: 6933 322e 7368 725f 75                   i32.shr_u  ; export name
000061e: 00                                        ; export kind
000061f: 60                                        ; export func index
0000620: 08                                        ; string length
0000621: 6933 322e 726f 746c                      i32.rotl  ; export name
0000629: 00                                        ; export kind
000062a: 61                                        ; export func index
000062b: 08                                        ; string length
000062c: 6933 322e 726f 7472                      i32.rotr  ; export name
0000634: 00                                        ; export kind
0000635: 62                                        ; export func index
0000636: 07                                        ; string length
0000637: 6936 342e 636c 7a                        i64.clz  ; export name
000063e: 00                                        ; export kind
000063f: 63                                        ; export func index
0000640: 07                                        ; string length
0000641: 6936 342e 6374 7a                        i64.ctz  ; export name
0000648: 00                                        ; export kind
0000649: 64                                        ; export func index
000064a: 0a                                        ; string length
000064b: 6936 342e 706f 7063 6e74                 i64.popcnt  ; export name
0000655: 00                                        ; export kind
0000656: 65                                        ; export func index
0000657: 07                                        ; string length
0000658: 6936 342e 6164 64                        i64.add  ; export name
000065f: 00                                        ; export kind
0000660: 66                                        ; export func index
0000661: 07                                        ; string length
0000662: 6936 342e 7375 62                        i64.sub  ; export name
0000669: 00                                        ; export kind
000066a: 67                                        ; export func index
000066b: 07                                        ; string length
000066c: 6936 342e 6d75 6c                        i64.mul  ; export name
0000673: 00                                        ; export kind
0000674: 68                                        ; export func index
0000675: 09                                        ; string length
0000676: 6936 342e 6469 765f 73                   i64.div_s  ; export name
000067f: 00                                        ; export kind
0000680: 69                                        ; export func index
0000681: 09                                        ; string length
0000682: 6936 342e 6469 765f 75                   i64.div_u  ; export name
000068b: 00                                        ; export kind
000068c: 6a                                        ; export func index
000068d: 09                                        ; string length
000068e: 6936 342e 7265 6d5f 73                   i64.rem_s  ; export name
0000697: 00                                        ; export kind
0000698: 6b                                        ; export func index
0000699: 09                                        ; string length
000069a: 6936 342e 7265 6d5f 75                   i64.rem_u  ; export name
00006a3: 00                                        ; export kind
00006a4: 6c                                        ; export func index
00006a5: 07                                        ; string length
00006a6: 6936 342e 616e 64                        i64.and  ; export name
00006ad: 00                                        ; export kind
00006ae: 6d                                        ; export func index
00006af: 06                                        ; string length
00006b0: 6936 342e 6f72                           i64.or  ; export name
00006b6: 00                                        ; export kind
00006b7: 6e                                        ; export func index
00006b8: 07                                        ; string length
00006b9: 6936 342e 786f 72                        i64.xor  ; export name
00006c0: 00                                        ; export kind
00006c1: 6f                                        ; export func index
00006c2: 07                                        ; string length
00006c3: 6936 342e 7368 6c                        i64.shl  ; export name
00006ca: 00                                        ; export kind
00006cb: 70                                        ; export func index
00006cc: 09                                        ; string length
00006cd: 6936 342e 7368 725f 73                   i64.shr_s  ; export name
00006d6: 00                                        ; export kind
00006d7: 71                                        ; export func index
00006d8: 09                                        ; string length
00006d9: 6936 342e 7368 725f 75                   i64.shr_u  ; export name
00006e2: 00                                        ; export kind
00006e3: 72                                        ; export func index
00006e4: 08                                        ; string length
00006e5: 6936 342e 726f 746c                      i64.rotl  ; export name
00006ed: 00                                        ; export kind
00006ee: 73                                        ; export func index
00006ef: 08                                        ; string length
00006f0: 6936 342e 726f 7472                      i64.rotr  ; export name
00006f8: 00                                        ; export kind
00006f9: 74                                        ; export func index
00006fa: 07                                        ; string length
00006fb: 6633 322e 6162 73                        f32.abs  ; export name
0000702: 00                                        ; export kind
0000703: 75                                        ; export func index
0000704: 07                                        ; string length
0000705: 6633 322e 6e65 67                        f32.neg  ; export name
000070c: 00                                        ; export kind
000070d: 76                                        ; export func index
000070e: 08                                        ; string length
000070f: 6633 322e 6365 696c                      f32.ceil  ; export name
0000717: 00                                        ; export kind
0000718: 77                                        ; export func index
0000719: 09                                        ; string length
000071a: 6633 322e 666c 6f6f 72                   f32.floor  ; export name
0000723: 00                                        ; export kind
0000724: 78                                        ; export func index
0000725: 09                                        ; string length
0000726: 6633 322e 7472 756e 63                   f32.trunc  ; export name
000072f: 00                                        ; export kind
0000730: 79                                        ; export func index
0000731: 0b                                        ; string length
0000732: 6633 322e 6e65 6172 6573 74              f32.nearest  ; export name
000073d: 00                                        ; export kind
000073e: 7a                                        ; export func index
000073f: 08                                        ; string length
0000740: 6633 322e 7371 7274                      f32.sqrt  ; export name
0000748: 00                                        ; export kind
0000749: 7b                                        ; export func index
000074a: 07                                        ; string length
000074b: 6633 322e 6164 64                        f32.add  ; export name
0000752: 00                                        ; export kind
0000753: 7c                                        ; export func index
0000754: 07                                        ; string length
0000755: 6633 322e 7375 62                        f32.sub  ; export name
000075c: 00                                        ; export kind
000075d: 7d                                        ; export func index
000075e: 07                                        ; string length
000075f: 6633 322e 6d75 6c                        f32.mul  ; export name
0000766: 00                                        ; export kind
0000767: 7e                                        ; export func index
0000768: 07                                        ; string length
0000769: 6633 322e 6469 76                        f32.div  ; export name
0000770: 00                                        ; export kind
0000771: 7f                                        ; export func index
0000772: 07                                        ; string length
0000773: 6633 322e 6d69 6e                        f32.min  ; export name
000077a: 00                                        ; export kind
000077b: 8001                                      ; export func index
000077d: 07                                        ; string length
000077e: 6633 322e 6d61 78                        f32.max  ; export name
0000785: 00                                        ; export kind
0000786: 8101                                      ; export func index
0000788: 0c                                        ; string length
0000789: 6633 322e 636f 7079 7369 676e            f32.copysign  ; export name
0000795: 00                                        ; export kind
0000796: 8201                                      ; export func index
0000798: 07                                        ; string length
0000799: 6636 342e 6162 73                        f64.abs  ; export name
00007a0: 00                                        ; export kind
00007a1: 8301                                      ; export func index
00007a3: 07                                        ; string length
00007a4: 6636 342e 6e65 67                        f64.neg  ; export name
00007ab: 00                                        ; export kind
00007ac: 8401                                      ; export func index
00007ae: 08                                        ; string length
00007af: 6636 342e 6365 696c                      f64.ceil  ; export name
00007b7: 00                                        ; export kind
00007b8: 8501                                      ; export func index
00007ba: 09                                        ; string length
00007bb: 6636 342e 666c 6f6f 72                   f64.floor  ; export name
00007c4: 00                                        ; export kind
00007c5: 8601                                      ; export func index
00007c7: 09                                        ; string length
00007c8: 6636 342e 7472 756e 63                   f64.trunc  ; export name
00007d1: 00                                        ; export kind
00007d2: 8701                                      ; export func index
00007d4: 0b                                        ; string length
00007d5: 6636 342e 6e65 6172 6573 74              f64.nearest  ; export name
00007e0: 00                                        ; export kind
00007e1: 8801                                      ; export func index
00007e3: 08                                        ; string length
00007e4: 6636 342e 7371 7274                      f64.sqrt  ; export name
00007ec: 00                                        ; export kind
00007ed: 8901                                      ; export func index
00007ef: 07                                        ; string length
00007f0: 6636 342e 6164 64                        f64.add  ; export name
00007f7: 00                                        ; export kind
00007f8: 8a01                                      ; export func index
00007fa: 07                                        ; string length
00007fb: 6636 342e 7375 62                        f64.sub  ; export name
0000802: 00                                        ; export kind
0000803: 8b01                                      ; export func index
0000805: 07                                        ; string length
0000806: 6636 342e 6d75 6c                        f64.mul  ; export name
000080d: 00                                        ; export kind
000080e: 8c01                                      ; export func index
0000810: 07                                        ; string length
0000811: 6636 342e 6469 76                        f64.div  ; export name
0000818: 00                                        ; export kind
0000819: 8d01                                      ; export func index
000081b: 07                                        ; string length
000081c: 6636 342e 6d69 6e                        f64.min  ; export name
0000823: 00                                        ; export kind
0000824: 8e01                                      ; export func index
0000826: 07                                        ; string length
0000827: 6636 342e 6d61 78                        f64.max  ; export name
000082e: 00                                        ; export kind
000082f: 8f01                                      ; export func index
0000831: 0c                                        ; string length
0000832: 6636 342e 636f 7079 7369 676e            f64.copysign  ; export name
000083e: 00                                        ; export kind
000083f: 9001                                      ; export func index
0000841: 0c                                        ; string length
0000842: 6933 322e 7772 6170 2f69 3634            i32.wrap/i64  ; export name
000084e: 00                                        ; export kind
000084f: 9101                                      ; export func index
0000851: 0f                                        ; string length
0000852: 6933 322e 7472 756e 635f 732f 6633 32    i32.trunc_s/f32  ; export name
0000861: 00                                        ; export kind
0000862: 9201                                      ; export func index
0000864: 0f                                        ; string length
0000865: 6933 322e 7472 756e 635f 752f 6633 32    i32.trunc_u/f32  ; export name
0000874: 00                                        ; export kind
0000875: 9301                                      ; export func index
0000877: 0f                                        ; string length
0000878: 6933 322e 7472 756e 635f 732f 6636 34    i32.trunc_s/f64  ; export name
0000887: 00                                        ; export kind
0000888: 9401                                      ; export func index
000088a: 0f                                        ; string length
000088b: 6933 322e 7472 756e 635f 752f 6636 34    i32.trunc_u/f64  ; export name
000089a: 00                                        ; export kind
000089b: 9501                                      ; export func index
000089d: 10                                        ; string length
000089e: 6936 342e 6578 7465 6e64 5f73 2f69 3332  i64.extend_s/i32  ; export name
00008ae: 00                                        ; export kind
00008af: 9601                                      ; export func index
00008b1: 10                                        ; string length
00008b2: 6936 342e 6578 7465 6e64 5f75 2f69 3332  i64.extend_u/i32  ; export name
00008c2: 00                                        ; export kind
00008c3: 9701                                      ; export func index
00008c5: 0f                                        ; string length
00008c6: 6936 342e 7472 756e 635f 732f 6633 32    i64.trunc_s/f32  ; export name
00008d5: 00                                        ; export kind
00008d6: 9801                                      ; export func index
00008d8: 0f                                        ; string length
00008d9: 6936 342e 7472 756e 635f 752f 6633 32    i64.trunc_u/f32  ; export name
00008e8: 00                                        ; export kind
00008e9: 9901                                      ; export func index
00008eb: 0f                                        ; string length
00008ec: 6936 342e 7472 756e 635f 732f 6636 34    i64.trunc_s/f64  ; export name
00008fb: 00                                        ; export kind
00008fc: 9a01                                      ; export func index
00008fe: 0f                                        ; string length
00008ff: 6936 342e 7472 756e 635f 752f 6636 34    i64.trunc_u/f64  ; export name
000090e: 00                                        ; export kind
000090f: 9b01                                      ; export func index
0000911: 11                                        ; string length
0000912: 6633 322e 636f 6e76 6572 745f 732f 6933  f32.convert_s/i3
0000922: 32                                       2  ; export name
0000923: 00                                        ; export kind
0000924: 9c01                                      ; export func index
0000926: 11                                        ; string length
0000927: 6633 322e 636f 6e76 6572 745f 752f 6933  f32.convert_u/i3
0000937: 32                                       2  ; export name
0000938: 00                                        ; export kind
0000939: 9d01                                      ; export func index
000093b: 11                                        ; string length
000093c: 6633 322e 636f 6e76 6572 745f 732f 6936  f32.convert_s/i6
000094c: 34                                       4  ; export name
000094d: 00                                        ; export kind
000094e: 9e01                                      ; export func index
0000950: 11                                        ; string length
0000951: 6633 322e 636f 6e76 6572 745f 752f 6936  f32.convert_u/i6
0000961: 34                                       4  ; export name
0000962: 00                                        ; export kind
0000963: 9f01                                      ; export func index
0000965: 0e                                        ; string length
0000966: 6633 322e 6465 6d6f 7465 2f66 3634       f32.demote/f64  ; export name
0000974: 00                                        ; export kind
0000975: a001                                      ; export func index
0000977: 11                                        ; string length
0000978: 6636 342e 636f 6e76 6572 745f 732f 6933  f64.convert_s/i3
0000988: 32                                       2  ; export name
0000989: 00                                        ; export kind
000098a: a101                                      ; export func index
000098c: 11                                        ; string length
000098d: 6636 342e 636f 6e76 6572 745f 752f 6933  f64.convert_u/i3
000099d: 32                                       2  ; export name
000099e: 00                                        ; export kind
000099f: a201                                      ; export func index
00009a1: 11                                        ; string length
00009a2: 6636 342e 636f 6e76 6572 745f 732f 6936  f64.convert_s/i6
00009b2: 34                                       4  ; export name
00009b3: 00                                        ; export kind
00009b4: a301                                      ; export func index
00009b6: 11                                        ; string length
00009b7: 6636 342e 636f 6e76 6572 745f 752f 6936  f64.convert_u/i6
00009c7: 34                                       4  ; export name
00009c8: 00                                        ; export kind
00009c9: a401                                      ; export func index
00009cb: 0f                                        ; string length
00009cc: 6636 342e 7072 6f6d 6f74 652f 6633 32    f64.promote/f32  ; export name
00009db: 00                                        ; export kind
00009dc: a501                                      ; export func index
00009de: 13                                        ; string length
00009df: 6933 322e 7265 696e 7465 7270 7265 742f  i32.reinterpret/
00009ef: 6633 32                                  f32  ; export name
00009f2: 00                                        ; export kind
00009f3: a601                                      ; export func index
00009f5: 13                                        ; string length
00009f6: 6633 322e 7265 696e 7465 7270 7265 742f  f32.reinterpret/
0000a06: 6933 32                                  i32  ; export name
0000a09: 00                                        ; export kind
0000a0a: a701                                      ; export func index
0000a0c: 13                                        ; string length
0000a0d: 6936 342e 7265 696e 7465 7270 7265 742f  i64.reinterpret/
0000a1d: 6636 34                                  f64  ; export name
0000a20: 00                                        ; export kind
0000a21: a801                                      ; export func index
0000a23: 13                                        ; string length
0000a24: 6636 342e 7265 696e 7465 7270 7265 742f  f64.reinterpret/
0000a34: 6936 34                                  i64  ; export name
0000a37: 00                                        ; export kind
0000a38: a901                                      ; export func index
0000a3a: 0d                                        ; string length
0000a3b: 6933 322e 6578 7465 6e64 385f 73         i32.extend8_s  ; export name
0000a48: 00                                        ; export kind
0000a49: aa01                                      ; export func index
0000a4b: 0e                                        ; string length
0000a4c: 6933 322e 6578 7465 6e64 3136 5f73       i32.extend16_s  ; export name
0000a5a: 00                                        ; export kind
0000a5b: ab01                                      ; export func index
0000a5d: 0d                                        ; string length
0000a5e: 6936 342e 6578 7465 6e64 385f 73         i64.extend8_s  ; export name
0000a6b: 00                                        ; export kind
0000a6c: ac01                                      ; export func index
0000a6e: 0e                                        ; string length
0000a6f: 6936 342e 6578 7465 6e64 3136 5f73       i64.extend16_s  ; export name
0000a7d: 00                                        ; export kind
0000a7e: ad01                                      ; export func index
0000a80: 0e                                        ; string length
0000a81: 6936 342e 6578 7465 6e64 3332 5f73       i64.extend32_s  ; export name
0000a8f: 00                                        ; export kind
0000a90: ae01                                      ; export func index
0000a92: 06                                        ; string length
0000a93: 616c 6c6f 6361                           alloca  ; export name
0000a99: 00                                        ; export kind
0000a9a: af01                                      ; export func index
0000a9c: 09                                        ; string length
0000a9d: 6272 5f75 6e6c 6573 73                   br_unless  ; export name
0000aa6: 00                                        ; export kind
0000aa7: b001                                      ; export func index
0000aa9: 09                                        ; string length
0000aaa: 6361 6c6c 5f68 6f73 74                   call_host  ; export name
0000ab3: 00                                        ; export kind
0000ab4: b101                                      ; export func index
0000ab6: 04                                        ; string length
0000ab7: 6461 7461                                data  ; export name
0000abb: 00                                        ; export kind
0000abc: b201                                      ; export func index
0000abe: 09                                        ; string length
0000abf: 6472 6f70 5f6b 6565 70                   drop_keep  ; export name
0000ac8: 00                                        ; export kind
0000ac9: b301                                      ; export func index
0000acb: 13                                        ; string length
0000acc: 6933 322e 7472 756e 635f 733a 7361 742f  i32.trunc_s:sat/
0000adc: 6633 32                                  f32  ; export name
0000adf: 00                                        ; export kind
0000ae0: b401                                      ; export func index
0000ae2: 13                                        ; string length
0000ae3: 6933 322e 7472 756e 635f 753a 7361 742f  i32.trunc_u:sat/
0000af3: 6633 32                                  f32  ; export name
0000af6: 00                                        ; export kind
0000af7: b501                                      ; export func index
0000af9: 13                                        ; string length
0000afa: 6933 322e 7472 756e 635f 733a 7361 742f  i32.trunc_s:sat/
0000b0a: 6636 34                                  f64  ; export name
0000b0d: 00                                        ; export kind
0000b0e: b601                                      ; export func index
0000b10: 13                                        ; string length
0000b11: 6933 322e 7472 756e 635f 753a 7361 742f  i32.trunc_u:sat/
0000b21: 6636 34                                  f64  ; export name
0000b24: 00                                        ; export kind
0000b25: b701                                      ; export func index
0000b27: 13                                        ; string length
0000b28: 6936 342e 7472 756e 635f 733a 7361 742f  i64.trunc_s:sat/
0000b38: 6633 32                                  f32  ; export name
0000b3b: 00                                        ; export kind
0000b3c: b801                                      ; export func index
0000b3e: 13                                        ; string length
0000b3f: 6936 342e 7472 756e 635f 753a 7361 742f  i64.trunc_u:sat/
0000b4f: 6633 32                                  f32  ; export name
0000b52: 00                                        ; export kind
0000b53: b901                                      ; export func index
0000b55: 13                                        ; string length
0000b56: 6936 342e 7472 756e 635f 733a 7361 742f  i64.trunc_s:sat/
0000b66: 6636 34                                  f64  ; export name
0000b69: 00                                        ; export kind
0000b6a: ba01                                      ; export func index
0000b6c: 13                                        ; string length
0000b6d: 6936 342e 7472 756e 635f 753a 7361 742f  i64.trunc_u:sat/
0000b7d: 6636 34                                  f64  ; export name
0000b80: 00                                        ; export kind
0000b81: bb01                                      ; export func index
0000b83: 0b                                        ; string length
0000b84: 6d65 6d6f 7279 2e69 6e69 74              memory.init  ; export name
0000b8f: 00                                        ; export kind
0000b90: bc01                                      ; export func index
0000b92: 09                                        ; string length
0000b93: 6461 7461 2e64 726f 70                   data.drop  ; export name
0000b9c: 00                                        ; export kind
0000b9d: bd01                                      ; export func index
0000b9f: 0b                                        ; string length
0000ba0: 6d65 6d6f 7279 2e63 6f70 79              memory.copy  ; export name
0000bab: 00                                        ; export kind
0000bac: be01                                      ; export func index
0000bae: 0b                                        ; string length
0000baf: 6d65 6d6f 7279 2e66 696c 6c              memory.fill  ; export name
0000bba: 00                                        ; export kind
0000bbb: bf01                                      ; export func index
0000bbd: 0a                                        ; string length
0000bbe: 7461 626c 652e 696e 6974                 table.init  ; export name
0000bc8: 00                                        ; export kind
0000bc9: c001                                      ; export func index
0000bcb: 09                                        ; string length
0000bcc: 656c 656d 2e64 726f 70                   elem.drop  ; export name
0000bd5: 00                                        ; export kind
0000bd6: c101                                      ; export func index
0000bd8: 0a                                        ; string length
0000bd9: 7461 626c 652e 636f 7079                 table.copy  ; export name
0000be3: 00                                        ; export kind
0000be4: c201                                      ; export func index
0000be6: 09                                        ; string length
0000be7: 7631 3238 2e6c 6f61 64                   v128.load  ; export name
0000bf0: 00                                        ; export kind
0000bf1: c301                                      ; export func index
0000bf3: 0a                                        ; string length
0000bf4: 7631 3238 2e73 746f 7265                 v128.store  ; export name
0000bfe: 00                                        ; export kind
0000bff: c401                                      ; export func index
0000c01: 0a                                        ; string length
0000c02: 7631 3238 2e63 6f6e 7374                 v128.const  ; export name
0000c0c: 00                                        ; export kind
0000c0d: c501                                      ; export func index
0000c0f: 0b                                        ; string length
0000c10: 6938 7831 362e 7370 6c61 74              i8x16.splat  ; export name
0000c1b: 00                                        ; export kind
0000c1c: c601                                      ; export func index
0000c1e: 14                                        ; string length
0000c1f: 6938 7831 362e 6578 7472 6163 745f 6c61  i8x16.extract_la
0000c2f: 6e65 5f73                                ne_s  ; export name
0000c33: 00                                        ; export kind
0000c34: c701                                      ; export func index
0000c36: 14                                        ; string length
0000c37: 6938 7831 362e 6578 7472 6163 745f 6c61  i8x16.extract_la
0000c47: 6e65 5f75                                ne_u  ; export name
0000c4b: 00                                        ; export kind
0000c4c: c801                                      ; export func index
0000c4e: 12                                        ; string length
0000c4f: 6938 7831 362e 7265 706c 6163 655f 6c61  i8x16.replace_la
0000c5f: 6e65                                     ne  ; export name
0000c61: 00                                        ; export kind
0000c62: c901                                      ; export func index
0000c64: 0b                                        ; string length
0000c65: 6931 3678 382e 7370 6c61 74              i16x8.splat  ; export name
0000c70: 00                                        ; export kind
0000c71: ca01                                      ; export func index
0000c73: 14                                        ; string length
0000c74: 6931 3678 382e 6578 7472 6163 745f 6c61  i16x8.extract_la
0000c84: 6e65 5f73                                ne_s  ; export name
0000c88: 00                                        ; export kind
0000c89: cb01                                      ; export func index
0000c8b: 14                                        ; string length
0000c8c: 6931 3678 382e 6578 7472 6163 745f 6c61  i16x8.extract_la
0000c9c: 6e65 5f75                                ne_u  ; export name
0000ca0: 00                                        ; export kind
0000ca1: cc01                                      ; export func index
0000ca3: 12                                        ; string length
0000ca4: 6931 3678 382e 7265 706c 6163 655f 6c61  i16x8.replace_la
0000cb4: 6e65                                     ne  ; export name
0000cb6: 00                                        ; export kind
0000cb7: cd01                                      ; export func index
0000cb9: 0b                                        ; string length
0000cba: 6933 3278 342e 7370 6c61 74              i32x4.splat  ; export name
0000cc5: 00                                        ; export kind
0000cc6: ce01                                      ; export func index
0000cc8: 12                                        ; string length
0000cc9: 6933 3278 342e 6578 7472 6163 745f 6c61  i32x4.extract_la
0000cd9: 6e65                                     ne  ; export name
0000cdb: 00                                        ; export kind
0000cdc: cf01                                      ; export func index
0000cde: 12                                        ; string length
0000cdf: 6933 3278 342e 7265 706c 6163 655f 6c61  i32x4.replace_la
0000cef: 6e65                                     ne  ; export name
0000cf1: 00                                        ; export kind
0000cf2: d001                                      ; export func index
0000cf4: 0b                                        ; string length
0000cf5: 6936 3478 322e 7370 6c61 74              i64x2.splat  ; export name
0000d00: 00                                        ; export kind
0000d01: d101                                      ; export func index
0000d03: 12                                        ; string length
0000d04: 6936 3478 322e 6578 7472 6163 745f 6c61  i64x2.extract_la
0000d14: 6e65                                     ne  ; export name
0000d16: 00                                        ; export kind
0000d17: d201                                      ; export func index
0000d19: 12                                        ; string length
0000d1a: 6936 3478 322e 7265 706c 6163 655f 6c61  i64x2.replace_la
0000d2a: 6e65                                     ne  ; export name
0000d2c: 00                                        ; export kind
0000d2d: d301                                      ; export func index
0000d2f: 0b                                        ; string length
0000d30: 6633 3278 342e 7370 6c61 74              f32x4.splat  ; export name
0000d3b: 00                                        ; export kind
0000d3c: d401                                      ; export func index
0000d3e: 12                                        ; string length
0000d3f: 6633 3278 342e 6578 7472 6163 745f 6c61  f32x4.extract_la
0000d4f: 6e65                                     ne  ; export name
0000d51: 00                                        ; export kind
0000d52: d501                                      ; export func index
0000d54: 12                                        ; string length
0000d55: 6633 3278 342e 7265 706c 6163 655f 6c61  f32x4.replace_la
0000d65: 6e65                                     ne  ; export name
0000d67: 00                                        ; export kind
0000d68: d601                                      ; export func index
0000d6a: 0b                                        ; string length
0000d6b: 6636 3478 322e 7370 6c61 74              f64x2.splat  ; export name
0000d76: 00                                        ; export kind
0000d77: d701                                      ; export func index
0000d79: 12                                        ; string length
0000d7a: 6636 3478 322e 6578 7472 6163 745f 6c61  f64x2.extract_la
0000d8a: 6e65                                     ne  ; export name
0000d8c: 00                                        ; export kind
0000d8d: d801                                      ; export func index
0000d8f: 12                                        ; string length
0000d90: 6636 3478 322e 7265 706c 6163 655f 6c61  f64x2.replace_la
0000da0: 6e65                                     ne  ; export name
0000da2: 00                                        ; export kind
0000da3: d901                                      ; export func index
0000da5: 08                                        ; string length
0000da6: 6938 7831 362e 6571                      i8x16.eq  ; export name
0000dae: 00                                        ; export kind
0000daf: da01                                      ; export func index
0000db1: 08                                        ; string length
0000db2: 6938 7831 362e 6e65                      i8x16.ne  ; export name
0000dba: 00                                        ; export kind
0000dbb: db01                                      ; export func index
0000dbd: 0a                                        ; string length
0000dbe: 6938 7831 362e 6c74 5f73                 i8x16.lt_s  ; export name
0000dc8: 00                                        ; export kind
0000dc9: dc01                                      ; export func index
0000dcb: 0a                                        ; string length
0000dcc: 6938 7831 362e 6c74 5f75                 i8x16.lt_u  ; export name
0000dd6: 00                                        ; export kind
0000dd7: dd01                                      ; export func index
0000dd9: 0a                                        ; string length
0000dda: 6938 7831 362e 6774 5f73                 i8x16.gt_s  ; export name
0000de4: 00                                        ; export kind
0000de5: de01                                      ; export func index
0000de7: 0a                                        ; string length
0000de8: 6938 7831 362e 6774 5f75                 i8x16.gt_u  ; export name
0000df2: 00                                        ; export kind
0000df3: df01                                      ; export func index
0000df5: 0a                                        ; string length
0000df6: 6938 7831 362e 6c65 5f73                 i8x16.le_s  ; export name
0000e00: 00                                        ; export kind
0000e01: e001                                      ; export func index
0000e03: 0a                                        ; string length
0000e04: 6938 7831 362e 6c65 5f75                 i8x16.le_u  ; export name
0000e0e: 00                                        ; export kind
0000e0f: e101                                      ; export func index
0000e11: 0a                                        ; string length
0000e12: 6938 7831 362e 6765 5f73                 i8x16.ge_s  ; export name
0000e1c: 00                                        ; export kind
0000e1d: e201                                      ; export func index
0000e1f: 0a                                        ; string length
0000e20: 6938 7831 362e 6765 5f75                 i8x16.ge_u  ; export name
0000e2a: 00                                        ; export kind
0000e2b: e301                                      ; export func index
0000e2d: 08                                        ; string length
0000e2e: 6931 3678 382e 6571                      i16x8.eq  ; export name
0000e36: 00                                        ; export kind
0000e37: e401                                      ; export func index
0000e39: 08                                        ; string length
0000e3a: 6931 3678 382e 6e65                      i16x8.ne  ; export name
0000e42: 00                                        ; export kind
0000e43: e501                                      ; export func index
0000e45: 0a                                        ; string length
0000e46: 6931 3678 382e 6c74 5f73                 i16x8.lt_s  ; export name
0000e50: 00                                        ; export kind
0000e51: e601                                      ; export func index
0000e53: 0a                                        ; string length
0000e54: 6931 3678 382e 6c74 5f75                 i16x8.lt_u  ; export name
0000e5e: 00                                        ; export kind
0000e5f: e701                                      ; export func index
0000e61: 0a                                        ; string length
0000e62: 6931 3678 382e 6774 5f73                 i16x8.gt_s  ; export name
0000e6c: 00                                        ; export kind
0000e6d: e801                                      ; export func index
0000e6f: 0a                                        ; string length
0000e70: 6931 3678 382e 6774 5f75                 i16x8.gt_u  ; export name
0000e7a: 00                                        ; export kind
0000e7b: e901                                      ; export func index
0000e7d: 0a                                        ; string length
0000e7e: 6931 3678 382e 6c65 5f73                 i16x8.le_s  ; export name
0000e88: 00                                        ; export kind
0000e89: ea01                                      ; export func index
0000e8b: 0a                                        ; string length
0000e8c: 6931 3678 382e 6c65 5f75                 i16x8.le_u  ; export name
0000e96: 00                                        ; export kind
0000e97: eb01                                      ; export func index
0000e99: 0a                                        ; string length
0000e9a: 6931 3678 382e 6765 5f73                 i16x8.ge_s  ; export name
0000ea4: 00                                        ; export kind
0000ea5: ec01                                      ; export func index
0000ea7: 0a                                        ; string length
0000ea8: 6931 3678 382e 6765 5f75                 i16x8.ge_u  ; export name
0000eb2: 00                                        ; export kind
0000eb3: ed01                                      ; export func index
0000eb5: 08                                        ; string length
0000eb6: 6933 3278 342e 6571                      i32x4.eq  ; export name
0000ebe: 00                                        ; export kind
0000ebf: ee01                                      ; export func index
0000ec1: 08                                        ; string length
0000ec2: 6933 3278 342e 6e65                      i32x4.ne  ; export name
0000eca: 00                                        ; export kind
0000ecb: ef01                                      ; export func index
0000ecd: 0a                                        ; string length
0000ece: 6933 3278 342e 6c74 5f73                 i32x4.lt_s  ; export name
0000ed8: 00                                        ; export kind
0000ed9: f001                                      ; export func index
0000edb: 0a                                        ; string length
0000edc: 6933 3278 342e 6c74 5f75                 i32x4.lt_u  ; export name
0000ee6: 00                                        ; export kind
0000ee7: f101                                      ; export func index
0000ee9: 0a                                        ; string length
0000eea: 6933 3278 342e 6774 5f73                 i32x4.gt_s  ; export name
0000ef4: 00                                        ; export kind
0000ef5: f201                                      ; export func index
0000ef7: 0a                                        ; string length
0000ef8: 6933 3278 342e 6774 5f75                 i32x4.gt_u  ; export name
0000f02: 00                                        ; export kind
0000f03: f301                                      ; export func index
0000f05: 0a                                        ; string length
0000f06: 6933 3278 342e 6c65 5f73                 i32x4.le_s  ; export name
0000f10: 00                                        ; export kind
0000f11: f401                                      ; export func index
0000f13: 0a                                        ; string length
0000f14: 6933 3278 342e 6c65 5f75                 i32x4.le_u  ; export name
0000f1e: 00                                        ; export kind
0000f1f: f501                                      ; export func index
0000f21: 0a                                        ; string length
0000f22: 6933 3278 342e 6765 5f73                 i32x4.ge_s  ; export name
0000f2c: 00                                        ; export kind
0000f2d: f601                                      ; export func index
0000f2f: 0a                                        ; string length
0000f30: 6933 3278 342e 6765 5f75                 i32x4.ge_u  ; export name
0000f3a: 00                                        ; export kind
0000f3b: f701                                      ; export func index
0000f3d: 08                                        ; string length
0000f3e: 6633 3278 342e 6571                      f32x4.eq  ; export name
0000f46: 00                                        ; export kind
0000f47: f801                                      ; export func index
0000f49: 08                                        ; string length
0000f4a: 6633 3278 342e 6e65                      f32x4.ne  ; export name
0000f52: 00                                        ; export kind
0000f53: f901                                      ; export func index
0000f55: 08                                        ; string length
0000f56: 6633 3278 342e 6c74                      f32x4.lt  ; export name
0000f5e: 00                                        ; export kind
0000f5f: fa01                                      ; export func index
0000f61: 08                                        ; string length
0000f62: 6633 3278 342e 6774                      f32x4.gt  ; export name
0000f6a: 00                                        ; export kind
0000f6b: fb01                                      ; export func index
0000f6d: 08                                        ; string length
0000f6e: 6633 3278 342e 6c65                      f32x4.le  ; export name
0000f76: 00                                        ; export kind
0000f77: fc01                                      ; export func index
0000f79: 08                                        ; string length
0000f7a: 6633 3278 342e 6765                      f32x4.ge  ; export name
0000f82: 00                                        ; export kind
0000f83: fd01                                      ; export func index
0000f85: 08                                        ; string length
0000f86: 6636 3478 322e 6571                      f64x2.eq  ; export name
0000f8e: 00                                        ; export kind
0000f8f: fe01                                      ; export func index
0000f91: 08                                        ; string length
0000f92: 6636 3478 322e 6e65                      f64x2.ne  ; export name
0000f9a: 00                                        ; export kind
0000f9b: ff01                                      ; export func index
0000f9d: 08                                        ; string length
0000f9e: 6636 3478 322e 6c74                      f64x2.lt  ; export name
0000fa6: 00                                        ; export kind
0000fa7: 8002                                      ; export func index
0000fa9: 08                                        ; string length
0000faa: 6636 3478 322e 6774                      f64x2.gt  ; export name
0000fb2: 00                                        ; export kind
0000fb3: 8102                                      ; export func index
0000fb5: 08                                        ; string length
0000fb6: 6636 3478 322e 6c65                      f64x2.le  ; export name
0000fbe: 00                                        ; export kind
0000fbf: 8202                                      ; export func index
0000fc1: 08                                        ; string length
0000fc2: 6636 3478 322e 6765                      f64x2.ge  ; export name
0000fca: 00                                        ; export kind
0000fcb: 8302                                      ; export func index
0000fcd: 08                                        ; string length
0000fce: 7631 3238 2e6e 6f74                      v128.not  ; export name
0000fd6: 00                                        ; export kind
0000fd7: 8402                                      ; export func index
0000fd9: 08                                        ; string length
0000fda: 7631 3238 2e61 6e64                      v128.and  ; export name
0000fe2: 00                                        ; export kind
0000fe3: 8502                                      ; export func index
0000fe5: 07                                        ; string length
0000fe6: 7631 3238 2e6f 72                        v128.or  ; export name
0000fed: 00                                        ; export kind
0000fee: 8602                                      ; export func index
0000ff0: 08                                        ; string length
0000ff1: 7631 3238 2e78 6f72                      v128.xor  ; export name
0000ff9: 00                                        ; export kind
0000ffa: 8702                                      ; export func index
0000ffc: 0e                                        ; string length
0000ffd: 7631 3238 2e62 6974 7365 6c65 6374       v128.bitselect  ; export name
000100b: 00                                        ; export kind
000100c: 8802                                      ; export func index
000100e: 09                                        ; string length
000100f: 6938 7831 362e 6e65 67                   i8x16.neg  ; export name
0001018: 00                                        ; export kind
0001019: 8902                                      ; export func index
000101b: 0e                                        ; string length
000101c: 6938 7831 362e 616e 795f 7472 7565       i8x16.any_true  ; export name
000102a: 00                                        ; export kind
000102b: 8a02                                      ; export func index
000102d: 0e                                        ; string length
000102e: 6938 7831 362e 616c 6c5f 7472 7565       i8x16.all_true  ; export name
000103c: 00                                        ; export kind
000103d: 8b02                                      ; export func index
000103f: 09                                        ; string length
0001040: 6938 7831 362e 7368 6c                   i8x16.shl  ; export name
0001049: 00                                        ; export kind
000104a: 8c02                                      ; export func index
000104c: 0b                                        ; string length
000104d: 6938 7831 362e 7368 725f 73              i8x16.shr_s  ; export name
0001058: 00                                        ; export kind
0001059: 8d02                                      ; export func index
000105b: 0b                                        ; string length
000105c: 6938 7831 362e 7368 725f 75              i8x16.shr_u  ; export name
0001067: 00                                        ; export kind
0001068: 8e02                                      ; export func index
000106a: 09                                        ; string length
000106b: 6938 7831 362e 6164 64                   i8x16.add  ; export name
0001074: 00                                        ; export kind
0001075: 8f02                                      ; export func index
0001077: 14                                        ; string length
0001078: 6938 7831 362e 6164 645f 7361 7475 7261  i8x16.add_satura
0001088: 7465 5f73                                te_s  ; export name
000108c: 00                                        ; export kind
000108d: 9002                                      ; export func index
000108f: 14                                        ; string length
0001090: 6938 7831 362e 6164 645f 7361 7475 7261  i8x16.add_satura
00010a0: 7465 5f75                                te_u  ; export name
00010a4: 00                                        ; export kind
00010a5: 9102                                      ; export func index
00010a7: 09                                        ; string length
00010a8: 6938 7831 362e 7375 62                   i8x16.sub  ; export name
00010b1: 00                                        ; export kind
00010b2: 9202                                      ; export func index
00010b4: 14                                        ; string length
00010b5: 6938 7831 362e 7375 625f 7361 7475 7261  i8x16.sub_satura
00010c5: 7465 5f73                                te_s  ; export name
00010c9: 00                                        ; export kind
00010ca: 9302                                      ; export func index
00010cc: 14                                        ; string length
00010cd: 6938 7831 362e 7375 625f 7361 7475 7261  i8x16.sub_satura
00010dd: 7465 5f75                                te_u  ; export name
00010e1: 00                                        ; export kind
00010e2: 9402                                      ; export func index
00010e4: 09                                        ; string length
00010e5: 6938 7831 362e 6d75 6c                   i8x16.mul  ; export name
00010ee: 00                                        ; export kind
00010ef: 9502                                      ; export func index
00010f1: 09                                        ; string length
00010f2: 6931 3678 382e 6e65 67                   i16x8.neg  ; export name
00010fb: 00                                        ; export kind
00010fc: 9602                                      ; export func index
00010fe: 0e                                        ; string length
00010ff: 6931 3678 382e 616e 795f 7472 7565       i16x8.any_true  ; export name
000110d: 00                                        ; export kind
000110e: 9702                                      ; export func index
0001110: 0e                                        ; string length
0001111: 6931 3678 382e 616c 6c5f 7472 7565       i16x8.all_true  ; export name
000111f: 00                                        ; export kind
0001120: 9802                                      ; export func index
0001122: 09                                        ; string length
0001123: 6931 3678 382e 7368 6c                   i16x8.shl  ; export name
000112c: 00                                        ; export kind
000112d: 9902                                      ; export func index
000112f: 0b                                        ; string length
0001130: 6931 3678 382e 7368 725f 73              i16x8.shr_s  ; export name
000113b: 00                                        ; export kind
000113c: 9a02                                      ; export func index
000113e: 0b                                        ; string length
000113f: 6931 3678 382e 7368 725f 75              i16x8.shr_u  ; export name
000114a: 00                                        ; export kind
000114b: 9b02                                      ; export func index
000114d: 09                                        ; string length
000114e: 6931 3678 382e 6164 64                   i16x8.add  ; export name
0001157: 00                                        ; export kind
0001158: 9c02                                      ; export func index
000115a: 14                                        ; string length
000115b: 6931 3678 382e 6164 645f 7361 7475 7261  i16x8.add_satura
000116b: 7465 5f73                                te_s  ; export name
000116f: 00                                        ; export kind
0001170: 9d02                                      ; export func index
0001172: 14                                        ; string length
0001173: 6931 3678 382e 6164 645f 7361 7475 7261  i16x8.add_satura
0001183: 7465 5f75                                te_u  ; export name
0001187: 00                                        ; export kind
0001188: 9e02                                      ; export func index
000118a: 09                                        ; string length
000118b: 6931 3678 382e 7375 62                   i16x8.sub  ; export name
0001194: 00                                        ; export kind
0001195: 9f02                                      ; export func index
0001197: 14                                        ; string length
0001198: 6931 3678 382e 7375 625f 7361 7475 7261  i16x8.sub_satura
00011a8: 7465 5f73                                te_s  ; export name
00011ac: 00                                        ; export kind
00011ad: a002                                      ; export func index
00011af: 14                                        ; string length
00011b0: 6931 3678 382e 7375 625f 7361 7475 7261  i16x8.sub_satura
00011c0: 7465 5f75                                te_u  ; export name
00011c4: 00                                        ; export kind
00011c5: a102                                      ; export func index
00011c7: 09                                        ; string length
00011c8: 6931 3678 382e 6d75 6c                   i16x8.mul  ; export name
00011d1: 00                                        ; export kind
00011d2: a202                                      ; export func index
00011d4: 09                                        ; string length
00011d5: 6933 3278 342e 6e65 67                   i32x4.neg  ; export name
00011de: 00                                        ; export kind
00011df: a302                                      ; export func index
00011e1: 0e                                        ; string length
00011e2: 6933 3278 342e 616e 795f 7472 7565       i32x4.any_true  ; export name
00011f0: 00                                        ; export kind
00011f1: a402                                      ; export func index
00011f3: 0e                                        ; string length
00011f4: 6933 3278 342e 616c 6c5f 7472 7565       i32x4.all_true  ; export name
0001202: 00                                        ; export kind
0001203: a502                                      ; export func index
0001205: 09                                        ; string length
0001206: 6933 3278 342e 7368 6c                   i32x4.shl  ; export name
000120f: 00                                        ; export kind
0001210: a602                                      ; export func index
0001212: 0b                                        ; string length
0001213: 6933 3278 342e 7368 725f 73              i32x4.shr_s  ; export name
000121e: 00                                        ; export kind
000121f: a702                                      ; export func index
0001221: 0b                                        ; string length
0001222: 6933 3278 342e 7368 725f 75              i32x4.shr_u  ; export name
000122d: 00                                        ; export kind
000122e: a802                                      ; export func index
0001230: 09                                        ; string length
0001231: 6933 3278 342e 6164 64                   i32x4.add  ; export name
000123a: 00                                        ; export kind
000123b: a902                                      ; export func index
000123d: 09                                        ; string length
000123e: 6933 3278 342e 7375 62                   i32x4.sub  ; export name
0001247: 00                                        ; export kind
0001248: aa02                                      ; export func index
000124a: 09                                        ; string length
000124b: 6933 3278 342e 6d75 6c                   i32x4.mul  ; export name
0001254: 00                                        ; export kind
0001255: ab02                                      ; export func index
0001257: 09                                        ; string length
0001258: 6936 3478 322e 6e65 67                   i64x2.neg  ; export name
0001261: 00                                        ; export kind
0001262: ac02                                      ; export func index
0001264: 0e                                        ; string length
0001265: 6936 3478 322e 616e 795f 7472 7565       i64x2.any_true  ; export name
0001273: 00                                        ; export kind
0001274: ad02                                      ; export func index
0001276: 0e                                        ; string length
0001277: 6936 3478 322e 616c 6c5f 7472 7565       i64x2.all_true  ; export name
0001285: 00                                        ; export kind
0001286: ae02                                      ; export func index
0001288: 09                                        ; string length
0001289: 6936 3478 322e 7368 6c                   i64x2.shl  ; export name
0001292: 00                                        ; export kind
0001293: af02                                      ; export func index
0001295: 0b                                        ; string length
0001296: 6936 3478 322e 7368 725f 73              i64x2.shr_s  ; export name
00012a1: 00                                        ; export kind
00012a2: b002                                      ; export func index
00012a4: 0b                                        ; string length
00012a5: 6936 3478 322e 7368 725f 75              i64x2.shr_u  ; export name
00012b0: 00                                        ; export kind
00012b1: b102                                      ; export func index
00012b3: 09                                        ; string length
00012b4: 6936 3478 322e 6164 64                   i64x2.add  ; export name
00012bd: 00                                        ; export kind
00012be: b202                                      ; export func index
00012c0: 09                                        ; string length
00012c1: 6936 3478 322e 7375 62                   i64x2.sub  ; export name
00012ca: 00                                        ; export kind
00012cb: b302                                      ; export func index
00012cd: 09                                        ; string length
00012ce: 6633 3278 342e 6162 73                   f32x4.abs  ; export name
00012d7: 00                                        ; export kind
00012d8: b402                                      ; export func index
00012da: 09                                        ; string length
00012db: 6633 3278 342e 6e65 67                   f32x4.neg  ; export name
00012e4: 00                                        ; export kind
00012e5: b502                                      ; export func index
00012e7: 0a                                        ; string length
00012e8: 6633 3278 342e 7371 7274                 f32x4.sqrt  ; export name
00012f2: 00                                        ; export kind
00012f3: b602                                      ; export func index
00012f5: 09                                        ; string length
00012f6: 6633 3278 342e 6164 64                   f32x4.add  ; export name
00012ff: 00                                        ; export kind
0001300: b702                                      ; export func index
0001302: 09                                        ; string length
0001303: 6633 3278 342e 7375 62                   f32x4.sub  ; export name
000130c: 00                                        ; export kind
000130d: b802                                      ; export func index
000130f: 09                                        ; string length
0001310: 6633 3278 342e 6d75 6c                   f32x4.mul  ; export name
0001319: 00                                        ; export kind
000131a: b902                                      ; export func index
000131c: 09                                        ; string length
000131d: 6633 3278 342e 6469 76                   f32x4.div  ; export name
0001326: 00                                        ; export kind
0001327: ba02                                      ; export func index
0001329: 09                                        ; string length
000132a: 6633 3278 342e 6d69 6e                   f32x4.min  ; export name
0001333: 00                                        ; export kind
0001334: bb02                                      ; export func index
0001336: 09                                        ; string length
0001337: 6633 3278 342e 6d61 78                   f32x4.max  ; export name
0001340: 00                                        ; export kind
0001341: bc02                                      ; export func index
0001343: 09                                        ; string length
0001344: 6636 3478 322e 6162 73                   f64x2.abs  ; export name
000134d: 00                                        ; export kind
000134e: bd02                                      ; export func index
0001350: 09                                        ; string length
0001351: 6636 3478 322e 6e65 67                   f64x2.neg  ; export name
000135a: 00                                        ; export kind
000135b: be02                                      ; export func index
000135d: 0a                                        ; string length
000135e: 6636 3478 322e 7371 7274                 f64x2.sqrt  ; export name
0001368: 00                                        ; export kind
0001369: bf02                                      ; export func index
000136b: 09                                        ; string length
000136c: 6636 3478 322e 6164 64                   f64x2.add  ; export name
0001375: 00                                        ; export kind
0001376: c002                                      ; export func index
0001378: 09                                        ; string length
0001379: 6636 3478 322e 7375 62                   f64x2.sub  ; export name
0001382: 00                                        ; export kind
0001383: c102                                      ; export func index
0001385: 09                                        ; string length
0001386: 6636 3478 322e 6d75 6c                   f64x2.mul  ; export name
000138f: 00                                        ; export kind
0001390: c202                                      ; export func index
0001392: 09                                        ; string length
0001393: 6636 3478 322e 6469 76                   f64x2.div  ; export name
000139c: 00                                        ; export kind
000139d: c302                                      ; export func index
000139f: 09                                        ; string length
00013a0: 6636 3478 322e 6d69 6e                   f64x2.min  ; export name
00013a9: 00                                        ; export kind
00013aa: c402                                      ; export func index
00013ac: 09                                        ; string length
00013ad: 6636 3478 322e 6d61 78                   f64x2.max  ; export name
00013b6: 00                                        ; export kind
00013b7: c502                                      ; export func index
00013b9: 17                                        ; string length
00013ba: 6933 3278 342e 7472 756e 635f 7361 745f  i32x4.trunc_sat_
00013ca: 6633 3278 345f 73                        f32x4_s  ; export name
00013d1: 00                                        ; export kind
00013d2: c602                                      ; export func index
00013d4: 17                                        ; string length
00013d5: 6933 3278 342e 7472 756e 635f 7361 745f  i32x4.trunc_sat_
00013e5: 6633 3278 345f 75                        f32x4_u  ; export name
00013ec: 00                                        ; export kind
00013ed: c702                                      ; export func index
00013ef: 17                                        ; string length
00013f0: 6936 3478 322e 7472 756e 635f 7361 745f  i64x2.trunc_sat_
0001400: 6636 3478 325f 73                        f64x2_s  ; export name
0001407: 00                                        ; export kind
0001408: c802                                      ; export func index
000140a: 17                                        ; string length
000140b: 6936 3478 322e 7472 756e 635f 7361 745f  i64x2.trunc_sat_
000141b: 6636 3478 325f 75                        f64x2_u  ; export name
0001422: 00                                        ; export kind
0001423: c902                                      ; export func index
0001425: 15                                        ; string length
0001426: 6633 3278 342e 636f 6e76 6572 745f 6933  f32x4.convert_i3
0001436: 3278 345f 73                             2x4_s  ; export name
000143b: 00                                        ; export kind
000143c: ca02                                      ; export func index
000143e: 15                                        ; string length
000143f: 6633 3278 342e 636f 6e76 6572 745f 6933  f32x4.convert_i3
000144f: 3278 345f 75                             2x4_u  ; export name
0001454: 00                                        ; export kind
0001455: cb02                                      ; export func index
0001457: 15                                        ; string length
0001458: 6636 3478 322e 636f 6e76 6572 745f 6936  f64x2.convert_i6
0001468: 3478 325f 73                             4x2_s  ; export name
000146d: 00                                        ; export kind
000146e: cc02                                      ; export func index
0001470: 15                                        ; string length
0001471: 6636 3478 322e 636f 6e76 6572 745f 6936  f64x2.convert_i6
0001481: 3478 325f 75                             4x2_u  ; export name
0001486: 00                                        ; export kind
0001487: cd02                                      ; export func index
0001489: 0d                                        ; string length
000148a: 7638 7831 362e 7377 697a 7a6c 65         v8x16.swizzle  ; export name
0001497: 00                                        ; export kind
0001498: ce02                                      ; export func index
000149a: 0d                                        ; string length
000149b: 7638 7831 362e 7368 7566 666c 65         v8x16.shuffle  ; export name
00014a8: 00                                        ; export kind
00014a9: cf02                                      ; export func index
00014ab: 10                                        ; string length
00014ac: 6938 7831 362e 6c6f 6164 5f73 706c 6174  i8x16.load_splat  ; export name
00014bc: 00                                        ; export kind
00014bd: d002                                      ; export func index
00014bf: 10                                        ; string length
00014c0: 6931 3678 382e 6c6f 6164 5f73 706c 6174  i16x8.load_splat  ; export name
00014d0: 00                                        ; export kind
00014d1: d102                                      ; export func index
00014d3: 10                                        ; string length
00014d4: 6933 3278 342e 6c6f 6164 5f73 706c 6174  i32x4.load_splat  ; export name
00014e4: 00                                        ; export kind
00014e5: d202                                      ; export func index
00014e7: 10                                        ; string length
00014e8: 6936 3478 322e 6c6f 6164 5f73 706c 6174  i64x2.load_splat  ; export name
00014f8: 00                                        ; export kind
00014f9: d302                                      ; export func index
00014fb: 14                                        ; string length
00014fc: 6938 7831 362e 6e61 7272 6f77 5f69 3136  i8x16.narrow_i16
000150c: 7838 5f73                                x8_s  ; export name
0001510: 00                                        ; export kind
0001511: d402                                      ; export func index
0001513: 14                                        ; string length
0001514: 6938 7831 362e 6e61 7272 6f77 5f69 3136  i8x16.narrow_i16
0001524: 7838 5f75                                x8_u  ; export name
0001528: 00                                        ; export kind
0001529: d502                                      ; export func index
000152b: 14                                        ; string length
000152c: 6931 3678 382e 6e61 7272 6f77 5f69 3332  i16x8.narrow_i32
000153c: 7834 5f73                                x4_s  ; export name
0001540: 00                                        ; export kind
0001541: d602                                      ; export func index
0001543: 14                                        ; string length
0001544: 6931 3678 382e 6e61 7272 6f77 5f69 3332  i16x8.narrow_i32
0001554: 7834 5f75                                x4_u  ; export name
0001558: 00                                        ; export kind
0001559: d702                                      ; export func index
000155b: 17                                        ; string length
000155c: 6931 3678 382e 7769 6465 6e5f 6c6f 775f  i16x8.widen_low_
000156c: 6938 7831 365f 73                        i8x16_s  ; export name
0001573: 00                                        ; export kind
0001574: d802                                      ; export func index
0001576: 18                                        ; string length
0001577: 6931 3678 382e 7769 6465 6e5f 6869 6768  i16x8.widen_high
0001587: 5f69 3878 3136 5f73                      _i8x16_s  ; export name
000158f: 00                                        ; export kind
0001590: d902                                      ; export func index
0001592: 17                                        ; string length
0001593: 6931 3678 382e 7769 6465 6e5f 6c6f 775f  i16x8.widen_low_
00015a3: 6938 7831 365f 75                        i8x16_u  ; export name
00015aa: 00                                        ; export kind
00015ab: da02                                      ; export func index
00015ad: 18                                        ; string length
00015ae: 6931 3678 382e 7769 6465 6e5f 6869 6768  i16x8.widen_high
00015be: 5f69 3878 3136 5f75                      _i8x16_u  ; export name
00015c6: 00                                        ; export kind
00015c7: db02                                      ; export func index
00015c9: 17                                        ; string length
00015ca: 6933 3278 342e 7769 6465 6e5f 6c6f 775f  i32x4.widen_low_
00015da: 6931 3678 385f 73                        i16x8_s  ; export name
00015e1: 00                                        ; export kind
00015e2: dc02                                      ; export func index
00015e4: 18                                        ; string length
00015e5: 6933 3278 342e 7769 6465 6e5f 6869 6768  i32x4.widen_high
00015f5: 5f69 3136 7838 5f73                      _i16x8_s  ; export name
00015fd: 00                                        ; export kind
00015fe: dd02                                      ; export func index
0001600: 17                                        ; string length
0001601: 6933 3278 342e 7769 6465 6e5f 6c6f 775f  i32x4.widen_low_
0001611: 6931 3678 385f 75                        i16x8_u  ; export name
0001618: 00                                        ; export kind
0001619: de02                                      ; export func index
000161b: 18                                        ; string length
000161c: 6933 3278 342e 7769 6465 6e5f 6869 6768  i32x4.widen_high
000162c: 5f69 3136 7838 5f75                      _i16x8_u  ; export name
0001634: 00                                        ; export kind
0001635: df02                                      ; export func index
0001637: 0d                                        ; string length
0001638: 6174 6f6d 6963 2e6e 6f74 6966 79         atomic.notify  ; export name
0001645: 00                                        ; export kind
0001646: e002                                      ; export func index
0001648: 0f                                        ; string length
0001649: 6933 322e 6174 6f6d 6963 2e77 6169 74    i32.atomic.wait  ; export name
0001658: 00                                        ; export kind
0001659: e102                                      ; export func index
000165b: 0f                                        ; string length
000165c: 6936 342e 6174 6f6d 6963 2e77 6169 74    i64.atomic.wait  ; export name
000166b: 00                                        ; export kind
000166c: e202                                      ; export func index
000166e: 0f                                        ; string length
000166f: 6933 322e 6174 6f6d 6963 2e6c 6f61 64    i32.atomic.load  ; export name
000167e: 00                                        ; export kind
000167f: e302                                      ; export func index
0001681: 0f                                        ; string length
0001682: 6936 342e 6174 6f6d 6963 2e6c 6f61 64    i64.atomic.load  ; export name
0001691: 00                                        ; export kind
0001692: e402                                      ; export func index
0001694: 12                                        ; string length
0001695: 6933 322e 6174 6f6d 6963 2e6c 6f61 6438  i32.atomic.load8
00016a5: 5f75                                     _u  ; export name
00016a7: 00                                        ; export kind
00016a8: e502                                      ; export func index
00016aa: 13                                        ; string length
00016ab: 6933 322e 6174 6f6d 6963 2e6c 6f61 6431  i32.atomic.load1
00016bb: 365f 75                                  6_u  ; export name
00016be: 00                                        ; export kind
00016bf: e602                                      ; export func index
00016c1: 12                                        ; string length
00016c2: 6936 342e 6174 6f6d 6963 2e6c 6f61 6438  i64.atomic.load8
00016d2: 5f75                                     _u  ; export name
00016d4: 00                                        ; export kind
00016d5: e702                                      ; export func index
00016d7: 13                                        ; string length
00016d8: 6936 342e 6174 6f6d 6963 2e6c 6f61 6431  i64.atomic.load1
00016e8: 365f 75                                  6_u  ; export name
00016eb: 00                                        ; export kind
00016ec: e802                                      ; export func index
00016ee: 13                                        ; string length
00016ef: 6936 342e 6174 6f6d 6963 2e6c 6f61 6433  i64.atomic.load3
00016ff: 325f 75                                  2_u  ; export name
0001702: 00                                        ; export kind
0001703: e902                                      ; export func index
0001705: 10                                        ; string length
0001706: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store  ; export name
0001716: 00                                        ; export kind
0001717: ea02                                      ; export func index
0001719: 10                                        ; string length
000171a: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store  ; export name
000172a: 00                                        ; export kind
000172b: eb02                                      ; export func index
000172d: 11                                        ; string length
000172e: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store
000173e: 38                                       8  ; export name
000173f: 00                                        ; export kind
0001740: ec02                                      ; export func index
0001742: 12                                        ; string length
0001743: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store
0001753: 3136                                     16  ; export name
0001755: 00                                        ; export kind
0001756: ed02                                      ; export func index
0001758: 11                                        ; string length
0001759: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
0001769: 38                                       8  ; export name
000176a: 00                                        ; export kind
000176b: ee02                                      ; export func index
000176d: 12                                        ; string length
000176e: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
000177e: 3136                                     16  ; export name
0001780: 00                                        ; export kind
0001781: ef02                                      ; export func index
0001783: 12                                        ; string length
0001784: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
0001794: 3332                                     32  ; export name
0001796: 00                                        ; export kind
0001797: f002                                      ; export func index
0001799: 12                                        ; string length
000179a: 6933 322e 6174 6f6d 6963 2e72 6d77 2e61  i32.atomic.rmw.a
00017aa: 6464                                     dd  ; export name
00017ac: 00                                        ; export kind
00017ad: f102                                      ; export func index
00017af: 12                                        ; string length
00017b0: 6936 342e 6174 6f6d 6963 2e72 6d77 2e61  i64.atomic.rmw.a
00017c0: 6464                                     dd  ; export name
00017c2: 00                                        ; export kind
00017c3: f202                                      ; export func index
00017c5: 15                                        ; string length
00017c6: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
00017d6: 6164 645f 75                             add_u  ; export name
00017db: 00                                        ; export kind
00017dc: f302                                      ; export func index
00017de: 16                                        ; string length
00017df: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
00017ef: 2e61 6464 5f75                           .add_u  ; export name
00017f5: 00                                        ; export kind
00017f6: f402                                      ; export func index
00017f8: 15                                        ; string length
00017f9: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001809: 6164 645f 75                             add_u  ; export name
000180e: 00                                        ; export kind
000180f: f502                                      ; export func index
0001811: 16                                        ; string length
0001812: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001822: 2e61 6464 5f75                           .add_u  ; export name
0001828: 00                                        ; export kind
0001829: f602                                      ; export func index
000182b: 16                                        ; string length
000182c: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
000183c: 2e61 6464 5f75                           .add_u  ; export name
0001842: 00                                        ; export kind
0001843: f702                                      ; export func index
0001845: 12                                        ; string length
0001846: 6933 322e 6174 6f6d 6963 2e72 6d77 2e73  i32.atomic.rmw.s
0001856: 7562                                     ub  ; export name
0001858: 00                                        ; export kind
0001859: f802                                      ; export func index
000185b: 12                                        ; string length
000185c: 6936 342e 6174 6f6d 6963 2e72 6d77 2e73  i64.atomic.rmw.s
000186c: 7562                                     ub  ; export name
000186e: 00                                        ; export kind
000186f: f902                                      ; export func index
0001871: 15                                        ; string length
0001872: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001882: 7375 625f 75                             sub_u  ; export name
0001887: 00                                        ; export kind
0001888: fa02                                      ; export func index
000188a: 16                                        ; string length
000188b: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
000189b: 2e73 7562 5f75                           .sub_u  ; export name
00018a1: 00                                        ; export kind
00018a2: fb02                                      ; export func index
00018a4: 15                                        ; string length
00018a5: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
00018b5: 7375 625f 75                             sub_u  ; export name
00018ba: 00                                        ; export kind
00018bb: fc02                                      ; export func index
00018bd: 16                                        ; string length
00018be: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
00018ce: 2e73 7562 5f75                           .sub_u  ; export name
00018d4: 00                                        ; export kind
00018d5: fd02                                      ; export func index
00018d7: 16                                        ; string length
00018d8: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
00018e8: 2e73 7562 5f75                           .sub_u  ; export name
00018ee: 00                                        ; export kind
00018ef: fe02                                      ; export func index
00018f1: 12                                        ; string length
00018f2: 6933 322e 6174 6f6d 6963 2e72 6d77 2e61  i32.atomic.rmw.a
0001902: 6e64                                     nd  ; export name
0001904: 00                                        ; export kind
0001905: ff02                                      ; export func index
0001907: 12                                        ; string length
0001908: 6936 342e 6174 6f6d 6963 2e72 6d77 2e61  i64.atomic.rmw.a
0001918: 6e64                                     nd  ; export name
000191a: 00                                        ; export kind
000191b: 8003                                      ; export func index
000191d: 15                                        ; string length
000191e: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
000192e: 616e 645f 75                             and_u  ; export name
0001933: 00                                        ; export kind
0001934: 8103                                      ; export func index
0001936: 16                                        ; string length
0001937: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001947: 2e61 6e64 5f75                           .and_u  ; export name
000194d: 00                                        ; export kind
000194e: 8203                                      ; export func index
0001950: 15                                        ; string length
0001951: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001961: 616e 645f 75                             and_u  ; export name
0001966: 00                                        ; export kind
0001967: 8303                                      ; export func index
0001969: 16                                        ; string length
000196a: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
000197a: 2e61 6e64 5f75                           .and_u  ; export name
0001980: 00                                        ; export kind
0001981: 8403                                      ; export func index
0001983: 16                                        ; string length
0001984: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001994: 2e61 6e64 5f75                           .and_u  ; export name
000199a: 00                                        ; export kind
000199b: 8503                                      ; export func index
000199d: 11                                        ; string length
000199e: 6933 322e 6174 6f6d 6963 2e72 6d77 2e6f  i32.atomic.rmw.o
00019ae: 72                                       r  ; export name
00019af: 00                                        ; export kind
00019b0: 8603                                      ; export func index
00019b2: 11                                        ; string length
00019b3: 6936 342e 6174 6f6d 6963 2e72 6d77 2e6f  i64.atomic.rmw.o
00019c3: 72                                       r  ; export name
00019c4: 00                                        ; export kind
00019c5: 8703                                      ; export func index
00019c7: 14                                        ; string length
00019c8: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
00019d8: 6f72 5f75                                or_u  ; export name
00019dc: 00                                        ; export kind
00019dd: 8803                                      ; export func index
00019df: 15                                        ; string length
00019e0: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
00019f0: 2e6f 725f 75                             .or_u  ; export name
00019f5: 00                                        ; export kind
00019f6: 8903                                      ; export func index
00019f8: 14                                        ; string length
00019f9: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001a09: 6f72 5f75                                or_u  ; export name
0001a0d: 00                                        ; export kind
0001a0e: 8a03                                      ; export func index
0001a10: 15                                        ; string length
0001a11: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001a21: 2e6f 725f 75                             .or_u  ; export name
0001a26: 00                                        ; export kind
0001a27: 8b03                                      ; export func index
0001a29: 15                                        ; string length
0001a2a: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001a3a: 2e6f 725f 75                             .or_u  ; export name
0001a3f: 00                                        ; export kind
0001a40: 8c03                                      ; export func index
0001a42: 12                                        ; string length
0001a43: 6933 322e 6174 6f6d 6963 2e72 6d77 2e78  i32.atomic.rmw.x
0001a53: 6f72                                     or  ; export name
0001a55: 00                                        ; export kind
0001a56: 8d03                                      ; export func index
0001a58: 12                                        ; string length
0001a59: 6936 342e 6174 6f6d 6963 2e72 6d77 2e78  i64.atomic.rmw.x
0001a69: 6f72                                     or  ; export name
0001a6b: 00                                        ; export kind
0001a6c: 8e03                                      ; export func index
0001a6e: 15                                        ; string length
0001a6f: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001a7f: 786f 725f 75                             xor_u  ; export name
0001a84: 00                                        ; export kind
0001a85: 8f03                                      ; export func index
0001a87: 16                                        ; string length
0001a88: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001a98: 2e78 6f72 5f75                           .xor_u  ; export name
0001a9e: 00                                        ; export kind
0001a9f: 9003                                      ; export func index
0001aa1: 15                                        ; string length
0001aa2: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001ab2: 786f 725f 75                             xor_u  ; export name
0001ab7: 00                                        ; export kind
0001ab8: 9103                                      ; export func index
0001aba: 16                                        ; string length
0001abb: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001acb: 2e78 6f72 5f75                           .xor_u  ; export name
0001ad1: 00                                        ; export kind
0001ad2: 9203                                      ; export func index
0001ad4: 16                                        ; string length
0001ad5: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001ae5: 2e78 6f72 5f75                           .xor_u  ; export name
0001aeb: 00                                        ; export kind
0001aec: 9303                                      ; export func index
0001aee: 13                                        ; string length
0001aef: 6933 322e 6174 6f6d 6963 2e72 6d77 2e78  i32.atomic.rmw.x
0001aff: 6368 67                                  chg  ; export name
0001b02: 00                                        ; export kind
0001b03: 9403                                      ; export func index
0001b05: 13                                        ; string length
0001b06: 6936 342e 6174 6f6d 6963 2e72 6d77 2e78  i64.atomic.rmw.x
0001b16: 6368 67                                  chg  ; export name
0001b19: 00                                        ; export kind
0001b1a: 9503                                      ; export func index
0001b1c: 16                                        ; string length
0001b1d: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001b2d: 7863 6867 5f75                           xchg_u  ; export name
0001b33: 00                                        ; export kind
0001b34: 9603                                      ; export func index
0001b36: 17                                        ; string length
0001b37: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001b47: 2e78 6368 675f 75                        .xchg_u  ; export name
0001b4e: 00                                        ; export kind
0001b4f: 9703                                      ; export func index
0001b51: 16                                        ; string length
0001b52: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001b62: 7863 6867 5f75                           xchg_u  ; export name
0001b68: 00                                        ; export kind
0001b69: 9803                                      ; export func index
0001b6b: 17                                        ; string length
0001b6c: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001b7c: 2e78 6368 675f 75                        .xchg_u  ; export name
0001b83: 00                                        ; export kind
0001b84: 9903                                      ; export func index
0001b86: 17                                        ; string length
0001b87: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001b97: 2e78 6368 675f 75                        .xchg_u  ; export name
0001b9e: 00                                        ; export kind
0001b9f: 9a03                                      ; export func index
0001ba1: 16                                        ; string length
0001ba2: 6933 322e 6174 6f6d 6963 2e72 6d77 2e63  i32.atomic.rmw.c
0001bb2: 6d70 7863 6867                           mpxchg  ; export name
0001bb8: 00                                        ; export kind
0001bb9: 9b03                                      ; export func index
0001bbb: 16                                        ; string length
0001bbc: 6936 342e 6174 6f6d 6963 2e72 6d77 2e63  i64.atomic.rmw.c
0001bcc: 6d70 7863 6867                           mpxchg  ; export name
0001bd2: 00                                        ; export kind
0001bd3: 9c03                                      ; export func index
0001bd5: 19                                        ; string length
0001bd6: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001be6: 636d 7078 6368 675f 75                   cmpxchg_u  ; export name
0001bef: 00                                        ; export kind
0001bf0: 9d03                                      ; export func index
0001bf2: 1a                                        ; string length
0001bf3: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001c03: 2e63 6d70 7863 6867 5f75                 .cmpxchg_u  ; export name
0001c0d: 00                                        ; export kind
0001c0e: 9e03                                      ; export func index
0001c10: 19                                        ; string length
0001c11: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001c21: 636d 7078 6368 675f 75                   cmpxchg_u  ; export name
0001c2a: 00                                        ; export kind
0001c2b: 9f03                                      ; export func index
0001c2d: 1a                                        ; string length
0001c2e: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001c3e: 2e63 6d70 7863 6867 5f75                 .cmpxchg_u  ; export name
0001c48: 00                                        ; export kind
0001c49: a003                                      ; export func index
0001c4b: 1a                                        ; string length
0001c4c: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001c5c: 2e63 6d70 7863 6867 5f75                 .cmpxchg_u  ; export name
0001c66: 00                                        ; export kind
0001c67: a103                                      ; export func index
; move data: [1df, 1c69) -> [1e0, 1c6a)
00001de: 8a35                                      ; FIXUP section size
; section "Elem" (9)
0001c6a: 09                                        ; section code
0001c6b: 00                                        ; section size (guess)
0001c6c: 02                                        ; num elem segments
; elem segment header 0
0001c6d: 00                                        ; segment flags
0001c6e: 41                                        ; i32.const
0001c6f: 00                                        ; i32 literal
0001c70: 0b                                        ; end
0001c71: 02                                        ; num elems
0001c72: 01                                        ; elem function index
0001c73: 01                                        ; elem function index
; elem segment header 1
0001c74: 01                                        ; segment flags
0001c75: 00                                        ; elem list type
0001c76: 00                                        ; num elems
0001c6b: 0b                                        ; FIXUP section size
; section "DataCount" (12)
0001c77: 0c                                        ; section code
0001c78: 00                                        ; section size (guess)
0001c79: 01                                        ; data count
0001c78: 01                                        ; FIXUP section size
; section "Code" (10)
0001c7a: 0a                                        ; section code
0001c7b: 00                                        ; section size (guess)
0001c7c: a103                                      ; num functions
; function body 0
0001c7e: 00                                        ; func body size (guess)
0001c7f: 00                                        ; local decl count
0001c80: 0b                                        ; end
0001c7e: 02                                        ; FIXUP func body size
; function body 1
0001c81: 00                                        ; func body size (guess)
0001c82: 00                                        ; local decl count
0001c83: 00                                        ; unreachable
0001c84: 0b                                        ; end
0001c81: 03                                        ; FIXUP func body size
; function body 2
0001c85: 00                                        ; func body size (guess)
0001c86: 00                                        ; local decl count
0001c87: 0c                                        ; br
0001c88: 00                                        ; break depth
0001c89: 0b                                        ; end
0001c85: 04                                        ; FIXUP func body size
; function body 3
0001c8a: 00                                        ; func body size (guess)
0001c8b: 00                                        ; local decl count
0001c8c: 41                                        ; i32.const
0001c8d: 01                                        ; i32 literal
0001c8e: 0e                                        ; br_table
0001c8f: 00                                        ; num targets
0001c90: 00                                        ; break depth for default
0001c91: 0b                                        ; end
0001c8a: 07                                        ; FIXUP func body size
; function body 4
0001c92: 00                                        ; func body size (guess)
0001c93: 00                                        ; local decl count
0001c94: 0f                                        ; return
0001c95: 0b                                        ; end
0001c92: 03                                        ; FIXUP func body size
; function body 5
0001c96: 00                                        ; func body size (guess)
0001c97: 00                                        ; local decl count
0001c98: 10                                        ; call
0001c99: 01                                        ; function index
0001c9a: 0b                                        ; end
0001c96: 04                                        ; FIXUP func body size
; function body 6
0001c9b: 00                                        ; func body size (guess)
0001c9c: 00                                        ; local decl count
0001c9d: 41                                        ; i32.const
0001c9e: 01                                        ; i32 literal
0001c9f: 11                                        ; call_indirect
0001ca0: 00                                        ; signature index
0001ca1: 00                                        ; table index
0001ca2: 0b                                        ; end
0001c9b: 07                                        ; FIXUP func body size
; function body 7
0001ca3: 00                                        ; func body size (guess)
0001ca4: 00                                        ; local decl count
0001ca5: 12                                        ; return_call
0001ca6: 01                                        ; function index
0001ca7: 0b                                        ; end
0001ca3: 04                                        ; FIXUP func body size
; function body 8
0001ca8: 00                                        ; func body size (guess)
0001ca9: 00                                        ; local decl count
0001caa: 41                                        ; i32.const
0001cab: 01                                        ; i32 literal
0001cac: 13                                        ; return_call_indirect
0001cad: 00                                        ; signature index
0001cae: 00                                        ; table index
0001caf: 0b                                        ; end
0001ca8: 07                                        ; FIXUP func body size
; function body 9
0001cb0: 00                                        ; func body size (guess)
0001cb1: 00                                        ; local decl count
0001cb2: 41                                        ; i32.const
0001cb3: 01                                        ; i32 literal
0001cb4: 1a                                        ; drop
0001cb5: 0b                                        ; end
0001cb0: 05                                        ; FIXUP func body size
; function body 10
0001cb6: 00                                        ; func body size (guess)
0001cb7: 00                                        ; local decl count
0001cb8: 41                                        ; i32.const
0001cb9: 01                                        ; i32 literal
0001cba: 41                                        ; i32.const
0001cbb: 02                                        ; i32 literal
0001cbc: 41                                        ; i32.const
0001cbd: 03                                        ; i32 literal
0001cbe: 1b                                        ; select
0001cbf: 1a                                        ; drop
0001cc0: 0b                                        ; end
0001cb6: 0a                                        ; FIXUP func body size
; function body 11
0001cc1: 00                                        ; func body size (guess)
0001cc2: 00                                        ; local decl count
0001cc3: 41                                        ; i32.const
0001cc4: 01                                        ; i32 literal
0001cc5: 41                                        ; i32.const
0001cc6: 02                                        ; i32 literal
0001cc7: 41                                        ; i32.const
0001cc8: 03                                        ; i32 literal
0001cc9: 1c                                        ; select
0001cca: 01                                        ; num result types
0001ccb: 7f                                        ; result type
0001ccc: 1a                                        ; drop
0001ccd: 0b                                        ; end
0001cc1: 0c                                        ; FIXUP func body size
; function body 12
0001cce: 00                                        ; func body size (guess)
0001ccf: 01                                        ; local decl count
0001cd0: 01                                        ; local type count
0001cd1: 7f                                        ; i32
0001cd2: 20                                        ; local.get
0001cd3: 00                                        ; local index
0001cd4: 1a                                        ; drop
0001cd5: 0b                                        ; end
0001cce: 07                                        ; FIXUP func body size
; function body 13
0001cd6: 00                                        ; func body size (guess)
0001cd7: 01                                        ; local decl count
0001cd8: 01                                        ; local type count
0001cd9: 7f                                        ; i32
0001cda: 41                                        ; i32.const
0001cdb: 01                                        ; i32 literal
0001cdc: 21                                        ; local.set
0001cdd: 00                                        ; local index
0001cde: 0b                                        ; end
0001cd6: 08                                        ; FIXUP func body size
; function body 14
0001cdf: 00                                        ; func body size (guess)
0001ce0: 01                                        ; local decl count
0001ce1: 01                                        ; local type count
0001ce2: 7f                                        ; i32
0001ce3: 41                                        ; i32.const
0001ce4: 01                                        ; i32 literal
0001ce5: 22                                        ; local.tee
0001ce6: 00                                        ; local index
0001ce7: 1a                                        ; drop
0001ce8: 0b                                        ; end
0001cdf: 09                                        ; FIXUP func body size
; function body 15
0001ce9: 00                                        ; func body size (guess)
0001cea: 00                                        ; local decl count
0001ceb: 23                                        ; global.get
0001cec: 00                                        ; global index
0001ced: 1a                                        ; drop
0001cee: 0b                                        ; end
0001ce9: 05                                        ; FIXUP func body size
; function body 16
0001cef: 00                                        ; func body size (guess)
0001cf0: 00                                        ; local decl count
0001cf1: 41                                        ; i32.const
0001cf2: 01                                        ; i32 literal
0001cf3: 24                                        ; global.set
0001cf4: 00                                        ; global index
0001cf5: 0b                                        ; end
0001cef: 06                                        ; FIXUP func body size
; function body 17
0001cf6: 00                                        ; func body size (guess)
0001cf7: 00                                        ; local decl count
0001cf8: 41                                        ; i32.const
0001cf9: 01                                        ; i32 literal
0001cfa: 28                                        ; i32.load
0001cfb: 02                                        ; alignment
0001cfc: 02                                        ; load offset
0001cfd: 1a                                        ; drop
0001cfe: 0b                                        ; end
0001cf6: 08                                        ; FIXUP func body size
; function body 18
0001cff: 00                                        ; func body size (guess)
0001d00: 00                                        ; local decl count
0001d01: 41                                        ; i32.const
0001d02: 01                                        ; i32 literal
0001d03: 29                                        ; i64.load
0001d04: 03                                        ; alignment
0001d05: 02                                        ; load offset
0001d06: 1a                                        ; drop
0001d07: 0b                                        ; end
0001cff: 08                                        ; FIXUP func body size
; function body 19
0001d08: 00                                        ; func body size (guess)
0001d09: 00                                        ; local decl count
0001d0a: 41                                        ; i32.const
0001d0b: 01                                        ; i32 literal
0001d0c: 2a                                        ; f32.load
0001d0d: 02                                        ; alignment
0001d0e: 02                                        ; load offset
0001d0f: 1a                                        ; drop
0001d10: 0b                                        ; end
0001d08: 08                                        ; FIXUP func body size
; function body 20
0001d11: 00                                        ; func body size (guess)
0001d12: 00                                        ; local decl count
0001d13: 41                                        ; i32.const
0001d14: 01                                        ; i32 literal
0001d15: 2b                                        ; f64.load
0001d16: 03                                        ; alignment
0001d17: 02                                        ; load offset
0001d18: 1a                                        ; drop
0001d19: 0b                                        ; end
0001d11: 08                                        ; FIXUP func body size
; function body 21
0001d1a: 00                                        ; func body size (guess)
0001d1b: 00                                        ; local decl count
0001d1c: 41                                        ; i32.const
0001d1d: 01                                        ; i32 literal
0001d1e: 2c                                        ; i32.load8_s
0001d1f: 00                                        ; alignment
0001d20: 02                                        ; load offset
0001d21: 1a                                        ; drop
0001d22: 0b                                        ; end
0001d1a: 08                                        ; FIXUP func body size
; function body 22
0001d23: 00                                        ; func body size (guess)
0001d24: 00                                        ; local decl count
0001d25: 41                                        ; i32.const
0001d26: 01                                        ; i32 literal
0001d27: 2d                                        ; i32.load8_u
0001d28: 00                                        ; alignment
0001d29: 02                                        ; load offset
0001d2a: 1a                                        ; drop
0001d2b: 0b                                        ; end
0001d23: 08                                        ; FIXUP func body size
; function body 23
0001d2c: 00                                        ; func body size (guess)
0001d2d: 00                                        ; local decl count
0001d2e: 41                                        ; i32.const
0001d2f: 01                                        ; i32 literal
0001d30: 2e                                        ; i32.load16_s
0001d31: 01                                        ; alignment
0001d32: 02                                        ; load offset
0001d33: 1a                                        ; drop
0001d34: 0b                                        ; end
0001d2c: 08                                        ; FIXUP func body size
; function body 24
0001d35: 00                                        ; func body size (guess)
0001d36: 00                                        ; local decl count
0001d37: 41                                        ; i32.const
0001d38: 01                                        ; i32 literal
0001d39: 2f                                        ; i32.load16_u
0001d3a: 01                                        ; alignment
0001d3b: 02                                        ; load offset
0001d3c: 1a                                        ; drop
0001d3d: 0b                                        ; end
0001d35: 08                                        ; FIXUP func body size
; function body 25
0001d3e: 00                                        ; func body size (guess)
0001d3f: 00                                        ; local decl count
0001d40: 41                                        ; i32.const
0001d41: 01                                        ; i32 literal
0001d42: 30                                        ; i64.load8_s
0001d43: 00                                        ; alignment
0001d44: 02                                        ; load offset
0001d45: 1a                                        ; drop
0001d46: 0b                                        ; end
0001d3e: 08                                        ; FIXUP func body size
; function body 26
0001d47: 00                                        ; func body size (guess)
0001d48: 00                                        ; local decl count
0001d49: 41                                        ; i32.const
0001d4a: 01                                        ; i32 literal
0001d4b: 31                                        ; i64.load8_u
0001d4c: 00                                        ; alignment
0001d4d: 02                                        ; load offset
0001d4e: 1a                                        ; drop
0001d4f: 0b                                        ; end
0001d47: 08                                        ; FIXUP func body size
; function body 27
0001d50: 00                                        ; func body size (guess)
0001d51: 00                                        ; local decl count
0001d52: 41                                        ; i32.const
0001d53: 01                                        ; i32 literal
0001d54: 32                                        ; i64.load16_s
0001d55: 01                                        ; alignment
0001d56: 02                                        ; load offset
0001d57: 1a                                        ; drop
0001d58: 0b                                        ; end
0001d50: 08                                        ; FIXUP func body size
; function body 28
0001d59: 00                                        ; func body size (guess)
0001d5a: 00                                        ; local decl count
0001d5b: 41                                        ; i32.const
0001d5c: 01                                        ; i32 literal
0001d5d: 33                                        ; i64.load16_u
0001d5e: 01                                        ; alignment
0001d5f: 02                                        ; load offset
0001d60: 1a                                        ; drop
0001d61: 0b                                        ; end
0001d59: 08                                        ; FIXUP func body size
; function body 29
0001d62: 00                                        ; func body size (guess)
0001d63: 00                                        ; local decl count
0001d64: 41                                        ; i32.const
0001d65: 01                                        ; i32 literal
0001d66: 34                                        ; i64.load32_s
0001d67: 02                                        ; alignment
0001d68: 02                                        ; load offset
0001d69: 1a                                        ; drop
0001d6a: 0b                                        ; end
0001d62: 08                                        ; FIXUP func body size
; function body 30
0001d6b: 00                                        ; func body size (guess)
0001d6c: 00                                        ; local decl count
0001d6d: 41                                        ; i32.const
0001d6e: 01                                        ; i32 literal
0001d6f: 35                                        ; i64.load32_u
0001d70: 02                                        ; alignment
0001d71: 02                                        ; load offset
0001d72: 1a                                        ; drop
0001d73: 0b                                        ; end
0001d6b: 08                                        ; FIXUP func body size
; function body 31
0001d74: 00                                        ; func body size (guess)
0001d75: 00                                        ; local decl count
0001d76: 41                                        ; i32.const
0001d77: 01                                        ; i32 literal
0001d78: 41                                        ; i32.const
0001d79: 02                                        ; i32 literal
0001d7a: 36                                        ; i32.store
0001d7b: 02                                        ; alignment
0001d7c: 02                                        ; store offset
0001d7d: 0b                                        ; end
0001d74: 09                                        ; FIXUP func body size
; function body 32
0001d7e: 00                                        ; func body size (guess)
0001d7f: 00                                        ; local decl count
0001d80: 41                                        ; i32.const
0001d81: 01                                        ; i32 literal
0001d82: 42                                        ; i64.const
0001d83: 02                                        ; i64 literal
0001d84: 37                                        ; i64.store
0001d85: 03                                        ; alignment
0001d86: 02                                        ; store offset
0001d87: 0b                                        ; end
0001d7e: 09                                        ; FIXUP func body size
; function body 33
0001d88: 00                                        ; func body size (guess)
0001d89: 00                                        ; local decl count
0001d8a: 41                                        ; i32.const
0001d8b: 01                                        ; i32 literal
0001d8c: 43                                        ; f32.const
0001d8d: 0000 0040                                 ; f32 literal
0001d91: 38                                        ; f32.store
0001d92: 02                                        ; alignment
0001d93: 02                                        ; store offset
0001d94: 0b                                        ; end
0001d88: 0c                                        ; FIXUP func body size
; function body 34
0001d95: 00                                        ; func body size (guess)
0001d96: 00                                        ; local decl count
0001d97: 41                                        ; i32.const
0001d98: 01                                        ; i32 literal
0001d99: 44                                        ; f64.const
0001d9a: 0000 0000 0000 0040                       ; f64 literal
0001da2: 39                                        ; f64.store
0001da3: 03                                        ; alignment
0001da4: 02                                        ; store offset
0001da5: 0b                                        ; end
0001d95: 10                                        ; FIXUP func body size
; function body 35
0001da6: 00                                        ; func body size (guess)
0001da7: 00                                        ; local decl count
0001da8: 41                                        ; i32.const
0001da9: 01                                        ; i32 literal
0001daa: 41                                        ; i32.const
0001dab: 02                                        ; i32 literal
0001dac: 3a                                        ; i32.store8
0001dad: 00                                        ; alignment
0001dae: 02                                        ; store offset
0001daf: 0b                                        ; end
0001da6: 09                                        ; FIXUP func body size
; function body 36
0001db0: 00                                        ; func body size (guess)
0001db1: 00                                        ; local decl count
0001db2: 41                                        ; i32.const
0001db3: 01                                        ; i32 literal
0001db4: 41                                        ; i32.const
0001db5: 02                                        ; i32 literal
0001db6: 3b                                        ; i32.store16
0001db7: 01                                        ; alignment
0001db8: 02                                        ; store offset
0001db9: 0b                                        ; end
0001db0: 09                                        ; FIXUP func body size
; function body 37
0001dba: 00                                        ; func body size (guess)
0001dbb: 00                                        ; local decl count
0001dbc: 41                                        ; i32.const
0001dbd: 01                                        ; i32 literal
0001dbe: 42                                        ; i64.const
0001dbf: 02                                        ; i64 literal
0001dc0: 3c                                        ; i64.store8
0001dc1: 00                                        ; alignment
0001dc2: 02                                        ; store offset
0001dc3: 0b                                        ; end
0001dba: 09                                        ; FIXUP func body size
; function body 38
0001dc4: 00                                        ; func body size (guess)
0001dc5: 00                                        ; local decl count
0001dc6: 41                                        ; i32.const
0001dc7: 01                                        ; i32 literal
0001dc8: 42                                        ; i64.const
0001dc9: 02                                        ; i64 literal
0001dca: 3d                                        ; i64.store16
0001dcb: 01                                        ; alignment
0001dcc: 02                                        ; store offset
0001dcd: 0b                                        ; end
0001dc4: 09                                        ; FIXUP func body size
; function body 39
0001dce: 00                                        ; func body size (guess)
0001dcf: 00                                        ; local decl count
0001dd0: 41                                        ; i32.const
0001dd1: 01                                        ; i32 literal
0001dd2: 42                                        ; i64.const
0001dd3: 02                                        ; i64 literal
0001dd4: 3e                                        ; i64.store32
0001dd5: 02                                        ; alignment
0001dd6: 02                                        ; store offset
0001dd7: 0b                                        ; end
0001dce: 09                                        ; FIXUP func body size
; function body 40
0001dd8: 00                                        ; func body size (guess)
0001dd9: 00                                        ; local decl count
0001dda: 3f                                        ; memory.size
0001ddb: 00                                        ; memory.size reserved
0001ddc: 1a                                        ; drop
0001ddd: 0b                                        ; end
0001dd8: 05                                        ; FIXUP func body size
; function body 41
0001dde: 00                                        ; func body size (guess)
0001ddf: 00                                        ; local decl count
0001de0: 41                                        ; i32.const
0001de1: 01                                        ; i32 literal
0001de2: 40                                        ; memory.grow
0001de3: 00                                        ; memory.grow reserved
0001de4: 1a                                        ; drop
0001de5: 0b                                        ; end
0001dde: 07                                        ; FIXUP func body size
; function body 42
0001de6: 00                                        ; func body size (guess)
0001de7: 00                                        ; local decl count
0001de8: 41                                        ; i32.const
0001de9: 01                                        ; i32 literal
0001dea: 1a                                        ; drop
0001deb: 0b                                        ; end
0001de6: 05                                        ; FIXUP func body size
; function body 43
0001dec: 00                                        ; func body size (guess)
0001ded: 00                                        ; local decl count
0001dee: 42                                        ; i64.const
0001def: 01                                        ; i64 literal
0001df0: 1a                                        ; drop
0001df1: 0b                                        ; end
0001dec: 05                                        ; FIXUP func body size
; function body 44
0001df2: 00                                        ; func body size (guess)
0001df3: 00                                        ; local decl count
0001df4: 43                                        ; f32.const
0001df5: 0000 803f                                 ; f32 literal
0001df9: 1a                                        ; drop
0001dfa: 0b                                        ; end
0001df2: 08                                        ; FIXUP func body size
; function body 45
0001dfb: 00                                        ; func body size (guess)
0001dfc: 00                                        ; local decl count
0001dfd: 44                                        ; f64.const
0001dfe: 0000 0000 0000 f03f                       ; f64 literal
0001e06: 1a                                        ; drop
0001e07: 0b                                        ; end
0001dfb: 0c                                        ; FIXUP func body size
; function body 46
0001e08: 00                                        ; func body size (guess)
0001e09: 00                                        ; local decl count
0001e0a: 41                                        ; i32.const
0001e0b: 01                                        ; i32 literal
0001e0c: 45                                        ; i32.eqz
0001e0d: 1a                                        ; drop
0001e0e: 0b                                        ; end
0001e08: 06                                        ; FIXUP func body size
; function body 47
0001e0f: 00                                        ; func body size (guess)
0001e10: 00                                        ; local decl count
0001e11: 41                                        ; i32.const
0001e12: 01                                        ; i32 literal
0001e13: 41                                        ; i32.const
0001e14: 02                                        ; i32 literal
0001e15: 46                                        ; i32.eq
0001e16: 1a                                        ; drop
0001e17: 0b                                        ; end
0001e0f: 08                                        ; FIXUP func body size
; function body 48
0001e18: 00                                        ; func body size (guess)
0001e19: 00                                        ; local decl count
0001e1a: 41                                        ; i32.const
0001e1b: 01                                        ; i32 literal
0001e1c: 41                                        ; i32.const
0001e1d: 02                                        ; i32 literal
0001e1e: 47                                        ; i32.ne
0001e1f: 1a                                        ; drop
0001e20: 0b                                        ; end
0001e18: 08                                        ; FIXUP func body size
; function body 49
0001e21: 00                                        ; func body size (guess)
0001e22: 00                                        ; local decl count
0001e23: 41                                        ; i32.const
0001e24: 01                                        ; i32 literal
0001e25: 41                                        ; i32.const
0001e26: 02                                        ; i32 literal
0001e27: 48                                        ; i32.lt_s
0001e28: 1a                                        ; drop
0001e29: 0b                                        ; end
0001e21: 08                                        ; FIXUP func body size
; function body 50
0001e2a: 00                                        ; func body size (guess)
0001e2b: 00                                        ; local decl count
0001e2c: 41                                        ; i32.const
0001e2d: 01                                        ; i32 literal
0001e2e: 41                                        ; i32.const
0001e2f: 02                                        ; i32 literal
0001e30: 49                                        ; i32.lt_u
0001e31: 1a                                        ; drop
0001e32: 0b                                        ; end
0001e2a: 08                                        ; FIXUP func body size
; function body 51
0001e33: 00                                        ; func body size (guess)
0001e34: 00                                        ; local decl count
0001e35: 41                                        ; i32.const
0001e36: 01                                        ; i32 literal
0001e37: 41                                        ; i32.const
0001e38: 02                                        ; i32 literal
0001e39: 4a                                        ; i32.gt_s
0001e3a: 1a                                        ; drop
0001e3b: 0b                                        ; end
0001e33: 08                                        ; FIXUP func body size
; function body 52
0001e3c: 00                                        ; func body size (guess)
0001e3d: 00                                        ; local decl count
0001e3e: 41                                        ; i32.const
0001e3f: 01                                        ; i32 literal
0001e40: 41                                        ; i32.const
0001e41: 02                                        ; i32 literal
0001e42: 4b                                        ; i32.gt_u
0001e43: 1a                                        ; drop
0001e44: 0b                                        ; end
0001e3c: 08                                        ; FIXUP func body size
; function body 53
0001e45: 00                                        ; func body size (guess)
0001e46: 00                                        ; local decl count
0001e47: 41                                        ; i32.const
0001e48: 01                                        ; i32 literal
0001e49: 41                                        ; i32.const
0001e4a: 02                                        ; i32 literal
0001e4b: 4c                                        ; i32.le_s
0001e4c: 1a                                        ; drop
0001e4d: 0b                                        ; end
0001e45: 08                                        ; FIXUP func body size
; function body 54
0001e4e: 00                                        ; func body size (guess)
0001e4f: 00                                        ; local decl count
0001e50: 41                                        ; i32.const
0001e51: 01                                        ; i32 literal
0001e52: 41                                        ; i32.const
0001e53: 02                                        ; i32 literal
0001e54: 4d                                        ; i32.le_u
0001e55: 1a                                        ; drop
0001e56: 0b                                        ; end
0001e4e: 08                                        ; FIXUP func body size
; function body 55
0001e57: 00                                        ; func body size (guess)
0001e58: 00                                        ; local decl count
0001e59: 41                                        ; i32.const
0001e5a: 01                                        ; i32 literal
0001e5b: 41                                        ; i32.const
0001e5c: 02                                        ; i32 literal
0001e5d: 4e                                        ; i32.ge_s
0001e5e: 1a                                        ; drop
0001e5f: 0b                                        ; end
0001e57: 08                                        ; FIXUP func body size
; function body 56
0001e60: 00                                        ; func body size (guess)
0001e61: 00                                        ; local decl count
0001e62: 41                                        ; i32.const
0001e63: 01                                        ; i32 literal
0001e64: 41                                        ; i32.const
0001e65: 02                                        ; i32 literal
0001e66: 4f                                        ; i32.ge_u
0001e67: 1a                                        ; drop
0001e68: 0b                                        ; end
0001e60: 08                                        ; FIXUP func body size
; function body 57
0001e69: 00                                        ; func body size (guess)
0001e6a: 00                                        ; local decl count
0001e6b: 42                                        ; i64.const
0001e6c: 01                                        ; i64 literal
0001e6d: 50                                        ; i64.eqz
0001e6e: 1a                                        ; drop
0001e6f: 0b                                        ; end
0001e69: 06                                        ; FIXUP func body size
; function body 58
0001e70: 00                                        ; func body size (guess)
0001e71: 00                                        ; local decl count
0001e72: 42                                        ; i64.const
0001e73: 01                                        ; i64 literal
0001e74: 42                                        ; i64.const
0001e75: 02                                        ; i64 literal
0001e76: 51                                        ; i64.eq
0001e77: 1a                                        ; drop
0001e78: 0b                                        ; end
0001e70: 08                                        ; FIXUP func body size
; function body 59
0001e79: 00                                        ; func body size (guess)
0001e7a: 00                                        ; local decl count
0001e7b: 42                                        ; i64.const
0001e7c: 01                                        ; i64 literal
0001e7d: 42                                        ; i64.const
0001e7e: 02                                        ; i64 literal
0001e7f: 52                                        ; i64.ne
0001e80: 1a                                        ; drop
0001e81: 0b                                        ; end
0001e79: 08                                        ; FIXUP func body size
; function body 60
0001e82: 00                                        ; func body size (guess)
0001e83: 00                                        ; local decl count
0001e84: 42                                        ; i64.const
0001e85: 01                                        ; i64 literal
0001e86: 42                                        ; i64.const
0001e87: 02                                        ; i64 literal
0001e88: 53                                        ; i64.lt_s
0001e89: 1a                                        ; drop
0001e8a: 0b                                        ; end
0001e82: 08                                        ; FIXUP func body size
; function body 61
0001e8b: 00                                        ; func body size (guess)
0001e8c: 00                                        ; local decl count
0001e8d: 42                                        ; i64.const
0001e8e: 01                                        ; i64 literal
0001e8f: 42                                        ; i64.const
0001e90: 02                                        ; i64 literal
0001e91: 54                                        ; i64.lt_u
0001e92: 1a                                        ; drop
0001e93: 0b                                        ; end
0001e8b: 08                                        ; FIXUP func body size
; function body 62
0001e94: 00                                        ; func body size (guess)
0001e95: 00                                        ; local decl count
0001e96: 42                                        ; i64.const
0001e97: 01                                        ; i64 literal
0001e98: 42                                        ; i64.const
0001e99: 02                                        ; i64 literal
0001e9a: 55                                        ; i64.gt_s
0001e9b: 1a                                        ; drop
0001e9c: 0b                                        ; end
0001e94: 08                                        ; FIXUP func body size
; function body 63
0001e9d: 00                                        ; func body size (guess)
0001e9e: 00                                        ; local decl count
0001e9f: 42                                        ; i64.const
0001ea0: 01                                        ; i64 literal
0001ea1: 42                                        ; i64.const
0001ea2: 02                                        ; i64 literal
0001ea3: 56                                        ; i64.gt_u
0001ea4: 1a                                        ; drop
0001ea5: 0b                                        ; end
0001e9d: 08                                        ; FIXUP func body size
; function body 64
0001ea6: 00                                        ; func body size (guess)
0001ea7: 00                                        ; local decl count
0001ea8: 42                                        ; i64.const
0001ea9: 01                                        ; i64 literal
0001eaa: 42                                        ; i64.const
0001eab: 02                                        ; i64 literal
0001eac: 57                                        ; i64.le_s
0001ead: 1a                                        ; drop
0001eae: 0b                                        ; end
0001ea6: 08                                        ; FIXUP func body size
; function body 65
0001eaf: 00                                        ; func body size (guess)
0001eb0: 00                                        ; local decl count
0001eb1: 42                                        ; i64.const
0001eb2: 01                                        ; i64 literal
0001eb3: 42                                        ; i64.const
0001eb4: 02                                        ; i64 literal
0001eb5: 58                                        ; i64.le_u
0001eb6: 1a                                        ; drop
0001eb7: 0b                                        ; end
0001eaf: 08                                        ; FIXUP func body size
; function body 66
0001eb8: 00                                        ; func body size (guess)
0001eb9: 00                                        ; local decl count
0001eba: 42                                        ; i64.const
0001ebb: 01                                        ; i64 literal
0001ebc: 42                                        ; i64.const
0001ebd: 02                                        ; i64 literal
0001ebe: 59                                        ; i64.ge_s
0001ebf: 1a                                        ; drop
0001ec0: 0b                                        ; end
0001eb8: 08                                        ; FIXUP func body size
; function body 67
0001ec1: 00                                        ; func body size (guess)
0001ec2: 00                                        ; local decl count
0001ec3: 42                                        ; i64.const
0001ec4: 01                                        ; i64 literal
0001ec5: 42                                        ; i64.const
0001ec6: 02                                        ; i64 literal
0001ec7: 5a                                        ; i64.ge_u
0001ec8: 1a                                        ; drop
0001ec9: 0b                                        ; end
0001ec1: 08                                        ; FIXUP func body size
; function body 68
0001eca: 00                                        ; func body size (guess)
0001ecb: 00                                        ; local decl count
0001ecc: 43                                        ; f32.const
0001ecd: 0000 803f                                 ; f32 literal
0001ed1: 43                                        ; f32.const
0001ed2: 0000 0040                                 ; f32 literal
0001ed6: 5b                                        ; f32.eq
0001ed7: 1a                                        ; drop
0001ed8: 0b                                        ; end
0001eca: 0e                                        ; FIXUP func body size
; function body 69
0001ed9: 00                                        ; func body size (guess)
0001eda: 00                                        ; local decl count
0001edb: 43                                        ; f32.const
0001edc: 0000 803f                                 ; f32 literal
0001ee0: 43                                        ; f32.const
0001ee1: 0000 0040                                 ; f32 literal
0001ee5: 5c                                        ; f32.ne
0001ee6: 1a                                        ; drop
0001ee7: 0b                                        ; end
0001ed9: 0e                                        ; FIXUP func body size
; function body 70
0001ee8: 00                                        ; func body size (guess)
0001ee9: 00                                        ; local decl count
0001eea: 43                                        ; f32.const
0001eeb: 0000 803f                                 ; f32 literal
0001eef: 43                                        ; f32.const
0001ef0: 0000 0040                                 ; f32 literal
0001ef4: 5d                                        ; f32.lt
0001ef5: 1a                                        ; drop
0001ef6: 0b                                        ; end
0001ee8: 0e                                        ; FIXUP func body size
; function body 71
0001ef7: 00                                        ; func body size (guess)
0001ef8: 00                                        ; local decl count
0001ef9: 43                                        ; f32.const
0001efa: 0000 803f                                 ; f32 literal
0001efe: 43                                        ; f32.const
0001eff: 0000 0040                                 ; f32 literal
0001f03: 5e                                        ; f32.gt
0001f04: 1a                                        ; drop
0001f05: 0b                                        ; end
0001ef7: 0e                                        ; FIXUP func body size
; function body 72
0001f06: 00                                        ; func body size (guess)
0001f07: 00                                        ; local decl count
0001f08: 43                                        ; f32.const
0001f09: 0000 803f                                 ; f32 literal
0001f0d: 43                                        ; f32.const
0001f0e: 0000 0040                                 ; f32 literal
0001f12: 5f                                        ; f32.le
0001f13: 1a                                        ; drop
0001f14: 0b                                        ; end
0001f06: 0e                                        ; FIXUP func body size
; function body 73
0001f15: 00                                        ; func body size (guess)
0001f16: 00                                        ; local decl count
0001f17: 43                                        ; f32.const
0001f18: 0000 803f                                 ; f32 literal
0001f1c: 43                                        ; f32.const
0001f1d: 0000 0040                                 ; f32 literal
0001f21: 60                                        ; f32.ge
0001f22: 1a                                        ; drop
0001f23: 0b                                        ; end
0001f15: 0e                                        ; FIXUP func body size
; function body 74
0001f24: 00                                        ; func body size (guess)
0001f25: 00                                        ; local decl count
0001f26: 44                                        ; f64.const
0001f27: 0000 0000 0000 f03f                       ; f64 literal
0001f2f: 44                                        ; f64.const
0001f30: 0000 0000 0000 0040                       ; f64 literal
0001f38: 61                                        ; f64.eq
0001f39: 1a                                        ; drop
0001f3a: 0b                                        ; end
0001f24: 16                                        ; FIXUP func body size
; function body 75
0001f3b: 00                                        ; func body size (guess)
0001f3c: 00                                        ; local decl count
0001f3d: 44                                        ; f64.const
0001f3e: 0000 0000 0000 f03f                       ; f64 literal
0001f46: 44                                        ; f64.const
0001f47: 0000 0000 0000 0040                       ; f64 literal
0001f4f: 62                                        ; f64.ne
0001f50: 1a                                        ; drop
0001f51: 0b                                        ; end
0001f3b: 16                                        ; FIXUP func body size
; function body 76
0001f52: 00                                        ; func body size (guess)
0001f53: 00                                        ; local decl count
0001f54: 44                                        ; f64.const
0001f55: 0000 0000 0000 f03f                       ; f64 literal
0001f5d: 44                                        ; f64.const
0001f5e: 0000 0000 0000 0040                       ; f64 literal
0001f66: 63                                        ; f64.lt
0001f67: 1a                                        ; drop
0001f68: 0b                                        ; end
0001f52: 16                                        ; FIXUP func body size
; function body 77
0001f69: 00                                        ; func body size (guess)
0001f6a: 00                                        ; local decl count
0001f6b: 44                                        ; f64.const
0001f6c: 0000 0000 0000 f03f                       ; f64 literal
0001f74: 44                                        ; f64.const
0001f75: 0000 0000 0000 0040                       ; f64 literal
0001f7d: 64                                        ; f64.gt
0001f7e: 1a                                        ; drop
0001f7f: 0b                                        ; end
0001f69: 16                                        ; FIXUP func body size
; function body 78
0001f80: 00                                        ; func body size (guess)
0001f81: 00                                        ; local decl count
0001f82: 44                                        ; f64.const
0001f83: 0000 0000 0000 f03f                       ; f64 literal
0001f8b: 44                                        ; f64.const
0001f8c: 0000 0000 0000 0040                       ; f64 literal
0001f94: 65                                        ; f64.le
0001f95: 1a                                        ; drop
0001f96: 0b                                        ; end
0001f80: 16                                        ; FIXUP func body size
; function body 79
0001f97: 00                                        ; func body size (guess)
0001f98: 00                                        ; local decl count
0001f99: 44                                        ; f64.const
0001f9a: 0000 0000 0000 f03f                       ; f64 literal
0001fa2: 44                                        ; f64.const
0001fa3: 0000 0000 0000 0040                       ; f64 literal
0001fab: 66                                        ; f64.ge
0001fac: 1a                                        ; drop
0001fad: 0b                                        ; end
0001f97: 16                                        ; FIXUP func body size
; function body 80
0001fae: 00                                        ; func body size (guess)
0001faf: 00                                        ; local decl count
0001fb0: 41                                        ; i32.const
0001fb1: 01                                        ; i32 literal
0001fb2: 67                                        ; i32.clz
0001fb3: 1a                                        ; drop
0001fb4: 0b                                        ; end
0001fae: 06                                        ; FIXUP func body size
; function body 81
0001fb5: 00                                        ; func body size (guess)
0001fb6: 00                                        ; local decl count
0001fb7: 41                                        ; i32.const
0001fb8: 01                                        ; i32 literal
0001fb9: 68                                        ; i32.ctz
0001fba: 1a                                        ; drop
0001fbb: 0b                                        ; end
0001fb5: 06                                        ; FIXUP func body size
; function body 82
0001fbc: 00                                        ; func body size (guess)
0001fbd: 00                                        ; local decl count
0001fbe: 41                                        ; i32.const
0001fbf: 01                                        ; i32 literal
0001fc0: 69                                        ; i32.popcnt
0001fc1: 1a                                        ; drop
0001fc2: 0b                                        ; end
0001fbc: 06                                        ; FIXUP func body size
; function body 83
0001fc3: 00                                        ; func body size (guess)
0001fc4: 00                                        ; local decl count
0001fc5: 41                                        ; i32.const
0001fc6: 01                                        ; i32 literal
0001fc7: 41                                        ; i32.const
0001fc8: 02                                        ; i32 literal
0001fc9: 6a                                        ; i32.add
0001fca: 1a                                        ; drop
0001fcb: 0b                                        ; end
0001fc3: 08                                        ; FIXUP func body size
; function body 84
0001fcc: 00                                        ; func body size (guess)
0001fcd: 00                                        ; local decl count
0001fce: 41                                        ; i32.const
0001fcf: 01                                        ; i32 literal
0001fd0: 41                                        ; i32.const
0001fd1: 02                                        ; i32 literal
0001fd2: 6b                                        ; i32.sub
0001fd3: 1a                                        ; drop
0001fd4: 0b                                        ; end
0001fcc: 08                                        ; FIXUP func body size
; function body 85
0001fd5: 00                                        ; func body size (guess)
0001fd6: 00                                        ; local decl count
0001fd7: 41                                        ; i32.const
0001fd8: 01                                        ; i32 literal
0001fd9: 41                                        ; i32.const
0001fda: 02                                        ; i32 literal
0001fdb: 6c                                        ; i32.mul
0001fdc: 1a                                        ; drop
0001fdd: 0b                                        ; end
0001fd5: 08                                        ; FIXUP func body size
; function body 86
0001fde: 00                                        ; func body size (guess)
0001fdf: 00                                        ; local decl count
0001fe0: 41                                        ; i32.const
0001fe1: 01                                        ; i32 literal
0001fe2: 41                                        ; i32.const
0001fe3: 02                                        ; i32 literal
0001fe4: 6d                                        ; i32.div_s
0001fe5: 1a                                        ; drop
0001fe6: 0b                                        ; end
0001fde: 08                                        ; FIXUP func body size
; function body 87
0001fe7: 00                                        ; func body size (guess)
0001fe8: 00                                        ; local decl count
0001fe9: 41                                        ; i32.const
0001fea: 01                                        ; i32 literal
0001feb: 41                                        ; i32.const
0001fec: 02                                        ; i32 literal
0001fed: 6e                                        ; i32.div_u
0001fee: 1a                                        ; drop
0001fef: 0b                                        ; end
0001fe7: 08                                        ; FIXUP func body size
; function body 88
0001ff0: 00                                        ; func body size (guess)
0001ff1: 00                                        ; local decl count
0001ff2: 41                                        ; i32.const
0001ff3: 01                                        ; i32 literal
0001ff4: 41                                        ; i32.const
0001ff5: 02                                        ; i32 literal
0001ff6: 6f                                        ; i32.rem_s
0001ff7: 1a                                        ; drop
0001ff8: 0b                                        ; end
0001ff0: 08                                        ; FIXUP func body size
; function body 89
0001ff9: 00                                        ; func body size (guess)
0001ffa: 00                                        ; local decl count
0001ffb: 41                                        ; i32.const
0001ffc: 01                                        ; i32 literal
0001ffd: 41                                        ; i32.const
0001ffe: 02                                        ; i32 literal
0001fff: 70                                        ; i32.rem_u
0002000: 1a                                        ; drop
0002001: 0b                                        ; end
0001ff9: 08                                        ; FIXUP func body size
; function body 90
0002002: 00                                        ; func body size (guess)
0002003: 00                                        ; local decl count
0002004: 41                                        ; i32.const
0002005: 01                                        ; i32 literal
0002006: 41                                        ; i32.const
0002007: 02                                        ; i32 literal
0002008: 71                                        ; i32.and
0002009: 1a                                        ; drop
000200a: 0b                                        ; end
0002002: 08                                        ; FIXUP func body size
; function body 91
000200b: 00                                        ; func body size (guess)
000200c: 00                                        ; local decl count
000200d: 41                                        ; i32.const
000200e: 01                                        ; i32 literal
000200f: 41                                        ; i32.const
0002010: 02                                        ; i32 literal
0002011: 72                                        ; i32.or
0002012: 1a                                        ; drop
0002013: 0b                                        ; end
000200b: 08                                        ; FIXUP func body size
; function body 92
0002014: 00                                        ; func body size (guess)
0002015: 00                                        ; local decl count
0002016: 41                                        ; i32.const
0002017: 01                                        ; i32 literal
0002018: 41                                        ; i32.const
0002019: 02                                        ; i32 literal
000201a: 73                                        ; i32.xor
000201b: 1a                                        ; drop
000201c: 0b                                        ; end
0002014: 08                                        ; FIXUP func body size
; function body 93
000201d: 00                                        ; func body size (guess)
000201e: 00                                        ; local decl count
000201f: 41                                        ; i32.const
0002020: 01                                        ; i32 literal
0002021: 41                                        ; i32.const
0002022: 02                                        ; i32 literal
0002023: 74                                        ; i32.shl
0002024: 1a                                        ; drop
0002025: 0b                                        ; end
000201d: 08                                        ; FIXUP func body size
; function body 94
0002026: 00                                        ; func body size (guess)
0002027: 00                                        ; local decl count
0002028: 41                                        ; i32.const
0002029: 01                                        ; i32 literal
000202a: 41                                        ; i32.const
000202b: 02                                        ; i32 literal
000202c: 75                                        ; i32.shr_s
000202d: 1a                                        ; drop
000202e: 0b                                        ; end
0002026: 08                                        ; FIXUP func body size
; function body 95
000202f: 00                                        ; func body size (guess)
0002030: 00                                        ; local decl count
0002031: 41                                        ; i32.const
0002032: 01                                        ; i32 literal
0002033: 41                                        ; i32.const
0002034: 02                                        ; i32 literal
0002035: 76                                        ; i32.shr_u
0002036: 1a                                        ; drop
0002037: 0b                                        ; end
000202f: 08                                        ; FIXUP func body size
; function body 96
0002038: 00                                        ; func body size (guess)
0002039: 00                                        ; local decl count
000203a: 41                                        ; i32.const
000203b: 01                                        ; i32 literal
000203c: 41                                        ; i32.const
000203d: 02                                        ; i32 literal
000203e: 77                                        ; i32.rotl
000203f: 1a                                        ; drop
0002040: 0b                                        ; end
0002038: 08                                        ; FIXUP func body size
; function body 97
0002041: 00                                        ; func body size (guess)
0002042: 00                                        ; local decl count
0002043: 41                                        ; i32.const
0002044: 01                                        ; i32 literal
0002045: 41                                        ; i32.const
0002046: 02                                        ; i32 literal
0002047: 78                                        ; i32.rotr
0002048: 1a                                        ; drop
0002049: 0b                                        ; end
0002041: 08                                        ; FIXUP func body size
; function body 98
000204a: 00                                        ; func body size (guess)
000204b: 00                                        ; local decl count
000204c: 42                                        ; i64.const
000204d: 01                                        ; i64 literal
000204e: 79                                        ; i64.clz
000204f: 1a                                        ; drop
0002050: 0b                                        ; end
000204a: 06                                        ; FIXUP func body size
; function body 99
0002051: 00                                        ; func body size (guess)
0002052: 00                                        ; local decl count
0002053: 42                                        ; i64.const
0002054: 01                                        ; i64 literal
0002055: 7a                                        ; i64.ctz
0002056: 1a                                        ; drop
0002057: 0b                                        ; end
0002051: 06                                        ; FIXUP func body size
; function body 100
0002058: 00                                        ; func body size (guess)
0002059: 00                                        ; local decl count
000205a: 42                                        ; i64.const
000205b: 01                                        ; i64 literal
000205c: 7b                                        ; i64.popcnt
000205d: 1a                                        ; drop
000205e: 0b                                        ; end
0002058: 06                                        ; FIXUP func body size
; function body 101
000205f: 00                                        ; func body size (guess)
0002060: 00                                        ; local decl count
0002061: 42                                        ; i64.const
0002062: 01                                        ; i64 literal
0002063: 42                                        ; i64.const
0002064: 02                                        ; i64 literal
0002065: 7c                                        ; i64.add
0002066: 1a                                        ; drop
0002067: 0b                                        ; end
000205f: 08                                        ; FIXUP func body size
; function body 102
0002068: 00                                        ; func body size (guess)
0002069: 00                                        ; local decl count
000206a: 42                                        ; i64.const
000206b: 01                                        ; i64 literal
000206c: 42                                        ; i64.const
000206d: 02                                        ; i64 literal
000206e: 7d                                        ; i64.sub
000206f: 1a                                        ; drop
0002070: 0b                                        ; end
0002068: 08                                        ; FIXUP func body size
; function body 103
0002071: 00                                        ; func body size (guess)
0002072: 00                                        ; local decl count
0002073: 42                                        ; i64.const
0002074: 01                                        ; i64 literal
0002075: 42                                        ; i64.const
0002076: 02                                        ; i64 literal
0002077: 7e                                        ; i64.mul
0002078: 1a                                        ; drop
0002079: 0b                                        ; end
0002071: 08                                        ; FIXUP func body size
; function body 104
000207a: 00                                        ; func body size (guess)
000207b: 00                                        ; local decl count
000207c: 42                                        ; i64.const
000207d: 01                                        ; i64 literal
000207e: 42                                        ; i64.const
000207f: 02                                        ; i64 literal
0002080: 7f                                        ; i64.div_s
0002081: 1a                                        ; drop
0002082: 0b                                        ; end
000207a: 08                                        ; FIXUP func body size
; function body 105
0002083: 00                                        ; func body size (guess)
0002084: 00                                        ; local decl count
0002085: 42                                        ; i64.const
0002086: 01                                        ; i64 literal
0002087: 42                                        ; i64.const
0002088: 02                                        ; i64 literal
0002089: 80                                        ; i64.div_u
000208a: 1a                                        ; drop
000208b: 0b                                        ; end
0002083: 08                                        ; FIXUP func body size
; function body 106
000208c: 00                                        ; func body size (guess)
000208d: 00                                        ; local decl count
000208e: 42                                        ; i64.const
000208f: 01                                        ; i64 literal
0002090: 42                                        ; i64.const
0002091: 02                                        ; i64 literal
0002092: 81                                        ; i64.rem_s
0002093: 1a                                        ; drop
0002094: 0b                                        ; end
000208c: 08                                        ; FIXUP func body size
; function body 107
0002095: 00                                        ; func body size (guess)
0002096: 00                                        ; local decl count
0002097: 42                                        ; i64.const
0002098: 01                                        ; i64 literal
0002099: 42                                        ; i64.const
000209a: 02                                        ; i64 literal
000209b: 82                                        ; i64.rem_u
000209c: 1a                                        ; drop
000209d: 0b                                        ; end
0002095: 08                                        ; FIXUP func body size
; function body 108
000209e: 00                                        ; func body size (guess)
000209f: 00                                        ; local decl count
00020a0: 42                                        ; i64.const
00020a1: 01                                        ; i64 literal
00020a2: 42                                        ; i64.const
00020a3: 02                                        ; i64 literal
00020a4: 83                                        ; i64.and
00020a5: 1a                                        ; drop
00020a6: 0b                                        ; end
000209e: 08                                        ; FIXUP func body size
; function body 109
00020a7: 00                                        ; func body size (guess)
00020a8: 00                                        ; local decl count
00020a9: 42                                        ; i64.const
00020aa: 01                                        ; i64 literal
00020ab: 42                                        ; i64.const
00020ac: 02                                        ; i64 literal
00020ad: 84                                        ; i64.or
00020ae: 1a                                        ; drop
00020af: 0b                                        ; end
00020a7: 08                                        ; FIXUP func body size
; function body 110
00020b0: 00                                        ; func body size (guess)
00020b1: 00                                        ; local decl count
00020b2: 42                                        ; i64.const
00020b3: 01                                        ; i64 literal
00020b4: 42                                        ; i64.const
00020b5: 02                                        ; i64 literal
00020b6: 85                                        ; i64.xor
00020b7: 1a                                        ; drop
00020b8: 0b                                        ; end
00020b0: 08                                        ; FIXUP func body size
; function body 111
00020b9: 00                                        ; func body size (guess)
00020ba: 00                                        ; local decl count
00020bb: 42                                        ; i64.const
00020bc: 01                                        ; i64 literal
00020bd: 42                                        ; i64.const
00020be: 02                                        ; i64 literal
00020bf: 86                                        ; i64.shl
00020c0: 1a                                        ; drop
00020c1: 0b                                        ; end
00020b9: 08                                        ; FIXUP func body size
; function body 112
00020c2: 00                                        ; func body size (guess)
00020c3: 00                                        ; local decl count
00020c4: 42                                        ; i64.const
00020c5: 01                                        ; i64 literal
00020c6: 42                                        ; i64.const
00020c7: 02                                        ; i64 literal
00020c8: 87                                        ; i64.shr_s
00020c9: 1a                                        ; drop
00020ca: 0b                                        ; end
00020c2: 08                                        ; FIXUP func body size
; function body 113
00020cb: 00                                        ; func body size (guess)
00020cc: 00                                        ; local decl count
00020cd: 42                                        ; i64.const
00020ce: 01                                        ; i64 literal
00020cf: 42                                        ; i64.const
00020d0: 02                                        ; i64 literal
00020d1: 88                                        ; i64.shr_u
00020d2: 1a                                        ; drop
00020d3: 0b                                        ; end
00020cb: 08                                        ; FIXUP func body size
; function body 114
00020d4: 00                                        ; func body size (guess)
00020d5: 00                                        ; local decl count
00020d6: 42                                        ; i64.const
00020d7: 01                                        ; i64 literal
00020d8: 42                                        ; i64.const
00020d9: 02                                        ; i64 literal
00020da: 89                                        ; i64.rotl
00020db: 1a                                        ; drop
00020dc: 0b                                        ; end
00020d4: 08                                        ; FIXUP func body size
; function body 115
00020dd: 00                                        ; func body size (guess)
00020de: 00                                        ; local decl count
00020df: 42                                        ; i64.const
00020e0: 01                                        ; i64 literal
00020e1: 42                                        ; i64.const
00020e2: 02                                        ; i64 literal
00020e3: 8a                                        ; i64.rotr
00020e4: 1a                                        ; drop
00020e5: 0b                                        ; end
00020dd: 08                                        ; FIXUP func body size
; function body 116
00020e6: 00                                        ; func body size (guess)
00020e7: 00                                        ; local decl count
00020e8: 43                                        ; f32.const
00020e9: 0000 803f                                 ; f32 literal
00020ed: 8b                                        ; f32.abs
00020ee: 1a                                        ; drop
00020ef: 0b                                        ; end
00020e6: 09                                        ; FIXUP func body size
; function body 117
00020f0: 00                                        ; func body size (guess)
00020f1: 00                                        ; local decl count
00020f2: 43                                        ; f32.const
00020f3: 0000 803f                                 ; f32 literal
00020f7: 8c                                        ; f32.neg
00020f8: 1a                                        ; drop
00020f9: 0b                                        ; end
00020f0: 09                                        ; FIXUP func body size
; function body 118
00020fa: 00                                        ; func body size (guess)
00020fb: 00                                        ; local decl count
00020fc: 43                                        ; f32.const
00020fd: 0000 803f                                 ; f32 literal
0002101: 8d                                        ; f32.ceil
0002102: 1a                                        ; drop
0002103: 0b                                        ; end
00020fa: 09                                        ; FIXUP func body size
; function body 119
0002104: 00                                        ; func body size (guess)
0002105: 00                                        ; local decl count
0002106: 43                                        ; f32.const
0002107: 0000 803f                                 ; f32 literal
000210b: 8e                                        ; f32.floor
000210c: 1a                                        ; drop
000210d: 0b                                        ; end
0002104: 09                                        ; FIXUP func body size
; function body 120
000210e: 00                                        ; func body size (guess)
000210f: 00                                        ; local decl count
0002110: 43                                        ; f32.const
0002111: 0000 803f                                 ; f32 literal
0002115: 8f                                        ; f32.trunc
0002116: 1a                                        ; drop
0002117: 0b                                        ; end
000210e: 09                                        ; FIXUP func body size
; function body 121
0002118: 00                                        ; func body size (guess)
0002119: 00                                        ; local decl count
000211a: 43                                        ; f32.const
000211b: 0000 803f                                 ; f32 literal
000211f: 90                                        ; f32.nearest
0002120: 1a                                        ; drop
0002121: 0b                                        ; end
0002118: 09                                        ; FIXUP func body size
; function body 122
0002122: 00                                        ; func body size (guess)
0002123: 00                                        ; local decl count
0002124: 43                                        ; f32.const
0002125: 0000 803f                                 ; f32 literal
0002129: 91                                        ; f32.sqrt
000212a: 1a                                        ; drop
000212b: 0b                                        ; end
0002122: 09                                        ; FIXUP func body size
; function body 123
000212c: 00                                        ; func body size (guess)
000212d: 00                                        ; local decl count
000212e: 43                                        ; f32.const
000212f: 0000 803f                                 ; f32 literal
0002133: 43                                        ; f32.const
0002134: 0000 0040                                 ; f32 literal
0002138: 92                                        ; f32.add
0002139: 1a                                        ; drop
000213a: 0b                                        ; end
000212c: 0e                                        ; FIXUP func body size
; function body 124
000213b: 00                                        ; func body size (guess)
000213c: 00                                        ; local decl count
000213d: 43                                        ; f32.const
000213e: 0000 803f                                 ; f32 literal
0002142: 43                                        ; f32.const
0002143: 0000 0040                                 ; f32 literal
0002147: 93                                        ; f32.sub
0002148: 1a                                        ; drop
0002149: 0b                                        ; end
000213b: 0e                                        ; FIXUP func body size
; function body 125
000214a: 00                                        ; func body size (guess)
000214b: 00                                        ; local decl count
000214c: 43                                        ; f32.const
000214d: 0000 803f                                 ; f32 literal
0002151: 43                                        ; f32.const
0002152: 0000 0040                                 ; f32 literal
0002156: 94                                        ; f32.mul
0002157: 1a                                        ; drop
0002158: 0b                                        ; end
000214a: 0e                                        ; FIXUP func body size
; function body 126
0002159: 00                                        ; func body size (guess)
000215a: 00                                        ; local decl count
000215b: 43                                        ; f32.const
000215c: 0000 803f                                 ; f32 literal
0002160: 43                                        ; f32.const
0002161: 0000 0040                                 ; f32 literal
0002165: 95                                        ; f32.div
0002166: 1a                                        ; drop
0002167: 0b                                        ; end
0002159: 0e                                        ; FIXUP func body size
; function body 127
0002168: 00                                        ; func body size (guess)
0002169: 00                                        ; local decl count
000216a: 43                                        ; f32.const
000216b: 0000 803f                                 ; f32 literal
000216f: 43                                        ; f32.const
0002170: 0000 0040                                 ; f32 literal
0002174: 96                                        ; f32.min
0002175: 1a                                        ; drop
0002176: 0b                                        ; end
0002168: 0e                                        ; FIXUP func body size
; function body 128
0002177: 00                                        ; func body size (guess)
0002178: 00                                        ; local decl count
0002179: 43                                        ; f32.const
000217a: 0000 803f                                 ; f32 literal
000217e: 43                                        ; f32.const
000217f: 0000 0040                                 ; f32 literal
0002183: 97                                        ; f32.max
0002184: 1a                                        ; drop
0002185: 0b                                        ; end
0002177: 0e                                        ; FIXUP func body size
; function body 129
0002186: 00                                        ; func body size (guess)
0002187: 00                                        ; local decl count
0002188: 43                                        ; f32.const
0002189: 0000 803f                                 ; f32 literal
000218d: 43                                        ; f32.const
000218e: 0000 0040                                 ; f32 literal
0002192: 98                                        ; f32.copysign
0002193: 1a                                        ; drop
0002194: 0b                                        ; end
0002186: 0e                                        ; FIXUP func body size
; function body 130
0002195: 00                                        ; func body size (guess)
0002196: 00                                        ; local decl count
0002197: 44                                        ; f64.const
0002198: 0000 0000 0000 f03f                       ; f64 literal
00021a0: 99                                        ; f64.abs
00021a1: 1a                                        ; drop
00021a2: 0b                                        ; end
0002195: 0d                                        ; FIXUP func body size
; function body 131
00021a3: 00                                        ; func body size (guess)
00021a4: 00                                        ; local decl count
00021a5: 44                                        ; f64.const
00021a6: 0000 0000 0000 f03f                       ; f64 literal
00021ae: 9a                                        ; f64.neg
00021af: 1a                                        ; drop
00021b0: 0b                                        ; end
00021a3: 0d                                        ; FIXUP func body size
; function body 132
00021b1: 00                                        ; func body size (guess)
00021b2: 00                                        ; local decl count
00021b3: 44                                        ; f64.const
00021b4: 0000 0000 0000 f03f                       ; f64 literal
00021bc: 9b                                        ; f64.ceil
00021bd: 1a                                        ; drop
00021be: 0b                                        ; end
00021b1: 0d                                        ; FIXUP func body size
; function body 133
00021bf: 00                                        ; func body size (guess)
00021c0: 00                                        ; local decl count
00021c1: 44                                        ; f64.const
00021c2: 0000 0000 0000 f03f                       ; f64 literal
00021ca: 9c                                        ; f64.floor
00021cb: 1a                                        ; drop
00021cc: 0b                                        ; end
00021bf: 0d                                        ; FIXUP func body size
; function body 134
00021cd: 00                                        ; func body size (guess)
00021ce: 00                                        ; local decl count
00021cf: 44                                        ; f64.const
00021d0: 0000 0000 0000 f03f                       ; f64 literal
00021d8: 9d                                        ; f64.trunc
00021d9: 1a                                        ; drop
00021da: 0b                                        ; end
00021cd: 0d                                        ; FIXUP func body size
; function body 135
00021db: 00                                        ; func body size (guess)
00021dc: 00                                        ; local decl count
00021dd: 44                                        ; f64.const
00021de: 0000 0000 0000 f03f                       ; f64 literal
00021e6: 9e                                        ; f64.nearest
00021e7: 1a                                        ; drop
00021e8: 0b                                        ; end
00021db: 0d                                        ; FIXUP func body size
; function body 136
00021e9: 00                                        ; func body size (guess)
00021ea: 00                                        ; local decl count
00021eb: 44                                        ; f64.const
00021ec: 0000 0000 0000 f03f                       ; f64 literal
00021f4: 9f                                        ; f64.sqrt
00021f5: 1a                                        ; drop
00021f6: 0b                                        ; end
00021e9: 0d                                        ; FIXUP func body size
; function body 137
00021f7: 00                                        ; func body size (guess)
00021f8: 00                                        ; local decl count
00021f9: 44                                        ; f64.const
00021fa: 0000 0000 0000 f03f                       ; f64 literal
0002202: 44                                        ; f64.const
0002203: 0000 0000 0000 0040                       ; f64 literal
000220b: a0                                        ; f64.add
000220c: 1a                                        ; drop
000220d: 0b                                        ; end
00021f7: 16                                        ; FIXUP func body size
; function body 138
000220e: 00                                        ; func body size (guess)
000220f: 00                                        ; local decl count
0002210: 44                                        ; f64.const
0002211: 0000 0000 0000 f03f                       ; f64 literal
0002219: 44                                        ; f64.const
000221a: 0000 0000 0000 0040                       ; f64 literal
0002222: a1                                        ; f64.sub
0002223: 1a                                        ; drop
0002224: 0b                                        ; end
000220e: 16                                        ; FIXUP func body size
; function body 139
0002225: 00                                        ; func body size (guess)
0002226: 00                                        ; local decl count
0002227: 44                                        ; f64.const
0002228: 0000 0000 0000 f03f                       ; f64 literal
0002230: 44                                        ; f64.const
0002231: 0000 0000 0000 0040                       ; f64 literal
0002239: a2                                        ; f64.mul
000223a: 1a                                        ; drop
000223b: 0b                                        ; end
0002225: 16                                        ; FIXUP func body size
; function body 140
000223c: 00                                        ; func body size (guess)
000223d: 00                                        ; local decl count
000223e: 44                                        ; f64.const
000223f: 0000 0000 0000 f03f                       ; f64 literal
0002247: 44                                        ; f64.const
0002248: 0000 0000 0000 0040                       ; f64 literal
0002250: a3                                        ; f64.div
0002251: 1a                                        ; drop
0002252: 0b                                        ; end
000223c: 16                                        ; FIXUP func body size
; function body 141
0002253: 00                                        ; func body size (guess)
0002254: 00                                        ; local decl count
0002255: 44                                        ; f64.const
0002256: 0000 0000 0000 f03f                       ; f64 literal
000225e: 44                                        ; f64.const
000225f: 0000 0000 0000 0040                       ; f64 literal
0002267: a4                                        ; f64.min
0002268: 1a                                        ; drop
0002269: 0b                                        ; end
0002253: 16                                        ; FIXUP func body size
; function body 142
000226a: 00                                        ; func body size (guess)
000226b: 00                                        ; local decl count
000226c: 44                                        ; f64.const
000226d: 0000 0000 0000 f03f                       ; f64 literal
0002275: 44                                        ; f64.const
0002276: 0000 0000 0000 0040                       ; f64 literal
000227e: a5                                        ; f64.max
000227f: 1a                                        ; drop
0002280: 0b                                        ; end
000226a: 16                                        ; FIXUP func body size
; function body 143
0002281: 00                                        ; func body size (guess)
0002282: 00                                        ; local decl count
0002283: 44                                        ; f64.const
0002284: 0000 0000 0000 f03f                       ; f64 literal
000228c: 44                                        ; f64.const
000228d: 0000 0000 0000 0040                       ; f64 literal
0002295: a6                                        ; f64.copysign
0002296: 1a                                        ; drop
0002297: 0b                                        ; end
0002281: 16                                        ; FIXUP func body size
; function body 144
0002298: 00                                        ; func body size (guess)
0002299: 00                                        ; local decl count
000229a: 42                                        ; i64.const
000229b: 01                                        ; i64 literal
000229c: a7                                        ; i32.wrap_i64
000229d: 1a                                        ; drop
000229e: 0b                                        ; end
0002298: 06                                        ; FIXUP func body size
; function body 145
000229f: 00                                        ; func body size (guess)
00022a0: 00                                        ; local decl count
00022a1: 43                                        ; f32.const
00022a2: 0000 803f                                 ; f32 literal
00022a6: a8                                        ; i32.trunc_f32_s
00022a7: 1a                                        ; drop
00022a8: 0b                                        ; end
000229f: 09                                        ; FIXUP func body size
; function body 146
00022a9: 00                                        ; func body size (guess)
00022aa: 00                                        ; local decl count
00022ab: 43                                        ; f32.const
00022ac: 0000 803f                                 ; f32 literal
00022b0: a9                                        ; i32.trunc_f32_u
00022b1: 1a                                        ; drop
00022b2: 0b                                        ; end
00022a9: 09                                        ; FIXUP func body size
; function body 147
00022b3: 00                                        ; func body size (guess)
00022b4: 00                                        ; local decl count
00022b5: 44                                        ; f64.const
00022b6: 0000 0000 0000 f03f                       ; f64 literal
00022be: aa                                        ; i32.trunc_f64_s
00022bf: 1a                                        ; drop
00022c0: 0b                                        ; end
00022b3: 0d                                        ; FIXUP func body size
; function body 148
00022c1: 00                                        ; func body size (guess)
00022c2: 00                                        ; local decl count
00022c3: 44                                        ; f64.const
00022c4: 0000 0000 0000 f03f                       ; f64 literal
00022cc: ab                                        ; i32.trunc_f64_u
00022cd: 1a                                        ; drop
00022ce: 0b                                        ; end
00022c1: 0d                                        ; FIXUP func body size
; function body 149
00022cf: 00                                        ; func body size (guess)
00022d0: 00                                        ; local decl count
00022d1: 41                                        ; i32.const
00022d2: 01                                        ; i32 literal
00022d3: ac                                        ; i64.extend_i32_s
00022d4: 1a                                        ; drop
00022d5: 0b                                        ; end
00022cf: 06                                        ; FIXUP func body size
; function body 150
00022d6: 00                                        ; func body size (guess)
00022d7: 00                                        ; local decl count
00022d8: 41                                        ; i32.const
00022d9: 01                                        ; i32 literal
00022da: ad                                        ; i64.extend_i32_u
00022db: 1a                                        ; drop
00022dc: 0b                                        ; end
00022d6: 06                                        ; FIXUP func body size
; function body 151
00022dd: 00                                        ; func body size (guess)
00022de: 00                                        ; local decl count
00022df: 43                                        ; f32.const
00022e0: 0000 803f                                 ; f32 literal
00022e4: ae                                        ; i64.trunc_f32_s
00022e5: 1a                                        ; drop
00022e6: 0b                                        ; end
00022dd: 09                                        ; FIXUP func body size
; function body 152
00022e7: 00                                        ; func body size (guess)
00022e8: 00                                        ; local decl count
00022e9: 43                                        ; f32.const
00022ea: 0000 803f                                 ; f32 literal
00022ee: af                                        ; i64.trunc_f32_u
00022ef: 1a                                        ; drop
00022f0: 0b                                        ; end
00022e7: 09                                        ; FIXUP func body size
; function body 153
00022f1: 00                                        ; func body size (guess)
00022f2: 00                                        ; local decl count
00022f3: 44                                        ; f64.const
00022f4: 0000 0000 0000 f03f                       ; f64 literal
00022fc: b0                                        ; i64.trunc_f64_s
00022fd: 1a                                        ; drop
00022fe: 0b                                        ; end
00022f1: 0d                                        ; FIXUP func body size
; function body 154
00022ff: 00                                        ; func body size (guess)
0002300: 00                                        ; local decl count
0002301: 44                                        ; f64.const
0002302: 0000 0000 0000 f03f                       ; f64 literal
000230a: b1                                        ; i64.trunc_f64_u
000230b: 1a                                        ; drop
000230c: 0b                                        ; end
00022ff: 0d                                        ; FIXUP func body size
; function body 155
000230d: 00                                        ; func body size (guess)
000230e: 00                                        ; local decl count
000230f: 41                                        ; i32.const
0002310: 01                                        ; i32 literal
0002311: b2                                        ; f32.convert_i32_s
0002312: 1a                                        ; drop
0002313: 0b                                        ; end
000230d: 06                                        ; FIXUP func body size
; function body 156
0002314: 00                                        ; func body size (guess)
0002315: 00                                        ; local decl count
0002316: 41                                        ; i32.const
0002317: 01                                        ; i32 literal
0002318: b3                                        ; f32.convert_i32_u
0002319: 1a                                        ; drop
000231a: 0b                                        ; end
0002314: 06                                        ; FIXUP func body size
; function body 157
000231b: 00                                        ; func body size (guess)
000231c: 00                                        ; local decl count
000231d: 42                                        ; i64.const
000231e: 01                                        ; i64 literal
000231f: b4                                        ; f32.convert_i64_s
0002320: 1a                                        ; drop
0002321: 0b                                        ; end
000231b: 06                                        ; FIXUP func body size
; function body 158
0002322: 00                                        ; func body size (guess)
0002323: 00                                        ; local decl count
0002324: 42                                        ; i64.const
0002325: 01                                        ; i64 literal
0002326: b5                                        ; f32.convert_i64_u
0002327: 1a                                        ; drop
0002328: 0b                                        ; end
0002322: 06                                        ; FIXUP func body size
; function body 159
0002329: 00                                        ; func body size (guess)
000232a: 00                                        ; local decl count
000232b: 44                                        ; f64.const
000232c: 0000 0000 0000 f03f                       ; f64 literal
0002334: b6                                        ; f32.demote_f64
0002335: 1a                                        ; drop
0002336: 0b                                        ; end
0002329: 0d                                        ; FIXUP func body size
; function body 160
0002337: 00                                        ; func body size (guess)
0002338: 00                                        ; local decl count
0002339: 41                                        ; i32.const
000233a: 01                                        ; i32 literal
000233b: b7                                        ; f64.convert_i32_s
000233c: 1a                                        ; drop
000233d: 0b                                        ; end
0002337: 06                                        ; FIXUP func body size
; function body 161
000233e: 00                                        ; func body size (guess)
000233f: 00                                        ; local decl count
0002340: 41                                        ; i32.const
0002341: 01                                        ; i32 literal
0002342: b8                                        ; f64.convert_i32_u
0002343: 1a                                        ; drop
0002344: 0b                                        ; end
000233e: 06                                        ; FIXUP func body size
; function body 162
0002345: 00                                        ; func body size (guess)
0002346: 00                                        ; local decl count
0002347: 42                                        ; i64.const
0002348: 01                                        ; i64 literal
0002349: b9                                        ; f64.convert_i64_s
000234a: 1a                                        ; drop
000234b: 0b                                        ; end
0002345: 06                                        ; FIXUP func body size
; function body 163
000234c: 00                                        ; func body size (guess)
000234d: 00                                        ; local decl count
000234e: 42                                        ; i64.const
000234f: 01                                        ; i64 literal
0002350: ba                                        ; f64.convert_i64_u
0002351: 1a                                        ; drop
0002352: 0b                                        ; end
000234c: 06                                        ; FIXUP func body size
; function body 164
0002353: 00                                        ; func body size (guess)
0002354: 00                                        ; local decl count
0002355: 43                                        ; f32.const
0002356: 0000 803f                                 ; f32 literal
000235a: bb                                        ; f64.promote_f32
000235b: 1a                                        ; drop
000235c: 0b                                        ; end
0002353: 09                                        ; FIXUP func body size
; function body 165
000235d: 00                                        ; func body size (guess)
000235e: 00                                        ; local decl count
000235f: 41                                        ; i32.const
0002360: 01                                        ; i32 literal
0002361: be                                        ; f32.reinterpret_i32
0002362: 1a                                        ; drop
0002363: 0b                                        ; end
000235d: 06                                        ; FIXUP func body size
; function body 166
0002364: 00                                        ; func body size (guess)
0002365: 00                                        ; local decl count
0002366: 43                                        ; f32.const
0002367: 0000 803f                                 ; f32 literal
000236b: bc                                        ; i32.reinterpret_f32
000236c: 1a                                        ; drop
000236d: 0b                                        ; end
0002364: 09                                        ; FIXUP func body size
; function body 167
000236e: 00                                        ; func body size (guess)
000236f: 00                                        ; local decl count
0002370: 42                                        ; i64.const
0002371: 01                                        ; i64 literal
0002372: bf                                        ; f64.reinterpret_i64
0002373: 1a                                        ; drop
0002374: 0b                                        ; end
000236e: 06                                        ; FIXUP func body size
; function body 168
0002375: 00                                        ; func body size (guess)
0002376: 00                                        ; local decl count
0002377: 44                                        ; f64.const
0002378: 0000 0000 0000 f03f                       ; f64 literal
0002380: bd                                        ; i64.reinterpret_f64
0002381: 1a                                        ; drop
0002382: 0b                                        ; end
0002375: 0d                                        ; FIXUP func body size
; function body 169
0002383: 00                                        ; func body size (guess)
0002384: 00                                        ; local decl count
0002385: 41                                        ; i32.const
0002386: 01                                        ; i32 literal
0002387: c0                                        ; i32.extend8_s
0002388: 1a                                        ; drop
0002389: 0b                                        ; end
0002383: 06                                        ; FIXUP func body size
; function body 170
000238a: 00                                        ; func body size (guess)
000238b: 00                                        ; local decl count
000238c: 41                                        ; i32.const
000238d: 01                                        ; i32 literal
000238e: c1                                        ; i32.extend16_s
000238f: 1a                                        ; drop
0002390: 0b                                        ; end
000238a: 06                                        ; FIXUP func body size
; function body 171
0002391: 00                                        ; func body size (guess)
0002392: 00                                        ; local decl count
0002393: 42                                        ; i64.const
0002394: 01                                        ; i64 literal
0002395: c2                                        ; i64.extend8_s
0002396: 1a                                        ; drop
0002397: 0b                                        ; end
0002391: 06                                        ; FIXUP func body size
; function body 172
0002398: 00                                        ; func body size (guess)
0002399: 00                                        ; local decl count
000239a: 42                                        ; i64.const
000239b: 01                                        ; i64 literal
000239c: c3                                        ; i64.extend16_s
000239d: 1a                                        ; drop
000239e: 0b                                        ; end
0002398: 06                                        ; FIXUP func body size
; function body 173
000239f: 00                                        ; func body size (guess)
00023a0: 00                                        ; local decl count
00023a1: 42                                        ; i64.const
00023a2: 01                                        ; i64 literal
00023a3: c4                                        ; i64.extend32_s
00023a4: 1a                                        ; drop
00023a5: 0b                                        ; end
000239f: 06                                        ; FIXUP func body size
; function body 174
00023a6: 00                                        ; func body size (guess)
00023a7: 01                                        ; local decl count
00023a8: 01                                        ; local type count
00023a9: 7f                                        ; i32
00023aa: 0b                                        ; end
00023a6: 04                                        ; FIXUP func body size
; function body 175
00023ab: 00                                        ; func body size (guess)
00023ac: 00                                        ; local decl count
00023ad: 41                                        ; i32.const
00023ae: 01                                        ; i32 literal
00023af: 0d                                        ; br_if
00023b0: 00                                        ; break depth
00023b1: 0b                                        ; end
00023ab: 06                                        ; FIXUP func body size
; function body 176
00023b2: 00                                        ; func body size (guess)
00023b3: 00                                        ; local decl count
00023b4: 41                                        ; i32.const
00023b5: 01                                        ; i32 literal
00023b6: 10                                        ; call
00023b7: 00                                        ; function index
00023b8: 0b                                        ; end
00023b2: 06                                        ; FIXUP func body size
; function body 177
00023b9: 00                                        ; func body size (guess)
00023ba: 00                                        ; local decl count
00023bb: 41                                        ; i32.const
00023bc: 01                                        ; i32 literal
00023bd: 0e                                        ; br_table
00023be: 00                                        ; num targets
00023bf: 00                                        ; break depth for default
00023c0: 0b                                        ; end
00023b9: 07                                        ; FIXUP func body size
; function body 178
00023c1: 00                                        ; func body size (guess)
00023c2: 00                                        ; local decl count
00023c3: 02                                        ; block
00023c4: 7f                                        ; i32
00023c5: 41                                        ; i32.const
00023c6: 01                                        ; i32 literal
00023c7: 41                                        ; i32.const
00023c8: 02                                        ; i32 literal
00023c9: 0c                                        ; br
00023ca: 00                                        ; break depth
00023cb: 0b                                        ; end
00023cc: 1a                                        ; drop
00023cd: 0b                                        ; end
00023c1: 0c                                        ; FIXUP func body size
; function body 179
00023ce: 00                                        ; func body size (guess)
00023cf: 00                                        ; local decl count
00023d0: 43                                        ; f32.const
00023d1: 0000 803f                                 ; f32 literal
00023d5: fc                                        ; prefix
00023d6: 00                                        ; i32.trunc_sat_f32_s
00023d7: 1a                                        ; drop
00023d8: 0b                                        ; end
00023ce: 0a                                        ; FIXUP func body size
; function body 180
00023d9: 00                                        ; func body size (guess)
00023da: 00                                        ; local decl count
00023db: 43                                        ; f32.const
00023dc: 0000 803f                                 ; f32 literal
00023e0: fc                                        ; prefix
00023e1: 01                                        ; i32.trunc_sat_f32_u
00023e2: 1a                                        ; drop
00023e3: 0b                                        ; end
00023d9: 0a                                        ; FIXUP func body size
; function body 181
00023e4: 00                                        ; func body size (guess)
00023e5: 00                                        ; local decl count
00023e6: 44                                        ; f64.const
00023e7: 0000 0000 0000 f03f                       ; f64 literal
00023ef: fc                                        ; prefix
00023f0: 02                                        ; i32.trunc_sat_f64_s
00023f1: 1a                                        ; drop
00023f2: 0b                                        ; end
00023e4: 0e                                        ; FIXUP func body size
; function body 182
00023f3: 00                                        ; func body size (guess)
00023f4: 00                                        ; local decl count
00023f5: 44                                        ; f64.const
00023f6: 0000 0000 0000 f03f                       ; f64 literal
00023fe: fc                                        ; prefix
00023ff: 03                                        ; i32.trunc_sat_f64_u
0002400: 1a                                        ; drop
0002401: 0b                                        ; end
00023f3: 0e                                        ; FIXUP func body size
; function body 183
0002402: 00                                        ; func body size (guess)
0002403: 00                                        ; local decl count
0002404: 43                                        ; f32.const
0002405: 0000 803f                                 ; f32 literal
0002409: fc                                        ; prefix
000240a: 04                                        ; i64.trunc_sat_f32_s
000240b: 1a                                        ; drop
000240c: 0b                                        ; end
0002402: 0a                                        ; FIXUP func body size
; function body 184
000240d: 00                                        ; func body size (guess)
000240e: 00                                        ; local decl count
000240f: 43                                        ; f32.const
0002410: 0000 803f                                 ; f32 literal
0002414: fc                                        ; prefix
0002415: 05                                        ; i64.trunc_sat_f32_u
0002416: 1a                                        ; drop
0002417: 0b                                        ; end
000240d: 0a                                        ; FIXUP func body size
; function body 185
0002418: 00                                        ; func body size (guess)
0002419: 00                                        ; local decl count
000241a: 44                                        ; f64.const
000241b: 0000 0000 0000 f03f                       ; f64 literal
0002423: fc                                        ; prefix
0002424: 06                                        ; i64.trunc_sat_f64_s
0002425: 1a                                        ; drop
0002426: 0b                                        ; end
0002418: 0e                                        ; FIXUP func body size
; function body 186
0002427: 00                                        ; func body size (guess)
0002428: 00                                        ; local decl count
0002429: 44                                        ; f64.const
000242a: 0000 0000 0000 f03f                       ; f64 literal
0002432: fc                                        ; prefix
0002433: 07                                        ; i64.trunc_sat_f64_u
0002434: 1a                                        ; drop
0002435: 0b                                        ; end
0002427: 0e                                        ; FIXUP func body size
; function body 187
0002436: 00                                        ; func body size (guess)
0002437: 00                                        ; local decl count
0002438: 41                                        ; i32.const
0002439: 01                                        ; i32 literal
000243a: 41                                        ; i32.const
000243b: 02                                        ; i32 literal
000243c: 41                                        ; i32.const
000243d: 03                                        ; i32 literal
000243e: fc                                        ; prefix
000243f: 08                                        ; memory.init
0002440: 00                                        ; memory.init segment
0002441: 00                                        ; memory.init reserved
0002442: 0b                                        ; end
0002436: 0c                                        ; FIXUP func body size
; function body 188
0002443: 00                                        ; func body size (guess)
0002444: 00                                        ; local decl count
0002445: fc                                        ; prefix
0002446: 09                                        ; data.drop
0002447: 00                                        ; data.drop segment
0002448: 0b                                        ; end
0002443: 05                                        ; FIXUP func body size
; function body 189
0002449: 00                                        ; func body size (guess)
000244a: 00                                        ; local decl count
000244b: 41                                        ; i32.const
000244c: 01                                        ; i32 literal
000244d: 41                                        ; i32.const
000244e: 02                                        ; i32 literal
000244f: 41                                        ; i32.const
0002450: 03                                        ; i32 literal
0002451: fc                                        ; prefix
0002452: 0a                                        ; memory.copy
0002453: 00                                        ; memory.copy reserved
0002454: 00                                        ; memory.copy reserved
0002455: 0b                                        ; end
0002449: 0c                                        ; FIXUP func body size
; function body 190
0002456: 00                                        ; func body size (guess)
0002457: 00                                        ; local decl count
0002458: 41                                        ; i32.const
0002459: 01                                        ; i32 literal
000245a: 41                                        ; i32.const
000245b: 02                                        ; i32 literal
000245c: 41                                        ; i32.const
000245d: 03                                        ; i32 literal
000245e: fc                                        ; prefix
000245f: 0b                                        ; memory.fill
0002460: 00                                        ; memory.fill reserved
0002461: 0b                                        ; end
0002456: 0b                                        ; FIXUP func body size
; function body 191
0002462: 00                                        ; func body size (guess)
0002463: 00                                        ; local decl count
0002464: 41                                        ; i32.const
0002465: 01                                        ; i32 literal
0002466: 41                                        ; i32.const
0002467: 02                                        ; i32 literal
0002468: 41                                        ; i32.const
0002469: 03                                        ; i32 literal
000246a: fc                                        ; prefix
000246b: 0c                                        ; table.init
000246c: 00                                        ; table.init segment
000246d: 00                                        ; table.init table
000246e: 0b                                        ; end
0002462: 0c                                        ; FIXUP func body size
; function body 192
000246f: 00                                        ; func body size (guess)
0002470: 00                                        ; local decl count
0002471: fc                                        ; prefix
0002472: 0d                                        ; elem.drop
0002473: 00                                        ; elem.drop segment
0002474: 0b                                        ; end
000246f: 05                                        ; FIXUP func body size
; function body 193
0002475: 00                                        ; func body size (guess)
0002476: 00                                        ; local decl count
0002477: 41                                        ; i32.const
0002478: 01                                        ; i32 literal
0002479: 41                                        ; i32.const
000247a: 02                                        ; i32 literal
000247b: 41                                        ; i32.const
000247c: 03                                        ; i32 literal
000247d: fc                                        ; prefix
000247e: 0e                                        ; table.copy
000247f: 00                                        ; table.copy dst_table
0002480: 00                                        ; table.copy src_table
0002481: 0b                                        ; end
0002475: 0c                                        ; FIXUP func body size
; function body 194
0002482: 00                                        ; func body size (guess)
0002483: 00                                        ; local decl count
0002484: 41                                        ; i32.const
0002485: 01                                        ; i32 literal
0002486: fd                                        ; prefix
0002487: 00                                        ; v128.load
0002488: 04                                        ; alignment
0002489: 03                                        ; load offset
000248a: 1a                                        ; drop
000248b: 0b                                        ; end
0002482: 09                                        ; FIXUP func body size
; function body 195
000248c: 00                                        ; func body size (guess)
000248d: 00                                        ; local decl count
000248e: 41                                        ; i32.const
000248f: 01                                        ; i32 literal
0002490: fd                                        ; prefix
0002491: 02                                        ; v128.const
0002492: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00024a2: fd                                        ; prefix
00024a3: 01                                        ; v128.store
00024a4: 04                                        ; alignment
00024a5: 03                                        ; store offset
00024a6: 0b                                        ; end
000248c: 1a                                        ; FIXUP func body size
; function body 196
00024a7: 00                                        ; func body size (guess)
00024a8: 00                                        ; local decl count
00024a9: fd                                        ; prefix
00024aa: 02                                        ; v128.const
00024ab: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00024bb: 1a                                        ; drop
00024bc: 0b                                        ; end
00024a7: 15                                        ; FIXUP func body size
; function body 197
00024bd: 00                                        ; func body size (guess)
00024be: 00                                        ; local decl count
00024bf: 41                                        ; i32.const
00024c0: 01                                        ; i32 literal
00024c1: fd                                        ; prefix
00024c2: 04                                        ; i8x16.splat
00024c3: 1a                                        ; drop
00024c4: 0b                                        ; end
00024bd: 07                                        ; FIXUP func body size
; function body 198
00024c5: 00                                        ; func body size (guess)
00024c6: 00                                        ; local decl count
00024c7: fd                                        ; prefix
00024c8: 02                                        ; v128.const
00024c9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00024d9: fd                                        ; prefix
00024da: 05                                        ; i8x16.extract_lane_s
00024db: 0f                                        ; Simd Lane literal
00024dc: 1a                                        ; drop
00024dd: 0b                                        ; end
00024c5: 18                                        ; FIXUP func body size
; function body 199
00024de: 00                                        ; func body size (guess)
00024df: 00                                        ; local decl count
00024e0: fd                                        ; prefix
00024e1: 02                                        ; v128.const
00024e2: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00024f2: fd                                        ; prefix
00024f3: 06                                        ; i8x16.extract_lane_u
00024f4: 0f                                        ; Simd Lane literal
00024f5: 1a                                        ; drop
00024f6: 0b                                        ; end
00024de: 18                                        ; FIXUP func body size
; function body 200
00024f7: 00                                        ; func body size (guess)
00024f8: 00                                        ; local decl count
00024f9: fd                                        ; prefix
00024fa: 02                                        ; v128.const
00024fb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000250b: 41                                        ; i32.const
000250c: 00                                        ; i32 literal
000250d: fd                                        ; prefix
000250e: 07                                        ; i8x16.replace_lane
000250f: 0f                                        ; Simd Lane literal
0002510: 1a                                        ; drop
0002511: 0b                                        ; end
00024f7: 1a                                        ; FIXUP func body size
; function body 201
0002512: 00                                        ; func body size (guess)
0002513: 00                                        ; local decl count
0002514: 41                                        ; i32.const
0002515: 01                                        ; i32 literal
0002516: fd                                        ; prefix
0002517: 08                                        ; i16x8.splat
0002518: 1a                                        ; drop
0002519: 0b                                        ; end
0002512: 07                                        ; FIXUP func body size
; function body 202
000251a: 00                                        ; func body size (guess)
000251b: 00                                        ; local decl count
000251c: fd                                        ; prefix
000251d: 02                                        ; v128.const
000251e: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000252e: fd                                        ; prefix
000252f: 09                                        ; i16x8.extract_lane_s
0002530: 07                                        ; Simd Lane literal
0002531: 1a                                        ; drop
0002532: 0b                                        ; end
000251a: 18                                        ; FIXUP func body size
; function body 203
0002533: 00                                        ; func body size (guess)
0002534: 00                                        ; local decl count
0002535: fd                                        ; prefix
0002536: 02                                        ; v128.const
0002537: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002547: fd                                        ; prefix
0002548: 0a                                        ; i16x8.extract_lane_u
0002549: 07                                        ; Simd Lane literal
000254a: 1a                                        ; drop
000254b: 0b                                        ; end
0002533: 18                                        ; FIXUP func body size
; function body 204
000254c: 00                                        ; func body size (guess)
000254d: 00                                        ; local decl count
000254e: fd                                        ; prefix
000254f: 02                                        ; v128.const
0002550: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002560: 41                                        ; i32.const
0002561: 00                                        ; i32 literal
0002562: fd                                        ; prefix
0002563: 0b                                        ; i16x8.replace_lane
0002564: 07                                        ; Simd Lane literal
0002565: 1a                                        ; drop
0002566: 0b                                        ; end
000254c: 1a                                        ; FIXUP func body size
; function body 205
0002567: 00                                        ; func body size (guess)
0002568: 00                                        ; local decl count
0002569: 41                                        ; i32.const
000256a: 01                                        ; i32 literal
000256b: fd                                        ; prefix
000256c: 0c                                        ; i32x4.splat
000256d: 1a                                        ; drop
000256e: 0b                                        ; end
0002567: 07                                        ; FIXUP func body size
; function body 206
000256f: 00                                        ; func body size (guess)
0002570: 00                                        ; local decl count
0002571: fd                                        ; prefix
0002572: 02                                        ; v128.const
0002573: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002583: fd                                        ; prefix
0002584: 0d                                        ; i32x4.extract_lane
0002585: 03                                        ; Simd Lane literal
0002586: 1a                                        ; drop
0002587: 0b                                        ; end
000256f: 18                                        ; FIXUP func body size
; function body 207
0002588: 00                                        ; func body size (guess)
0002589: 00                                        ; local decl count
000258a: fd                                        ; prefix
000258b: 02                                        ; v128.const
000258c: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000259c: 41                                        ; i32.const
000259d: 00                                        ; i32 literal
000259e: fd                                        ; prefix
000259f: 0e                                        ; i32x4.replace_lane
00025a0: 03                                        ; Simd Lane literal
00025a1: 1a                                        ; drop
00025a2: 0b                                        ; end
0002588: 1a                                        ; FIXUP func body size
; function body 208
00025a3: 00                                        ; func body size (guess)
00025a4: 00                                        ; local decl count
00025a5: 42                                        ; i64.const
00025a6: 01                                        ; i64 literal
00025a7: fd                                        ; prefix
00025a8: 0f                                        ; i64x2.splat
00025a9: 1a                                        ; drop
00025aa: 0b                                        ; end
00025a3: 07                                        ; FIXUP func body size
; function body 209
00025ab: 00                                        ; func body size (guess)
00025ac: 00                                        ; local decl count
00025ad: fd                                        ; prefix
00025ae: 02                                        ; v128.const
00025af: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00025bf: fd                                        ; prefix
00025c0: 10                                        ; i64x2.extract_lane
00025c1: 01                                        ; Simd Lane literal
00025c2: 1a                                        ; drop
00025c3: 0b                                        ; end
00025ab: 18                                        ; FIXUP func body size
; function body 210
00025c4: 00                                        ; func body size (guess)
00025c5: 00                                        ; local decl count
00025c6: fd                                        ; prefix
00025c7: 02                                        ; v128.const
00025c8: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00025d8: 42                                        ; i64.const
00025d9: 00                                        ; i64 literal
00025da: fd                                        ; prefix
00025db: 11                                        ; i64x2.replace_lane
00025dc: 01                                        ; Simd Lane literal
00025dd: 1a                                        ; drop
00025de: 0b                                        ; end
00025c4: 1a                                        ; FIXUP func body size
; function body 211
00025df: 00                                        ; func body size (guess)
00025e0: 00                                        ; local decl count
00025e1: 43                                        ; f32.const
00025e2: 0000 803f                                 ; f32 literal
00025e6: fd                                        ; prefix
00025e7: 12                                        ; f32x4.splat
00025e8: 1a                                        ; drop
00025e9: 0b                                        ; end
00025df: 0a                                        ; FIXUP func body size
; function body 212
00025ea: 00                                        ; func body size (guess)
00025eb: 00                                        ; local decl count
00025ec: fd                                        ; prefix
00025ed: 02                                        ; v128.const
00025ee: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00025fe: fd                                        ; prefix
00025ff: 13                                        ; f32x4.extract_lane
0002600: 03                                        ; Simd Lane literal
0002601: 1a                                        ; drop
0002602: 0b                                        ; end
00025ea: 18                                        ; FIXUP func body size
; function body 213
0002603: 00                                        ; func body size (guess)
0002604: 00                                        ; local decl count
0002605: fd                                        ; prefix
0002606: 02                                        ; v128.const
0002607: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002617: 43                                        ; f32.const
0002618: 0000 0000                                 ; f32 literal
000261c: fd                                        ; prefix
000261d: 14                                        ; f32x4.replace_lane
000261e: 03                                        ; Simd Lane literal
000261f: 1a                                        ; drop
0002620: 0b                                        ; end
0002603: 1d                                        ; FIXUP func body size
; function body 214
0002621: 00                                        ; func body size (guess)
0002622: 00                                        ; local decl count
0002623: 44                                        ; f64.const
0002624: 0000 0000 0000 f03f                       ; f64 literal
000262c: fd                                        ; prefix
000262d: 15                                        ; f64x2.splat
000262e: 1a                                        ; drop
000262f: 0b                                        ; end
0002621: 0e                                        ; FIXUP func body size
; function body 215
0002630: 00                                        ; func body size (guess)
0002631: 00                                        ; local decl count
0002632: fd                                        ; prefix
0002633: 02                                        ; v128.const
0002634: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002644: fd                                        ; prefix
0002645: 16                                        ; f64x2.extract_lane
0002646: 01                                        ; Simd Lane literal
0002647: 1a                                        ; drop
0002648: 0b                                        ; end
0002630: 18                                        ; FIXUP func body size
; function body 216
0002649: 00                                        ; func body size (guess)
000264a: 00                                        ; local decl count
000264b: fd                                        ; prefix
000264c: 02                                        ; v128.const
000264d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000265d: 44                                        ; f64.const
000265e: 0000 0000 0000 0000                       ; f64 literal
0002666: fd                                        ; prefix
0002667: 17                                        ; f64x2.replace_lane
0002668: 01                                        ; Simd Lane literal
0002669: 1a                                        ; drop
000266a: 0b                                        ; end
0002649: 21                                        ; FIXUP func body size
; function body 217
000266b: 00                                        ; func body size (guess)
000266c: 00                                        ; local decl count
000266d: fd                                        ; prefix
000266e: 02                                        ; v128.const
000266f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000267f: fd                                        ; prefix
0002680: 02                                        ; v128.const
0002681: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002691: fd                                        ; prefix
0002692: 18                                        ; i8x16.eq
0002693: 1a                                        ; drop
0002694: 0b                                        ; end
000266b: 29                                        ; FIXUP func body size
; function body 218
0002695: 00                                        ; func body size (guess)
0002696: 00                                        ; local decl count
0002697: fd                                        ; prefix
0002698: 02                                        ; v128.const
0002699: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00026a9: fd                                        ; prefix
00026aa: 02                                        ; v128.const
00026ab: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00026bb: fd                                        ; prefix
00026bc: 19                                        ; i8x16.ne
00026bd: 1a                                        ; drop
00026be: 0b                                        ; end
0002695: 29                                        ; FIXUP func body size
; function body 219
00026bf: 00                                        ; func body size (guess)
00026c0: 00                                        ; local decl count
00026c1: fd                                        ; prefix
00026c2: 02                                        ; v128.const
00026c3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00026d3: fd                                        ; prefix
00026d4: 02                                        ; v128.const
00026d5: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00026e5: fd                                        ; prefix
00026e6: 1a                                        ; i8x16.lt_s
00026e7: 1a                                        ; drop
00026e8: 0b                                        ; end
00026bf: 29                                        ; FIXUP func body size
; function body 220
00026e9: 00                                        ; func body size (guess)
00026ea: 00                                        ; local decl count
00026eb: fd                                        ; prefix
00026ec: 02                                        ; v128.const
00026ed: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00026fd: fd                                        ; prefix
00026fe: 02                                        ; v128.const
00026ff: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000270f: fd                                        ; prefix
0002710: 1b                                        ; i8x16.lt_u
0002711: 1a                                        ; drop
0002712: 0b                                        ; end
00026e9: 29                                        ; FIXUP func body size
; function body 221
0002713: 00                                        ; func body size (guess)
0002714: 00                                        ; local decl count
0002715: fd                                        ; prefix
0002716: 02                                        ; v128.const
0002717: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002727: fd                                        ; prefix
0002728: 02                                        ; v128.const
0002729: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002739: fd                                        ; prefix
000273a: 1c                                        ; i8x16.gt_s
000273b: 1a                                        ; drop
000273c: 0b                                        ; end
0002713: 29                                        ; FIXUP func body size
; function body 222
000273d: 00                                        ; func body size (guess)
000273e: 00                                        ; local decl count
000273f: fd                                        ; prefix
0002740: 02                                        ; v128.const
0002741: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002751: fd                                        ; prefix
0002752: 02                                        ; v128.const
0002753: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002763: fd                                        ; prefix
0002764: 1d                                        ; i8x16.gt_u
0002765: 1a                                        ; drop
0002766: 0b                                        ; end
000273d: 29                                        ; FIXUP func body size
; function body 223
0002767: 00                                        ; func body size (guess)
0002768: 00                                        ; local decl count
0002769: fd                                        ; prefix
000276a: 02                                        ; v128.const
000276b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000277b: fd                                        ; prefix
000277c: 02                                        ; v128.const
000277d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000278d: fd                                        ; prefix
000278e: 1e                                        ; i8x16.le_s
000278f: 1a                                        ; drop
0002790: 0b                                        ; end
0002767: 29                                        ; FIXUP func body size
; function body 224
0002791: 00                                        ; func body size (guess)
0002792: 00                                        ; local decl count
0002793: fd                                        ; prefix
0002794: 02                                        ; v128.const
0002795: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00027a5: fd                                        ; prefix
00027a6: 02                                        ; v128.const
00027a7: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00027b7: fd                                        ; prefix
00027b8: 1f                                        ; i8x16.le_u
00027b9: 1a                                        ; drop
00027ba: 0b                                        ; end
0002791: 29                                        ; FIXUP func body size
; function body 225
00027bb: 00                                        ; func body size (guess)
00027bc: 00                                        ; local decl count
00027bd: fd                                        ; prefix
00027be: 02                                        ; v128.const
00027bf: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00027cf: fd                                        ; prefix
00027d0: 02                                        ; v128.const
00027d1: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00027e1: fd                                        ; prefix
00027e2: 20                                        ; i8x16.ge_s
00027e3: 1a                                        ; drop
00027e4: 0b                                        ; end
00027bb: 29                                        ; FIXUP func body size
; function body 226
00027e5: 00                                        ; func body size (guess)
00027e6: 00                                        ; local decl count
00027e7: fd                                        ; prefix
00027e8: 02                                        ; v128.const
00027e9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00027f9: fd                                        ; prefix
00027fa: 02                                        ; v128.const
00027fb: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000280b: fd                                        ; prefix
000280c: 21                                        ; i8x16.ge_u
000280d: 1a                                        ; drop
000280e: 0b                                        ; end
00027e5: 29                                        ; FIXUP func body size
; function body 227
000280f: 00                                        ; func body size (guess)
0002810: 00                                        ; local decl count
0002811: fd                                        ; prefix
0002812: 02                                        ; v128.const
0002813: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002823: fd                                        ; prefix
0002824: 02                                        ; v128.const
0002825: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002835: fd                                        ; prefix
0002836: 22                                        ; i16x8.eq
0002837: 1a                                        ; drop
0002838: 0b                                        ; end
000280f: 29                                        ; FIXUP func body size
; function body 228
0002839: 00                                        ; func body size (guess)
000283a: 00                                        ; local decl count
000283b: fd                                        ; prefix
000283c: 02                                        ; v128.const
000283d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000284d: fd                                        ; prefix
000284e: 02                                        ; v128.const
000284f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000285f: fd                                        ; prefix
0002860: 23                                        ; i16x8.ne
0002861: 1a                                        ; drop
0002862: 0b                                        ; end
0002839: 29                                        ; FIXUP func body size
; function body 229
0002863: 00                                        ; func body size (guess)
0002864: 00                                        ; local decl count
0002865: fd                                        ; prefix
0002866: 02                                        ; v128.const
0002867: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002877: fd                                        ; prefix
0002878: 02                                        ; v128.const
0002879: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002889: fd                                        ; prefix
000288a: 24                                        ; i16x8.lt_s
000288b: 1a                                        ; drop
000288c: 0b                                        ; end
0002863: 29                                        ; FIXUP func body size
; function body 230
000288d: 00                                        ; func body size (guess)
000288e: 00                                        ; local decl count
000288f: fd                                        ; prefix
0002890: 02                                        ; v128.const
0002891: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00028a1: fd                                        ; prefix
00028a2: 02                                        ; v128.const
00028a3: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00028b3: fd                                        ; prefix
00028b4: 25                                        ; i16x8.lt_u
00028b5: 1a                                        ; drop
00028b6: 0b                                        ; end
000288d: 29                                        ; FIXUP func body size
; function body 231
00028b7: 00                                        ; func body size (guess)
00028b8: 00                                        ; local decl count
00028b9: fd                                        ; prefix
00028ba: 02                                        ; v128.const
00028bb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00028cb: fd                                        ; prefix
00028cc: 02                                        ; v128.const
00028cd: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00028dd: fd                                        ; prefix
00028de: 26                                        ; i16x8.gt_s
00028df: 1a                                        ; drop
00028e0: 0b                                        ; end
00028b7: 29                                        ; FIXUP func body size
; function body 232
00028e1: 00                                        ; func body size (guess)
00028e2: 00                                        ; local decl count
00028e3: fd                                        ; prefix
00028e4: 02                                        ; v128.const
00028e5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00028f5: fd                                        ; prefix
00028f6: 02                                        ; v128.const
00028f7: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002907: fd                                        ; prefix
0002908: 27                                        ; i16x8.gt_u
0002909: 1a                                        ; drop
000290a: 0b                                        ; end
00028e1: 29                                        ; FIXUP func body size
; function body 233
000290b: 00                                        ; func body size (guess)
000290c: 00                                        ; local decl count
000290d: fd                                        ; prefix
000290e: 02                                        ; v128.const
000290f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000291f: fd                                        ; prefix
0002920: 02                                        ; v128.const
0002921: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002931: fd                                        ; prefix
0002932: 28                                        ; i16x8.le_s
0002933: 1a                                        ; drop
0002934: 0b                                        ; end
000290b: 29                                        ; FIXUP func body size
; function body 234
0002935: 00                                        ; func body size (guess)
0002936: 00                                        ; local decl count
0002937: fd                                        ; prefix
0002938: 02                                        ; v128.const
0002939: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002949: fd                                        ; prefix
000294a: 02                                        ; v128.const
000294b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000295b: fd                                        ; prefix
000295c: 29                                        ; i16x8.le_u
000295d: 1a                                        ; drop
000295e: 0b                                        ; end
0002935: 29                                        ; FIXUP func body size
; function body 235
000295f: 00                                        ; func body size (guess)
0002960: 00                                        ; local decl count
0002961: fd                                        ; prefix
0002962: 02                                        ; v128.const
0002963: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002973: fd                                        ; prefix
0002974: 02                                        ; v128.const
0002975: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002985: fd                                        ; prefix
0002986: 2a                                        ; i16x8.ge_s
0002987: 1a                                        ; drop
0002988: 0b                                        ; end
000295f: 29                                        ; FIXUP func body size
; function body 236
0002989: 00                                        ; func body size (guess)
000298a: 00                                        ; local decl count
000298b: fd                                        ; prefix
000298c: 02                                        ; v128.const
000298d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000299d: fd                                        ; prefix
000299e: 02                                        ; v128.const
000299f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00029af: fd                                        ; prefix
00029b0: 2b                                        ; i16x8.ge_u
00029b1: 1a                                        ; drop
00029b2: 0b                                        ; end
0002989: 29                                        ; FIXUP func body size
; function body 237
00029b3: 00                                        ; func body size (guess)
00029b4: 00                                        ; local decl count
00029b5: fd                                        ; prefix
00029b6: 02                                        ; v128.const
00029b7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00029c7: fd                                        ; prefix
00029c8: 02                                        ; v128.const
00029c9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00029d9: fd                                        ; prefix
00029da: 2c                                        ; i32x4.eq
00029db: 1a                                        ; drop
00029dc: 0b                                        ; end
00029b3: 29                                        ; FIXUP func body size
; function body 238
00029dd: 00                                        ; func body size (guess)
00029de: 00                                        ; local decl count
00029df: fd                                        ; prefix
00029e0: 02                                        ; v128.const
00029e1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00029f1: fd                                        ; prefix
00029f2: 02                                        ; v128.const
00029f3: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002a03: fd                                        ; prefix
0002a04: 2d                                        ; i32x4.ne
0002a05: 1a                                        ; drop
0002a06: 0b                                        ; end
00029dd: 29                                        ; FIXUP func body size
; function body 239
0002a07: 00                                        ; func body size (guess)
0002a08: 00                                        ; local decl count
0002a09: fd                                        ; prefix
0002a0a: 02                                        ; v128.const
0002a0b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002a1b: fd                                        ; prefix
0002a1c: 02                                        ; v128.const
0002a1d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002a2d: fd                                        ; prefix
0002a2e: 2e                                        ; i32x4.lt_s
0002a2f: 1a                                        ; drop
0002a30: 0b                                        ; end
0002a07: 29                                        ; FIXUP func body size
; function body 240
0002a31: 00                                        ; func body size (guess)
0002a32: 00                                        ; local decl count
0002a33: fd                                        ; prefix
0002a34: 02                                        ; v128.const
0002a35: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002a45: fd                                        ; prefix
0002a46: 02                                        ; v128.const
0002a47: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002a57: fd                                        ; prefix
0002a58: 2f                                        ; i32x4.lt_u
0002a59: 1a                                        ; drop
0002a5a: 0b                                        ; end
0002a31: 29                                        ; FIXUP func body size
; function body 241
0002a5b: 00                                        ; func body size (guess)
0002a5c: 00                                        ; local decl count
0002a5d: fd                                        ; prefix
0002a5e: 02                                        ; v128.const
0002a5f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002a6f: fd                                        ; prefix
0002a70: 02                                        ; v128.const
0002a71: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002a81: fd                                        ; prefix
0002a82: 30                                        ; i32x4.gt_s
0002a83: 1a                                        ; drop
0002a84: 0b                                        ; end
0002a5b: 29                                        ; FIXUP func body size
; function body 242
0002a85: 00                                        ; func body size (guess)
0002a86: 00                                        ; local decl count
0002a87: fd                                        ; prefix
0002a88: 02                                        ; v128.const
0002a89: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002a99: fd                                        ; prefix
0002a9a: 02                                        ; v128.const
0002a9b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002aab: fd                                        ; prefix
0002aac: 31                                        ; i32x4.gt_u
0002aad: 1a                                        ; drop
0002aae: 0b                                        ; end
0002a85: 29                                        ; FIXUP func body size
; function body 243
0002aaf: 00                                        ; func body size (guess)
0002ab0: 00                                        ; local decl count
0002ab1: fd                                        ; prefix
0002ab2: 02                                        ; v128.const
0002ab3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ac3: fd                                        ; prefix
0002ac4: 02                                        ; v128.const
0002ac5: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002ad5: fd                                        ; prefix
0002ad6: 32                                        ; i32x4.le_s
0002ad7: 1a                                        ; drop
0002ad8: 0b                                        ; end
0002aaf: 29                                        ; FIXUP func body size
; function body 244
0002ad9: 00                                        ; func body size (guess)
0002ada: 00                                        ; local decl count
0002adb: fd                                        ; prefix
0002adc: 02                                        ; v128.const
0002add: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002aed: fd                                        ; prefix
0002aee: 02                                        ; v128.const
0002aef: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002aff: fd                                        ; prefix
0002b00: 33                                        ; i32x4.le_u
0002b01: 1a                                        ; drop
0002b02: 0b                                        ; end
0002ad9: 29                                        ; FIXUP func body size
; function body 245
0002b03: 00                                        ; func body size (guess)
0002b04: 00                                        ; local decl count
0002b05: fd                                        ; prefix
0002b06: 02                                        ; v128.const
0002b07: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002b17: fd                                        ; prefix
0002b18: 02                                        ; v128.const
0002b19: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002b29: fd                                        ; prefix
0002b2a: 34                                        ; i32x4.ge_s
0002b2b: 1a                                        ; drop
0002b2c: 0b                                        ; end
0002b03: 29                                        ; FIXUP func body size
; function body 246
0002b2d: 00                                        ; func body size (guess)
0002b2e: 00                                        ; local decl count
0002b2f: fd                                        ; prefix
0002b30: 02                                        ; v128.const
0002b31: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002b41: fd                                        ; prefix
0002b42: 02                                        ; v128.const
0002b43: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002b53: fd                                        ; prefix
0002b54: 35                                        ; i32x4.ge_u
0002b55: 1a                                        ; drop
0002b56: 0b                                        ; end
0002b2d: 29                                        ; FIXUP func body size
; function body 247
0002b57: 00                                        ; func body size (guess)
0002b58: 00                                        ; local decl count
0002b59: fd                                        ; prefix
0002b5a: 02                                        ; v128.const
0002b5b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002b6b: fd                                        ; prefix
0002b6c: 02                                        ; v128.const
0002b6d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002b7d: fd                                        ; prefix
0002b7e: 40                                        ; f32x4.eq
0002b7f: 1a                                        ; drop
0002b80: 0b                                        ; end
0002b57: 29                                        ; FIXUP func body size
; function body 248
0002b81: 00                                        ; func body size (guess)
0002b82: 00                                        ; local decl count
0002b83: fd                                        ; prefix
0002b84: 02                                        ; v128.const
0002b85: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002b95: fd                                        ; prefix
0002b96: 02                                        ; v128.const
0002b97: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002ba7: fd                                        ; prefix
0002ba8: 41                                        ; f32x4.ne
0002ba9: 1a                                        ; drop
0002baa: 0b                                        ; end
0002b81: 29                                        ; FIXUP func body size
; function body 249
0002bab: 00                                        ; func body size (guess)
0002bac: 00                                        ; local decl count
0002bad: fd                                        ; prefix
0002bae: 02                                        ; v128.const
0002baf: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002bbf: fd                                        ; prefix
0002bc0: 02                                        ; v128.const
0002bc1: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002bd1: fd                                        ; prefix
0002bd2: 42                                        ; f32x4.lt
0002bd3: 1a                                        ; drop
0002bd4: 0b                                        ; end
0002bab: 29                                        ; FIXUP func body size
; function body 250
0002bd5: 00                                        ; func body size (guess)
0002bd6: 00                                        ; local decl count
0002bd7: fd                                        ; prefix
0002bd8: 02                                        ; v128.const
0002bd9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002be9: fd                                        ; prefix
0002bea: 02                                        ; v128.const
0002beb: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002bfb: fd                                        ; prefix
0002bfc: 43                                        ; f32x4.gt
0002bfd: 1a                                        ; drop
0002bfe: 0b                                        ; end
0002bd5: 29                                        ; FIXUP func body size
; function body 251
0002bff: 00                                        ; func body size (guess)
0002c00: 00                                        ; local decl count
0002c01: fd                                        ; prefix
0002c02: 02                                        ; v128.const
0002c03: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002c13: fd                                        ; prefix
0002c14: 02                                        ; v128.const
0002c15: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002c25: fd                                        ; prefix
0002c26: 44                                        ; f32x4.le
0002c27: 1a                                        ; drop
0002c28: 0b                                        ; end
0002bff: 29                                        ; FIXUP func body size
; function body 252
0002c29: 00                                        ; func body size (guess)
0002c2a: 00                                        ; local decl count
0002c2b: fd                                        ; prefix
0002c2c: 02                                        ; v128.const
0002c2d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002c3d: fd                                        ; prefix
0002c3e: 02                                        ; v128.const
0002c3f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002c4f: fd                                        ; prefix
0002c50: 45                                        ; f32x4.ge
0002c51: 1a                                        ; drop
0002c52: 0b                                        ; end
0002c29: 29                                        ; FIXUP func body size
; function body 253
0002c53: 00                                        ; func body size (guess)
0002c54: 00                                        ; local decl count
0002c55: fd                                        ; prefix
0002c56: 02                                        ; v128.const
0002c57: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002c67: fd                                        ; prefix
0002c68: 02                                        ; v128.const
0002c69: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002c79: fd                                        ; prefix
0002c7a: 46                                        ; f64x2.eq
0002c7b: 1a                                        ; drop
0002c7c: 0b                                        ; end
0002c53: 29                                        ; FIXUP func body size
; function body 254
0002c7d: 00                                        ; func body size (guess)
0002c7e: 00                                        ; local decl count
0002c7f: fd                                        ; prefix
0002c80: 02                                        ; v128.const
0002c81: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002c91: fd                                        ; prefix
0002c92: 02                                        ; v128.const
0002c93: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002ca3: fd                                        ; prefix
0002ca4: 47                                        ; f64x2.ne
0002ca5: 1a                                        ; drop
0002ca6: 0b                                        ; end
0002c7d: 29                                        ; FIXUP func body size
; function body 255
0002ca7: 00                                        ; func body size (guess)
0002ca8: 00                                        ; local decl count
0002ca9: fd                                        ; prefix
0002caa: 02                                        ; v128.const
0002cab: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002cbb: fd                                        ; prefix
0002cbc: 02                                        ; v128.const
0002cbd: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002ccd: fd                                        ; prefix
0002cce: 48                                        ; f64x2.lt
0002ccf: 1a                                        ; drop
0002cd0: 0b                                        ; end
0002ca7: 29                                        ; FIXUP func body size
; function body 256
0002cd1: 00                                        ; func body size (guess)
0002cd2: 00                                        ; local decl count
0002cd3: fd                                        ; prefix
0002cd4: 02                                        ; v128.const
0002cd5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ce5: fd                                        ; prefix
0002ce6: 02                                        ; v128.const
0002ce7: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002cf7: fd                                        ; prefix
0002cf8: 49                                        ; f64x2.gt
0002cf9: 1a                                        ; drop
0002cfa: 0b                                        ; end
0002cd1: 29                                        ; FIXUP func body size
; function body 257
0002cfb: 00                                        ; func body size (guess)
0002cfc: 00                                        ; local decl count
0002cfd: fd                                        ; prefix
0002cfe: 02                                        ; v128.const
0002cff: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d0f: fd                                        ; prefix
0002d10: 02                                        ; v128.const
0002d11: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002d21: fd                                        ; prefix
0002d22: 4a                                        ; f64x2.le
0002d23: 1a                                        ; drop
0002d24: 0b                                        ; end
0002cfb: 29                                        ; FIXUP func body size
; function body 258
0002d25: 00                                        ; func body size (guess)
0002d26: 00                                        ; local decl count
0002d27: fd                                        ; prefix
0002d28: 02                                        ; v128.const
0002d29: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d39: fd                                        ; prefix
0002d3a: 02                                        ; v128.const
0002d3b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002d4b: fd                                        ; prefix
0002d4c: 4b                                        ; f64x2.ge
0002d4d: 1a                                        ; drop
0002d4e: 0b                                        ; end
0002d25: 29                                        ; FIXUP func body size
; function body 259
0002d4f: 00                                        ; func body size (guess)
0002d50: 00                                        ; local decl count
0002d51: fd                                        ; prefix
0002d52: 02                                        ; v128.const
0002d53: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d63: fd                                        ; prefix
0002d64: 4c                                        ; v128.not
0002d65: 1a                                        ; drop
0002d66: 0b                                        ; end
0002d4f: 17                                        ; FIXUP func body size
; function body 260
0002d67: 00                                        ; func body size (guess)
0002d68: 00                                        ; local decl count
0002d69: fd                                        ; prefix
0002d6a: 02                                        ; v128.const
0002d6b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d7b: fd                                        ; prefix
0002d7c: 02                                        ; v128.const
0002d7d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002d8d: fd                                        ; prefix
0002d8e: 4d                                        ; v128.and
0002d8f: 1a                                        ; drop
0002d90: 0b                                        ; end
0002d67: 29                                        ; FIXUP func body size
; function body 261
0002d91: 00                                        ; func body size (guess)
0002d92: 00                                        ; local decl count
0002d93: fd                                        ; prefix
0002d94: 02                                        ; v128.const
0002d95: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002da5: fd                                        ; prefix
0002da6: 02                                        ; v128.const
0002da7: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002db7: fd                                        ; prefix
0002db8: 4e                                        ; v128.or
0002db9: 1a                                        ; drop
0002dba: 0b                                        ; end
0002d91: 29                                        ; FIXUP func body size
; function body 262
0002dbb: 00                                        ; func body size (guess)
0002dbc: 00                                        ; local decl count
0002dbd: fd                                        ; prefix
0002dbe: 02                                        ; v128.const
0002dbf: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002dcf: fd                                        ; prefix
0002dd0: 02                                        ; v128.const
0002dd1: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002de1: fd                                        ; prefix
0002de2: 4f                                        ; v128.xor
0002de3: 1a                                        ; drop
0002de4: 0b                                        ; end
0002dbb: 29                                        ; FIXUP func body size
; function body 263
0002de5: 00                                        ; func body size (guess)
0002de6: 00                                        ; local decl count
0002de7: fd                                        ; prefix
0002de8: 02                                        ; v128.const
0002de9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002df9: fd                                        ; prefix
0002dfa: 02                                        ; v128.const
0002dfb: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002e0b: fd                                        ; prefix
0002e0c: 02                                        ; v128.const
0002e0d: 0300 0000 0300 0000 0300 0000 0300 0000   ; v128 literal
0002e1d: fd                                        ; prefix
0002e1e: 50                                        ; v128.bitselect
0002e1f: 1a                                        ; drop
0002e20: 0b                                        ; end
0002de5: 3b                                        ; FIXUP func body size
; function body 264
0002e21: 00                                        ; func body size (guess)
0002e22: 00                                        ; local decl count
0002e23: fd                                        ; prefix
0002e24: 02                                        ; v128.const
0002e25: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e35: fd                                        ; prefix
0002e36: 51                                        ; i8x16.neg
0002e37: 1a                                        ; drop
0002e38: 0b                                        ; end
0002e21: 17                                        ; FIXUP func body size
; function body 265
0002e39: 00                                        ; func body size (guess)
0002e3a: 00                                        ; local decl count
0002e3b: fd                                        ; prefix
0002e3c: 02                                        ; v128.const
0002e3d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e4d: fd                                        ; prefix
0002e4e: 52                                        ; i8x16.any_true
0002e4f: 1a                                        ; drop
0002e50: 0b                                        ; end
0002e39: 17                                        ; FIXUP func body size
; function body 266
0002e51: 00                                        ; func body size (guess)
0002e52: 00                                        ; local decl count
0002e53: fd                                        ; prefix
0002e54: 02                                        ; v128.const
0002e55: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e65: fd                                        ; prefix
0002e66: 53                                        ; i8x16.all_true
0002e67: 1a                                        ; drop
0002e68: 0b                                        ; end
0002e51: 17                                        ; FIXUP func body size
; function body 267
0002e69: 00                                        ; func body size (guess)
0002e6a: 00                                        ; local decl count
0002e6b: fd                                        ; prefix
0002e6c: 02                                        ; v128.const
0002e6d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e7d: 41                                        ; i32.const
0002e7e: 00                                        ; i32 literal
0002e7f: fd                                        ; prefix
0002e80: 54                                        ; i8x16.shl
0002e81: 1a                                        ; drop
0002e82: 0b                                        ; end
0002e69: 19                                        ; FIXUP func body size
; function body 268
0002e83: 00                                        ; func body size (guess)
0002e84: 00                                        ; local decl count
0002e85: fd                                        ; prefix
0002e86: 02                                        ; v128.const
0002e87: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e97: 41                                        ; i32.const
0002e98: 00                                        ; i32 literal
0002e99: fd                                        ; prefix
0002e9a: 55                                        ; i8x16.shr_s
0002e9b: 1a                                        ; drop
0002e9c: 0b                                        ; end
0002e83: 19                                        ; FIXUP func body size
; function body 269
0002e9d: 00                                        ; func body size (guess)
0002e9e: 00                                        ; local decl count
0002e9f: fd                                        ; prefix
0002ea0: 02                                        ; v128.const
0002ea1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002eb1: 41                                        ; i32.const
0002eb2: 00                                        ; i32 literal
0002eb3: fd                                        ; prefix
0002eb4: 56                                        ; i8x16.shr_u
0002eb5: 1a                                        ; drop
0002eb6: 0b                                        ; end
0002e9d: 19                                        ; FIXUP func body size
; function body 270
0002eb7: 00                                        ; func body size (guess)
0002eb8: 00                                        ; local decl count
0002eb9: fd                                        ; prefix
0002eba: 02                                        ; v128.const
0002ebb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ecb: fd                                        ; prefix
0002ecc: 02                                        ; v128.const
0002ecd: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002edd: fd                                        ; prefix
0002ede: 57                                        ; i8x16.add
0002edf: 1a                                        ; drop
0002ee0: 0b                                        ; end
0002eb7: 29                                        ; FIXUP func body size
; function body 271
0002ee1: 00                                        ; func body size (guess)
0002ee2: 00                                        ; local decl count
0002ee3: fd                                        ; prefix
0002ee4: 02                                        ; v128.const
0002ee5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ef5: fd                                        ; prefix
0002ef6: 02                                        ; v128.const
0002ef7: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002f07: fd                                        ; prefix
0002f08: 58                                        ; i8x16.add_saturate_s
0002f09: 1a                                        ; drop
0002f0a: 0b                                        ; end
0002ee1: 29                                        ; FIXUP func body size
; function body 272
0002f0b: 00                                        ; func body size (guess)
0002f0c: 00                                        ; local decl count
0002f0d: fd                                        ; prefix
0002f0e: 02                                        ; v128.const
0002f0f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f1f: fd                                        ; prefix
0002f20: 02                                        ; v128.const
0002f21: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002f31: fd                                        ; prefix
0002f32: 59                                        ; i8x16.add_saturate_u
0002f33: 1a                                        ; drop
0002f34: 0b                                        ; end
0002f0b: 29                                        ; FIXUP func body size
; function body 273
0002f35: 00                                        ; func body size (guess)
0002f36: 00                                        ; local decl count
0002f37: fd                                        ; prefix
0002f38: 02                                        ; v128.const
0002f39: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f49: fd                                        ; prefix
0002f4a: 02                                        ; v128.const
0002f4b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002f5b: fd                                        ; prefix
0002f5c: 5a                                        ; i8x16.sub
0002f5d: 1a                                        ; drop
0002f5e: 0b                                        ; end
0002f35: 29                                        ; FIXUP func body size
; function body 274
0002f5f: 00                                        ; func body size (guess)
0002f60: 00                                        ; local decl count
0002f61: fd                                        ; prefix
0002f62: 02                                        ; v128.const
0002f63: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f73: fd                                        ; prefix
0002f74: 02                                        ; v128.const
0002f75: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002f85: fd                                        ; prefix
0002f86: 5b                                        ; i8x16.sub_saturate_s
0002f87: 1a                                        ; drop
0002f88: 0b                                        ; end
0002f5f: 29                                        ; FIXUP func body size
; function body 275
0002f89: 00                                        ; func body size (guess)
0002f8a: 00                                        ; local decl count
0002f8b: fd                                        ; prefix
0002f8c: 02                                        ; v128.const
0002f8d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f9d: fd                                        ; prefix
0002f9e: 02                                        ; v128.const
0002f9f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002faf: fd                                        ; prefix
0002fb0: 5c                                        ; i8x16.sub_saturate_u
0002fb1: 1a                                        ; drop
0002fb2: 0b                                        ; end
0002f89: 29                                        ; FIXUP func body size
; function body 276
0002fb3: 00                                        ; func body size (guess)
0002fb4: 00                                        ; local decl count
0002fb5: fd                                        ; prefix
0002fb6: 02                                        ; v128.const
0002fb7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002fc7: fd                                        ; prefix
0002fc8: 02                                        ; v128.const
0002fc9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002fd9: fd                                        ; prefix
0002fda: 5d                                        ; i8x16.mul
0002fdb: 1a                                        ; drop
0002fdc: 0b                                        ; end
0002fb3: 29                                        ; FIXUP func body size
; function body 277
0002fdd: 00                                        ; func body size (guess)
0002fde: 00                                        ; local decl count
0002fdf: fd                                        ; prefix
0002fe0: 02                                        ; v128.const
0002fe1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ff1: fd                                        ; prefix
0002ff2: 62                                        ; i16x8.neg
0002ff3: 1a                                        ; drop
0002ff4: 0b                                        ; end
0002fdd: 17                                        ; FIXUP func body size
; function body 278
0002ff5: 00                                        ; func body size (guess)
0002ff6: 00                                        ; local decl count
0002ff7: fd                                        ; prefix
0002ff8: 02                                        ; v128.const
0002ff9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003009: fd                                        ; prefix
000300a: 63                                        ; i16x8.any_true
000300b: 1a                                        ; drop
000300c: 0b                                        ; end
0002ff5: 17                                        ; FIXUP func body size
; function body 279
000300d: 00                                        ; func body size (guess)
000300e: 00                                        ; local decl count
000300f: fd                                        ; prefix
0003010: 02                                        ; v128.const
0003011: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003021: fd                                        ; prefix
0003022: 64                                        ; i16x8.all_true
0003023: 1a                                        ; drop
0003024: 0b                                        ; end
000300d: 17                                        ; FIXUP func body size
; function body 280
0003025: 00                                        ; func body size (guess)
0003026: 00                                        ; local decl count
0003027: fd                                        ; prefix
0003028: 02                                        ; v128.const
0003029: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003039: 41                                        ; i32.const
000303a: 00                                        ; i32 literal
000303b: fd                                        ; prefix
000303c: 65                                        ; i16x8.shl
000303d: 1a                                        ; drop
000303e: 0b                                        ; end
0003025: 19                                        ; FIXUP func body size
; function body 281
000303f: 00                                        ; func body size (guess)
0003040: 00                                        ; local decl count
0003041: fd                                        ; prefix
0003042: 02                                        ; v128.const
0003043: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003053: 41                                        ; i32.const
0003054: 00                                        ; i32 literal
0003055: fd                                        ; prefix
0003056: 66                                        ; i16x8.shr_s
0003057: 1a                                        ; drop
0003058: 0b                                        ; end
000303f: 19                                        ; FIXUP func body size
; function body 282
0003059: 00                                        ; func body size (guess)
000305a: 00                                        ; local decl count
000305b: fd                                        ; prefix
000305c: 02                                        ; v128.const
000305d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000306d: 41                                        ; i32.const
000306e: 00                                        ; i32 literal
000306f: fd                                        ; prefix
0003070: 67                                        ; i16x8.shr_u
0003071: 1a                                        ; drop
0003072: 0b                                        ; end
0003059: 19                                        ; FIXUP func body size
; function body 283
0003073: 00                                        ; func body size (guess)
0003074: 00                                        ; local decl count
0003075: fd                                        ; prefix
0003076: 02                                        ; v128.const
0003077: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003087: fd                                        ; prefix
0003088: 02                                        ; v128.const
0003089: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003099: fd                                        ; prefix
000309a: 68                                        ; i16x8.add
000309b: 1a                                        ; drop
000309c: 0b                                        ; end
0003073: 29                                        ; FIXUP func body size
; function body 284
000309d: 00                                        ; func body size (guess)
000309e: 00                                        ; local decl count
000309f: fd                                        ; prefix
00030a0: 02                                        ; v128.const
00030a1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00030b1: fd                                        ; prefix
00030b2: 02                                        ; v128.const
00030b3: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00030c3: fd                                        ; prefix
00030c4: 69                                        ; i16x8.add_saturate_s
00030c5: 1a                                        ; drop
00030c6: 0b                                        ; end
000309d: 29                                        ; FIXUP func body size
; function body 285
00030c7: 00                                        ; func body size (guess)
00030c8: 00                                        ; local decl count
00030c9: fd                                        ; prefix
00030ca: 02                                        ; v128.const
00030cb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00030db: fd                                        ; prefix
00030dc: 02                                        ; v128.const
00030dd: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00030ed: fd                                        ; prefix
00030ee: 6a                                        ; i16x8.add_saturate_u
00030ef: 1a                                        ; drop
00030f0: 0b                                        ; end
00030c7: 29                                        ; FIXUP func body size
; function body 286
00030f1: 00                                        ; func body size (guess)
00030f2: 00                                        ; local decl count
00030f3: fd                                        ; prefix
00030f4: 02                                        ; v128.const
00030f5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003105: fd                                        ; prefix
0003106: 02                                        ; v128.const
0003107: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003117: fd                                        ; prefix
0003118: 6b                                        ; i16x8.sub
0003119: 1a                                        ; drop
000311a: 0b                                        ; end
00030f1: 29                                        ; FIXUP func body size
; function body 287
000311b: 00                                        ; func body size (guess)
000311c: 00                                        ; local decl count
000311d: fd                                        ; prefix
000311e: 02                                        ; v128.const
000311f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000312f: fd                                        ; prefix
0003130: 02                                        ; v128.const
0003131: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003141: fd                                        ; prefix
0003142: 6c                                        ; i16x8.sub_saturate_s
0003143: 1a                                        ; drop
0003144: 0b                                        ; end
000311b: 29                                        ; FIXUP func body size
; function body 288
0003145: 00                                        ; func body size (guess)
0003146: 00                                        ; local decl count
0003147: fd                                        ; prefix
0003148: 02                                        ; v128.const
0003149: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003159: fd                                        ; prefix
000315a: 02                                        ; v128.const
000315b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000316b: fd                                        ; prefix
000316c: 6d                                        ; i16x8.sub_saturate_u
000316d: 1a                                        ; drop
000316e: 0b                                        ; end
0003145: 29                                        ; FIXUP func body size
; function body 289
000316f: 00                                        ; func body size (guess)
0003170: 00                                        ; local decl count
0003171: fd                                        ; prefix
0003172: 02                                        ; v128.const
0003173: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003183: fd                                        ; prefix
0003184: 02                                        ; v128.const
0003185: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003195: fd                                        ; prefix
0003196: 6e                                        ; i16x8.mul
0003197: 1a                                        ; drop
0003198: 0b                                        ; end
000316f: 29                                        ; FIXUP func body size
; function body 290
0003199: 00                                        ; func body size (guess)
000319a: 00                                        ; local decl count
000319b: fd                                        ; prefix
000319c: 02                                        ; v128.const
000319d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00031ad: fd                                        ; prefix
00031ae: 73                                        ; i32x4.neg
00031af: 1a                                        ; drop
00031b0: 0b                                        ; end
0003199: 17                                        ; FIXUP func body size
; function body 291
00031b1: 00                                        ; func body size (guess)
00031b2: 00                                        ; local decl count
00031b3: fd                                        ; prefix
00031b4: 02                                        ; v128.const
00031b5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00031c5: fd                                        ; prefix
00031c6: 74                                        ; i32x4.any_true
00031c7: 1a                                        ; drop
00031c8: 0b                                        ; end
00031b1: 17                                        ; FIXUP func body size
; function body 292
00031c9: 00                                        ; func body size (guess)
00031ca: 00                                        ; local decl count
00031cb: fd                                        ; prefix
00031cc: 02                                        ; v128.const
00031cd: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00031dd: fd                                        ; prefix
00031de: 75                                        ; i32x4.all_true
00031df: 1a                                        ; drop
00031e0: 0b                                        ; end
00031c9: 17                                        ; FIXUP func body size
; function body 293
00031e1: 00                                        ; func body size (guess)
00031e2: 00                                        ; local decl count
00031e3: fd                                        ; prefix
00031e4: 02                                        ; v128.const
00031e5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00031f5: 41                                        ; i32.const
00031f6: 00                                        ; i32 literal
00031f7: fd                                        ; prefix
00031f8: 76                                        ; i32x4.shl
00031f9: 1a                                        ; drop
00031fa: 0b                                        ; end
00031e1: 19                                        ; FIXUP func body size
; function body 294
00031fb: 00                                        ; func body size (guess)
00031fc: 00                                        ; local decl count
00031fd: fd                                        ; prefix
00031fe: 02                                        ; v128.const
00031ff: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000320f: 41                                        ; i32.const
0003210: 00                                        ; i32 literal
0003211: fd                                        ; prefix
0003212: 77                                        ; i32x4.shr_s
0003213: 1a                                        ; drop
0003214: 0b                                        ; end
00031fb: 19                                        ; FIXUP func body size
; function body 295
0003215: 00                                        ; func body size (guess)
0003216: 00                                        ; local decl count
0003217: fd                                        ; prefix
0003218: 02                                        ; v128.const
0003219: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003229: 41                                        ; i32.const
000322a: 00                                        ; i32 literal
000322b: fd                                        ; prefix
000322c: 78                                        ; i32x4.shr_u
000322d: 1a                                        ; drop
000322e: 0b                                        ; end
0003215: 19                                        ; FIXUP func body size
; function body 296
000322f: 00                                        ; func body size (guess)
0003230: 00                                        ; local decl count
0003231: fd                                        ; prefix
0003232: 02                                        ; v128.const
0003233: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003243: fd                                        ; prefix
0003244: 02                                        ; v128.const
0003245: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003255: fd                                        ; prefix
0003256: 79                                        ; i32x4.add
0003257: 1a                                        ; drop
0003258: 0b                                        ; end
000322f: 29                                        ; FIXUP func body size
; function body 297
0003259: 00                                        ; func body size (guess)
000325a: 00                                        ; local decl count
000325b: fd                                        ; prefix
000325c: 02                                        ; v128.const
000325d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000326d: fd                                        ; prefix
000326e: 02                                        ; v128.const
000326f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000327f: fd                                        ; prefix
0003280: 7c                                        ; i32x4.sub
0003281: 1a                                        ; drop
0003282: 0b                                        ; end
0003259: 29                                        ; FIXUP func body size
; function body 298
0003283: 00                                        ; func body size (guess)
0003284: 00                                        ; local decl count
0003285: fd                                        ; prefix
0003286: 02                                        ; v128.const
0003287: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003297: fd                                        ; prefix
0003298: 02                                        ; v128.const
0003299: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00032a9: fd                                        ; prefix
00032aa: 7f                                        ; i32x4.mul
00032ab: 1a                                        ; drop
00032ac: 0b                                        ; end
0003283: 29                                        ; FIXUP func body size
; function body 299
00032ad: 00                                        ; func body size (guess)
00032ae: 00                                        ; local decl count
00032af: fd                                        ; prefix
00032b0: 02                                        ; v128.const
00032b1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00032c1: fd                                        ; prefix
00032c2: 8401                                      ; i64x2.neg
00032c4: 1a                                        ; drop
00032c5: 0b                                        ; end
00032ad: 18                                        ; FIXUP func body size
; function body 300
00032c6: 00                                        ; func body size (guess)
00032c7: 00                                        ; local decl count
00032c8: fd                                        ; prefix
00032c9: 02                                        ; v128.const
00032ca: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00032da: fd                                        ; prefix
00032db: 8501                                      ; i64x2.any_true
00032dd: 1a                                        ; drop
00032de: 0b                                        ; end
00032c6: 18                                        ; FIXUP func body size
; function body 301
00032df: 00                                        ; func body size (guess)
00032e0: 00                                        ; local decl count
00032e1: fd                                        ; prefix
00032e2: 02                                        ; v128.const
00032e3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00032f3: fd                                        ; prefix
00032f4: 8601                                      ; i64x2.all_true
00032f6: 1a                                        ; drop
00032f7: 0b                                        ; end
00032df: 18                                        ; FIXUP func body size
; function body 302
00032f8: 00                                        ; func body size (guess)
00032f9: 00                                        ; local decl count
00032fa: fd                                        ; prefix
00032fb: 02                                        ; v128.const
00032fc: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000330c: 41                                        ; i32.const
000330d: 00                                        ; i32 literal
000330e: fd                                        ; prefix
000330f: 8701                                      ; i64x2.shl
0003311: 1a                                        ; drop
0003312: 0b                                        ; end
00032f8: 1a                                        ; FIXUP func body size
; function body 303
0003313: 00                                        ; func body size (guess)
0003314: 00                                        ; local decl count
0003315: fd                                        ; prefix
0003316: 02                                        ; v128.const
0003317: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003327: 41                                        ; i32.const
0003328: 00                                        ; i32 literal
0003329: fd                                        ; prefix
000332a: 8801                                      ; i64x2.shr_s
000332c: 1a                                        ; drop
000332d: 0b                                        ; end
0003313: 1a                                        ; FIXUP func body size
; function body 304
000332e: 00                                        ; func body size (guess)
000332f: 00                                        ; local decl count
0003330: fd                                        ; prefix
0003331: 02                                        ; v128.const
0003332: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003342: 41                                        ; i32.const
0003343: 00                                        ; i32 literal
0003344: fd                                        ; prefix
0003345: 8901                                      ; i64x2.shr_u
0003347: 1a                                        ; drop
0003348: 0b                                        ; end
000332e: 1a                                        ; FIXUP func body size
; function body 305
0003349: 00                                        ; func body size (guess)
000334a: 00                                        ; local decl count
000334b: fd                                        ; prefix
000334c: 02                                        ; v128.const
000334d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000335d: fd                                        ; prefix
000335e: 02                                        ; v128.const
000335f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000336f: fd                                        ; prefix
0003370: 8a01                                      ; i64x2.add
0003372: 1a                                        ; drop
0003373: 0b                                        ; end
0003349: 2a                                        ; FIXUP func body size
; function body 306
0003374: 00                                        ; func body size (guess)
0003375: 00                                        ; local decl count
0003376: fd                                        ; prefix
0003377: 02                                        ; v128.const
0003378: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003388: fd                                        ; prefix
0003389: 02                                        ; v128.const
000338a: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000339a: fd                                        ; prefix
000339b: 8d01                                      ; i64x2.sub
000339d: 1a                                        ; drop
000339e: 0b                                        ; end
0003374: 2a                                        ; FIXUP func body size
; function body 307
000339f: 00                                        ; func body size (guess)
00033a0: 00                                        ; local decl count
00033a1: fd                                        ; prefix
00033a2: 02                                        ; v128.const
00033a3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00033b3: fd                                        ; prefix
00033b4: 9501                                      ; f32x4.abs
00033b6: 1a                                        ; drop
00033b7: 0b                                        ; end
000339f: 18                                        ; FIXUP func body size
; function body 308
00033b8: 00                                        ; func body size (guess)
00033b9: 00                                        ; local decl count
00033ba: fd                                        ; prefix
00033bb: 02                                        ; v128.const
00033bc: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00033cc: fd                                        ; prefix
00033cd: 9601                                      ; f32x4.neg
00033cf: 1a                                        ; drop
00033d0: 0b                                        ; end
00033b8: 18                                        ; FIXUP func body size
; function body 309
00033d1: 00                                        ; func body size (guess)
00033d2: 00                                        ; local decl count
00033d3: fd                                        ; prefix
00033d4: 02                                        ; v128.const
00033d5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00033e5: fd                                        ; prefix
00033e6: 9701                                      ; f32x4.sqrt
00033e8: 1a                                        ; drop
00033e9: 0b                                        ; end
00033d1: 18                                        ; FIXUP func body size
; function body 310
00033ea: 00                                        ; func body size (guess)
00033eb: 00                                        ; local decl count
00033ec: fd                                        ; prefix
00033ed: 02                                        ; v128.const
00033ee: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00033fe: fd                                        ; prefix
00033ff: 02                                        ; v128.const
0003400: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003410: fd                                        ; prefix
0003411: 9a01                                      ; f32x4.add
0003413: 1a                                        ; drop
0003414: 0b                                        ; end
00033ea: 2a                                        ; FIXUP func body size
; function body 311
0003415: 00                                        ; func body size (guess)
0003416: 00                                        ; local decl count
0003417: fd                                        ; prefix
0003418: 02                                        ; v128.const
0003419: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003429: fd                                        ; prefix
000342a: 02                                        ; v128.const
000342b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000343b: fd                                        ; prefix
000343c: 9b01                                      ; f32x4.sub
000343e: 1a                                        ; drop
000343f: 0b                                        ; end
0003415: 2a                                        ; FIXUP func body size
; function body 312
0003440: 00                                        ; func body size (guess)
0003441: 00                                        ; local decl count
0003442: fd                                        ; prefix
0003443: 02                                        ; v128.const
0003444: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003454: fd                                        ; prefix
0003455: 02                                        ; v128.const
0003456: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003466: fd                                        ; prefix
0003467: 9c01                                      ; f32x4.mul
0003469: 1a                                        ; drop
000346a: 0b                                        ; end
0003440: 2a                                        ; FIXUP func body size
; function body 313
000346b: 00                                        ; func body size (guess)
000346c: 00                                        ; local decl count
000346d: fd                                        ; prefix
000346e: 02                                        ; v128.const
000346f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000347f: fd                                        ; prefix
0003480: 02                                        ; v128.const
0003481: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003491: fd                                        ; prefix
0003492: 9d01                                      ; f32x4.div
0003494: 1a                                        ; drop
0003495: 0b                                        ; end
000346b: 2a                                        ; FIXUP func body size
; function body 314
0003496: 00                                        ; func body size (guess)
0003497: 00                                        ; local decl count
0003498: fd                                        ; prefix
0003499: 02                                        ; v128.const
000349a: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00034aa: fd                                        ; prefix
00034ab: 02                                        ; v128.const
00034ac: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00034bc: fd                                        ; prefix
00034bd: 9e01                                      ; f32x4.min
00034bf: 1a                                        ; drop
00034c0: 0b                                        ; end
0003496: 2a                                        ; FIXUP func body size
; function body 315
00034c1: 00                                        ; func body size (guess)
00034c2: 00                                        ; local decl count
00034c3: fd                                        ; prefix
00034c4: 02                                        ; v128.const
00034c5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00034d5: fd                                        ; prefix
00034d6: 02                                        ; v128.const
00034d7: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00034e7: fd                                        ; prefix
00034e8: 9f01                                      ; f32x4.max
00034ea: 1a                                        ; drop
00034eb: 0b                                        ; end
00034c1: 2a                                        ; FIXUP func body size
; function body 316
00034ec: 00                                        ; func body size (guess)
00034ed: 00                                        ; local decl count
00034ee: fd                                        ; prefix
00034ef: 02                                        ; v128.const
00034f0: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003500: fd                                        ; prefix
0003501: a001                                      ; f64x2.abs
0003503: 1a                                        ; drop
0003504: 0b                                        ; end
00034ec: 18                                        ; FIXUP func body size
; function body 317
0003505: 00                                        ; func body size (guess)
0003506: 00                                        ; local decl count
0003507: fd                                        ; prefix
0003508: 02                                        ; v128.const
0003509: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003519: fd                                        ; prefix
000351a: a101                                      ; f64x2.neg
000351c: 1a                                        ; drop
000351d: 0b                                        ; end
0003505: 18                                        ; FIXUP func body size
; function body 318
000351e: 00                                        ; func body size (guess)
000351f: 00                                        ; local decl count
0003520: fd                                        ; prefix
0003521: 02                                        ; v128.const
0003522: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003532: fd                                        ; prefix
0003533: a201                                      ; f64x2.sqrt
0003535: 1a                                        ; drop
0003536: 0b                                        ; end
000351e: 18                                        ; FIXUP func body size
; function body 319
0003537: 00                                        ; func body size (guess)
0003538: 00                                        ; local decl count
0003539: fd                                        ; prefix
000353a: 02                                        ; v128.const
000353b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000354b: fd                                        ; prefix
000354c: 02                                        ; v128.const
000354d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000355d: fd                                        ; prefix
000355e: a501                                      ; f64x2.add
0003560: 1a                                        ; drop
0003561: 0b                                        ; end
0003537: 2a                                        ; FIXUP func body size
; function body 320
0003562: 00                                        ; func body size (guess)
0003563: 00                                        ; local decl count
0003564: fd                                        ; prefix
0003565: 02                                        ; v128.const
0003566: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003576: fd                                        ; prefix
0003577: 02                                        ; v128.const
0003578: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003588: fd                                        ; prefix
0003589: a601                                      ; f64x2.sub
000358b: 1a                                        ; drop
000358c: 0b                                        ; end
0003562: 2a                                        ; FIXUP func body size
; function body 321
000358d: 00                                        ; func body size (guess)
000358e: 00                                        ; local decl count
000358f: fd                                        ; prefix
0003590: 02                                        ; v128.const
0003591: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00035a1: fd                                        ; prefix
00035a2: 02                                        ; v128.const
00035a3: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00035b3: fd                                        ; prefix
00035b4: a701                                      ; f64x2.mul
00035b6: 1a                                        ; drop
00035b7: 0b                                        ; end
000358d: 2a                                        ; FIXUP func body size
; function body 322
00035b8: 00                                        ; func body size (guess)
00035b9: 00                                        ; local decl count
00035ba: fd                                        ; prefix
00035bb: 02                                        ; v128.const
00035bc: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00035cc: fd                                        ; prefix
00035cd: 02                                        ; v128.const
00035ce: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00035de: fd                                        ; prefix
00035df: a801                                      ; f64x2.div
00035e1: 1a                                        ; drop
00035e2: 0b                                        ; end
00035b8: 2a                                        ; FIXUP func body size
; function body 323
00035e3: 00                                        ; func body size (guess)
00035e4: 00                                        ; local decl count
00035e5: fd                                        ; prefix
00035e6: 02                                        ; v128.const
00035e7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00035f7: fd                                        ; prefix
00035f8: 02                                        ; v128.const
00035f9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003609: fd                                        ; prefix
000360a: a901                                      ; f64x2.min
000360c: 1a                                        ; drop
000360d: 0b                                        ; end
00035e3: 2a                                        ; FIXUP func body size
; function body 324
000360e: 00                                        ; func body size (guess)
000360f: 00                                        ; local decl count
0003610: fd                                        ; prefix
0003611: 02                                        ; v128.const
0003612: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003622: fd                                        ; prefix
0003623: 02                                        ; v128.const
0003624: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003634: fd                                        ; prefix
0003635: aa01                                      ; f64x2.max
0003637: 1a                                        ; drop
0003638: 0b                                        ; end
000360e: 2a                                        ; FIXUP func body size
; function body 325
0003639: 00                                        ; func body size (guess)
000363a: 00                                        ; local decl count
000363b: fd                                        ; prefix
000363c: 02                                        ; v128.const
000363d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000364d: fd                                        ; prefix
000364e: ab01                                      ; i32x4.trunc_sat_f32x4_s
0003650: 1a                                        ; drop
0003651: 0b                                        ; end
0003639: 18                                        ; FIXUP func body size
; function body 326
0003652: 00                                        ; func body size (guess)
0003653: 00                                        ; local decl count
0003654: fd                                        ; prefix
0003655: 02                                        ; v128.const
0003656: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003666: fd                                        ; prefix
0003667: ac01                                      ; i32x4.trunc_sat_f32x4_u
0003669: 1a                                        ; drop
000366a: 0b                                        ; end
0003652: 18                                        ; FIXUP func body size
; function body 327
000366b: 00                                        ; func body size (guess)
000366c: 00                                        ; local decl count
000366d: fd                                        ; prefix
000366e: 02                                        ; v128.const
000366f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000367f: fd                                        ; prefix
0003680: ad01                                      ; i64x2.trunc_sat_f64x2_s
0003682: 1a                                        ; drop
0003683: 0b                                        ; end
000366b: 18                                        ; FIXUP func body size
; function body 328
0003684: 00                                        ; func body size (guess)
0003685: 00                                        ; local decl count
0003686: fd                                        ; prefix
0003687: 02                                        ; v128.const
0003688: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003698: fd                                        ; prefix
0003699: ae01                                      ; i64x2.trunc_sat_f64x2_u
000369b: 1a                                        ; drop
000369c: 0b                                        ; end
0003684: 18                                        ; FIXUP func body size
; function body 329
000369d: 00                                        ; func body size (guess)
000369e: 00                                        ; local decl count
000369f: fd                                        ; prefix
00036a0: 02                                        ; v128.const
00036a1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00036b1: fd                                        ; prefix
00036b2: af01                                      ; f32x4.convert_i32x4_s
00036b4: 1a                                        ; drop
00036b5: 0b                                        ; end
000369d: 18                                        ; FIXUP func body size
; function body 330
00036b6: 00                                        ; func body size (guess)
00036b7: 00                                        ; local decl count
00036b8: fd                                        ; prefix
00036b9: 02                                        ; v128.const
00036ba: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00036ca: fd                                        ; prefix
00036cb: b001                                      ; f32x4.convert_i32x4_u
00036cd: 1a                                        ; drop
00036ce: 0b                                        ; end
00036b6: 18                                        ; FIXUP func body size
; function body 331
00036cf: 00                                        ; func body size (guess)
00036d0: 00                                        ; local decl count
00036d1: fd                                        ; prefix
00036d2: 02                                        ; v128.const
00036d3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00036e3: fd                                        ; prefix
00036e4: b101                                      ; f64x2.convert_i64x2_s
00036e6: 1a                                        ; drop
00036e7: 0b                                        ; end
00036cf: 18                                        ; FIXUP func body size
; function body 332
00036e8: 00                                        ; func body size (guess)
00036e9: 00                                        ; local decl count
00036ea: fd                                        ; prefix
00036eb: 02                                        ; v128.const
00036ec: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00036fc: fd                                        ; prefix
00036fd: b201                                      ; f64x2.convert_i64x2_u
00036ff: 1a                                        ; drop
0003700: 0b                                        ; end
00036e8: 18                                        ; FIXUP func body size
; function body 333
0003701: 00                                        ; func body size (guess)
0003702: 00                                        ; local decl count
0003703: fd                                        ; prefix
0003704: 02                                        ; v128.const
0003705: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003715: fd                                        ; prefix
0003716: 02                                        ; v128.const
0003717: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003727: fd                                        ; prefix
0003728: c001                                      ; v8x16.swizzle
000372a: 1a                                        ; drop
000372b: 0b                                        ; end
0003701: 2a                                        ; FIXUP func body size
; function body 334
000372c: 00                                        ; func body size (guess)
000372d: 00                                        ; local decl count
000372e: fd                                        ; prefix
000372f: 02                                        ; v128.const
0003730: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003740: fd                                        ; prefix
0003741: 02                                        ; v128.const
0003742: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003752: fd                                        ; prefix
0003753: c101                                      ; v8x16.shuffle
0003755: 0101 0101 0101 0101 0101 0101 0101 0101   ; Simd Lane[16] literal
0003765: 1a                                        ; drop
0003766: 0b                                        ; end
000372c: 3a                                        ; FIXUP func body size
; function body 335
0003767: 00                                        ; func body size (guess)
0003768: 00                                        ; local decl count
0003769: 41                                        ; i32.const
000376a: 01                                        ; i32 literal
000376b: fd                                        ; prefix
000376c: c201                                      ; i8x16.load_splat
000376e: 00                                        ; alignment
000376f: 00                                        ; load offset
0003770: 1a                                        ; drop
0003771: 0b                                        ; end
0003767: 0a                                        ; FIXUP func body size
; function body 336
0003772: 00                                        ; func body size (guess)
0003773: 00                                        ; local decl count
0003774: 41                                        ; i32.const
0003775: 01                                        ; i32 literal
0003776: fd                                        ; prefix
0003777: c301                                      ; i16x8.load_splat
0003779: 01                                        ; alignment
000377a: 00                                        ; load offset
000377b: 1a                                        ; drop
000377c: 0b                                        ; end
0003772: 0a                                        ; FIXUP func body size
; function body 337
000377d: 00                                        ; func body size (guess)
000377e: 00                                        ; local decl count
000377f: 41                                        ; i32.const
0003780: 01                                        ; i32 literal
0003781: fd                                        ; prefix
0003782: c401                                      ; i32x4.load_splat
0003784: 02                                        ; alignment
0003785: 00                                        ; load offset
0003786: 1a                                        ; drop
0003787: 0b                                        ; end
000377d: 0a                                        ; FIXUP func body size
; function body 338
0003788: 00                                        ; func body size (guess)
0003789: 00                                        ; local decl count
000378a: 41                                        ; i32.const
000378b: 01                                        ; i32 literal
000378c: fd                                        ; prefix
000378d: c501                                      ; i64x2.load_splat
000378f: 03                                        ; alignment
0003790: 00                                        ; load offset
0003791: 1a                                        ; drop
0003792: 0b                                        ; end
0003788: 0a                                        ; FIXUP func body size
; function body 339
0003793: 00                                        ; func body size (guess)
0003794: 00                                        ; local decl count
0003795: fd                                        ; prefix
0003796: 02                                        ; v128.const
0003797: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00037a7: fd                                        ; prefix
00037a8: 02                                        ; v128.const
00037a9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00037b9: fd                                        ; prefix
00037ba: c601                                      ; i8x16.narrow_i16x8_s
00037bc: 1a                                        ; drop
00037bd: 0b                                        ; end
0003793: 2a                                        ; FIXUP func body size
; function body 340
00037be: 00                                        ; func body size (guess)
00037bf: 00                                        ; local decl count
00037c0: fd                                        ; prefix
00037c1: 02                                        ; v128.const
00037c2: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00037d2: fd                                        ; prefix
00037d3: 02                                        ; v128.const
00037d4: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00037e4: fd                                        ; prefix
00037e5: c701                                      ; i8x16.narrow_i16x8_u
00037e7: 1a                                        ; drop
00037e8: 0b                                        ; end
00037be: 2a                                        ; FIXUP func body size
; function body 341
00037e9: 00                                        ; func body size (guess)
00037ea: 00                                        ; local decl count
00037eb: fd                                        ; prefix
00037ec: 02                                        ; v128.const
00037ed: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00037fd: fd                                        ; prefix
00037fe: 02                                        ; v128.const
00037ff: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000380f: fd                                        ; prefix
0003810: c801                                      ; i16x8.narrow_i32x4_s
0003812: 1a                                        ; drop
0003813: 0b                                        ; end
00037e9: 2a                                        ; FIXUP func body size
; function body 342
0003814: 00                                        ; func body size (guess)
0003815: 00                                        ; local decl count
0003816: fd                                        ; prefix
0003817: 02                                        ; v128.const
0003818: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003828: fd                                        ; prefix
0003829: 02                                        ; v128.const
000382a: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000383a: fd                                        ; prefix
000383b: c901                                      ; i16x8.narrow_i32x4_u
000383d: 1a                                        ; drop
000383e: 0b                                        ; end
0003814: 2a                                        ; FIXUP func body size
; function body 343
000383f: 00                                        ; func body size (guess)
0003840: 00                                        ; local decl count
0003841: fd                                        ; prefix
0003842: 02                                        ; v128.const
0003843: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003853: fd                                        ; prefix
0003854: ca01                                      ; i16x8.widen_low_i8x16_s
0003856: 1a                                        ; drop
0003857: 0b                                        ; end
000383f: 18                                        ; FIXUP func body size
; function body 344
0003858: 00                                        ; func body size (guess)
0003859: 00                                        ; local decl count
000385a: fd                                        ; prefix
000385b: 02                                        ; v128.const
000385c: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000386c: fd                                        ; prefix
000386d: cb01                                      ; i16x8.widen_high_i8x16_s
000386f: 1a                                        ; drop
0003870: 0b                                        ; end
0003858: 18                                        ; FIXUP func body size
; function body 345
0003871: 00                                        ; func body size (guess)
0003872: 00                                        ; local decl count
0003873: fd                                        ; prefix
0003874: 02                                        ; v128.const
0003875: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003885: fd                                        ; prefix
0003886: cc01                                      ; i16x8.widen_low_i8x16_u
0003888: 1a                                        ; drop
0003889: 0b                                        ; end
0003871: 18                                        ; FIXUP func body size
; function body 346
000388a: 00                                        ; func body size (guess)
000388b: 00                                        ; local decl count
000388c: fd                                        ; prefix
000388d: 02                                        ; v128.const
000388e: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000389e: fd                                        ; prefix
000389f: cd01                                      ; i16x8.widen_high_i8x16_u
00038a1: 1a                                        ; drop
00038a2: 0b                                        ; end
000388a: 18                                        ; FIXUP func body size
; function body 347
00038a3: 00                                        ; func body size (guess)
00038a4: 00                                        ; local decl count
00038a5: fd                                        ; prefix
00038a6: 02                                        ; v128.const
00038a7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00038b7: fd                                        ; prefix
00038b8: ce01                                      ; i16x8.widen_low_i16x8_s
00038ba: 1a                                        ; drop
00038bb: 0b                                        ; end
00038a3: 18                                        ; FIXUP func body size
; function body 348
00038bc: 00                                        ; func body size (guess)
00038bd: 00                                        ; local decl count
00038be: fd                                        ; prefix
00038bf: 02                                        ; v128.const
00038c0: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00038d0: fd                                        ; prefix
00038d1: cf01                                      ; i16x8.widen_high_i16x8_s
00038d3: 1a                                        ; drop
00038d4: 0b                                        ; end
00038bc: 18                                        ; FIXUP func body size
; function body 349
00038d5: 00                                        ; func body size (guess)
00038d6: 00                                        ; local decl count
00038d7: fd                                        ; prefix
00038d8: 02                                        ; v128.const
00038d9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00038e9: fd                                        ; prefix
00038ea: d001                                      ; i16x8.widen_low_i16x8_u
00038ec: 1a                                        ; drop
00038ed: 0b                                        ; end
00038d5: 18                                        ; FIXUP func body size
; function body 350
00038ee: 00                                        ; func body size (guess)
00038ef: 00                                        ; local decl count
00038f0: fd                                        ; prefix
00038f1: 02                                        ; v128.const
00038f2: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003902: fd                                        ; prefix
0003903: d101                                      ; i16x8.widen_high_i16x8_u
0003905: 1a                                        ; drop
0003906: 0b                                        ; end
00038ee: 18                                        ; FIXUP func body size
; function body 351
0003907: 00                                        ; func body size (guess)
0003908: 00                                        ; local decl count
0003909: 41                                        ; i32.const
000390a: 01                                        ; i32 literal
000390b: 41                                        ; i32.const
000390c: 02                                        ; i32 literal
000390d: fe                                        ; prefix
000390e: 00                                        ; atomic.notify
000390f: 02                                        ; alignment
0003910: 03                                        ; memory offset
0003911: 1a                                        ; drop
0003912: 0b                                        ; end
0003907: 0b                                        ; FIXUP func body size
; function body 352
0003913: 00                                        ; func body size (guess)
0003914: 00                                        ; local decl count
0003915: 41                                        ; i32.const
0003916: 01                                        ; i32 literal
0003917: 41                                        ; i32.const
0003918: 02                                        ; i32 literal
0003919: 42                                        ; i64.const
000391a: 03                                        ; i64 literal
000391b: fe                                        ; prefix
000391c: 01                                        ; i32.atomic.wait
000391d: 02                                        ; alignment
000391e: 03                                        ; memory offset
000391f: 1a                                        ; drop
0003920: 0b                                        ; end
0003913: 0d                                        ; FIXUP func body size
; function body 353
0003921: 00                                        ; func body size (guess)
0003922: 00                                        ; local decl count
0003923: 41                                        ; i32.const
0003924: 01                                        ; i32 literal
0003925: 42                                        ; i64.const
0003926: 02                                        ; i64 literal
0003927: 42                                        ; i64.const
0003928: 03                                        ; i64 literal
0003929: fe                                        ; prefix
000392a: 02                                        ; i64.atomic.wait
000392b: 03                                        ; alignment
000392c: 03                                        ; memory offset
000392d: 1a                                        ; drop
000392e: 0b                                        ; end
0003921: 0d                                        ; FIXUP func body size
; function body 354
000392f: 00                                        ; func body size (guess)
0003930: 00                                        ; local decl count
0003931: 41                                        ; i32.const
0003932: 01                                        ; i32 literal
0003933: fe                                        ; prefix
0003934: 10                                        ; i32.atomic.load
0003935: 02                                        ; alignment
0003936: 03                                        ; memory offset
0003937: 1a                                        ; drop
0003938: 0b                                        ; end
000392f: 09                                        ; FIXUP func body size
; function body 355
0003939: 00                                        ; func body size (guess)
000393a: 00                                        ; local decl count
000393b: 41                                        ; i32.const
000393c: 01                                        ; i32 literal
000393d: fe                                        ; prefix
000393e: 11                                        ; i64.atomic.load
000393f: 03                                        ; alignment
0003940: 07                                        ; memory offset
0003941: 1a                                        ; drop
0003942: 0b                                        ; end
0003939: 09                                        ; FIXUP func body size
; function body 356
0003943: 00                                        ; func body size (guess)
0003944: 00                                        ; local decl count
0003945: 41                                        ; i32.const
0003946: 01                                        ; i32 literal
0003947: fe                                        ; prefix
0003948: 12                                        ; i32.atomic.load8_u
0003949: 00                                        ; alignment
000394a: 03                                        ; memory offset
000394b: 1a                                        ; drop
000394c: 0b                                        ; end
0003943: 09                                        ; FIXUP func body size
; function body 357
000394d: 00                                        ; func body size (guess)
000394e: 00                                        ; local decl count
000394f: 41                                        ; i32.const
0003950: 01                                        ; i32 literal
0003951: fe                                        ; prefix
0003952: 13                                        ; i32.atomic.load16_u
0003953: 01                                        ; alignment
0003954: 03                                        ; memory offset
0003955: 1a                                        ; drop
0003956: 0b                                        ; end
000394d: 09                                        ; FIXUP func body size
; function body 358
0003957: 00                                        ; func body size (guess)
0003958: 00                                        ; local decl count
0003959: 41                                        ; i32.const
000395a: 01                                        ; i32 literal
000395b: fe                                        ; prefix
000395c: 14                                        ; i64.atomic.load8_u
000395d: 00                                        ; alignment
000395e: 03                                        ; memory offset
000395f: 1a                                        ; drop
0003960: 0b                                        ; end
0003957: 09                                        ; FIXUP func body size
; function body 359
0003961: 00                                        ; func body size (guess)
0003962: 00                                        ; local decl count
0003963: 41                                        ; i32.const
0003964: 01                                        ; i32 literal
0003965: fe                                        ; prefix
0003966: 15                                        ; i64.atomic.load16_u
0003967: 01                                        ; alignment
0003968: 03                                        ; memory offset
0003969: 1a                                        ; drop
000396a: 0b                                        ; end
0003961: 09                                        ; FIXUP func body size
; function body 360
000396b: 00                                        ; func body size (guess)
000396c: 00                                        ; local decl count
000396d: 41                                        ; i32.const
000396e: 01                                        ; i32 literal
000396f: fe                                        ; prefix
0003970: 16                                        ; i64.atomic.load32_u
0003971: 02                                        ; alignment
0003972: 03                                        ; memory offset
0003973: 1a                                        ; drop
0003974: 0b                                        ; end
000396b: 09                                        ; FIXUP func body size
; function body 361
0003975: 00                                        ; func body size (guess)
0003976: 00                                        ; local decl count
0003977: 41                                        ; i32.const
0003978: 01                                        ; i32 literal
0003979: 41                                        ; i32.const
000397a: 02                                        ; i32 literal
000397b: fe                                        ; prefix
000397c: 17                                        ; i32.atomic.store
000397d: 02                                        ; alignment
000397e: 03                                        ; memory offset
000397f: 0b                                        ; end
0003975: 0a                                        ; FIXUP func body size
; function body 362
0003980: 00                                        ; func body size (guess)
0003981: 00                                        ; local decl count
0003982: 41                                        ; i32.const
0003983: 01                                        ; i32 literal
0003984: 42                                        ; i64.const
0003985: 02                                        ; i64 literal
0003986: fe                                        ; prefix
0003987: 18                                        ; i64.atomic.store
0003988: 03                                        ; alignment
0003989: 07                                        ; memory offset
000398a: 0b                                        ; end
0003980: 0a                                        ; FIXUP func body size
; function body 363
000398b: 00                                        ; func body size (guess)
000398c: 00                                        ; local decl count
000398d: 41                                        ; i32.const
000398e: 01                                        ; i32 literal
000398f: 41                                        ; i32.const
0003990: 02                                        ; i32 literal
0003991: fe                                        ; prefix
0003992: 19                                        ; i32.atomic.store8
0003993: 00                                        ; alignment
0003994: 03                                        ; memory offset
0003995: 0b                                        ; end
000398b: 0a                                        ; FIXUP func body size
; function body 364
0003996: 00                                        ; func body size (guess)
0003997: 00                                        ; local decl count
0003998: 41                                        ; i32.const
0003999: 01                                        ; i32 literal
000399a: 41                                        ; i32.const
000399b: 02                                        ; i32 literal
000399c: fe                                        ; prefix
000399d: 1a                                        ; i32.atomic.store16
000399e: 01                                        ; alignment
000399f: 03                                        ; memory offset
00039a0: 0b                                        ; end
0003996: 0a                                        ; FIXUP func body size
; function body 365
00039a1: 00                                        ; func body size (guess)
00039a2: 00                                        ; local decl count
00039a3: 41                                        ; i32.const
00039a4: 01                                        ; i32 literal
00039a5: 42                                        ; i64.const
00039a6: 02                                        ; i64 literal
00039a7: fe                                        ; prefix
00039a8: 1b                                        ; i64.atomic.store8
00039a9: 00                                        ; alignment
00039aa: 03                                        ; memory offset
00039ab: 0b                                        ; end
00039a1: 0a                                        ; FIXUP func body size
; function body 366
00039ac: 00                                        ; func body size (guess)
00039ad: 00                                        ; local decl count
00039ae: 41                                        ; i32.const
00039af: 01                                        ; i32 literal
00039b0: 42                                        ; i64.const
00039b1: 02                                        ; i64 literal
00039b2: fe                                        ; prefix
00039b3: 1c                                        ; i64.atomic.store16
00039b4: 01                                        ; alignment
00039b5: 03                                        ; memory offset
00039b6: 0b                                        ; end
00039ac: 0a                                        ; FIXUP func body size
; function body 367
00039b7: 00                                        ; func body size (guess)
00039b8: 00                                        ; local decl count
00039b9: 41                                        ; i32.const
00039ba: 01                                        ; i32 literal
00039bb: 42                                        ; i64.const
00039bc: 02                                        ; i64 literal
00039bd: fe                                        ; prefix
00039be: 1d                                        ; i64.atomic.store32
00039bf: 02                                        ; alignment
00039c0: 03                                        ; memory offset
00039c1: 0b                                        ; end
00039b7: 0a                                        ; FIXUP func body size
; function body 368
00039c2: 00                                        ; func body size (guess)
00039c3: 00                                        ; local decl count
00039c4: 41                                        ; i32.const
00039c5: 01                                        ; i32 literal
00039c6: 41                                        ; i32.const
00039c7: 02                                        ; i32 literal
00039c8: fe                                        ; prefix
00039c9: 1e                                        ; i32.atomic.rmw.add
00039ca: 02                                        ; alignment
00039cb: 03                                        ; memory offset
00039cc: 1a                                        ; drop
00039cd: 0b                                        ; end
00039c2: 0b                                        ; FIXUP func body size
; function body 369
00039ce: 00                                        ; func body size (guess)
00039cf: 00                                        ; local decl count
00039d0: 41                                        ; i32.const
00039d1: 01                                        ; i32 literal
00039d2: 42                                        ; i64.const
00039d3: 02                                        ; i64 literal
00039d4: fe                                        ; prefix
00039d5: 1f                                        ; i64.atomic.rmw.add
00039d6: 03                                        ; alignment
00039d7: 07                                        ; memory offset
00039d8: 1a                                        ; drop
00039d9: 0b                                        ; end
00039ce: 0b                                        ; FIXUP func body size
; function body 370
00039da: 00                                        ; func body size (guess)
00039db: 00                                        ; local decl count
00039dc: 41                                        ; i32.const
00039dd: 01                                        ; i32 literal
00039de: 41                                        ; i32.const
00039df: 02                                        ; i32 literal
00039e0: fe                                        ; prefix
00039e1: 20                                        ; i32.atomic.rmw8.add_u
00039e2: 00                                        ; alignment
00039e3: 03                                        ; memory offset
00039e4: 1a                                        ; drop
00039e5: 0b                                        ; end
00039da: 0b                                        ; FIXUP func body size
; function body 371
00039e6: 00                                        ; func body size (guess)
00039e7: 00                                        ; local decl count
00039e8: 41                                        ; i32.const
00039e9: 01                                        ; i32 literal
00039ea: 41                                        ; i32.const
00039eb: 02                                        ; i32 literal
00039ec: fe                                        ; prefix
00039ed: 21                                        ; i32.atomic.rmw16.add_u
00039ee: 01                                        ; alignment
00039ef: 03                                        ; memory offset
00039f0: 1a                                        ; drop
00039f1: 0b                                        ; end
00039e6: 0b                                        ; FIXUP func body size
; function body 372
00039f2: 00                                        ; func body size (guess)
00039f3: 00                                        ; local decl count
00039f4: 41                                        ; i32.const
00039f5: 01                                        ; i32 literal
00039f6: 42                                        ; i64.const
00039f7: 02                                        ; i64 literal
00039f8: fe                                        ; prefix
00039f9: 22                                        ; i64.atomic.rmw8.add_u
00039fa: 00                                        ; alignment
00039fb: 03                                        ; memory offset
00039fc: 1a                                        ; drop
00039fd: 0b                                        ; end
00039f2: 0b                                        ; FIXUP func body size
; function body 373
00039fe: 00                                        ; func body size (guess)
00039ff: 00                                        ; local decl count
0003a00: 41                                        ; i32.const
0003a01: 01                                        ; i32 literal
0003a02: 42                                        ; i64.const
0003a03: 02                                        ; i64 literal
0003a04: fe                                        ; prefix
0003a05: 23                                        ; i64.atomic.rmw16.add_u
0003a06: 01                                        ; alignment
0003a07: 03                                        ; memory offset
0003a08: 1a                                        ; drop
0003a09: 0b                                        ; end
00039fe: 0b                                        ; FIXUP func body size
; function body 374
0003a0a: 00                                        ; func body size (guess)
0003a0b: 00                                        ; local decl count
0003a0c: 41                                        ; i32.const
0003a0d: 01                                        ; i32 literal
0003a0e: 42                                        ; i64.const
0003a0f: 02                                        ; i64 literal
0003a10: fe                                        ; prefix
0003a11: 24                                        ; i64.atomic.rmw32.add_u
0003a12: 02                                        ; alignment
0003a13: 03                                        ; memory offset
0003a14: 1a                                        ; drop
0003a15: 0b                                        ; end
0003a0a: 0b                                        ; FIXUP func body size
; function body 375
0003a16: 00                                        ; func body size (guess)
0003a17: 00                                        ; local decl count
0003a18: 41                                        ; i32.const
0003a19: 01                                        ; i32 literal
0003a1a: 41                                        ; i32.const
0003a1b: 02                                        ; i32 literal
0003a1c: fe                                        ; prefix
0003a1d: 25                                        ; i32.atomic.rmw.sub
0003a1e: 02                                        ; alignment
0003a1f: 03                                        ; memory offset
0003a20: 1a                                        ; drop
0003a21: 0b                                        ; end
0003a16: 0b                                        ; FIXUP func body size
; function body 376
0003a22: 00                                        ; func body size (guess)
0003a23: 00                                        ; local decl count
0003a24: 41                                        ; i32.const
0003a25: 01                                        ; i32 literal
0003a26: 42                                        ; i64.const
0003a27: 02                                        ; i64 literal
0003a28: fe                                        ; prefix
0003a29: 26                                        ; i64.atomic.rmw.sub
0003a2a: 03                                        ; alignment
0003a2b: 07                                        ; memory offset
0003a2c: 1a                                        ; drop
0003a2d: 0b                                        ; end
0003a22: 0b                                        ; FIXUP func body size
; function body 377
0003a2e: 00                                        ; func body size (guess)
0003a2f: 00                                        ; local decl count
0003a30: 41                                        ; i32.const
0003a31: 01                                        ; i32 literal
0003a32: 41                                        ; i32.const
0003a33: 02                                        ; i32 literal
0003a34: fe                                        ; prefix
0003a35: 27                                        ; i32.atomic.rmw8.sub_u
0003a36: 00                                        ; alignment
0003a37: 03                                        ; memory offset
0003a38: 1a                                        ; drop
0003a39: 0b                                        ; end
0003a2e: 0b                                        ; FIXUP func body size
; function body 378
0003a3a: 00                                        ; func body size (guess)
0003a3b: 00                                        ; local decl count
0003a3c: 41                                        ; i32.const
0003a3d: 01                                        ; i32 literal
0003a3e: 41                                        ; i32.const
0003a3f: 02                                        ; i32 literal
0003a40: fe                                        ; prefix
0003a41: 28                                        ; i32.atomic.rmw16.sub_u
0003a42: 01                                        ; alignment
0003a43: 03                                        ; memory offset
0003a44: 1a                                        ; drop
0003a45: 0b                                        ; end
0003a3a: 0b                                        ; FIXUP func body size
; function body 379
0003a46: 00                                        ; func body size (guess)
0003a47: 00                                        ; local decl count
0003a48: 41                                        ; i32.const
0003a49: 01                                        ; i32 literal
0003a4a: 42                                        ; i64.const
0003a4b: 02                                        ; i64 literal
0003a4c: fe                                        ; prefix
0003a4d: 29                                        ; i64.atomic.rmw8.sub_u
0003a4e: 00                                        ; alignment
0003a4f: 03                                        ; memory offset
0003a50: 1a                                        ; drop
0003a51: 0b                                        ; end
0003a46: 0b                                        ; FIXUP func body size
; function body 380
0003a52: 00                                        ; func body size (guess)
0003a53: 00                                        ; local decl count
0003a54: 41                                        ; i32.const
0003a55: 01                                        ; i32 literal
0003a56: 42                                        ; i64.const
0003a57: 02                                        ; i64 literal
0003a58: fe                                        ; prefix
0003a59: 2a                                        ; i64.atomic.rmw16.sub_u
0003a5a: 01                                        ; alignment
0003a5b: 03                                        ; memory offset
0003a5c: 1a                                        ; drop
0003a5d: 0b                                        ; end
0003a52: 0b                                        ; FIXUP func body size
; function body 381
0003a5e: 00                                        ; func body size (guess)
0003a5f: 00                                        ; local decl count
0003a60: 41                                        ; i32.const
0003a61: 01                                        ; i32 literal
0003a62: 42                                        ; i64.const
0003a63: 02                                        ; i64 literal
0003a64: fe                                        ; prefix
0003a65: 2b                                        ; i64.atomic.rmw32.sub_u
0003a66: 02                                        ; alignment
0003a67: 03                                        ; memory offset
0003a68: 1a                                        ; drop
0003a69: 0b                                        ; end
0003a5e: 0b                                        ; FIXUP func body size
; function body 382
0003a6a: 00                                        ; func body size (guess)
0003a6b: 00                                        ; local decl count
0003a6c: 41                                        ; i32.const
0003a6d: 01                                        ; i32 literal
0003a6e: 41                                        ; i32.const
0003a6f: 02                                        ; i32 literal
0003a70: fe                                        ; prefix
0003a71: 2c                                        ; i32.atomic.rmw.and
0003a72: 02                                        ; alignment
0003a73: 03                                        ; memory offset
0003a74: 1a                                        ; drop
0003a75: 0b                                        ; end
0003a6a: 0b                                        ; FIXUP func body size
; function body 383
0003a76: 00                                        ; func body size (guess)
0003a77: 00                                        ; local decl count
0003a78: 41                                        ; i32.const
0003a79: 01                                        ; i32 literal
0003a7a: 42                                        ; i64.const
0003a7b: 02                                        ; i64 literal
0003a7c: fe                                        ; prefix
0003a7d: 2d                                        ; i64.atomic.rmw.and
0003a7e: 03                                        ; alignment
0003a7f: 07                                        ; memory offset
0003a80: 1a                                        ; drop
0003a81: 0b                                        ; end
0003a76: 0b                                        ; FIXUP func body size
; function body 384
0003a82: 00                                        ; func body size (guess)
0003a83: 00                                        ; local decl count
0003a84: 41                                        ; i32.const
0003a85: 01                                        ; i32 literal
0003a86: 41                                        ; i32.const
0003a87: 02                                        ; i32 literal
0003a88: fe                                        ; prefix
0003a89: 2e                                        ; i32.atomic.rmw8.and_u
0003a8a: 00                                        ; alignment
0003a8b: 03                                        ; memory offset
0003a8c: 1a                                        ; drop
0003a8d: 0b                                        ; end
0003a82: 0b                                        ; FIXUP func body size
; function body 385
0003a8e: 00                                        ; func body size (guess)
0003a8f: 00                                        ; local decl count
0003a90: 41                                        ; i32.const
0003a91: 01                                        ; i32 literal
0003a92: 41                                        ; i32.const
0003a93: 02                                        ; i32 literal
0003a94: fe                                        ; prefix
0003a95: 2f                                        ; i32.atomic.rmw16.and_u
0003a96: 01                                        ; alignment
0003a97: 03                                        ; memory offset
0003a98: 1a                                        ; drop
0003a99: 0b                                        ; end
0003a8e: 0b                                        ; FIXUP func body size
; function body 386
0003a9a: 00                                        ; func body size (guess)
0003a9b: 00                                        ; local decl count
0003a9c: 41                                        ; i32.const
0003a9d: 01                                        ; i32 literal
0003a9e: 42                                        ; i64.const
0003a9f: 02                                        ; i64 literal
0003aa0: fe                                        ; prefix
0003aa1: 30                                        ; i64.atomic.rmw8.and_u
0003aa2: 00                                        ; alignment
0003aa3: 03                                        ; memory offset
0003aa4: 1a                                        ; drop
0003aa5: 0b                                        ; end
0003a9a: 0b                                        ; FIXUP func body size
; function body 387
0003aa6: 00                                        ; func body size (guess)
0003aa7: 00                                        ; local decl count
0003aa8: 41                                        ; i32.const
0003aa9: 01                                        ; i32 literal
0003aaa: 42                                        ; i64.const
0003aab: 02                                        ; i64 literal
0003aac: fe                                        ; prefix
0003aad: 31                                        ; i64.atomic.rmw16.and_u
0003aae: 01                                        ; alignment
0003aaf: 03                                        ; memory offset
0003ab0: 1a                                        ; drop
0003ab1: 0b                                        ; end
0003aa6: 0b                                        ; FIXUP func body size
; function body 388
0003ab2: 00                                        ; func body size (guess)
0003ab3: 00                                        ; local decl count
0003ab4: 41                                        ; i32.const
0003ab5: 01                                        ; i32 literal
0003ab6: 42                                        ; i64.const
0003ab7: 02                                        ; i64 literal
0003ab8: fe                                        ; prefix
0003ab9: 32                                        ; i64.atomic.rmw32.and_u
0003aba: 02                                        ; alignment
0003abb: 03                                        ; memory offset
0003abc: 1a                                        ; drop
0003abd: 0b                                        ; end
0003ab2: 0b                                        ; FIXUP func body size
; function body 389
0003abe: 00                                        ; func body size (guess)
0003abf: 00                                        ; local decl count
0003ac0: 41                                        ; i32.const
0003ac1: 01                                        ; i32 literal
0003ac2: 41                                        ; i32.const
0003ac3: 02                                        ; i32 literal
0003ac4: fe                                        ; prefix
0003ac5: 33                                        ; i32.atomic.rmw.or
0003ac6: 02                                        ; alignment
0003ac7: 03                                        ; memory offset
0003ac8: 1a                                        ; drop
0003ac9: 0b                                        ; end
0003abe: 0b                                        ; FIXUP func body size
; function body 390
0003aca: 00                                        ; func body size (guess)
0003acb: 00                                        ; local decl count
0003acc: 41                                        ; i32.const
0003acd: 01                                        ; i32 literal
0003ace: 42                                        ; i64.const
0003acf: 02                                        ; i64 literal
0003ad0: fe                                        ; prefix
0003ad1: 34                                        ; i64.atomic.rmw.or
0003ad2: 03                                        ; alignment
0003ad3: 07                                        ; memory offset
0003ad4: 1a                                        ; drop
0003ad5: 0b                                        ; end
0003aca: 0b                                        ; FIXUP func body size
; function body 391
0003ad6: 00                                        ; func body size (guess)
0003ad7: 00                                        ; local decl count
0003ad8: 41                                        ; i32.const
0003ad9: 01                                        ; i32 literal
0003ada: 41                                        ; i32.const
0003adb: 02                                        ; i32 literal
0003adc: fe                                        ; prefix
0003add: 35                                        ; i32.atomic.rmw8.or_u
0003ade: 00                                        ; alignment
0003adf: 03                                        ; memory offset
0003ae0: 1a                                        ; drop
0003ae1: 0b                                        ; end
0003ad6: 0b                                        ; FIXUP func body size
; function body 392
0003ae2: 00                                        ; func body size (guess)
0003ae3: 00                                        ; local decl count
0003ae4: 41                                        ; i32.const
0003ae5: 01                                        ; i32 literal
0003ae6: 41                                        ; i32.const
0003ae7: 02                                        ; i32 literal
0003ae8: fe                                        ; prefix
0003ae9: 36                                        ; i32.atomic.rmw16.or_u
0003aea: 01                                        ; alignment
0003aeb: 03                                        ; memory offset
0003aec: 1a                                        ; drop
0003aed: 0b                                        ; end
0003ae2: 0b                                        ; FIXUP func body size
; function body 393
0003aee: 00                                        ; func body size (guess)
0003aef: 00                                        ; local decl count
0003af0: 41                                        ; i32.const
0003af1: 01                                        ; i32 literal
0003af2: 42                                        ; i64.const
0003af3: 02                                        ; i64 literal
0003af4: fe                                        ; prefix
0003af5: 37                                        ; i64.atomic.rmw8.or_u
0003af6: 00                                        ; alignment
0003af7: 03                                        ; memory offset
0003af8: 1a                                        ; drop
0003af9: 0b                                        ; end
0003aee: 0b                                        ; FIXUP func body size
; function body 394
0003afa: 00                                        ; func body size (guess)
0003afb: 00                                        ; local decl count
0003afc: 41                                        ; i32.const
0003afd: 01                                        ; i32 literal
0003afe: 42                                        ; i64.const
0003aff: 02                                        ; i64 literal
0003b00: fe                                        ; prefix
0003b01: 38                                        ; i64.atomic.rmw16.or_u
0003b02: 01                                        ; alignment
0003b03: 03                                        ; memory offset
0003b04: 1a                                        ; drop
0003b05: 0b                                        ; end
0003afa: 0b                                        ; FIXUP func body size
; function body 395
0003b06: 00                                        ; func body size (guess)
0003b07: 00                                        ; local decl count
0003b08: 41                                        ; i32.const
0003b09: 01                                        ; i32 literal
0003b0a: 42                                        ; i64.const
0003b0b: 02                                        ; i64 literal
0003b0c: fe                                        ; prefix
0003b0d: 39                                        ; i64.atomic.rmw32.or_u
0003b0e: 02                                        ; alignment
0003b0f: 03                                        ; memory offset
0003b10: 1a                                        ; drop
0003b11: 0b                                        ; end
0003b06: 0b                                        ; FIXUP func body size
; function body 396
0003b12: 00                                        ; func body size (guess)
0003b13: 00                                        ; local decl count
0003b14: 41                                        ; i32.const
0003b15: 01                                        ; i32 literal
0003b16: 41                                        ; i32.const
0003b17: 02                                        ; i32 literal
0003b18: fe                                        ; prefix
0003b19: 3a                                        ; i32.atomic.rmw.xor
0003b1a: 02                                        ; alignment
0003b1b: 03                                        ; memory offset
0003b1c: 1a                                        ; drop
0003b1d: 0b                                        ; end
0003b12: 0b                                        ; FIXUP func body size
; function body 397
0003b1e: 00                                        ; func body size (guess)
0003b1f: 00                                        ; local decl count
0003b20: 41                                        ; i32.const
0003b21: 01                                        ; i32 literal
0003b22: 42                                        ; i64.const
0003b23: 02                                        ; i64 literal
0003b24: fe                                        ; prefix
0003b25: 3b                                        ; i64.atomic.rmw.xor
0003b26: 03                                        ; alignment
0003b27: 07                                        ; memory offset
0003b28: 1a                                        ; drop
0003b29: 0b                                        ; end
0003b1e: 0b                                        ; FIXUP func body size
; function body 398
0003b2a: 00                                        ; func body size (guess)
0003b2b: 00                                        ; local decl count
0003b2c: 41                                        ; i32.const
0003b2d: 01                                        ; i32 literal
0003b2e: 41                                        ; i32.const
0003b2f: 02                                        ; i32 literal
0003b30: fe                                        ; prefix
0003b31: 3c                                        ; i32.atomic.rmw8.xor_u
0003b32: 00                                        ; alignment
0003b33: 03                                        ; memory offset
0003b34: 1a                                        ; drop
0003b35: 0b                                        ; end
0003b2a: 0b                                        ; FIXUP func body size
; function body 399
0003b36: 00                                        ; func body size (guess)
0003b37: 00                                        ; local decl count
0003b38: 41                                        ; i32.const
0003b39: 01                                        ; i32 literal
0003b3a: 41                                        ; i32.const
0003b3b: 02                                        ; i32 literal
0003b3c: fe                                        ; prefix
0003b3d: 3d                                        ; i32.atomic.rmw16.xor_u
0003b3e: 01                                        ; alignment
0003b3f: 03                                        ; memory offset
0003b40: 1a                                        ; drop
0003b41: 0b                                        ; end
0003b36: 0b                                        ; FIXUP func body size
; function body 400
0003b42: 00                                        ; func body size (guess)
0003b43: 00                                        ; local decl count
0003b44: 41                                        ; i32.const
0003b45: 01                                        ; i32 literal
0003b46: 42                                        ; i64.const
0003b47: 02                                        ; i64 literal
0003b48: fe                                        ; prefix
0003b49: 3e                                        ; i64.atomic.rmw8.xor_u
0003b4a: 00                                        ; alignment
0003b4b: 03                                        ; memory offset
0003b4c: 1a                                        ; drop
0003b4d: 0b                                        ; end
0003b42: 0b                                        ; FIXUP func body size
; function body 401
0003b4e: 00                                        ; func body size (guess)
0003b4f: 00                                        ; local decl count
0003b50: 41                                        ; i32.const
0003b51: 01                                        ; i32 literal
0003b52: 42                                        ; i64.const
0003b53: 02                                        ; i64 literal
0003b54: fe                                        ; prefix
0003b55: 3f                                        ; i64.atomic.rmw16.xor_u
0003b56: 01                                        ; alignment
0003b57: 03                                        ; memory offset
0003b58: 1a                                        ; drop
0003b59: 0b                                        ; end
0003b4e: 0b                                        ; FIXUP func body size
; function body 402
0003b5a: 00                                        ; func body size (guess)
0003b5b: 00                                        ; local decl count
0003b5c: 41                                        ; i32.const
0003b5d: 01                                        ; i32 literal
0003b5e: 42                                        ; i64.const
0003b5f: 02                                        ; i64 literal
0003b60: fe                                        ; prefix
0003b61: 40                                        ; i64.atomic.rmw32.xor_u
0003b62: 02                                        ; alignment
0003b63: 03                                        ; memory offset
0003b64: 1a                                        ; drop
0003b65: 0b                                        ; end
0003b5a: 0b                                        ; FIXUP func body size
; function body 403
0003b66: 00                                        ; func body size (guess)
0003b67: 00                                        ; local decl count
0003b68: 41                                        ; i32.const
0003b69: 01                                        ; i32 literal
0003b6a: 41                                        ; i32.const
0003b6b: 02                                        ; i32 literal
0003b6c: fe                                        ; prefix
0003b6d: 41                                        ; i32.atomic.rmw.xchg
0003b6e: 02                                        ; alignment
0003b6f: 03                                        ; memory offset
0003b70: 1a                                        ; drop
0003b71: 0b                                        ; end
0003b66: 0b                                        ; FIXUP func body size
; function body 404
0003b72: 00                                        ; func body size (guess)
0003b73: 00                                        ; local decl count
0003b74: 41                                        ; i32.const
0003b75: 01                                        ; i32 literal
0003b76: 42                                        ; i64.const
0003b77: 02                                        ; i64 literal
0003b78: fe                                        ; prefix
0003b79: 42                                        ; i64.atomic.rmw.xchg
0003b7a: 03                                        ; alignment
0003b7b: 07                                        ; memory offset
0003b7c: 1a                                        ; drop
0003b7d: 0b                                        ; end
0003b72: 0b                                        ; FIXUP func body size
; function body 405
0003b7e: 00                                        ; func body size (guess)
0003b7f: 00                                        ; local decl count
0003b80: 41                                        ; i32.const
0003b81: 01                                        ; i32 literal
0003b82: 41                                        ; i32.const
0003b83: 02                                        ; i32 literal
0003b84: fe                                        ; prefix
0003b85: 43                                        ; i32.atomic.rmw8.xchg_u
0003b86: 00                                        ; alignment
0003b87: 03                                        ; memory offset
0003b88: 1a                                        ; drop
0003b89: 0b                                        ; end
0003b7e: 0b                                        ; FIXUP func body size
; function body 406
0003b8a: 00                                        ; func body size (guess)
0003b8b: 00                                        ; local decl count
0003b8c: 41                                        ; i32.const
0003b8d: 01                                        ; i32 literal
0003b8e: 41                                        ; i32.const
0003b8f: 02                                        ; i32 literal
0003b90: fe                                        ; prefix
0003b91: 44                                        ; i32.atomic.rmw16.xchg_u
0003b92: 01                                        ; alignment
0003b93: 03                                        ; memory offset
0003b94: 1a                                        ; drop
0003b95: 0b                                        ; end
0003b8a: 0b                                        ; FIXUP func body size
; function body 407
0003b96: 00                                        ; func body size (guess)
0003b97: 00                                        ; local decl count
0003b98: 41                                        ; i32.const
0003b99: 01                                        ; i32 literal
0003b9a: 42                                        ; i64.const
0003b9b: 02                                        ; i64 literal
0003b9c: fe                                        ; prefix
0003b9d: 45                                        ; i64.atomic.rmw8.xchg_u
0003b9e: 00                                        ; alignment
0003b9f: 03                                        ; memory offset
0003ba0: 1a                                        ; drop
0003ba1: 0b                                        ; end
0003b96: 0b                                        ; FIXUP func body size
; function body 408
0003ba2: 00                                        ; func body size (guess)
0003ba3: 00                                        ; local decl count
0003ba4: 41                                        ; i32.const
0003ba5: 01                                        ; i32 literal
0003ba6: 42                                        ; i64.const
0003ba7: 02                                        ; i64 literal
0003ba8: fe                                        ; prefix
0003ba9: 46                                        ; i64.atomic.rmw16.xchg_u
0003baa: 01                                        ; alignment
0003bab: 03                                        ; memory offset
0003bac: 1a                                        ; drop
0003bad: 0b                                        ; end
0003ba2: 0b                                        ; FIXUP func body size
; function body 409
0003bae: 00                                        ; func body size (guess)
0003baf: 00                                        ; local decl count
0003bb0: 41                                        ; i32.const
0003bb1: 01                                        ; i32 literal
0003bb2: 42                                        ; i64.const
0003bb3: 02                                        ; i64 literal
0003bb4: fe                                        ; prefix
0003bb5: 47                                        ; i64.atomic.rmw32.xchg_u
0003bb6: 02                                        ; alignment
0003bb7: 03                                        ; memory offset
0003bb8: 1a                                        ; drop
0003bb9: 0b                                        ; end
0003bae: 0b                                        ; FIXUP func body size
; function body 410
0003bba: 00                                        ; func body size (guess)
0003bbb: 00                                        ; local decl count
0003bbc: 41                                        ; i32.const
0003bbd: 01                                        ; i32 literal
0003bbe: 41                                        ; i32.const
0003bbf: 02                                        ; i32 literal
0003bc0: 41                                        ; i32.const
0003bc1: 03                                        ; i32 literal
0003bc2: fe                                        ; prefix
0003bc3: 48                                        ; i32.atomic.rmw.cmpxchg
0003bc4: 02                                        ; alignment
0003bc5: 03                                        ; memory offset
0003bc6: 1a                                        ; drop
0003bc7: 0b                                        ; end
0003bba: 0d                                        ; FIXUP func body size
; function body 411
0003bc8: 00                                        ; func body size (guess)
0003bc9: 00                                        ; local decl count
0003bca: 41                                        ; i32.const
0003bcb: 01                                        ; i32 literal
0003bcc: 42                                        ; i64.const
0003bcd: 02                                        ; i64 literal
0003bce: 42                                        ; i64.const
0003bcf: 03                                        ; i64 literal
0003bd0: fe                                        ; prefix
0003bd1: 49                                        ; i64.atomic.rmw.cmpxchg
0003bd2: 03                                        ; alignment
0003bd3: 07                                        ; memory offset
0003bd4: 1a                                        ; drop
0003bd5: 0b                                        ; end
0003bc8: 0d                                        ; FIXUP func body size
; function body 412
0003bd6: 00                                        ; func body size (guess)
0003bd7: 00                                        ; local decl count
0003bd8: 41                                        ; i32.const
0003bd9: 01                                        ; i32 literal
0003bda: 41                                        ; i32.const
0003bdb: 02                                        ; i32 literal
0003bdc: 41                                        ; i32.const
0003bdd: 03                                        ; i32 literal
0003bde: fe                                        ; prefix
0003bdf: 4a                                        ; i32.atomic.rmw8.cmpxchg_u
0003be0: 00                                        ; alignment
0003be1: 03                                        ; memory offset
0003be2: 1a                                        ; drop
0003be3: 0b                                        ; end
0003bd6: 0d                                        ; FIXUP func body size
; function body 413
0003be4: 00                                        ; func body size (guess)
0003be5: 00                                        ; local decl count
0003be6: 41                                        ; i32.const
0003be7: 01                                        ; i32 literal
0003be8: 41                                        ; i32.const
0003be9: 02                                        ; i32 literal
0003bea: 41                                        ; i32.const
0003beb: 03                                        ; i32 literal
0003bec: fe                                        ; prefix
0003bed: 4b                                        ; i32.atomic.rmw16.cmpxchg_u
0003bee: 01                                        ; alignment
0003bef: 03                                        ; memory offset
0003bf0: 1a                                        ; drop
0003bf1: 0b                                        ; end
0003be4: 0d                                        ; FIXUP func body size
; function body 414
0003bf2: 00                                        ; func body size (guess)
0003bf3: 00                                        ; local decl count
0003bf4: 41                                        ; i32.const
0003bf5: 01                                        ; i32 literal
0003bf6: 42                                        ; i64.const
0003bf7: 02                                        ; i64 literal
0003bf8: 42                                        ; i64.const
0003bf9: 03                                        ; i64 literal
0003bfa: fe                                        ; prefix
0003bfb: 4c                                        ; i64.atomic.rmw8.cmpxchg_u
0003bfc: 00                                        ; alignment
0003bfd: 03                                        ; memory offset
0003bfe: 1a                                        ; drop
0003bff: 0b                                        ; end
0003bf2: 0d                                        ; FIXUP func body size
; function body 415
0003c00: 00                                        ; func body size (guess)
0003c01: 00                                        ; local decl count
0003c02: 41                                        ; i32.const
0003c03: 01                                        ; i32 literal
0003c04: 42                                        ; i64.const
0003c05: 02                                        ; i64 literal
0003c06: 42                                        ; i64.const
0003c07: 03                                        ; i64 literal
0003c08: fe                                        ; prefix
0003c09: 4d                                        ; i64.atomic.rmw16.cmpxchg_u
0003c0a: 01                                        ; alignment
0003c0b: 03                                        ; memory offset
0003c0c: 1a                                        ; drop
0003c0d: 0b                                        ; end
0003c00: 0d                                        ; FIXUP func body size
; function body 416
0003c0e: 00                                        ; func body size (guess)
0003c0f: 00                                        ; local decl count
0003c10: 41                                        ; i32.const
0003c11: 01                                        ; i32 literal
0003c12: 42                                        ; i64.const
0003c13: 02                                        ; i64 literal
0003c14: 42                                        ; i64.const
0003c15: 03                                        ; i64 literal
0003c16: fe                                        ; prefix
0003c17: 4e                                        ; i64.atomic.rmw32.cmpxchg_u
0003c18: 02                                        ; alignment
0003c19: 03                                        ; memory offset
0003c1a: 1a                                        ; drop
0003c1b: 0b                                        ; end
0003c0e: 0d                                        ; FIXUP func body size
; move data: [1c7c, 3c1c) -> [1c7d, 3c1d)
0001c7b: a03f                                      ; FIXUP section size
; section "Data" (11)
0003c1d: 0b                                        ; section code
0003c1e: 00                                        ; section size (guess)
0003c1f: 01                                        ; num data segments
; data segment header 0
0003c20: 01                                        ; segment flags
0003c21: 00                                        ; data segment size
; data segment data 0
0003c1e: 03                                        ; FIXUP section size
BeginModule(version: 1)
  BeginTypeSection(8)
    OnTypeCount(2)
    OnType(index: 0, params: [], results: [])
    OnType(index: 1, params: [i32], results: [])
  EndTypeSection
  BeginImportSection(14)
    OnImportCount(1)
    OnImport(index: 0, kind: func, module: "host", field: "print")
    OnImportFunc(import_index: 0, func_index: 0, sig_index: 1)
  EndImportSection
  BeginFunctionSection(419)
    OnFunctionCount(417)
    OnFunction(index: 1, sig_index: 0)
    OnFunction(index: 2, sig_index: 0)
    OnFunction(index: 3, sig_index: 0)
    OnFunction(index: 4, sig_index: 0)
    OnFunction(index: 5, sig_index: 0)
    OnFunction(index: 6, sig_index: 0)
    OnFunction(index: 7, sig_index: 0)
    OnFunction(index: 8, sig_index: 0)
    OnFunction(index: 9, sig_index: 0)
    OnFunction(index: 10, sig_index: 0)
    OnFunction(index: 11, sig_index: 0)
    OnFunction(index: 12, sig_index: 0)
    OnFunction(index: 13, sig_index: 0)
    OnFunction(index: 14, sig_index: 0)
    OnFunction(index: 15, sig_index: 0)
    OnFunction(index: 16, sig_index: 0)
    OnFunction(index: 17, sig_index: 0)
    OnFunction(index: 18, sig_index: 0)
    OnFunction(index: 19, sig_index: 0)
    OnFunction(index: 20, sig_index: 0)
    OnFunction(index: 21, sig_index: 0)
    OnFunction(index: 22, sig_index: 0)
    OnFunction(index: 23, sig_index: 0)
    OnFunction(index: 24, sig_index: 0)
    OnFunction(index: 25, sig_index: 0)
    OnFunction(index: 26, sig_index: 0)
    OnFunction(index: 27, sig_index: 0)
    OnFunction(index: 28, sig_index: 0)
    OnFunction(index: 29, sig_index: 0)
    OnFunction(index: 30, sig_index: 0)
    OnFunction(index: 31, sig_index: 0)
    OnFunction(index: 32, sig_index: 0)
    OnFunction(index: 33, sig_index: 0)
    OnFunction(index: 34, sig_index: 0)
    OnFunction(index: 35, sig_index: 0)
    OnFunction(index: 36, sig_index: 0)
    OnFunction(index: 37, sig_index: 0)
    OnFunction(index: 38, sig_index: 0)
    OnFunction(index: 39, sig_index: 0)
    OnFunction(index: 40, sig_index: 0)
    OnFunction(index: 41, sig_index: 0)
    OnFunction(index: 42, sig_index: 0)
    OnFunction(index: 43, sig_index: 0)
    OnFunction(index: 44, sig_index: 0)
    OnFunction(index: 45, sig_index: 0)
    OnFunction(index: 46, sig_index: 0)
    OnFunction(index: 47, sig_index: 0)
    OnFunction(index: 48, sig_index: 0)
    OnFunction(index: 49, sig_index: 0)
    OnFunction(index: 50, sig_index: 0)
    OnFunction(index: 51, sig_index: 0)
    OnFunction(index: 52, sig_index: 0)
    OnFunction(index: 53, sig_index: 0)
    OnFunction(index: 54, sig_index: 0)
    OnFunction(index: 55, sig_index: 0)
    OnFunction(index: 56, sig_index: 0)
    OnFunction(index: 57, sig_index: 0)
    OnFunction(index: 58, sig_index: 0)
    OnFunction(index: 59, sig_index: 0)
    OnFunction(index: 60, sig_index: 0)
    OnFunction(index: 61, sig_index: 0)
    OnFunction(index: 62, sig_index: 0)
    OnFunction(index: 63, sig_index: 0)
    OnFunction(index: 64, sig_index: 0)
    OnFunction(index: 65, sig_index: 0)
    OnFunction(index: 66, sig_index: 0)
    OnFunction(index: 67, sig_index: 0)
    OnFunction(index: 68, sig_index: 0)
    OnFunction(index: 69, sig_index: 0)
    OnFunction(index: 70, sig_index: 0)
    OnFunction(index: 71, sig_index: 0)
    OnFunction(index: 72, sig_index: 0)
    OnFunction(index: 73, sig_index: 0)
    OnFunction(index: 74, sig_index: 0)
    OnFunction(index: 75, sig_index: 0)
    OnFunction(index: 76, sig_index: 0)
    OnFunction(index: 77, sig_index: 0)
    OnFunction(index: 78, sig_index: 0)
    OnFunction(index: 79, sig_index: 0)
    OnFunction(index: 80, sig_index: 0)
    OnFunction(index: 81, sig_index: 0)
    OnFunction(index: 82, sig_index: 0)
    OnFunction(index: 83, sig_index: 0)
    OnFunction(index: 84, sig_index: 0)
    OnFunction(index: 85, sig_index: 0)
    OnFunction(index: 86, sig_index: 0)
    OnFunction(index: 87, sig_index: 0)
    OnFunction(index: 88, sig_index: 0)
    OnFunction(index: 89, sig_index: 0)
    OnFunction(index: 90, sig_index: 0)
    OnFunction(index: 91, sig_index: 0)
    OnFunction(index: 92, sig_index: 0)
    OnFunction(index: 93, sig_index: 0)
    OnFunction(index: 94, sig_index: 0)
    OnFunction(index: 95, sig_index: 0)
    OnFunction(index: 96, sig_index: 0)
    OnFunction(index: 97, sig_index: 0)
    OnFunction(index: 98, sig_index: 0)
    OnFunction(index: 99, sig_index: 0)
    OnFunction(index: 100, sig_index: 0)
    OnFunction(index: 101, sig_index: 0)
    OnFunction(index: 102, sig_index: 0)
    OnFunction(index: 103, sig_index: 0)
    OnFunction(index: 104, sig_index: 0)
    OnFunction(index: 105, sig_index: 0)
    OnFunction(index: 106, sig_index: 0)
    OnFunction(index: 107, sig_index: 0)
    OnFunction(index: 108, sig_index: 0)
    OnFunction(index: 109, sig_index: 0)
    OnFunction(index: 110, sig_index: 0)
    OnFunction(index: 111, sig_index: 0)
    OnFunction(index: 112, sig_index: 0)
    OnFunction(index: 113, sig_index: 0)
    OnFunction(index: 114, sig_index: 0)
    OnFunction(index: 115, sig_index: 0)
    OnFunction(index: 116, sig_index: 0)
    OnFunction(index: 117, sig_index: 0)
    OnFunction(index: 118, sig_index: 0)
    OnFunction(index: 119, sig_index: 0)
    OnFunction(index: 120, sig_index: 0)
    OnFunction(index: 121, sig_index: 0)
    OnFunction(index: 122, sig_index: 0)
    OnFunction(index: 123, sig_index: 0)
    OnFunction(index: 124, sig_index: 0)
    OnFunction(index: 125, sig_index: 0)
    OnFunction(index: 126, sig_index: 0)
    OnFunction(index: 127, sig_index: 0)
    OnFunction(index: 128, sig_index: 0)
    OnFunction(index: 129, sig_index: 0)
    OnFunction(index: 130, sig_index: 0)
    OnFunction(index: 131, sig_index: 0)
    OnFunction(index: 132, sig_index: 0)
    OnFunction(index: 133, sig_index: 0)
    OnFunction(index: 134, sig_index: 0)
    OnFunction(index: 135, sig_index: 0)
    OnFunction(index: 136, sig_index: 0)
    OnFunction(index: 137, sig_index: 0)
    OnFunction(index: 138, sig_index: 0)
    OnFunction(index: 139, sig_index: 0)
    OnFunction(index: 140, sig_index: 0)
    OnFunction(index: 141, sig_index: 0)
    OnFunction(index: 142, sig_index: 0)
    OnFunction(index: 143, sig_index: 0)
    OnFunction(index: 144, sig_index: 0)
    OnFunction(index: 145, sig_index: 0)
    OnFunction(index: 146, sig_index: 0)
    OnFunction(index: 147, sig_index: 0)
    OnFunction(index: 148, sig_index: 0)
    OnFunction(index: 149, sig_index: 0)
    OnFunction(index: 150, sig_index: 0)
    OnFunction(index: 151, sig_index: 0)
    OnFunction(index: 152, sig_index: 0)
    OnFunction(index: 153, sig_index: 0)
    OnFunction(index: 154, sig_index: 0)
    OnFunction(index: 155, sig_index: 0)
    OnFunction(index: 156, sig_index: 0)
    OnFunction(index: 157, sig_index: 0)
    OnFunction(index: 158, sig_index: 0)
    OnFunction(index: 159, sig_index: 0)
    OnFunction(index: 160, sig_index: 0)
    OnFunction(index: 161, sig_index: 0)
    OnFunction(index: 162, sig_index: 0)
    OnFunction(index: 163, sig_index: 0)
    OnFunction(index: 164, sig_index: 0)
    OnFunction(index: 165, sig_index: 0)
    OnFunction(index: 166, sig_index: 0)
    OnFunction(index: 167, sig_index: 0)
    OnFunction(index: 168, sig_index: 0)
    OnFunction(index: 169, sig_index: 0)
    OnFunction(index: 170, sig_index: 0)
    OnFunction(index: 171, sig_index: 0)
    OnFunction(index: 172, sig_index: 0)
    OnFunction(index: 173, sig_index: 0)
    OnFunction(index: 174, sig_index: 0)
    OnFunction(index: 175, sig_index: 0)
    OnFunction(index: 176, sig_index: 0)
    OnFunction(index: 177, sig_index: 0)
    OnFunction(index: 178, sig_index: 0)
    OnFunction(index: 179, sig_index: 0)
    OnFunction(index: 180, sig_index: 0)
    OnFunction(index: 181, sig_index: 0)
    OnFunction(index: 182, sig_index: 0)
    OnFunction(index: 183, sig_index: 0)
    OnFunction(index: 184, sig_index: 0)
    OnFunction(index: 185, sig_index: 0)
    OnFunction(index: 186, sig_index: 0)
    OnFunction(index: 187, sig_index: 0)
    OnFunction(index: 188, sig_index: 0)
    OnFunction(index: 189, sig_index: 0)
    OnFunction(index: 190, sig_index: 0)
    OnFunction(index: 191, sig_index: 0)
    OnFunction(index: 192, sig_index: 0)
    OnFunction(index: 193, sig_index: 0)
    OnFunction(index: 194, sig_index: 0)
    OnFunction(index: 195, sig_index: 0)
    OnFunction(index: 196, sig_index: 0)
    OnFunction(index: 197, sig_index: 0)
    OnFunction(index: 198, sig_index: 0)
    OnFunction(index: 199, sig_index: 0)
    OnFunction(index: 200, sig_index: 0)
    OnFunction(index: 201, sig_index: 0)
    OnFunction(index: 202, sig_index: 0)
    OnFunction(index: 203, sig_index: 0)
    OnFunction(index: 204, sig_index: 0)
    OnFunction(index: 205, sig_index: 0)
    OnFunction(index: 206, sig_index: 0)
    OnFunction(index: 207, sig_index: 0)
    OnFunction(index: 208, sig_index: 0)
    OnFunction(index: 209, sig_index: 0)
    OnFunction(index: 210, sig_index: 0)
    OnFunction(index: 211, sig_index: 0)
    OnFunction(index: 212, sig_index: 0)
    OnFunction(index: 213, sig_index: 0)
    OnFunction(index: 214, sig_index: 0)
    OnFunction(index: 215, sig_index: 0)
    OnFunction(index: 216, sig_index: 0)
    OnFunction(index: 217, sig_index: 0)
    OnFunction(index: 218, sig_index: 0)
    OnFunction(index: 219, sig_index: 0)
    OnFunction(index: 220, sig_index: 0)
    OnFunction(index: 221, sig_index: 0)
    OnFunction(index: 222, sig_index: 0)
    OnFunction(index: 223, sig_index: 0)
    OnFunction(index: 224, sig_index: 0)
    OnFunction(index: 225, sig_index: 0)
    OnFunction(index: 226, sig_index: 0)
    OnFunction(index: 227, sig_index: 0)
    OnFunction(index: 228, sig_index: 0)
    OnFunction(index: 229, sig_index: 0)
    OnFunction(index: 230, sig_index: 0)
    OnFunction(index: 231, sig_index: 0)
    OnFunction(index: 232, sig_index: 0)
    OnFunction(index: 233, sig_index: 0)
    OnFunction(index: 234, sig_index: 0)
    OnFunction(index: 235, sig_index: 0)
    OnFunction(index: 236, sig_index: 0)
    OnFunction(index: 237, sig_index: 0)
    OnFunction(index: 238, sig_index: 0)
    OnFunction(index: 239, sig_index: 0)
    OnFunction(index: 240, sig_index: 0)
    OnFunction(index: 241, sig_index: 0)
    OnFunction(index: 242, sig_index: 0)
    OnFunction(index: 243, sig_index: 0)
    OnFunction(index: 244, sig_index: 0)
    OnFunction(index: 245, sig_index: 0)
    OnFunction(index: 246, sig_index: 0)
    OnFunction(index: 247, sig_index: 0)
    OnFunction(index: 248, sig_index: 0)
    OnFunction(index: 249, sig_index: 0)
    OnFunction(index: 250, sig_index: 0)
    OnFunction(index: 251, sig_index: 0)
    OnFunction(index: 252, sig_index: 0)
    OnFunction(index: 253, sig_index: 0)
    OnFunction(index: 254, sig_index: 0)
    OnFunction(index: 255, sig_index: 0)
    OnFunction(index: 256, sig_index: 0)
    OnFunction(index: 257, sig_index: 0)
    OnFunction(index: 258, sig_index: 0)
    OnFunction(index: 259, sig_index: 0)
    OnFunction(index: 260, sig_index: 0)
    OnFunction(index: 261, sig_index: 0)
    OnFunction(index: 262, sig_index: 0)
    OnFunction(index: 263, sig_index: 0)
    OnFunction(index: 264, sig_index: 0)
    OnFunction(index: 265, sig_index: 0)
    OnFunction(index: 266, sig_index: 0)
    OnFunction(index: 267, sig_index: 0)
    OnFunction(index: 268, sig_index: 0)
    OnFunction(index: 269, sig_index: 0)
    OnFunction(index: 270, sig_index: 0)
    OnFunction(index: 271, sig_index: 0)
    OnFunction(index: 272, sig_index: 0)
    OnFunction(index: 273, sig_index: 0)
    OnFunction(index: 274, sig_index: 0)
    OnFunction(index: 275, sig_index: 0)
    OnFunction(index: 276, sig_index: 0)
    OnFunction(index: 277, sig_index: 0)
    OnFunction(index: 278, sig_index: 0)
    OnFunction(index: 279, sig_index: 0)
    OnFunction(index: 280, sig_index: 0)
    OnFunction(index: 281, sig_index: 0)
    OnFunction(index: 282, sig_index: 0)
    OnFunction(index: 283, sig_index: 0)
    OnFunction(index: 284, sig_index: 0)
    OnFunction(index: 285, sig_index: 0)
    OnFunction(index: 286, sig_index: 0)
    OnFunction(index: 287, sig_index: 0)
    OnFunction(index: 288, sig_index: 0)
    OnFunction(index: 289, sig_index: 0)
    OnFunction(index: 290, sig_index: 0)
    OnFunction(index: 291, sig_index: 0)
    OnFunction(index: 292, sig_index: 0)
    OnFunction(index: 293, sig_index: 0)
    OnFunction(index: 294, sig_index: 0)
    OnFunction(index: 295, sig_index: 0)
    OnFunction(index: 296, sig_index: 0)
    OnFunction(index: 297, sig_index: 0)
    OnFunction(index: 298, sig_index: 0)
    OnFunction(index: 299, sig_index: 0)
    OnFunction(index: 300, sig_index: 0)
    OnFunction(index: 301, sig_index: 0)
    OnFunction(index: 302, sig_index: 0)
    OnFunction(index: 303, sig_index: 0)
    OnFunction(index: 304, sig_index: 0)
    OnFunction(index: 305, sig_index: 0)
    OnFunction(index: 306, sig_index: 0)
    OnFunction(index: 307, sig_index: 0)
    OnFunction(index: 308, sig_index: 0)
    OnFunction(index: 309, sig_index: 0)
    OnFunction(index: 310, sig_index: 0)
    OnFunction(index: 311, sig_index: 0)
    OnFunction(index: 312, sig_index: 0)
    OnFunction(index: 313, sig_index: 0)
    OnFunction(index: 314, sig_index: 0)
    OnFunction(index: 315, sig_index: 0)
    OnFunction(index: 316, sig_index: 0)
    OnFunction(index: 317, sig_index: 0)
    OnFunction(index: 318, sig_index: 0)
    OnFunction(index: 319, sig_index: 0)
    OnFunction(index: 320, sig_index: 0)
    OnFunction(index: 321, sig_index: 0)
    OnFunction(index: 322, sig_index: 0)
    OnFunction(index: 323, sig_index: 0)
    OnFunction(index: 324, sig_index: 0)
    OnFunction(index: 325, sig_index: 0)
    OnFunction(index: 326, sig_index: 0)
    OnFunction(index: 327, sig_index: 0)
    OnFunction(index: 328, sig_index: 0)
    OnFunction(index: 329, sig_index: 0)
    OnFunction(index: 330, sig_index: 0)
    OnFunction(index: 331, sig_index: 0)
    OnFunction(index: 332, sig_index: 0)
    OnFunction(index: 333, sig_index: 0)
    OnFunction(index: 334, sig_index: 0)
    OnFunction(index: 335, sig_index: 0)
    OnFunction(index: 336, sig_index: 0)
    OnFunction(index: 337, sig_index: 0)
    OnFunction(index: 338, sig_index: 0)
    OnFunction(index: 339, sig_index: 0)
    OnFunction(index: 340, sig_index: 0)
    OnFunction(index: 341, sig_index: 0)
    OnFunction(index: 342, sig_index: 0)
    OnFunction(index: 343, sig_index: 0)
    OnFunction(index: 344, sig_index: 0)
    OnFunction(index: 345, sig_index: 0)
    OnFunction(index: 346, sig_index: 0)
    OnFunction(index: 347, sig_index: 0)
    OnFunction(index: 348, sig_index: 0)
    OnFunction(index: 349, sig_index: 0)
    OnFunction(index: 350, sig_index: 0)
    OnFunction(index: 351, sig_index: 0)
    OnFunction(index: 352, sig_index: 0)
    OnFunction(index: 353, sig_index: 0)
    OnFunction(index: 354, sig_index: 0)
    OnFunction(index: 355, sig_index: 0)
    OnFunction(index: 356, sig_index: 0)
    OnFunction(index: 357, sig_index: 0)
    OnFunction(index: 358, sig_index: 0)
    OnFunction(index: 359, sig_index: 0)
    OnFunction(index: 360, sig_index: 0)
    OnFunction(index: 361, sig_index: 0)
    OnFunction(index: 362, sig_index: 0)
    OnFunction(index: 363, sig_index: 0)
    OnFunction(index: 364, sig_index: 0)
    OnFunction(index: 365, sig_index: 0)
    OnFunction(index: 366, sig_index: 0)
    OnFunction(index: 367, sig_index: 0)
    OnFunction(index: 368, sig_index: 0)
    OnFunction(index: 369, sig_index: 0)
    OnFunction(index: 370, sig_index: 0)
    OnFunction(index: 371, sig_index: 0)
    OnFunction(index: 372, sig_index: 0)
    OnFunction(index: 373, sig_index: 0)
    OnFunction(index: 374, sig_index: 0)
    OnFunction(index: 375, sig_index: 0)
    OnFunction(index: 376, sig_index: 0)
    OnFunction(index: 377, sig_index: 0)
    OnFunction(index: 378, sig_index: 0)
    OnFunction(index: 379, sig_index: 0)
    OnFunction(index: 380, sig_index: 0)
    OnFunction(index: 381, sig_index: 0)
    OnFunction(index: 382, sig_index: 0)
    OnFunction(index: 383, sig_index: 0)
    OnFunction(index: 384, sig_index: 0)
    OnFunction(index: 385, sig_index: 0)
    OnFunction(index: 386, sig_index: 0)
    OnFunction(index: 387, sig_index: 0)
    OnFunction(index: 388, sig_index: 0)
    OnFunction(index: 389, sig_index: 0)
    OnFunction(index: 390, sig_index: 0)
    OnFunction(index: 391, sig_index: 0)
    OnFunction(index: 392, sig_index: 0)
    OnFunction(index: 393, sig_index: 0)
    OnFunction(index: 394, sig_index: 0)
    OnFunction(index: 395, sig_index: 0)
    OnFunction(index: 396, sig_index: 0)
    OnFunction(index: 397, sig_index: 0)
    OnFunction(index: 398, sig_index: 0)
    OnFunction(index: 399, sig_index: 0)
    OnFunction(index: 400, sig_index: 0)
    OnFunction(index: 401, sig_index: 0)
    OnFunction(index: 402, sig_index: 0)
    OnFunction(index: 403, sig_index: 0)
    OnFunction(index: 404, sig_index: 0)
    OnFunction(index: 405, sig_index: 0)
    OnFunction(index: 406, sig_index: 0)
    OnFunction(index: 407, sig_index: 0)
    OnFunction(index: 408, sig_index: 0)
    OnFunction(index: 409, sig_index: 0)
    OnFunction(index: 410, sig_index: 0)
    OnFunction(index: 411, sig_index: 0)
    OnFunction(index: 412, sig_index: 0)
    OnFunction(index: 413, sig_index: 0)
    OnFunction(index: 414, sig_index: 0)
    OnFunction(index: 415, sig_index: 0)
    OnFunction(index: 416, sig_index: 0)
    OnFunction(index: 417, sig_index: 0)
  EndFunctionSection
  BeginTableSection(5)
    OnTableCount(1)
    OnTable(index: 0, elem_type: funcref, initial: 2, max: 2)
  EndTableSection
  BeginMemorySection(4)
    OnMemoryCount(1)
    OnMemory(index: 0, initial: 1, max: 1)
  EndMemorySection
  BeginGlobalSection(6)
    OnGlobalCount(1)
    BeginGlobal(index: 0, type: i32, mutable: true)
    BeginGlobalInitExpr(0)
    OnInitExprI32ConstExpr(index: 0, value: 0)
    EndGlobalInitExpr(0)
    EndGlobal(0)
  EndGlobalSection
  BeginExportSection(6794)
    OnExportCount(416)
    OnExport(index: 0, kind: func, item_index: 2, name: "unreachable")
    OnExport(index: 1, kind: func, item_index: 3, name: "br")
    OnExport(index: 2, kind: func, item_index: 4, name: "br_table")
    OnExport(index: 3, kind: func, item_index: 5, name: "return")
    OnExport(index: 4, kind: func, item_index: 6, name: "call")
    OnExport(index: 5, kind: func, item_index: 7, name: "call_indirect")
    OnExport(index: 6, kind: func, item_index: 8, name: "return_call")
    OnExport(index: 7, kind: func, item_index: 9, name: "return_call_indirect")
    OnExport(index: 8, kind: func, item_index: 10, name: "drop")
    OnExport(index: 9, kind: func, item_index: 11, name: "select")
    OnExport(index: 10, kind: func, item_index: 12, name: "select_t")
    OnExport(index: 11, kind: func, item_index: 13, name: "get_local")
    OnExport(index: 12, kind: func, item_index: 14, name: "set_local")
    OnExport(index: 13, kind: func, item_index: 15, name: "tee_local")
    OnExport(index: 14, kind: func, item_index: 16, name: "get_global")
    OnExport(index: 15, kind: func, item_index: 17, name: "set_global")
    OnExport(index: 16, kind: func, item_index: 18, name: "i32.load")
    OnExport(index: 17, kind: func, item_index: 19, name: "i64.load")
    OnExport(index: 18, kind: func, item_index: 20, name: "f32.load")
    OnExport(index: 19, kind: func, item_index: 21, name: "f64.load")
    OnExport(index: 20, kind: func, item_index: 22, name: "i32.load8_s")
    OnExport(index: 21, kind: func, item_index: 23, name: "i32.load8_u")
    OnExport(index: 22, kind: func, item_index: 24, name: "i32.load16_s")
    OnExport(index: 23, kind: func, item_index: 25, name: "i32.load16_u")
    OnExport(index: 24, kind: func, item_index: 26, name: "i64.load8_s")
    OnExport(index: 25, kind: func, item_index: 27, name: "i64.load8_u")
    OnExport(index: 26, kind: func, item_index: 28, name: "i64.load16_s")
    OnExport(index: 27, kind: func, item_index: 29, name: "i64.load16_u")
    OnExport(index: 28, kind: func, item_index: 30, name: "i64.load32_s")
    OnExport(index: 29, kind: func, item_index: 31, name: "i64.load32_u")
    OnExport(index: 30, kind: func, item_index: 32, name: "i32.store")
    OnExport(index: 31, kind: func, item_index: 33, name: "i64.store")
    OnExport(index: 32, kind: func, item_index: 34, name: "f32.store")
    OnExport(index: 33, kind: func, item_index: 35, name: "f64.store")
    OnExport(index: 34, kind: func, item_index: 36, name: "i32.store8")
    OnExport(index: 35, kind: func, item_index: 37, name: "i32.store16")
    OnExport(index: 36, kind: func, item_index: 38, name: "i64.store8")
    OnExport(index: 37, kind: func, item_index: 39, name: "i64.store16")
    OnExport(index: 38, kind: func, item_index: 40, name: "i64.store32")
    OnExport(index: 39, kind: func, item_index: 41, name: "current_memory")
    OnExport(index: 40, kind: func, item_index: 42, name: "grow_memory")
    OnExport(index: 41, kind: func, item_index: 43, name: "i32.const")
    OnExport(index: 42, kind: func, item_index: 44, name: "i64.const")
    OnExport(index: 43, kind: func, item_index: 45, name: "f32.const")
    OnExport(index: 44, kind: func, item_index: 46, name: "f64.const")
    OnExport(index: 45, kind: func, item_index: 47, name: "i32.eqz")
    OnExport(index: 46, kind: func, item_index: 48, name: "i32.eq")
    OnExport(index: 47, kind: func, item_index: 49, name: "i32.ne")
    OnExport(index: 48, kind: func, item_index: 50, name: "i32.lt_s")
    OnExport(index: 49, kind: func, item_index: 51, name: "i32.lt_u")
    OnExport(index: 50, kind: func, item_index: 52, name: "i32.gt_s")
    OnExport(index: 51, kind: func, item_index: 53, name: "i32.gt_u")
    OnExport(index: 52, kind: func, item_index: 54, name: "i32.le_s")
    OnExport(index: 53, kind: func, item_index: 55, name: "i32.le_u")
    OnExport(index: 54, kind: func, item_index: 56, name: "i32.ge_s")
    OnExport(index: 55, kind: func, item_index: 57, name: "i32.ge_u")
    OnExport(index: 56, kind: func, item_index: 58, name: "i64.eqz")
    OnExport(index: 57, kind: func, item_index: 59, name: "i64.eq")
    OnExport(index: 58, kind: func, item_index: 60, name: "i64.ne")
    OnExport(index: 59, kind: func, item_index: 61, name: "i64.lt_s")
    OnExport(index: 60, kind: func, item_index: 62, name: "i64.lt_u")
    OnExport(index: 61, kind: func, item_index: 63, name: "i64.gt_s")
    OnExport(index: 62, kind: func, item_index: 64, name: "i64.gt_u")
    OnExport(index: 63, kind: func, item_index: 65, name: "i64.le_s")
    OnExport(index: 64, kind: func, item_index: 66, name: "i64.le_u")
    OnExport(index: 65, kind: func, item_index: 67, name: "i64.ge_s")
    OnExport(index: 66, kind: func, item_index: 68, name: "i64.ge_u")
    OnExport(index: 67, kind: func, item_index: 69, name: "f32.eq")
    OnExport(index: 68, kind: func, item_index: 70, name: "f32.ne")
    OnExport(index: 69, kind: func, item_index: 71, name: "f32.lt")
    OnExport(index: 70, kind: func, item_index: 72, name: "f32.gt")
    OnExport(index: 71, kind: func, item_index: 73, name: "f32.le")
    OnExport(index: 72, kind: func, item_index: 74, name: "f32.ge")
    OnExport(index: 73, kind: func, item_index: 75, name: "f64.eq")
    OnExport(index: 74, kind: func, item_index: 76, name: "f64.ne")
    OnExport(index: 75, kind: func, item_index: 77, name: "f64.lt")
    OnExport(index: 76, kind: func, item_index: 78, name: "f64.gt")
    OnExport(index: 77, kind: func, item_index: 79, name: "f64.le")
    OnExport(index: 78, kind: func, item_index: 80, name: "f64.ge")
    OnExport(index: 79, kind: func, item_index: 81, name: "i32.clz")
    OnExport(index: 80, kind: func, item_index: 82, name: "i32.ctz")
    OnExport(index: 81, kind: func, item_index: 83, name: "i32.popcnt")
    OnExport(index: 82, kind: func, item_index: 84, name: "i32.add")
    OnExport(index: 83, kind: func, item_index: 85, name: "i32.sub")
    OnExport(index: 84, kind: func, item_index: 86, name: "i32.mul")
    OnExport(index: 85, kind: func, item_index: 87, name: "i32.div_s")
    OnExport(index: 86, kind: func, item_index: 88, name: "i32.div_u")
    OnExport(index: 87, kind: func, item_index: 89, name: "i32.rem_s")
    OnExport(index: 88, kind: func, item_index: 90, name: "i32.rem_u")
    OnExport(index: 89, kind: func, item_index: 91, name: "i32.and")
    OnExport(index: 90, kind: func, item_index: 92, name: "i32.or")
    OnExport(index: 91, kind: func, item_index: 93, name: "i32.xor")
    OnExport(index: 92, kind: func, item_index: 94, name: "i32.shl")
    OnExport(index: 93, kind: func, item_index: 95, name: "i32.shr_s")
    OnExport(index: 94, kind: func, item_index: 96, name: "i32.shr_u")
    OnExport(index: 95, kind: func, item_index: 97, name: "i32.rotl")
    OnExport(index: 96, kind: func, item_index: 98, name: "i32.rotr")
    OnExport(index: 97, kind: func, item_index: 99, name: "i64.clz")
    OnExport(index: 98, kind: func, item_index: 100, name: "i64.ctz")
    OnExport(index: 99, kind: func, item_index: 101, name: "i64.popcnt")
    OnExport(index: 100, kind: func, item_index: 102, name: "i64.add")
    OnExport(index: 101, kind: func, item_index: 103, name: "i64.sub")
    OnExport(index: 102, kind: func, item_index: 104, name: "i64.mul")
    OnExport(index: 103, kind: func, item_index: 105, name: "i64.div_s")
    OnExport(index: 104, kind: func, item_index: 106, name: "i64.div_u")
    OnExport(index: 105, kind: func, item_index: 107, name: "i64.rem_s")
    OnExport(index: 106, kind: func, item_index: 108, name: "i64.rem_u")
    OnExport(index: 107, kind: func, item_index: 109, name: "i64.and")
    OnExport(index: 108, kind: func, item_index: 110, name: "i64.or")
    OnExport(index: 109, kind: func, item_index: 111, name: "i64.xor")
    OnExport(index: 110, kind: func, item_index: 112, name: "i64.shl")
    OnExport(index: 111, kind: func, item_index: 113, name: "i64.shr_s")
    OnExport(index: 112, kind: func, item_index: 114, name: "i64.shr_u")
    OnExport(index: 113, kind: func, item_index: 115, name: "i64.rotl")
    OnExport(index: 114, kind: func, item_index: 116, name: "i64.rotr")
    OnExport(index: 115, kind: func, item_index: 117, name: "f32.abs")
    OnExport(index: 116, kind: func, item_index: 118, name: "f32.neg")
    OnExport(index: 117, kind: func, item_index: 119, name: "f32.ceil")
    OnExport(index: 118, kind: func, item_index: 120, name: "f32.floor")
    OnExport(index: 119, kind: func, item_index: 121, name: "f32.trunc")
    OnExport(index: 120, kind: func, item_index: 122, name: "f32.nearest")
    OnExport(index: 121, kind: func, item_index: 123, name: "f32.sqrt")
    OnExport(index: 122, kind: func, item_index: 124, name: "f32.add")
    OnExport(index: 123, kind: func, item_index: 125, name: "f32.sub")
    OnExport(index: 124, kind: func, item_index: 126, name: "f32.mul")
    OnExport(index: 125, kind: func, item_index: 127, name: "f32.div")
    OnExport(index: 126, kind: func, item_index: 128, name: "f32.min")
    OnExport(index: 127, kind: func, item_index: 129, name: "f32.max")
    OnExport(index: 128, kind: func, item_index: 130, name: "f32.copysign")
    OnExport(index: 129, kind: func, item_index: 131, name: "f64.abs")
    OnExport(index: 130, kind: func, item_index: 132, name: "f64.neg")
    OnExport(index: 131, kind: func, item_index: 133, name: "f64.ceil")
    OnExport(index: 132, kind: func, item_index: 134, name: "f64.floor")
    OnExport(index: 133, kind: func, item_index: 135, name: "f64.trunc")
    OnExport(index: 134, kind: func, item_index: 136, name: "f64.nearest")
    OnExport(index: 135, kind: func, item_index: 137, name: "f64.sqrt")
    OnExport(index: 136, kind: func, item_index: 138, name: "f64.add")
    OnExport(index: 137, kind: func, item_index: 139, name: "f64.sub")
    OnExport(index: 138, kind: func, item_index: 140, name: "f64.mul")
    OnExport(index: 139, kind: func, item_index: 141, name: "f64.div")
    OnExport(index: 140, kind: func, item_index: 142, name: "f64.min")
    OnExport(index: 141, kind: func, item_index: 143, name: "f64.max")
    OnExport(index: 142, kind: func, item_index: 144, name: "f64.copysign")
    OnExport(index: 143, kind: func, item_index: 145, name: "i32.wrap/i64")
    OnExport(index: 144, kind: func, item_index: 146, name: "i32.trunc_s/f32")
    OnExport(index: 145, kind: func, item_index: 147, name: "i32.trunc_u/f32")
    OnExport(index: 146, kind: func, item_index: 148, name: "i32.trunc_s/f64")
    OnExport(index: 147, kind: func, item_index: 149, name: "i32.trunc_u/f64")
    OnExport(index: 148, kind: func, item_index: 150, name: "i64.extend_s/i32")
    OnExport(index: 149, kind: func, item_index: 151, name: "i64.extend_u/i32")
    OnExport(index: 150, kind: func, item_index: 152, name: "i64.trunc_s/f32")
    OnExport(index: 151, kind: func, item_index: 153, name: "i64.trunc_u/f32")
    OnExport(index: 152, kind: func, item_index: 154, name: "i64.trunc_s/f64")
    OnExport(index: 153, kind: func, item_index: 155, name: "i64.trunc_u/f64")
    OnExport(index: 154, kind: func, item_index: 156, name: "f32.convert_s/i32")
    OnExport(index: 155, kind: func, item_index: 157, name: "f32.convert_u/i32")
    OnExport(index: 156, kind: func, item_index: 158, name: "f32.convert_s/i64")
    OnExport(index: 157, kind: func, item_index: 159, name: "f32.convert_u/i64")
    OnExport(index: 158, kind: func, item_index: 160, name: "f32.demote/f64")
    OnExport(index: 159, kind: func, item_index: 161, name: "f64.convert_s/i32")
    OnExport(index: 160, kind: func, item_index: 162, name: "f64.convert_u/i32")
    OnExport(index: 161, kind: func, item_index: 163, name: "f64.convert_s/i64")
    OnExport(index: 162, kind: func, item_index: 164, name: "f64.convert_u/i64")
    OnExport(index: 163, kind: func, item_index: 165, name: "f64.promote/f32")
    OnExport(index: 164, kind: func, item_index: 166, name: "i32.reinterpret/f32")
    OnExport(index: 165, kind: func, item_index: 167, name: "f32.reinterpret/i32")
    OnExport(index: 166, kind: func, item_index: 168, name: "i64.reinterpret/f64")
    OnExport(index: 167, kind: func, item_index: 169, name: "f64.reinterpret/i64")
    OnExport(index: 168, kind: func, item_index: 170, name: "i32.extend8_s")
    OnExport(index: 169, kind: func, item_index: 171, name: "i32.extend16_s")
    OnExport(index: 170, kind: func, item_index: 172, name: "i64.extend8_s")
    OnExport(index: 171, kind: func, item_index: 173, name: "i64.extend16_s")
    OnExport(index: 172, kind: func, item_index: 174, name: "i64.extend32_s")
    OnExport(index: 173, kind: func, item_index: 175, name: "alloca")
    OnExport(index: 174, kind: func, item_index: 176, name: "br_unless")
    OnExport(index: 175, kind: func, item_index: 177, name: "call_host")
    OnExport(index: 176, kind: func, item_index: 178, name: "data")
    OnExport(index: 177, kind: func, item_index: 179, name: "drop_keep")
    OnExport(index: 178, kind: func, item_index: 180, name: "i32.trunc_s:sat/f32")
    OnExport(index: 179, kind: func, item_index: 181, name: "i32.trunc_u:sat/f32")
    OnExport(index: 180, kind: func, item_index: 182, name: "i32.trunc_s:sat/f64")
    OnExport(index: 181, kind: func, item_index: 183, name: "i32.trunc_u:sat/f64")
    OnExport(index: 182, kind: func, item_index: 184, name: "i64.trunc_s:sat/f32")
    OnExport(index: 183, kind: func, item_index: 185, name: "i64.trunc_u:sat/f32")
    OnExport(index: 184, kind: func, item_index: 186, name: "i64.trunc_s:sat/f64")
    OnExport(index: 185, kind: func, item_index: 187, name: "i64.trunc_u:sat/f64")
    OnExport(index: 186, kind: func, item_index: 188, name: "memory.init")
    OnExport(index: 187, kind: func, item_index: 189, name: "data.drop")
    OnExport(index: 188, kind: func, item_index: 190, name: "memory.copy")
    OnExport(index: 189, kind: func, item_index: 191, name: "memory.fill")
    OnExport(index: 190, kind: func, item_index: 192, name: "table.init")
    OnExport(index: 191, kind: func, item_index: 193, name: "elem.drop")
    OnExport(index: 192, kind: func, item_index: 194, name: "table.copy")
    OnExport(index: 193, kind: func, item_index: 195, name: "v128.load")
    OnExport(index: 194, kind: func, item_index: 196, name: "v128.store")
    OnExport(index: 195, kind: func, item_index: 197, name: "v128.const")
    OnExport(index: 196, kind: func, item_index: 198, name: "i8x16.splat")
    OnExport(index: 197, kind: func, item_index: 199, name: "i8x16.extract_lane_s")
    OnExport(index: 198, kind: func, item_index: 200, name: "i8x16.extract_lane_u")
    OnExport(index: 199, kind: func, item_index: 201, name: "i8x16.replace_lane")
    OnExport(index: 200, kind: func, item_index: 202, name: "i16x8.splat")
    OnExport(index: 201, kind: func, item_index: 203, name: "i16x8.extract_lane_s")
    OnExport(index: 202, kind: func, item_index: 204, name: "i16x8.extract_lane_u")
    OnExport(index: 203, kind: func, item_index: 205, name: "i16x8.replace_lane")
    OnExport(index: 204, kind: func, item_index: 206, name: "i32x4.splat")
    OnExport(index: 205, kind: func, item_index: 207, name: "i32x4.extract_lane")
    OnExport(index: 206, kind: func, item_index: 208, name: "i32x4.replace_lane")
    OnExport(index: 207, kind: func, item_index: 209, name: "i64x2.splat")
    OnExport(index: 208, kind: func, item_index: 210, name: "i64x2.extract_lane")
    OnExport(index: 209, kind: func, item_index: 211, name: "i64x2.replace_lane")
    OnExport(index: 210, kind: func, item_index: 212, name: "f32x4.splat")
    OnExport(index: 211, kind: func, item_index: 213, name: "f32x4.extract_lane")
    OnExport(index: 212, kind: func, item_index: 214, name: "f32x4.replace_lane")
    OnExport(index: 213, kind: func, item_index: 215, name: "f64x2.splat")
    OnExport(index: 214, kind: func, item_index: 216, name: "f64x2.extract_lane")
    OnExport(index: 215, kind: func, item_index: 217, name: "f64x2.replace_lane")
    OnExport(index: 216, kind: func, item_index: 218, name: "i8x16.eq")
    OnExport(index: 217, kind: func, item_index: 219, name: "i8x16.ne")
    OnExport(index: 218, kind: func, item_index: 220, name: "i8x16.lt_s")
    OnExport(index: 219, kind: func, item_index: 221, name: "i8x16.lt_u")
    OnExport(index: 220, kind: func, item_index: 222, name: "i8x16.gt_s")
    OnExport(index: 221, kind: func, item_index: 223, name: "i8x16.gt_u")
    OnExport(index: 222, kind: func, item_index: 224, name: "i8x16.le_s")
    OnExport(index: 223, kind: func, item_index: 225, name: "i8x16.le_u")
    OnExport(index: 224, kind: func, item_index: 226, name: "i8x16.ge_s")
    OnExport(index: 225, kind: func, item_index: 227, name: "i8x16.ge_u")
    OnExport(index: 226, kind: func, item_index: 228, name: "i16x8.eq")
    OnExport(index: 227, kind: func, item_index: 229, name: "i16x8.ne")
    OnExport(index: 228, kind: func, item_index: 230, name: "i16x8.lt_s")
    OnExport(index: 229, kind: func, item_index: 231, name: "i16x8.lt_u")
    OnExport(index: 230, kind: func, item_index: 232, name: "i16x8.gt_s")
    OnExport(index: 231, kind: func, item_index: 233, name: "i16x8.gt_u")
    OnExport(index: 232, kind: func, item_index: 234, name: "i16x8.le_s")
    OnExport(index: 233, kind: func, item_index: 235, name: "i16x8.le_u")
    OnExport(index: 234, kind: func, item_index: 236, name: "i16x8.ge_s")
    OnExport(index: 235, kind: func, item_index: 237, name: "i16x8.ge_u")
    OnExport(index: 236, kind: func, item_index: 238, name: "i32x4.eq")
    OnExport(index: 237, kind: func, item_index: 239, name: "i32x4.ne")
    OnExport(index: 238, kind: func, item_index: 240, name: "i32x4.lt_s")
    OnExport(index: 239, kind: func, item_index: 241, name: "i32x4.lt_u")
    OnExport(index: 240, kind: func, item_index: 242, name: "i32x4.gt_s")
    OnExport(index: 241, kind: func, item_index: 243, name: "i32x4.gt_u")
    OnExport(index: 242, kind: func, item_index: 244, name: "i32x4.le_s")
    OnExport(index: 243, kind: func, item_index: 245, name: "i32x4.le_u")
    OnExport(index: 244, kind: func, item_index: 246, name: "i32x4.ge_s")
    OnExport(index: 245, kind: func, item_index: 247, name: "i32x4.ge_u")
    OnExport(index: 246, kind: func, item_index: 248, name: "f32x4.eq")
    OnExport(index: 247, kind: func, item_index: 249, name: "f32x4.ne")
    OnExport(index: 248, kind: func, item_index: 250, name: "f32x4.lt")
    OnExport(index: 249, kind: func, item_index: 251, name: "f32x4.gt")
    OnExport(index: 250, kind: func, item_index: 252, name: "f32x4.le")
    OnExport(index: 251, kind: func, item_index: 253, name: "f32x4.ge")
    OnExport(index: 252, kind: func, item_index: 254, name: "f64x2.eq")
    OnExport(index: 253, kind: func, item_index: 255, name: "f64x2.ne")
    OnExport(index: 254, kind: func, item_index: 256, name: "f64x2.lt")
    OnExport(index: 255, kind: func, item_index: 257, name: "f64x2.gt")
    OnExport(index: 256, kind: func, item_index: 258, name: "f64x2.le")
    OnExport(index: 257, kind: func, item_index: 259, name: "f64x2.ge")
    OnExport(index: 258, kind: func, item_index: 260, name: "v128.not")
    OnExport(index: 259, kind: func, item_index: 261, name: "v128.and")
    OnExport(index: 260, kind: func, item_index: 262, name: "v128.or")
    OnExport(index: 261, kind: func, item_index: 263, name: "v128.xor")
    OnExport(index: 262, kind: func, item_index: 264, name: "v128.bitselect")
    OnExport(index: 263, kind: func, item_index: 265, name: "i8x16.neg")
    OnExport(index: 264, kind: func, item_index: 266, name: "i8x16.any_true")
    OnExport(index: 265, kind: func, item_index: 267, name: "i8x16.all_true")
    OnExport(index: 266, kind: func, item_index: 268, name: "i8x16.shl")
    OnExport(index: 267, kind: func, item_index: 269, name: "i8x16.shr_s")
    OnExport(index: 268, kind: func, item_index: 270, name: "i8x16.shr_u")
    OnExport(index: 269, kind: func, item_index: 271, name: "i8x16.add")
    OnExport(index: 270, kind: func, item_index: 272, name: "i8x16.add_saturate_s")
    OnExport(index: 271, kind: func, item_index: 273, name: "i8x16.add_saturate_u")
    OnExport(index: 272, kind: func, item_index: 274, name: "i8x16.sub")
    OnExport(index: 273, kind: func, item_index: 275, name: "i8x16.sub_saturate_s")
    OnExport(index: 274, kind: func, item_index: 276, name: "i8x16.sub_saturate_u")
    OnExport(index: 275, kind: func, item_index: 277, name: "i8x16.mul")
    OnExport(index: 276, kind: func, item_index: 278, name: "i16x8.neg")
    OnExport(index: 277, kind: func, item_index: 279, name: "i16x8.any_true")
    OnExport(index: 278, kind: func, item_index: 280, name: "i16x8.all_true")
    OnExport(index: 279, kind: func, item_index: 281, name: "i16x8.shl")
    OnExport(index: 280, kind: func, item_index: 282, name: "i16x8.shr_s")
    OnExport(index: 281, kind: func, item_index: 283, name: "i16x8.shr_u")
    OnExport(index: 282, kind: func, item_index: 284, name: "i16x8.add")
    OnExport(index: 283, kind: func, item_index: 285, name: "i16x8.add_saturate_s")
    OnExport(index: 284, kind: func, item_index: 286, name: "i16x8.add_saturate_u")
    OnExport(index: 285, kind: func, item_index: 287, name: "i16x8.sub")
    OnExport(index: 286, kind: func, item_index: 288, name: "i16x8.sub_saturate_s")
    OnExport(index: 287, kind: func, item_index: 289, name: "i16x8.sub_saturate_u")
    OnExport(index: 288, kind: func, item_index: 290, name: "i16x8.mul")
    OnExport(index: 289, kind: func, item_index: 291, name: "i32x4.neg")
    OnExport(index: 290, kind: func, item_index: 292, name: "i32x4.any_true")
    OnExport(index: 291, kind: func, item_index: 293, name: "i32x4.all_true")
    OnExport(index: 292, kind: func, item_index: 294, name: "i32x4.shl")
    OnExport(index: 293, kind: func, item_index: 295, name: "i32x4.shr_s")
    OnExport(index: 294, kind: func, item_index: 296, name: "i32x4.shr_u")
    OnExport(index: 295, kind: func, item_index: 297, name: "i32x4.add")
    OnExport(index: 296, kind: func, item_index: 298, name: "i32x4.sub")
    OnExport(index: 297, kind: func, item_index: 299, name: "i32x4.mul")
    OnExport(index: 298, kind: func, item_index: 300, name: "i64x2.neg")
    OnExport(index: 299, kind: func, item_index: 301, name: "i64x2.any_true")
    OnExport(index: 300, kind: func, item_index: 302, name: "i64x2.all_true")
    OnExport(index: 301, kind: func, item_index: 303, name: "i64x2.shl")
    OnExport(index: 302, kind: func, item_index: 304, name: "i64x2.shr_s")
    OnExport(index: 303, kind: func, item_index: 305, name: "i64x2.shr_u")
    OnExport(index: 304, kind: func, item_index: 306, name: "i64x2.add")
    OnExport(index: 305, kind: func, item_index: 307, name: "i64x2.sub")
    OnExport(index: 306, kind: func, item_index: 308, name: "f32x4.abs")
    OnExport(index: 307, kind: func, item_index: 309, name: "f32x4.neg")
    OnExport(index: 308, kind: func, item_index: 310, name: "f32x4.sqrt")
    OnExport(index: 309, kind: func, item_index: 311, name: "f32x4.add")
    OnExport(index: 310, kind: func, item_index: 312, name: "f32x4.sub")
    OnExport(index: 311, kind: func, item_index: 313, name: "f32x4.mul")
    OnExport(index: 312, kind: func, item_index: 314, name: "f32x4.div")
    OnExport(index: 313, kind: func, item_index: 315, name: "f32x4.min")
    OnExport(index: 314, kind: func, item_index: 316, name: "f32x4.max")
    OnExport(index: 315, kind: func, item_index: 317, name: "f64x2.abs")
    OnExport(index: 316, kind: func, item_index: 318, name: "f64x2.neg")
    OnExport(index: 317, kind: func, item_index: 319, name: "f64x2.sqrt")
    OnExport(index: 318, kind: func, item_index: 320, name: "f64x2.add")
    OnExport(index: 319, kind: func, item_index: 321, name: "f64x2.sub")
    OnExport(index: 320, kind: func, item_index: 322, name: "f64x2.mul")
    OnExport(index: 321, kind: func, item_index: 323, name: "f64x2.div")
    OnExport(index: 322, kind: func, item_index: 324, name: "f64x2.min")
    OnExport(index: 323, kind: func, item_index: 325, name: "f64x2.max")
    OnExport(index: 324, kind: func, item_index: 326, name: "i32x4.trunc_sat_f32x4_s")
    OnExport(index: 325, kind: func, item_index: 327, name: "i32x4.trunc_sat_f32x4_u")
    OnExport(index: 326, kind: func, item_index: 328, name: "i64x2.trunc_sat_f64x2_s")
    OnExport(index: 327, kind: func, item_index: 329, name: "i64x2.trunc_sat_f64x2_u")
    OnExport(index: 328, kind: func, item_index: 330, name: "f32x4.convert_i32x4_s")
    OnExport(index: 329, kind: func, item_index: 331, name: "f32x4.convert_i32x4_u")
    OnExport(index: 330, kind: func, item_index: 332, name: "f64x2.convert_i64x2_s")
    OnExport(index: 331, kind: func, item_index: 333, name: "f64x2.convert_i64x2_u")
    OnExport(index: 332, kind: func, item_index: 334, name: "v8x16.swizzle")
    OnExport(index: 333, kind: func, item_index: 335, name: "v8x16.shuffle")
    OnExport(index: 334, kind: func, item_index: 336, name: "i8x16.load_splat")
    OnExport(index: 335, kind: func, item_index: 337, name: "i16x8.load_splat")
    OnExport(index: 336, kind: func, item_index: 338, name: "i32x4.load_splat")
    OnExport(index: 337, kind: func, item_index: 339, name: "i64x2.load_splat")
    OnExport(index: 338, kind: func, item_index: 340, name: "i8x16.narrow_i16x8_s")
    OnExport(index: 339, kind: func, item_index: 341, name: "i8x16.narrow_i16x8_u")
    OnExport(index: 340, kind: func, item_index: 342, name: "i16x8.narrow_i32x4_s")
    OnExport(index: 341, kind: func, item_index: 343, name: "i16x8.narrow_i32x4_u")
    OnExport(index: 342, kind: func, item_index: 344, name: "i16x8.widen_low_i8x16_s")
    OnExport(index: 343, kind: func, item_index: 345, name: "i16x8.widen_high_i8x16_s")
    OnExport(index: 344, kind: func, item_index: 346, name: "i16x8.widen_low_i8x16_u")
    OnExport(index: 345, kind: func, item_index: 347, name: "i16x8.widen_high_i8x16_u")
    OnExport(index: 346, kind: func, item_index: 348, name: "i32x4.widen_low_i16x8_s")
    OnExport(index: 347, kind: func, item_index: 349, name: "i32x4.widen_high_i16x8_s")
    OnExport(index: 348, kind: func, item_index: 350, name: "i32x4.widen_low_i16x8_u")
    OnExport(index: 349, kind: func, item_index: 351, name: "i32x4.widen_high_i16x8_u")
    OnExport(index: 350, kind: func, item_index: 352, name: "atomic.notify")
    OnExport(index: 351, kind: func, item_index: 353, name: "i32.atomic.wait")
    OnExport(index: 352, kind: func, item_index: 354, name: "i64.atomic.wait")
    OnExport(index: 353, kind: func, item_index: 355, name: "i32.atomic.load")
    OnExport(index: 354, kind: func, item_index: 356, name: "i64.atomic.load")
    OnExport(index: 355, kind: func, item_index: 357, name: "i32.atomic.load8_u")
    OnExport(index: 356, kind: func, item_index: 358, name: "i32.atomic.load16_u")
    OnExport(index: 357, kind: func, item_index: 359, name: "i64.atomic.load8_u")
    OnExport(index: 358, kind: func, item_index: 360, name: "i64.atomic.load16_u")
    OnExport(index: 359, kind: func, item_index: 361, name: "i64.atomic.load32_u")
    OnExport(index: 360, kind: func, item_index: 362, name: "i32.atomic.store")
    OnExport(index: 361, kind: func, item_index: 363, name: "i64.atomic.store")
    OnExport(index: 362, kind: func, item_index: 364, name: "i32.atomic.store8")
    OnExport(index: 363, kind: func, item_index: 365, name: "i32.atomic.store16")
    OnExport(index: 364, kind: func, item_index: 366, name: "i64.atomic.store8")
    OnExport(index: 365, kind: func, item_index: 367, name: "i64.atomic.store16")
    OnExport(index: 366, kind: func, item_index: 368, name: "i64.atomic.store32")
    OnExport(index: 367, kind: func, item_index: 369, name: "i32.atomic.rmw.add")
    OnExport(index: 368, kind: func, item_index: 370, name: "i64.atomic.rmw.add")
    OnExport(index: 369, kind: func, item_index: 371, name: "i32.atomic.rmw8.add_u")
    OnExport(index: 370, kind: func, item_index: 372, name: "i32.atomic.rmw16.add_u")
    OnExport(index: 371, kind: func, item_index: 373, name: "i64.atomic.rmw8.add_u")
    OnExport(index: 372, kind: func, item_index: 374, name: "i64.atomic.rmw16.add_u")
    OnExport(index: 373, kind: func, item_index: 375, name: "i64.atomic.rmw32.add_u")
    OnExport(index: 374, kind: func, item_index: 376, name: "i32.atomic.rmw.sub")
    OnExport(index: 375, kind: func, item_index: 377, name: "i64.atomic.rmw.sub")
    OnExport(index: 376, kind: func, item_index: 378, name: "i32.atomic.rmw8.sub_u")
    OnExport(index: 377, kind: func, item_index: 379, name: "i32.atomic.rmw16.sub_u")
    OnExport(index: 378, kind: func, item_index: 380, name: "i64.atomic.rmw8.sub_u")
    OnExport(index: 379, kind: func, item_index: 381, name: "i64.atomic.rmw16.sub_u")
    OnExport(index: 380, kind: func, item_index: 382, name: "i64.atomic.rmw32.sub_u")
    OnExport(index: 381, kind: func, item_index: 383, name: "i32.atomic.rmw.and")
    OnExport(index: 382, kind: func, item_index: 384, name: "i64.atomic.rmw.and")
    OnExport(index: 383, kind: func, item_index: 385, name: "i32.atomic.rmw8.and_u")
    OnExport(index: 384, kind: func, item_index: 386, name: "i32.atomic.rmw16.and_u")
    OnExport(index: 385, kind: func, item_index: 387, name: "i64.atomic.rmw8.and_u")
    OnExport(index: 386, kind: func, item_index: 388, name: "i64.atomic.rmw16.and_u")
    OnExport(index: 387, kind: func, item_index: 389, name: "i64.atomic.rmw32.and_u")
    OnExport(index: 388, kind: func, item_index: 390, name: "i32.atomic.rmw.or")
    OnExport(index: 389, kind: func, item_index: 391, name: "i64.atomic.rmw.or")
    OnExport(index: 390, kind: func, item_index: 392, name: "i32.atomic.rmw8.or_u")
    OnExport(index: 391, kind: func, item_index: 393, name: "i32.atomic.rmw16.or_u")
    OnExport(index: 392, kind: func, item_index: 394, name: "i64.atomic.rmw8.or_u")
    OnExport(index: 393, kind: func, item_index: 395, name: "i64.atomic.rmw16.or_u")
    OnExport(index: 394, kind: func, item_index: 396, name: "i64.atomic.rmw32.or_u")
    OnExport(index: 395, kind: func, item_index: 397, name: "i32.atomic.rmw.xor")
    OnExport(index: 396, kind: func, item_index: 398, name: "i64.atomic.rmw.xor")
    OnExport(index: 397, kind: func, item_index: 399, name: "i32.atomic.rmw8.xor_u")
    OnExport(index: 398, kind: func, item_index: 400, name: "i32.atomic.rmw16.xor_u")
    OnExport(index: 399, kind: func, item_index: 401, name: "i64.atomic.rmw8.xor_u")
    OnExport(index: 400, kind: func, item_index: 402, name: "i64.atomic.rmw16.xor_u")
    OnExport(index: 401, kind: func, item_index: 403, name: "i64.atomic.rmw32.xor_u")
    OnExport(index: 402, kind: func, item_index: 404, name: "i32.atomic.rmw.xchg")
    OnExport(index: 403, kind: func, item_index: 405, name: "i64.atomic.rmw.xchg")
    OnExport(index: 404, kind: func, item_index: 406, name: "i32.atomic.rmw8.xchg_u")
    OnExport(index: 405, kind: func, item_index: 407, name: "i32.atomic.rmw16.xchg_u")
    OnExport(index: 406, kind: func, item_index: 408, name: "i64.atomic.rmw8.xchg_u")
    OnExport(index: 407, kind: func, item_index: 409, name: "i64.atomic.rmw16.xchg_u")
    OnExport(index: 408, kind: func, item_index: 410, name: "i64.atomic.rmw32.xchg_u")
    OnExport(index: 409, kind: func, item_index: 411, name: "i32.atomic.rmw.cmpxchg")
    OnExport(index: 410, kind: func, item_index: 412, name: "i64.atomic.rmw.cmpxchg")
    OnExport(index: 411, kind: func, item_index: 413, name: "i32.atomic.rmw8.cmpxchg_u")
    OnExport(index: 412, kind: func, item_index: 414, name: "i32.atomic.rmw16.cmpxchg_u")
    OnExport(index: 413, kind: func, item_index: 415, name: "i64.atomic.rmw8.cmpxchg_u")
    OnExport(index: 414, kind: func, item_index: 416, name: "i64.atomic.rmw16.cmpxchg_u")
    OnExport(index: 415, kind: func, item_index: 417, name: "i64.atomic.rmw32.cmpxchg_u")
  EndExportSection
  BeginElemSection(11)
    OnElemSegmentCount(2)
    BeginElemSegment(index: 0, table_index: 0, flags: 0, elem_type: funcref)
    BeginElemSegmentInitExpr(0)
    OnInitExprI32ConstExpr(index: 0, value: 0)
    EndElemSegmentInitExpr(0)
    OnElemSegmentElemExprCount(index: 0, count: 2)
    OnElemSegmentElemExpr_RefFunc(index: 0, func_index: 1)
    OnElemSegmentElemExpr_RefFunc(index: 0, func_index: 1)
    EndElemSegment(0)
    BeginElemSegment(index: 1, table_index: 0, flags: 1, elem_type: funcref)
    OnElemSegmentElemExprCount(index: 1, count: 0)
    EndElemSegment(1)
  EndElemSection
  BeginDataCountSection(1)
    OnDataCount(1)
  EndDataCountSection
  BeginCodeSection(8096)
    OnFunctionBodyCount(417)
    BeginFunctionBody(1, size:2)
    OnLocalDeclCount(0)
    EndFunctionBody(1)
    BeginFunctionBody(2, size:3)
    OnLocalDeclCount(0)
    OnUnreachableExpr
    EndFunctionBody(2)
    BeginFunctionBody(3, size:4)
    OnLocalDeclCount(0)
    OnBrExpr(depth: 0)
    EndFunctionBody(3)
    BeginFunctionBody(4, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrTableExpr(num_targets: 0, depths: [], default: 0)
    EndFunctionBody(4)
    BeginFunctionBody(5, size:3)
    OnLocalDeclCount(0)
    OnReturnExpr
    EndFunctionBody(5)
    BeginFunctionBody(6, size:4)
    OnLocalDeclCount(0)
    OnCallExpr(func_index: 1)
    EndFunctionBody(6)
    BeginFunctionBody(7, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnCallIndirectExpr(sig_index: 0, table_index: 0)
    EndFunctionBody(7)
    BeginFunctionBody(8, size:4)
    OnLocalDeclCount(0)
    OnReturnCallExpr(func_index: 1)
    EndFunctionBody(8)
    BeginFunctionBody(9, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnReturnCallIndirectExpr(sig_index: 0, table_index: 0)
    EndFunctionBody(9)
    BeginFunctionBody(10, size:5)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(10)
    BeginFunctionBody(11, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnSelectExpr(return_type: any)
    OnDropExpr
    EndFunctionBody(11)
    BeginFunctionBody(12, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnSelectExpr(return_type: i32)
    OnDropExpr
    EndFunctionBody(12)
    BeginFunctionBody(13, size:7)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnLocalGetExpr(index: 0)
    OnDropExpr
    EndFunctionBody(13)
    BeginFunctionBody(14, size:8)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnI32ConstExpr(1 (0x1))
    OnLocalSetExpr(index: 0)
    EndFunctionBody(14)
    BeginFunctionBody(15, size:9)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnI32ConstExpr(1 (0x1))
    OnLocalTeeExpr(index: 0)
    OnDropExpr
    EndFunctionBody(15)
    BeginFunctionBody(16, size:5)
    OnLocalDeclCount(0)
    OnGlobalGetExpr(index: 0)
    OnDropExpr
    EndFunctionBody(16)
    BeginFunctionBody(17, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnGlobalSetExpr(index: 0)
    EndFunctionBody(17)
    BeginFunctionBody(18, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load" (40), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(18)
    BeginFunctionBody(19, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load" (41), align log2: 3, offset: 2)
    OnDropExpr
    EndFunctionBody(19)
    BeginFunctionBody(20, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "f32.load" (42), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(20)
    BeginFunctionBody(21, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "f64.load" (43), align log2: 3, offset: 2)
    OnDropExpr
    EndFunctionBody(21)
    BeginFunctionBody(22, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load8_s" (44), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(22)
    BeginFunctionBody(23, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load8_u" (45), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(23)
    BeginFunctionBody(24, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load16_s" (46), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(24)
    BeginFunctionBody(25, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load16_u" (47), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(25)
    BeginFunctionBody(26, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load8_s" (48), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(26)
    BeginFunctionBody(27, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load8_u" (49), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(27)
    BeginFunctionBody(28, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load16_s" (50), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(28)
    BeginFunctionBody(29, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load16_u" (51), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(29)
    BeginFunctionBody(30, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load32_s" (52), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(30)
    BeginFunctionBody(31, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load32_u" (53), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(31)
    BeginFunctionBody(32, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store" (54), align log2: 2, offset: 2)
    EndFunctionBody(32)
    BeginFunctionBody(33, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store" (55), align log2: 3, offset: 2)
    EndFunctionBody(33)
    BeginFunctionBody(34, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnF32ConstExpr(2 (0x0440000000))
    OnStoreExpr(opcode: "f32.store" (56), align log2: 2, offset: 2)
    EndFunctionBody(34)
    BeginFunctionBody(35, size:16)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnStoreExpr(opcode: "f64.store" (57), align log2: 3, offset: 2)
    EndFunctionBody(35)
    BeginFunctionBody(36, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store8" (58), align log2: 0, offset: 2)
    EndFunctionBody(36)
    BeginFunctionBody(37, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store16" (59), align log2: 1, offset: 2)
    EndFunctionBody(37)
    BeginFunctionBody(38, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store8" (60), align log2: 0, offset: 2)
    EndFunctionBody(38)
    BeginFunctionBody(39, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store16" (61), align log2: 1, offset: 2)
    EndFunctionBody(39)
    BeginFunctionBody(40, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store32" (62), align log2: 2, offset: 2)
    EndFunctionBody(40)
    BeginFunctionBody(41, size:5)
    OnLocalDeclCount(0)
    OnMemorySizeExpr
    OnDropExpr
    EndFunctionBody(41)
    BeginFunctionBody(42, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnMemoryGrowExpr
    OnDropExpr
    EndFunctionBody(42)
    BeginFunctionBody(43, size:5)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(43)
    BeginFunctionBody(44, size:5)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(44)
    BeginFunctionBody(45, size:8)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnDropExpr
    EndFunctionBody(45)
    BeginFunctionBody(46, size:12)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnDropExpr
    EndFunctionBody(46)
    BeginFunctionBody(47, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i32.eqz" (69))
    OnDropExpr
    EndFunctionBody(47)
    BeginFunctionBody(48, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.eq" (70))
    OnDropExpr
    EndFunctionBody(48)
    BeginFunctionBody(49, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ne" (71))
    OnDropExpr
    EndFunctionBody(49)
    BeginFunctionBody(50, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.lt_s" (72))
    OnDropExpr
    EndFunctionBody(50)
    BeginFunctionBody(51, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.lt_u" (73))
    OnDropExpr
    EndFunctionBody(51)
    BeginFunctionBody(52, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.gt_s" (74))
    OnDropExpr
    EndFunctionBody(52)
    BeginFunctionBody(53, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.gt_u" (75))
    OnDropExpr
    EndFunctionBody(53)
    BeginFunctionBody(54, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.le_s" (76))
    OnDropExpr
    EndFunctionBody(54)
    BeginFunctionBody(55, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.le_u" (77))
    OnDropExpr
    EndFunctionBody(55)
    BeginFunctionBody(56, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ge_s" (78))
    OnDropExpr
    EndFunctionBody(56)
    BeginFunctionBody(57, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ge_u" (79))
    OnDropExpr
    EndFunctionBody(57)
    BeginFunctionBody(58, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("i64.eqz" (80))
    OnDropExpr
    EndFunctionBody(58)
    BeginFunctionBody(59, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.eq" (81))
    OnDropExpr
    EndFunctionBody(59)
    BeginFunctionBody(60, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ne" (82))
    OnDropExpr
    EndFunctionBody(60)
    BeginFunctionBody(61, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.lt_s" (83))
    OnDropExpr
    EndFunctionBody(61)
    BeginFunctionBody(62, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.lt_u" (84))
    OnDropExpr
    EndFunctionBody(62)
    BeginFunctionBody(63, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.gt_s" (85))
    OnDropExpr
    EndFunctionBody(63)
    BeginFunctionBody(64, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.gt_u" (86))
    OnDropExpr
    EndFunctionBody(64)
    BeginFunctionBody(65, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.le_s" (87))
    OnDropExpr
    EndFunctionBody(65)
    BeginFunctionBody(66, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.le_u" (88))
    OnDropExpr
    EndFunctionBody(66)
    BeginFunctionBody(67, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ge_s" (89))
    OnDropExpr
    EndFunctionBody(67)
    BeginFunctionBody(68, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ge_u" (90))
    OnDropExpr
    EndFunctionBody(68)
    BeginFunctionBody(69, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.eq" (91))
    OnDropExpr
    EndFunctionBody(69)
    BeginFunctionBody(70, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.ne" (92))
    OnDropExpr
    EndFunctionBody(70)
    BeginFunctionBody(71, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.lt" (93))
    OnDropExpr
    EndFunctionBody(71)
    BeginFunctionBody(72, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.gt" (94))
    OnDropExpr
    EndFunctionBody(72)
    BeginFunctionBody(73, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.le" (95))
    OnDropExpr
    EndFunctionBody(73)
    BeginFunctionBody(74, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.ge" (96))
    OnDropExpr
    EndFunctionBody(74)
    BeginFunctionBody(75, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.eq" (97))
    OnDropExpr
    EndFunctionBody(75)
    BeginFunctionBody(76, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.ne" (98))
    OnDropExpr
    EndFunctionBody(76)
    BeginFunctionBody(77, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.lt" (99))
    OnDropExpr
    EndFunctionBody(77)
    BeginFunctionBody(78, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.gt" (100))
    OnDropExpr
    EndFunctionBody(78)
    BeginFunctionBody(79, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.le" (101))
    OnDropExpr
    EndFunctionBody(79)
    BeginFunctionBody(80, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.ge" (102))
    OnDropExpr
    EndFunctionBody(80)
    BeginFunctionBody(81, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.clz" (103))
    OnDropExpr
    EndFunctionBody(81)
    BeginFunctionBody(82, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.ctz" (104))
    OnDropExpr
    EndFunctionBody(82)
    BeginFunctionBody(83, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.popcnt" (105))
    OnDropExpr
    EndFunctionBody(83)
    BeginFunctionBody(84, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.add" (106))
    OnDropExpr
    EndFunctionBody(84)
    BeginFunctionBody(85, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.sub" (107))
    OnDropExpr
    EndFunctionBody(85)
    BeginFunctionBody(86, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.mul" (108))
    OnDropExpr
    EndFunctionBody(86)
    BeginFunctionBody(87, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.div_s" (109))
    OnDropExpr
    EndFunctionBody(87)
    BeginFunctionBody(88, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.div_u" (110))
    OnDropExpr
    EndFunctionBody(88)
    BeginFunctionBody(89, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rem_s" (111))
    OnDropExpr
    EndFunctionBody(89)
    BeginFunctionBody(90, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rem_u" (112))
    OnDropExpr
    EndFunctionBody(90)
    BeginFunctionBody(91, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.and" (113))
    OnDropExpr
    EndFunctionBody(91)
    BeginFunctionBody(92, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.or" (114))
    OnDropExpr
    EndFunctionBody(92)
    BeginFunctionBody(93, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.xor" (115))
    OnDropExpr
    EndFunctionBody(93)
    BeginFunctionBody(94, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shl" (116))
    OnDropExpr
    EndFunctionBody(94)
    BeginFunctionBody(95, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shr_s" (117))
    OnDropExpr
    EndFunctionBody(95)
    BeginFunctionBody(96, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shr_u" (118))
    OnDropExpr
    EndFunctionBody(96)
    BeginFunctionBody(97, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rotl" (119))
    OnDropExpr
    EndFunctionBody(97)
    BeginFunctionBody(98, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rotr" (120))
    OnDropExpr
    EndFunctionBody(98)
    BeginFunctionBody(99, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.clz" (121))
    OnDropExpr
    EndFunctionBody(99)
    BeginFunctionBody(100, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.ctz" (122))
    OnDropExpr
    EndFunctionBody(100)
    BeginFunctionBody(101, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.popcnt" (123))
    OnDropExpr
    EndFunctionBody(101)
    BeginFunctionBody(102, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.add" (124))
    OnDropExpr
    EndFunctionBody(102)
    BeginFunctionBody(103, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.sub" (125))
    OnDropExpr
    EndFunctionBody(103)
    BeginFunctionBody(104, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.mul" (126))
    OnDropExpr
    EndFunctionBody(104)
    BeginFunctionBody(105, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.div_s" (127))
    OnDropExpr
    EndFunctionBody(105)
    BeginFunctionBody(106, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.div_u" (128))
    OnDropExpr
    EndFunctionBody(106)
    BeginFunctionBody(107, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rem_s" (129))
    OnDropExpr
    EndFunctionBody(107)
    BeginFunctionBody(108, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rem_u" (130))
    OnDropExpr
    EndFunctionBody(108)
    BeginFunctionBody(109, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.and" (131))
    OnDropExpr
    EndFunctionBody(109)
    BeginFunctionBody(110, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.or" (132))
    OnDropExpr
    EndFunctionBody(110)
    BeginFunctionBody(111, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.xor" (133))
    OnDropExpr
    EndFunctionBody(111)
    BeginFunctionBody(112, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shl" (134))
    OnDropExpr
    EndFunctionBody(112)
    BeginFunctionBody(113, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shr_s" (135))
    OnDropExpr
    EndFunctionBody(113)
    BeginFunctionBody(114, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shr_u" (136))
    OnDropExpr
    EndFunctionBody(114)
    BeginFunctionBody(115, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rotl" (137))
    OnDropExpr
    EndFunctionBody(115)
    BeginFunctionBody(116, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rotr" (138))
    OnDropExpr
    EndFunctionBody(116)
    BeginFunctionBody(117, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.abs" (139))
    OnDropExpr
    EndFunctionBody(117)
    BeginFunctionBody(118, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.neg" (140))
    OnDropExpr
    EndFunctionBody(118)
    BeginFunctionBody(119, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.ceil" (141))
    OnDropExpr
    EndFunctionBody(119)
    BeginFunctionBody(120, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.floor" (142))
    OnDropExpr
    EndFunctionBody(120)
    BeginFunctionBody(121, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.trunc" (143))
    OnDropExpr
    EndFunctionBody(121)
    BeginFunctionBody(122, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.nearest" (144))
    OnDropExpr
    EndFunctionBody(122)
    BeginFunctionBody(123, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.sqrt" (145))
    OnDropExpr
    EndFunctionBody(123)
    BeginFunctionBody(124, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.add" (146))
    OnDropExpr
    EndFunctionBody(124)
    BeginFunctionBody(125, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.sub" (147))
    OnDropExpr
    EndFunctionBody(125)
    BeginFunctionBody(126, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.mul" (148))
    OnDropExpr
    EndFunctionBody(126)
    BeginFunctionBody(127, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.div" (149))
    OnDropExpr
    EndFunctionBody(127)
    BeginFunctionBody(128, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.min" (150))
    OnDropExpr
    EndFunctionBody(128)
    BeginFunctionBody(129, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.max" (151))
    OnDropExpr
    EndFunctionBody(129)
    BeginFunctionBody(130, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.copysign" (152))
    OnDropExpr
    EndFunctionBody(130)
    BeginFunctionBody(131, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.abs" (153))
    OnDropExpr
    EndFunctionBody(131)
    BeginFunctionBody(132, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.neg" (154))
    OnDropExpr
    EndFunctionBody(132)
    BeginFunctionBody(133, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.ceil" (155))
    OnDropExpr
    EndFunctionBody(133)
    BeginFunctionBody(134, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.floor" (156))
    OnDropExpr
    EndFunctionBody(134)
    BeginFunctionBody(135, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.trunc" (157))
    OnDropExpr
    EndFunctionBody(135)
    BeginFunctionBody(136, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.nearest" (158))
    OnDropExpr
    EndFunctionBody(136)
    BeginFunctionBody(137, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.sqrt" (159))
    OnDropExpr
    EndFunctionBody(137)
    BeginFunctionBody(138, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.add" (160))
    OnDropExpr
    EndFunctionBody(138)
    BeginFunctionBody(139, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.sub" (161))
    OnDropExpr
    EndFunctionBody(139)
    BeginFunctionBody(140, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.mul" (162))
    OnDropExpr
    EndFunctionBody(140)
    BeginFunctionBody(141, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.div" (163))
    OnDropExpr
    EndFunctionBody(141)
    BeginFunctionBody(142, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.min" (164))
    OnDropExpr
    EndFunctionBody(142)
    BeginFunctionBody(143, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.max" (165))
    OnDropExpr
    EndFunctionBody(143)
    BeginFunctionBody(144, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.copysign" (166))
    OnDropExpr
    EndFunctionBody(144)
    BeginFunctionBody(145, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("i32.wrap_i64" (167))
    OnDropExpr
    EndFunctionBody(145)
    BeginFunctionBody(146, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_f32_s" (168))
    OnDropExpr
    EndFunctionBody(146)
    BeginFunctionBody(147, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_f32_u" (169))
    OnDropExpr
    EndFunctionBody(147)
    BeginFunctionBody(148, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_f64_s" (170))
    OnDropExpr
    EndFunctionBody(148)
    BeginFunctionBody(149, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_f64_u" (171))
    OnDropExpr
    EndFunctionBody(149)
    BeginFunctionBody(150, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i64.extend_i32_s" (172))
    OnDropExpr
    EndFunctionBody(150)
    BeginFunctionBody(151, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i64.extend_i32_u" (173))
    OnDropExpr
    EndFunctionBody(151)
    BeginFunctionBody(152, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_f32_s" (174))
    OnDropExpr
    EndFunctionBody(152)
    BeginFunctionBody(153, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_f32_u" (175))
    OnDropExpr
    EndFunctionBody(153)
    BeginFunctionBody(154, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_f64_s" (176))
    OnDropExpr
    EndFunctionBody(154)
    BeginFunctionBody(155, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_f64_u" (177))
    OnDropExpr
    EndFunctionBody(155)
    BeginFunctionBody(156, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_i32_s" (178))
    OnDropExpr
    EndFunctionBody(156)
    BeginFunctionBody(157, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_i32_u" (179))
    OnDropExpr
    EndFunctionBody(157)
    BeginFunctionBody(158, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_i64_s" (180))
    OnDropExpr
    EndFunctionBody(158)
    BeginFunctionBody(159, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_i64_u" (181))
    OnDropExpr
    EndFunctionBody(159)
    BeginFunctionBody(160, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("f32.demote_f64" (182))
    OnDropExpr
    EndFunctionBody(160)
    BeginFunctionBody(161, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_i32_s" (183))
    OnDropExpr
    EndFunctionBody(161)
    BeginFunctionBody(162, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_i32_u" (184))
    OnDropExpr
    EndFunctionBody(162)
    BeginFunctionBody(163, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_i64_s" (185))
    OnDropExpr
    EndFunctionBody(163)
    BeginFunctionBody(164, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_i64_u" (186))
    OnDropExpr
    EndFunctionBody(164)
    BeginFunctionBody(165, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("f64.promote_f32" (187))
    OnDropExpr
    EndFunctionBody(165)
    BeginFunctionBody(166, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.reinterpret_i32" (190))
    OnDropExpr
    EndFunctionBody(166)
    BeginFunctionBody(167, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.reinterpret_f32" (188))
    OnDropExpr
    EndFunctionBody(167)
    BeginFunctionBody(168, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.reinterpret_i64" (191))
    OnDropExpr
    EndFunctionBody(168)
    BeginFunctionBody(169, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.reinterpret_f64" (189))
    OnDropExpr
    EndFunctionBody(169)
    BeginFunctionBody(170, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.extend8_s" (192))
    OnDropExpr
    EndFunctionBody(170)
    BeginFunctionBody(171, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.extend16_s" (193))
    OnDropExpr
    EndFunctionBody(171)
    BeginFunctionBody(172, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend8_s" (194))
    OnDropExpr
    EndFunctionBody(172)
    BeginFunctionBody(173, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend16_s" (195))
    OnDropExpr
    EndFunctionBody(173)
    BeginFunctionBody(174, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend32_s" (196))
    OnDropExpr
    EndFunctionBody(174)
    BeginFunctionBody(175, size:4)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    EndFunctionBody(175)
    BeginFunctionBody(176, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrIfExpr(depth: 0)
    EndFunctionBody(176)
    BeginFunctionBody(177, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnCallExpr(func_index: 0)
    EndFunctionBody(177)
    BeginFunctionBody(178, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrTableExpr(num_targets: 0, depths: [], default: 0)
    EndFunctionBody(178)
    BeginFunctionBody(179, size:12)
    OnLocalDeclCount(0)
    OnBlockExpr(sig: i32)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBrExpr(depth: 0)
    OnEndExpr
    OnDropExpr
    EndFunctionBody(179)
    BeginFunctionBody(180, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_sat_f32_s" (0))
    OnDropExpr
    EndFunctionBody(180)
    BeginFunctionBody(181, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_sat_f32_u" (1))
    OnDropExpr
    EndFunctionBody(181)
    BeginFunctionBody(182, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_sat_f64_s" (2))
    OnDropExpr
    EndFunctionBody(182)
    BeginFunctionBody(183, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_sat_f64_u" (3))
    OnDropExpr
    EndFunctionBody(183)
    BeginFunctionBody(184, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_sat_f32_s" (4))
    OnDropExpr
    EndFunctionBody(184)
    BeginFunctionBody(185, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_sat_f32_u" (5))
    OnDropExpr
    EndFunctionBody(185)
    BeginFunctionBody(186, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_sat_f64_s" (6))
    OnDropExpr
    EndFunctionBody(186)
    BeginFunctionBody(187, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_sat_f64_u" (7))
    OnDropExpr
    EndFunctionBody(187)
    BeginFunctionBody(188, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnMemoryInitExpr(0)
    EndFunctionBody(188)
    BeginFunctionBody(189, size:5)
    OnLocalDeclCount(0)
    OnDataDropExpr(0)
    EndFunctionBody(189)
    BeginFunctionBody(190, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnMemoryCopyExpr
    EndFunctionBody(190)
    BeginFunctionBody(191, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnMemoryFillExpr
    EndFunctionBody(191)
    BeginFunctionBody(192, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnTableInitExpr(segment_index: 0, table_index: 0)
    EndFunctionBody(192)
    BeginFunctionBody(193, size:5)
    OnLocalDeclCount(0)
    OnElemDropExpr(0)
    EndFunctionBody(193)
    BeginFunctionBody(194, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnTableCopyExpr(dst_index: 0, src_index: 0)
    EndFunctionBody(194)
    BeginFunctionBody(195, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "v128.load" (0), align log2: 4, offset: 3)
    OnDropExpr
    EndFunctionBody(195)
    BeginFunctionBody(196, size:26)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnStoreExpr(opcode: "v128.store" (1), align log2: 4, offset: 3)
    EndFunctionBody(196)
    BeginFunctionBody(197, size:21)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnDropExpr
    EndFunctionBody(197)
    BeginFunctionBody(198, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i8x16.splat" (4))
    OnDropExpr
    EndFunctionBody(198)
    BeginFunctionBody(199, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 15)
    OnDropExpr
    EndFunctionBody(199)
    BeginFunctionBody(200, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 15)
    OnDropExpr
    EndFunctionBody(200)
    BeginFunctionBody(201, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnSimdLaneOpExpr (lane: 15)
    OnDropExpr
    EndFunctionBody(201)
    BeginFunctionBody(202, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i16x8.splat" (8))
    OnDropExpr
    EndFunctionBody(202)
    BeginFunctionBody(203, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 7)
    OnDropExpr
    EndFunctionBody(203)
    BeginFunctionBody(204, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 7)
    OnDropExpr
    EndFunctionBody(204)
    BeginFunctionBody(205, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnSimdLaneOpExpr (lane: 7)
    OnDropExpr
    EndFunctionBody(205)
    BeginFunctionBody(206, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32x4.splat" (12))
    OnDropExpr
    EndFunctionBody(206)
    BeginFunctionBody(207, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 3)
    OnDropExpr
    EndFunctionBody(207)
    BeginFunctionBody(208, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnSimdLaneOpExpr (lane: 3)
    OnDropExpr
    EndFunctionBody(208)
    BeginFunctionBody(209, size:7)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64x2.splat" (15))
    OnDropExpr
    EndFunctionBody(209)
    BeginFunctionBody(210, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 1)
    OnDropExpr
    EndFunctionBody(210)
    BeginFunctionBody(211, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI64ConstExpr(0 (0x0))
    OnSimdLaneOpExpr (lane: 1)
    OnDropExpr
    EndFunctionBody(211)
    BeginFunctionBody(212, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32x4.splat" (18))
    OnDropExpr
    EndFunctionBody(212)
    BeginFunctionBody(213, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 3)
    OnDropExpr
    EndFunctionBody(213)
    BeginFunctionBody(214, size:29)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnF32ConstExpr(0 (0x040))
    OnSimdLaneOpExpr (lane: 3)
    OnDropExpr
    EndFunctionBody(214)
    BeginFunctionBody(215, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64x2.splat" (21))
    OnDropExpr
    EndFunctionBody(215)
    BeginFunctionBody(216, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 1)
    OnDropExpr
    EndFunctionBody(216)
    BeginFunctionBody(217, size:33)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnF64ConstExpr(0 (0x080))
    OnSimdLaneOpExpr (lane: 1)
    OnDropExpr
    EndFunctionBody(217)
    BeginFunctionBody(218, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.eq" (24))
    OnDropExpr
    EndFunctionBody(218)
    BeginFunctionBody(219, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.ne" (25))
    OnDropExpr
    EndFunctionBody(219)
    BeginFunctionBody(220, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.lt_s" (26))
    OnDropExpr
    EndFunctionBody(220)
    BeginFunctionBody(221, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.lt_u" (27))
    OnDropExpr
    EndFunctionBody(221)
    BeginFunctionBody(222, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.gt_s" (28))
    OnDropExpr
    EndFunctionBody(222)
    BeginFunctionBody(223, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.gt_u" (29))
    OnDropExpr
    EndFunctionBody(223)
    BeginFunctionBody(224, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.le_s" (30))
    OnDropExpr
    EndFunctionBody(224)
    BeginFunctionBody(225, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.le_u" (31))
    OnDropExpr
    EndFunctionBody(225)
    BeginFunctionBody(226, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.ge_s" (32))
    OnDropExpr
    EndFunctionBody(226)
    BeginFunctionBody(227, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.ge_u" (33))
    OnDropExpr
    EndFunctionBody(227)
    BeginFunctionBody(228, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.eq" (34))
    OnDropExpr
    EndFunctionBody(228)
    BeginFunctionBody(229, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.ne" (35))
    OnDropExpr
    EndFunctionBody(229)
    BeginFunctionBody(230, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.lt_s" (36))
    OnDropExpr
    EndFunctionBody(230)
    BeginFunctionBody(231, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.lt_u" (37))
    OnDropExpr
    EndFunctionBody(231)
    BeginFunctionBody(232, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.gt_s" (38))
    OnDropExpr
    EndFunctionBody(232)
    BeginFunctionBody(233, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.gt_u" (39))
    OnDropExpr
    EndFunctionBody(233)
    BeginFunctionBody(234, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.le_s" (40))
    OnDropExpr
    EndFunctionBody(234)
    BeginFunctionBody(235, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.le_u" (41))
    OnDropExpr
    EndFunctionBody(235)
    BeginFunctionBody(236, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.ge_s" (42))
    OnDropExpr
    EndFunctionBody(236)
    BeginFunctionBody(237, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.ge_u" (43))
    OnDropExpr
    EndFunctionBody(237)
    BeginFunctionBody(238, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.eq" (44))
    OnDropExpr
    EndFunctionBody(238)
    BeginFunctionBody(239, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.ne" (45))
    OnDropExpr
    EndFunctionBody(239)
    BeginFunctionBody(240, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.lt_s" (46))
    OnDropExpr
    EndFunctionBody(240)
    BeginFunctionBody(241, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.lt_u" (47))
    OnDropExpr
    EndFunctionBody(241)
    BeginFunctionBody(242, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.gt_s" (48))
    OnDropExpr
    EndFunctionBody(242)
    BeginFunctionBody(243, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.gt_u" (49))
    OnDropExpr
    EndFunctionBody(243)
    BeginFunctionBody(244, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.le_s" (50))
    OnDropExpr
    EndFunctionBody(244)
    BeginFunctionBody(245, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.le_u" (51))
    OnDropExpr
    EndFunctionBody(245)
    BeginFunctionBody(246, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.ge_s" (52))
    OnDropExpr
    EndFunctionBody(246)
    BeginFunctionBody(247, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.ge_u" (53))
    OnDropExpr
    EndFunctionBody(247)
    BeginFunctionBody(248, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.eq" (64))
    OnDropExpr
    EndFunctionBody(248)
    BeginFunctionBody(249, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.ne" (65))
    OnDropExpr
    EndFunctionBody(249)
    BeginFunctionBody(250, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.lt" (66))
    OnDropExpr
    EndFunctionBody(250)
    BeginFunctionBody(251, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.gt" (67))
    OnDropExpr
    EndFunctionBody(251)
    BeginFunctionBody(252, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.le" (68))
    OnDropExpr
    EndFunctionBody(252)
    BeginFunctionBody(253, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.ge" (69))
    OnDropExpr
    EndFunctionBody(253)
    BeginFunctionBody(254, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.eq" (70))
    OnDropExpr
    EndFunctionBody(254)
    BeginFunctionBody(255, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.ne" (71))
    OnDropExpr
    EndFunctionBody(255)
    BeginFunctionBody(256, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.lt" (72))
    OnDropExpr
    EndFunctionBody(256)
    BeginFunctionBody(257, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.gt" (73))
    OnDropExpr
    EndFunctionBody(257)
    BeginFunctionBody(258, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.le" (74))
    OnDropExpr
    EndFunctionBody(258)
    BeginFunctionBody(259, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.ge" (75))
    OnDropExpr
    EndFunctionBody(259)
    BeginFunctionBody(260, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("v128.not" (76))
    OnDropExpr
    EndFunctionBody(260)
    BeginFunctionBody(261, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v128.and" (77))
    OnDropExpr
    EndFunctionBody(261)
    BeginFunctionBody(262, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v128.or" (78))
    OnDropExpr
    EndFunctionBody(262)
    BeginFunctionBody(263, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v128.xor" (79))
    OnDropExpr
    EndFunctionBody(263)
    BeginFunctionBody(264, size:59)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnV128ConstExpr(0x00000003 0x00000003 0x00000003 0x00000003)
    OnTernaryExpr("v128.bitselect" (80))
    OnDropExpr
    EndFunctionBody(264)
    BeginFunctionBody(265, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i8x16.neg" (81))
    OnDropExpr
    EndFunctionBody(265)
    BeginFunctionBody(266, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i8x16.any_true" (82))
    OnDropExpr
    EndFunctionBody(266)
    BeginFunctionBody(267, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i8x16.all_true" (83))
    OnDropExpr
    EndFunctionBody(267)
    BeginFunctionBody(268, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i8x16.shl" (84))
    OnDropExpr
    EndFunctionBody(268)
    BeginFunctionBody(269, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i8x16.shr_s" (85))
    OnDropExpr
    EndFunctionBody(269)
    BeginFunctionBody(270, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i8x16.shr_u" (86))
    OnDropExpr
    EndFunctionBody(270)
    BeginFunctionBody(271, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.add" (87))
    OnDropExpr
    EndFunctionBody(271)
    BeginFunctionBody(272, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.add_saturate_s" (88))
    OnDropExpr
    EndFunctionBody(272)
    BeginFunctionBody(273, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.add_saturate_u" (89))
    OnDropExpr
    EndFunctionBody(273)
    BeginFunctionBody(274, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.sub" (90))
    OnDropExpr
    EndFunctionBody(274)
    BeginFunctionBody(275, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.sub_saturate_s" (91))
    OnDropExpr
    EndFunctionBody(275)
    BeginFunctionBody(276, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.sub_saturate_u" (92))
    OnDropExpr
    EndFunctionBody(276)
    BeginFunctionBody(277, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.mul" (93))
    OnDropExpr
    EndFunctionBody(277)
    BeginFunctionBody(278, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.neg" (98))
    OnDropExpr
    EndFunctionBody(278)
    BeginFunctionBody(279, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.any_true" (99))
    OnDropExpr
    EndFunctionBody(279)
    BeginFunctionBody(280, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.all_true" (100))
    OnDropExpr
    EndFunctionBody(280)
    BeginFunctionBody(281, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i16x8.shl" (101))
    OnDropExpr
    EndFunctionBody(281)
    BeginFunctionBody(282, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i16x8.shr_s" (102))
    OnDropExpr
    EndFunctionBody(282)
    BeginFunctionBody(283, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i16x8.shr_u" (103))
    OnDropExpr
    EndFunctionBody(283)
    BeginFunctionBody(284, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.add" (104))
    OnDropExpr
    EndFunctionBody(284)
    BeginFunctionBody(285, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.add_saturate_s" (105))
    OnDropExpr
    EndFunctionBody(285)
    BeginFunctionBody(286, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.add_saturate_u" (106))
    OnDropExpr
    EndFunctionBody(286)
    BeginFunctionBody(287, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.sub" (107))
    OnDropExpr
    EndFunctionBody(287)
    BeginFunctionBody(288, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.sub_saturate_s" (108))
    OnDropExpr
    EndFunctionBody(288)
    BeginFunctionBody(289, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.sub_saturate_u" (109))
    OnDropExpr
    EndFunctionBody(289)
    BeginFunctionBody(290, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.mul" (110))
    OnDropExpr
    EndFunctionBody(290)
    BeginFunctionBody(291, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.neg" (115))
    OnDropExpr
    EndFunctionBody(291)
    BeginFunctionBody(292, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.any_true" (116))
    OnDropExpr
    EndFunctionBody(292)
    BeginFunctionBody(293, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.all_true" (117))
    OnDropExpr
    EndFunctionBody(293)
    BeginFunctionBody(294, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i32x4.shl" (118))
    OnDropExpr
    EndFunctionBody(294)
    BeginFunctionBody(295, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i32x4.shr_s" (119))
    OnDropExpr
    EndFunctionBody(295)
    BeginFunctionBody(296, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i32x4.shr_u" (120))
    OnDropExpr
    EndFunctionBody(296)
    BeginFunctionBody(297, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i32x4.add" (121))
    OnDropExpr
    EndFunctionBody(297)
    BeginFunctionBody(298, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i32x4.sub" (124))
    OnDropExpr
    EndFunctionBody(298)
    BeginFunctionBody(299, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i32x4.mul" (127))
    OnDropExpr
    EndFunctionBody(299)
    BeginFunctionBody(300, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i64x2.neg" (132))
    OnDropExpr
    EndFunctionBody(300)
    BeginFunctionBody(301, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i64x2.any_true" (133))
    OnDropExpr
    EndFunctionBody(301)
    BeginFunctionBody(302, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i64x2.all_true" (134))
    OnDropExpr
    EndFunctionBody(302)
    BeginFunctionBody(303, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i64x2.shl" (135))
    OnDropExpr
    EndFunctionBody(303)
    BeginFunctionBody(304, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i64x2.shr_s" (136))
    OnDropExpr
    EndFunctionBody(304)
    BeginFunctionBody(305, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i64x2.shr_u" (137))
    OnDropExpr
    EndFunctionBody(305)
    BeginFunctionBody(306, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i64x2.add" (138))
    OnDropExpr
    EndFunctionBody(306)
    BeginFunctionBody(307, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i64x2.sub" (141))
    OnDropExpr
    EndFunctionBody(307)
    BeginFunctionBody(308, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f32x4.abs" (149))
    OnDropExpr
    EndFunctionBody(308)
    BeginFunctionBody(309, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f32x4.neg" (150))
    OnDropExpr
    EndFunctionBody(309)
    BeginFunctionBody(310, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f32x4.sqrt" (151))
    OnDropExpr
    EndFunctionBody(310)
    BeginFunctionBody(311, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.add" (154))
    OnDropExpr
    EndFunctionBody(311)
    BeginFunctionBody(312, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.sub" (155))
    OnDropExpr
    EndFunctionBody(312)
    BeginFunctionBody(313, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.mul" (156))
    OnDropExpr
    EndFunctionBody(313)
    BeginFunctionBody(314, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.div" (157))
    OnDropExpr
    EndFunctionBody(314)
    BeginFunctionBody(315, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.min" (158))
    OnDropExpr
    EndFunctionBody(315)
    BeginFunctionBody(316, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.max" (159))
    OnDropExpr
    EndFunctionBody(316)
    BeginFunctionBody(317, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f64x2.abs" (160))
    OnDropExpr
    EndFunctionBody(317)
    BeginFunctionBody(318, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f64x2.neg" (161))
    OnDropExpr
    EndFunctionBody(318)
    BeginFunctionBody(319, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f64x2.sqrt" (162))
    OnDropExpr
    EndFunctionBody(319)
    BeginFunctionBody(320, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.add" (165))
    OnDropExpr
    EndFunctionBody(320)
    BeginFunctionBody(321, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.sub" (166))
    OnDropExpr
    EndFunctionBody(321)
    BeginFunctionBody(322, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.mul" (167))
    OnDropExpr
    EndFunctionBody(322)
    BeginFunctionBody(323, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.div" (168))
    OnDropExpr
    EndFunctionBody(323)
    BeginFunctionBody(324, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.min" (169))
    OnDropExpr
    EndFunctionBody(324)
    BeginFunctionBody(325, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.max" (170))
    OnDropExpr
    EndFunctionBody(325)
    BeginFunctionBody(326, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("i32x4.trunc_sat_f32x4_s" (171))
    OnDropExpr
    EndFunctionBody(326)
    BeginFunctionBody(327, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("i32x4.trunc_sat_f32x4_u" (172))
    OnDropExpr
    EndFunctionBody(327)
    BeginFunctionBody(328, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("i64x2.trunc_sat_f64x2_s" (173))
    OnDropExpr
    EndFunctionBody(328)
    BeginFunctionBody(329, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("i64x2.trunc_sat_f64x2_u" (174))
    OnDropExpr
    EndFunctionBody(329)
    BeginFunctionBody(330, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("f32x4.convert_i32x4_s" (175))
    OnDropExpr
    EndFunctionBody(330)
    BeginFunctionBody(331, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("f32x4.convert_i32x4_u" (176))
    OnDropExpr
    EndFunctionBody(331)
    BeginFunctionBody(332, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("f64x2.convert_i64x2_s" (177))
    OnDropExpr
    EndFunctionBody(332)
    BeginFunctionBody(333, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("f64x2.convert_i64x2_u" (178))
    OnDropExpr
    EndFunctionBody(333)
    BeginFunctionBody(334, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v8x16.swizzle" (192))
    OnDropExpr
    EndFunctionBody(334)
    BeginFunctionBody(335, size:58)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnSimdShuffleOpExpr (lane: 0x01010101 01010101 01010101 01010101)
    OnDropExpr
    EndFunctionBody(335)
    BeginFunctionBody(336, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadSplatExpr(opcode: "i8x16.load_splat" (194), align log2: 0, offset: 0)
    OnDropExpr
    EndFunctionBody(336)
    BeginFunctionBody(337, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadSplatExpr(opcode: "i16x8.load_splat" (195), align log2: 1, offset: 0)
    OnDropExpr
    EndFunctionBody(337)
    BeginFunctionBody(338, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadSplatExpr(opcode: "i32x4.load_splat" (196), align log2: 2, offset: 0)
    OnDropExpr
    EndFunctionBody(338)
    BeginFunctionBody(339, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadSplatExpr(opcode: "i64x2.load_splat" (197), align log2: 3, offset: 0)
    OnDropExpr
    EndFunctionBody(339)
    BeginFunctionBody(340, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.narrow_i16x8_s" (198))
    OnDropExpr
    EndFunctionBody(340)
    BeginFunctionBody(341, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.narrow_i16x8_u" (199))
    OnDropExpr
    EndFunctionBody(341)
    BeginFunctionBody(342, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.narrow_i32x4_s" (200))
    OnDropExpr
    EndFunctionBody(342)
    BeginFunctionBody(343, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.narrow_i32x4_u" (201))
    OnDropExpr
    EndFunctionBody(343)
    BeginFunctionBody(344, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.widen_low_i8x16_s" (202))
    OnDropExpr
    EndFunctionBody(344)
    BeginFunctionBody(345, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.widen_high_i8x16_s" (203))
    OnDropExpr
    EndFunctionBody(345)
    BeginFunctionBody(346, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.widen_low_i8x16_u" (204))
    OnDropExpr
    EndFunctionBody(346)
    BeginFunctionBody(347, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.widen_high_i8x16_u" (205))
    OnDropExpr
    EndFunctionBody(347)
    BeginFunctionBody(348, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.widen_low_i16x8_s" (206))
    OnDropExpr
    EndFunctionBody(348)
    BeginFunctionBody(349, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.widen_high_i16x8_s" (207))
    OnDropExpr
    EndFunctionBody(349)
    BeginFunctionBody(350, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.widen_low_i16x8_u" (208))
    OnDropExpr
    EndFunctionBody(350)
    BeginFunctionBody(351, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.widen_high_i16x8_u" (209))
    OnDropExpr
    EndFunctionBody(351)
    BeginFunctionBody(352, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicNotifyExpr(opcode: "atomic.notify" (0), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(352)
    BeginFunctionBody(353, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicWaitExpr(opcode: "i32.atomic.wait" (1), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(353)
    BeginFunctionBody(354, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicWaitExpr(opcode: "i64.atomic.wait" (2), align log2: 3, offset: 3)
    OnDropExpr
    EndFunctionBody(354)
    BeginFunctionBody(355, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load" (16), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(355)
    BeginFunctionBody(356, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load" (17), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(356)
    BeginFunctionBody(357, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load8_u" (18), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(357)
    BeginFunctionBody(358, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load16_u" (19), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(358)
    BeginFunctionBody(359, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load8_u" (20), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(359)
    BeginFunctionBody(360, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load16_u" (21), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(360)
    BeginFunctionBody(361, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load32_u" (22), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(361)
    BeginFunctionBody(362, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store" (23), align log2: 2, offset: 3)
    EndFunctionBody(362)
    BeginFunctionBody(363, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store" (24), align log2: 3, offset: 7)
    EndFunctionBody(363)
    BeginFunctionBody(364, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store8" (25), align log2: 0, offset: 3)
    EndFunctionBody(364)
    BeginFunctionBody(365, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store16" (26), align log2: 1, offset: 3)
    EndFunctionBody(365)
    BeginFunctionBody(366, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store8" (27), align log2: 0, offset: 3)
    EndFunctionBody(366)
    BeginFunctionBody(367, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store16" (28), align log2: 1, offset: 3)
    EndFunctionBody(367)
    BeginFunctionBody(368, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store32" (29), align log2: 2, offset: 3)
    EndFunctionBody(368)
    BeginFunctionBody(369, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.add" (30), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(369)
    BeginFunctionBody(370, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.add" (31), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(370)
    BeginFunctionBody(371, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.add_u" (32), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(371)
    BeginFunctionBody(372, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.add_u" (33), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(372)
    BeginFunctionBody(373, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.add_u" (34), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(373)
    BeginFunctionBody(374, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.add_u" (35), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(374)
    BeginFunctionBody(375, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.add_u" (36), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(375)
    BeginFunctionBody(376, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.sub" (37), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(376)
    BeginFunctionBody(377, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.sub" (38), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(377)
    BeginFunctionBody(378, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.sub_u" (39), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(378)
    BeginFunctionBody(379, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.sub_u" (40), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(379)
    BeginFunctionBody(380, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.sub_u" (41), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(380)
    BeginFunctionBody(381, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.sub_u" (42), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(381)
    BeginFunctionBody(382, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.sub_u" (43), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(382)
    BeginFunctionBody(383, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.and" (44), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(383)
    BeginFunctionBody(384, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.and" (45), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(384)
    BeginFunctionBody(385, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.and_u" (46), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(385)
    BeginFunctionBody(386, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.and_u" (47), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(386)
    BeginFunctionBody(387, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.and_u" (48), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(387)
    BeginFunctionBody(388, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.and_u" (49), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(388)
    BeginFunctionBody(389, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.and_u" (50), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(389)
    BeginFunctionBody(390, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.or" (51), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(390)
    BeginFunctionBody(391, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.or" (52), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(391)
    BeginFunctionBody(392, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.or_u" (53), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(392)
    BeginFunctionBody(393, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.or_u" (54), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(393)
    BeginFunctionBody(394, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.or_u" (55), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(394)
    BeginFunctionBody(395, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.or_u" (56), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(395)
    BeginFunctionBody(396, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.or_u" (57), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(396)
    BeginFunctionBody(397, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.xor" (58), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(397)
    BeginFunctionBody(398, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.xor" (59), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(398)
    BeginFunctionBody(399, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.xor_u" (60), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(399)
    BeginFunctionBody(400, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.xor_u" (61), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(400)
    BeginFunctionBody(401, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.xor_u" (62), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(401)
    BeginFunctionBody(402, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.xor_u" (63), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(402)
    BeginFunctionBody(403, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.xor_u" (64), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(403)
    BeginFunctionBody(404, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.xchg" (65), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(404)
    BeginFunctionBody(405, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.xchg" (66), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(405)
    BeginFunctionBody(406, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.xchg_u" (67), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(406)
    BeginFunctionBody(407, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.xchg_u" (68), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(407)
    BeginFunctionBody(408, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.xchg_u" (69), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(408)
    BeginFunctionBody(409, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.xchg_u" (70), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(409)
    BeginFunctionBody(410, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.xchg_u" (71), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(410)
    BeginFunctionBody(411, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw.cmpxchg" (72), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(411)
    BeginFunctionBody(412, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw.cmpxchg" (73), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(412)
    BeginFunctionBody(413, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw8.cmpxchg_u" (74), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(413)
    BeginFunctionBody(414, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw16.cmpxchg_u" (75), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(414)
    BeginFunctionBody(415, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw8.cmpxchg_u" (76), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(415)
    BeginFunctionBody(416, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw16.cmpxchg_u" (77), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(416)
    BeginFunctionBody(417, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw32.cmpxchg_u" (78), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(417)
  EndCodeSection
  BeginDataSection(3)
    OnDataSegmentCount(1)
    BeginDataSegment(index: 0, memory_index: 0, flags: 1)
    OnDataSegmentData(index:0, size:0)
    EndDataSegment(0)
  EndDataSection
EndModule
   0| return
   4| unreachable
   8| return
  12| br @20
  20| return
  24| i32.const 1
  32| br_table %[-1], $#0, table:$52
  44| data $12
  52|   entry 0: offset: 64 drop: 0 keep: 0
  64| return
  68| return
  72| return
  76| call @0
  84| return
  88| i32.const 1
  96| call_indirect $0:0, %[-1]
 108| return
 112| return_call @0
 120| return
 124| i32.const 1
 132| return_call_indirect $0:0, %[-1]
 144| return
 148| i32.const 1
 156| drop
 160| return
 164| i32.const 1
 172| i32.const 2
 180| i32.const 3
 188| select %[-3], %[-2], %[-1]
 192| drop
 196| return
 200| i32.const 1
 208| i32.const 2
 216| i32.const 3
 224| select %[-3], %[-2], %[-1]
 228| drop
 232| return
 236| alloca $1
 244| local.get $1
 252| drop
 256| drop
 260| return
 264| alloca $1
 272| i32.const 1
 280| local.set $1, %[-1]
 288| drop
 292| return
 296| alloca $1
 304| i32.const 1
 312| local.tee $2, %[-1]
 320| drop
 324| drop
 328| return
 332| global.get $0
 340| drop
 344| return
 348| i32.const 1
 356| global.set $0, %[-1]
 364| return
 368| i32.const 1
 376| i32.load $0:%[-1]+$2
 388| drop
 392| return
 396| i32.const 1
 404| i64.load $0:%[-1]+$2
 416| drop
 420| return
 424| i32.const 1
 432| f32.load $0:%[-1]+$2
 444| drop
 448| return
 452| i32.const 1
 460| f64.load $0:%[-1]+$2
 472| drop
 476| return
 480| i32.const 1
 488| i32.load8_s $0:%[-1]+$2
 500| drop
 504| return
 508| i32.const 1
 516| i32.load8_u $0:%[-1]+$2
 528| drop
 532| return
 536| i32.const 1
 544| i32.load16_s $0:%[-1]+$2
 556| drop
 560| return
 564| i32.const 1
 572| i32.load16_u $0:%[-1]+$2
 584| drop
 588| return
 592| i32.const 1
 600| i64.load8_s $0:%[-1]+$2
 612| drop
 616| return
 620| i32.const 1
 628| i64.load8_u $0:%[-1]+$2
 640| drop
 644| return
 648| i32.const 1
 656| i64.load16_s $0:%[-1]+$2
 668| drop
 672| return
 676| i32.const 1
 684| i64.load16_u $0:%[-1]+$2
 696| drop
 700| return
 704| i32.const 1
 712| i64.load32_s $0:%[-1]+$2
 724| drop
 728| return
 732| i32.const 1
 740| i64.load32_u $0:%[-1]+$2
 752| drop
 756| return
 760| i32.const 1
 768| i32.const 2
 776| i32.store $0:%[-2]+$2, %[-1]
 788| return
 792| i32.const 1
 800| i64.const 2
 812| i64.store $0:%[-2]+$2, %[-1]
 824| return
 828| i32.const 1
 836| f32.const 2
 844| f32.store $0:%[-2]+$2, %[-1]
 856| return
 860| i32.const 1
 868| f64.const 2
 880| f64.store $0:%[-2]+$2, %[-1]
 892| return
 896| i32.const 1
 904| i32.const 2
 912| i32.store8 $0:%[-2]+$2, %[-1]
 924| return
 928| i32.const 1
 936| i32.const 2
 944| i32.store16 $0:%[-2]+$2, %[-1]
 956| return
 960| i32.const 1
 968| i64.const 2
 980| i64.store8 $0:%[-2]+$2, %[-1]
 992| return
 996| i32.const 1
1004| i64.const 2
1016| i64.store16 $0:%[-2]+$2, %[-1]
1028| return
1032| i32.const 1
1040| i64.const 2
1052| i64.store32 $0:%[-2]+$2, %[-1]
1064| return
1068| memory.size $0
1076| drop
1080| return
1084| i32.const 1
1092| memory.grow $0:%[-1]
1100| drop
1104| return
1108| i32.const 1
1116| drop
1120| return
1124| i64.const 1
1136| drop
1140| return
1144| f32.const 1
1152| drop
1156| return
1160| f64.const 1
1172| drop
1176| return
1180| i32.const 1
1188| i32.eqz %[-1]
1192| drop
1196| return
1200| i32.const 1
1208| i32.const 2
1216| i32.eq %[-2], %[-1]
1220| drop
1224| return
1228| i32.const 1
1236| i32.const 2
1244| i32.ne %[-2], %[-1]
1248| drop
1252| return
1256| i32.const 1
1264| i32.const 2
1272| i32.lt_s %[-2], %[-1]
1276| drop
1280| return
1284| i32.const 1
1292| i32.const 2
1300| i32.lt_u %[-2], %[-1]
1304| drop
1308| return
1312| i32.const 1
1320| i32.const 2
1328| i32.gt_s %[-2], %[-1]
1332| drop
1336| return
1340| i32.const 1
1348| i32.const 2
1356| i32.gt_u %[-2], %[-1]
1360| drop
1364| return
1368| i32.const 1
1376| i32.const 2
1384| i32.le_s %[-2], %[-1]
1388| drop
1392| return
1396| i32.const 1
1404| i32.const 2
1412| i32.le_u %[-2], %[-1]
1416| drop
1420| return
1424| i32.const 1
1432| i32.const 2
1440| i32.ge_s %[-2], %[-1]
1444| drop
1448| return
1452| i32.const 1
1460| i32.const 2
1468| i32.ge_u %[-2], %[-1]
1472| drop
1476| return
1480| i64.const 1
1492| i64.eqz %[-1]
1496| drop
1500| return
1504| i64.const 1
1516| i64.const 2
1528| i64.eq %[-2], %[-1]
1532| drop
1536| return
1540| i64.const 1
1552| i64.const 2
1564| i64.ne %[-2], %[-1]
1568| drop
1572| return
1576| i64.const 1
1588| i64.const 2
1600| i64.lt_s %[-2], %[-1]
1604| drop
1608| return
1612| i64.const 1
1624| i64.const 2
1636| i64.lt_u %[-2], %[-1]
1640| drop
1644| return
1648| i64.const 1
1660| i64.const 2
1672| i64.gt_s %[-2], %[-1]
1676| drop
1680| return
1684| i64.const 1
1696| i64.const 2
1708| i64.gt_u %[-2], %[-1]
1712| drop
1716| return
1720| i64.const 1
1732| i64.const 2
1744| i64.le_s %[-2], %[-1]
1748| drop
1752| return
1756| i64.const 1
1768| i64.const 2
1780| i64.le_u %[-2], %[-1]
1784| drop
1788| return
1792| i64.const 1
1804| i64.const 2
1816| i64.ge_s %[-2], %[-1]
1820| drop
1824| return
1828| i64.const 1
1840| i64.const 2
1852| i64.ge_u %[-2], %[-1]
1856| drop
1860| return
1864| f32.const 1
1872| f32.const 2
1880| f32.eq %[-2], %[-1]
1884| drop
1888| return
1892| f32.const 1
1900| f32.const 2
1908| f32.ne %[-2], %[-1]
1912| drop
1916| return
1920| f32.const 1
1928| f32.const 2
1936| f32.lt %[-2], %[-1]
1940| drop
1944| return
1948| f32.const 1
1956| f32.const 2
1964| f32.gt %[-2], %[-1]
1968| drop
1972| return
1976| f32.const 1
1984| f32.const 2
1992| f32.le %[-2], %[-1]
1996| drop
2000| return
2004| f32.const 1
2012| f32.const 2
2020| f32.ge %[-2], %[-1]
2024| drop
2028| return
2032| f64.const 1
2044| f64.const 2
2056| f64.eq %[-2], %[-1]
2060| drop
2064| return
2068| f64.const 1
2080| f64.const 2
2092| f64.ne %[-2], %[-1]
2096| drop
2100| return
2104| f64.const 1
2116| f64.const 2
2128| f64.lt %[-2], %[-1]
2132| drop
2136| return
2140| f64.const 1
2152| f64.const 2
2164| f64.gt %[-2], %[-1]
2168| drop
2172| return
2176| f64.const 1
2188| f64.const 2
2200| f64.le %[-2], %[-1]
2204| drop
2208| return
2212| f64.const 1
2224| f64.const 2
2236| f64.ge %[-2], %[-1]
2240| drop
2244| return
2248| i32.const 1
2256| i32.clz %[-1]
2260| drop
2264| return
2268| i32.const 1
2276| i32.ctz %[-1]
2280| drop
2284| return
2288| i32.const 1
2296| i32.popcnt %[-1]
2300| drop
2304| return
2308| i32.const 1
2316| i32.const 2
2324| i32.add %[-2], %[-1]
2328| drop
2332| return
2336| i32.const 1
2344| i32.const 2
2352| i32.sub %[-2], %[-1]
2356| drop
2360| return
2364| i32.const 1
2372| i32.const 2
2380| i32.mul %[-2], %[-1]
2384| drop
2388| return
2392| i32.const 1
2400| i32.const 2
2408| i32.div_s %[-2], %[-1]
2412| drop
2416| return
2420| i32.const 1
2428| i32.const 2
2436| i32.div_u %[-2], %[-1]
2440| drop
2444| return
2448| i32.const 1
2456| i32.const 2
2464| i32.rem_s %[-2], %[-1]
2468| drop
2472| return
2476| i32.const 1
2484| i32.const 2
2492| i32.rem_u %[-2], %[-1]
2496| drop
2500| return
2504| i32.const 1
2512| i32.const 2
2520| i32.and %[-2], %[-1]
2524| drop
2528| return
2532| i32.const 1
2540| i32.const 2
2548| i32.or %[-2], %[-1]
2552| drop
2556| return
2560| i32.const 1
2568| i32.const 2
2576| i32.xor %[-2], %[-1]
2580| drop
2584| return
2588| i32.const 1
2596| i32.const 2
2604| i32.shl %[-2], %[-1]
2608| drop
2612| return
2616| i32.const 1
2624| i32.const 2
2632| i32.shr_s %[-2], %[-1]
2636| drop
2640| return
2644| i32.const 1
2652| i32.const 2
2660| i32.shr_u %[-2], %[-1]
2664| drop
2668| return
2672| i32.const 1
2680| i32.const 2
2688| i32.rotl %[-2], %[-1]
2692| drop
2696| return
2700| i32.const 1
2708| i32.const 2
2716| i32.rotr %[-2], %[-1]
2720| drop
2724| return
2728| i64.const 1
2740| i64.clz %[-1]
2744| drop
2748| return
2752| i64.const 1
2764| i64.ctz %[-1]
2768| drop
2772| return
2776| i64.const 1
2788| i64.popcnt %[-1]
2792| drop
2796| return
2800| i64.const 1
2812| i64.const 2
2824| i64.add %[-2], %[-1]
2828| drop
2832| return
2836| i64.const 1
2848| i64.const 2
2860| i64.sub %[-2], %[-1]
2864| drop
2868| return
2872| i64.const 1
2884| i64.const 2
2896| i64.mul %[-2], %[-1]
2900| drop
2904| return
2908| i64.const 1
2920| i64.const 2
2932| i64.div_s %[-2], %[-1]
2936| drop
2940| return
2944| i64.const 1
2956| i64.const 2
2968| i64.div_u %[-2], %[-1]
2972| drop
2976| return
2980| i64.const 1
2992| i64.const 2
3004| i64.rem_s %[-2], %[-1]
3008| drop
3012| return
3016| i64.const 1
3028| i64.const 2
3040| i64.rem_u %[-2], %[-1]
3044| drop
3048| return
3052| i64.const 1
3064| i64.const 2
3076| i64.and %[-2], %[-1]
3080| drop
3084| return
3088| i64.const 1
3100| i64.const 2
3112| i64.or %[-2], %[-1]
3116| drop
3120| return
3124| i64.const 1
3136| i64.const 2
3148| i64.xor %[-2], %[-1]
3152| drop
3156| return
3160| i64.const 1
3172| i64.const 2
3184| i64.shl %[-2], %[-1]
3188| drop
3192| return
3196| i64.const 1
3208| i64.const 2
3220| i64.shr_s %[-2], %[-1]
3224| drop
3228| return
3232| i64.const 1
3244| i64.const 2
3256| i64.shr_u %[-2], %[-1]
3260| drop
3264| return
3268| i64.const 1
3280| i64.const 2
3292| i64.rotl %[-2], %[-1]
3296| drop
3300| return
3304| i64.const 1
3316| i64.const 2
3328| i64.rotr %[-2], %[-1]
3332| drop
3336| return
3340| f32.const 1
3348| f32.abs %[-1]
3352| drop
3356| return
3360| f32.const 1
3368| f32.neg %[-1]
3372| drop
3376| return
3380| f32.const 1
3388| f32.ceil %[-1]
3392| drop
3396| return
3400| f32.const 1
3408| f32.floor %[-1]
3412| drop
3416| return
3420| f32.const 1
3428| f32.trunc %[-1]
3432| drop
3436| return
3440| f32.const 1
3448| f32.nearest %[-1]
3452| drop
3456| return
3460| f32.const 1
3468| f32.sqrt %[-1]
3472| drop
3476| return
3480| f32.const 1
3488| f32.const 2
3496| f32.add %[-2], %[-1]
3500| drop
3504| return
3508| f32.const 1
3516| f32.const 2
3524| f32.sub %[-2], %[-1]
3528| drop
3532| return
3536| f32.const 1
3544| f32.const 2
3552| f32.mul %[-2], %[-1]
3556| drop
3560| return
3564| f32.const 1
3572| f32.const 2
3580| f32.div %[-2], %[-1]
3584| drop
3588| return
3592| f32.const 1
3600| f32.const 2
3608| f32.min %[-2], %[-1]
3612| drop
3616| return
3620| f32.const 1
3628| f32.const 2
3636| f32.max %[-2], %[-1]
3640| drop
3644| return
3648| f32.const 1
3656| f32.const 2
3664| f32.copysign %[-2], %[-1]
3668| drop
3672| return
3676| f64.const 1
3688| f64.abs %[-1]
3692| drop
3696| return
3700| f64.const 1
3712| f64.neg %[-1]
3716| drop
3720| return
3724| f64.const 1
3736| f64.ceil %[-1]
3740| drop
3744| return
3748| f64.const 1
3760| f64.floor %[-1]
3764| drop
3768| return
3772| f64.const 1
3784| f64.trunc %[-1]
3788| drop
3792| return
3796| f64.const 1
3808| f64.nearest %[-1]
3812| drop
3816| return
3820| f64.const 1
3832| f64.sqrt %[-1]
3836| drop
3840| return
3844| f64.const 1
3856| f64.const 2
3868| f64.add %[-2], %[-1]
3872| drop
3876| return
3880| f64.const 1
3892| f64.const 2
3904| f64.sub %[-2], %[-1]
3908| drop
3912| return
3916| f64.const 1
3928| f64.const 2
3940| f64.mul %[-2], %[-1]
3944| drop
3948| return
3952| f64.const 1
3964| f64.const 2
3976| f64.div %[-2], %[-1]
3980| drop
3984| return
3988| f64.const 1
4000| f64.const 2
4012| f64.min %[-2], %[-1]
4016| drop
4020| return
4024| f64.const 1
4036| f64.const 2
4048| f64.max %[-2], %[-1]
4052| drop
4056| return
4060| f64.const 1
4072| f64.const 2
4084| f64.copysign %[-2], %[-1]
4088| drop
4092| return
4096| i64.const 1
4108| i32.wrap_i64 %[-1]
4112| drop
4116| return
4120| f32.const 1
4128| i32.trunc_f32_s %[-1]
4132| drop
4136| return
4140| f32.const 1
4148| i32.trunc_f32_u %[-1]
4152| drop
4156| return
4160| f64.const 1
4172| i32.trunc_f64_s %[-1]
4176| drop
4180| return
4184| f64.const 1
4196| i32.trunc_f64_u %[-1]
4200| drop
4204| return
4208| i32.const 1
4216| i64.extend_i32_s %[-1]
4220| drop
4224| return
4228| i32.const 1
4236| i64.extend_i32_u %[-1]
4240| drop
4244| return
4248| f32.const 1
4256| i64.trunc_f32_s %[-1]
4260| drop
4264| return
4268| f32.const 1
4276| i64.trunc_f32_u %[-1]
4280| drop
4284| return
4288| f64.const 1
4300| i64.trunc_f64_s %[-1]
4304| drop
4308| return
4312| f64.const 1
4324| i64.trunc_f64_u %[-1]
4328| drop
4332| return
4336| i32.const 1
4344| f32.convert_i32_s %[-1]
4348| drop
4352| return
4356| i32.const 1
4364| f32.convert_i32_u %[-1]
4368| drop
4372| return
4376| i64.const 1
4388| f32.convert_i64_s %[-1]
4392| drop
4396| return
4400| i64.const 1
4412| f32.convert_i64_u %[-1]
4416| drop
4420| return
4424| f64.const 1
4436| f32.demote_f64 %[-1]
4440| drop
4444| return
4448| i32.const 1
4456| f64.convert_i32_s %[-1]
4460| drop
4464| return
4468| i32.const 1
4476| f64.convert_i32_u %[-1]
4480| drop
4484| return
4488| i64.const 1
4500| f64.convert_i64_s %[-1]
4504| drop
4508| return
4512| i64.const 1
4524| f64.convert_i64_u %[-1]
4528| drop
4532| return
4536| f32.const 1
4544| f64.promote_f32 %[-1]
4548| drop
4552| return
4556| i32.const 1
4564| f32.reinterpret_i32 %[-1]
4568| drop
4572| return
4576| f32.const 1
4584| i32.reinterpret_f32 %[-1]
4588| drop
4592| return
4596| i64.const 1
4608| f64.reinterpret_i64 %[-1]
4612| drop
4616| return
4620| f64.const 1
4632| i64.reinterpret_f64 %[-1]
4636| drop
4640| return
4644| i32.const 1
4652| i32.extend8_s %[-1]
4656| drop
4660| return
4664| i32.const 1
4672| i32.extend16_s %[-1]
4676| drop
4680| return
4684| i64.const 1
4696| i64.extend8_s %[-1]
4700| drop
4704| return
4708| i64.const 1
4720| i64.extend16_s %[-1]
4724| drop
4728| return
4732| i64.const 1
4744| i64.extend32_s %[-1]
4748| drop
4752| return
4756| alloca $1
4764| drop
4768| return
4772| i32.const 1
4780| br_unless @4796, %[-1]
4788| br @4796
4796| return
4800| i32.const 1
4808| call_host $0
4816| return
4820| i32.const 1
4828| br_table %[-1], $#0, table:$4848
4840| data $12
4848|   entry 0: offset: 4860 drop: 0 keep: 0
4860| return
4864| i32.const 1
4872| i32.const 2
4880| drop_keep $1 $1
4892| br @4900
4900| drop
4904| return
4908| f32.const 1
4916| i32.trunc_sat_f32_s %[-1]
4920| drop
4924| return
4928| f32.const 1
4936| i32.trunc_sat_f32_u %[-1]
4940| drop
4944| return
4948| f64.const 1
4960| i32.trunc_sat_f64_s %[-1]
4964| drop
4968| return
4972| f64.const 1
4984| i32.trunc_sat_f64_u %[-1]
4988| drop
4992| return
4996| f32.const 1
5004| i64.trunc_sat_f32_s %[-1]
5008| drop
5012| return
5016| f32.const 1
5024| i64.trunc_sat_f32_u %[-1]
5028| drop
5032| return
5036| f64.const 1
5048| i64.trunc_sat_f64_s %[-1]
5052| drop
5056| return
5060| f64.const 1
5072| i64.trunc_sat_f64_u %[-1]
5076| drop
5080| return
5084| i32.const 1
5092| i32.const 2
5100| i32.const 3
5108| memory.init $0, $0, %[-3], %[-2], %[-1]
5120| return
5124| data.drop $0
5132| return
5136| i32.const 1
5144| i32.const 2
5152| i32.const 3
5160| memory.copy $0, %[-3], %[-2], %[-1]
5168| return
5172| i32.const 1
5180| i32.const 2
5188| i32.const 3
5196| memory.fill $0, %[-3], %[-2], %[-1]
5204| return
5208| i32.const 1
5216| i32.const 2
5224| i32.const 3
5232| table.init $0, $0, %[-3], %[-2], %[-1]
5244| return
5248| elem.drop $0
5256| return
5260| i32.const 1
5268| i32.const 2
5276| i32.const 3
5284| table.copy $0, $0, %[-3], %[-2], %[-1]
5296| return
5300| i32.const 1
5308| v128.load $0:%[-1]+$3
5320| drop
5324| return
5328| i32.const 1
5336| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5356| v128.store $0:%[-2]+$3, %[-1]
5368| return
5372| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5392| drop
5396| return
5400| i32.const 1
5408| i8x16.splat %[-1]
5412| drop
5416| return
5420| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5440| i8x16.extract_lane_s %[-1] : (Lane imm: 15)
5445| drop
5449| return
5453| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5473| i8x16.extract_lane_u %[-1] : (Lane imm: 15)
5478| drop
5482| return
5486| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5506| i32.const 0
5514| i8x16.replace_lane %[-1], %[-2] : (Lane imm: 15)
5519| drop
5523| return
5527| i32.const 1
5535| i16x8.splat %[-1]
5539| drop
5543| return
5547| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5567| i16x8.extract_lane_s %[-1] : (Lane imm: 7)
5572| drop
5576| return
5580| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5600| i16x8.extract_lane_u %[-1] : (Lane imm: 7)
5605| drop
5609| return
5613| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5633| i32.const 0
5641| i16x8.replace_lane %[-1], %[-2] : (Lane imm: 7)
5646| drop
5650| return
5654| i32.const 1
5662| i32x4.splat %[-1]
5666| drop
5670| return
5674| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5694| i32x4.extract_lane %[-1] : (Lane imm: 3)
5699| drop
5703| return
5707| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5727| i32.const 0
5735| i32x4.replace_lane %[-1], %[-2] : (Lane imm: 3)
5740| drop
5744| return
5748| i64.const 1
5760| i64x2.splat %[-1]
5764| drop
5768| return
5772| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5792| i64x2.extract_lane %[-1] : (Lane imm: 1)
5797| drop
5801| return
5805| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5825| i64.const 0
5837| i64x2.replace_lane %[-1], %[-2] : (Lane imm: 1)
5842| drop
5846| return
5850| f32.const 1
5858| f32x4.splat %[-1]
5862| drop
5866| return
5870| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5890| f32x4.extract_lane %[-1] : (Lane imm: 3)
5895| drop
5899| return
5903| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5923| f32.const 0
5931| f32x4.replace_lane %[-1], %[-2] : (Lane imm: 3)
5936| drop
5940| return
5944| f64.const 1
5956| f64x2.splat %[-1]
5960| drop
5964| return
5968| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5988| f64x2.extract_lane %[-1] : (Lane imm: 1)
5993| drop
5997| return
6001| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6021| f64.const 0
6033| f64x2.replace_lane %[-1], %[-2] : (Lane imm: 1)
6038| drop
6042| return
6046| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6066| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6086| i8x16.eq %[-2], %[-1]
6090| drop
6094| return
6098| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6118| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6138| i8x16.ne %[-2], %[-1]
6142| drop
6146| return
6150| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6170| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6190| i8x16.lt_s %[-2], %[-1]
6194| drop
6198| return
6202| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6222| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6242| i8x16.lt_u %[-2], %[-1]
6246| drop
6250| return
6254| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6274| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6294| i8x16.gt_s %[-2], %[-1]
6298| drop
6302| return
6306| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6326| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6346| i8x16.gt_u %[-2], %[-1]
6350| drop
6354| return
6358| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6378| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6398| i8x16.le_s %[-2], %[-1]
6402| drop
6406| return
6410| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6430| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6450| i8x16.le_u %[-2], %[-1]
6454| drop
6458| return
6462| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6482| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6502| i8x16.ge_s %[-2], %[-1]
6506| drop
6510| return
6514| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6534| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6554| i8x16.ge_u %[-2], %[-1]
6558| drop
6562| return
6566| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6586| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6606| i16x8.eq %[-2], %[-1]
6610| drop
6614| return
6618| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6638| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6658| i16x8.ne %[-2], %[-1]
6662| drop
6666| return
6670| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6690| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6710| i16x8.lt_s %[-2], %[-1]
6714| drop
6718| return
6722| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6742| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6762| i16x8.lt_u %[-2], %[-1]
6766| drop
6770| return
6774| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6794| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6814| i16x8.gt_s %[-2], %[-1]
6818| drop
6822| return
6826| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6846| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6866| i16x8.gt_u %[-2], %[-1]
6870| drop
6874| return
6878| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6898| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6918| i16x8.le_s %[-2], %[-1]
6922| drop
6926| return
6930| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6950| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6970| i16x8.le_u %[-2], %[-1]
6974| drop
6978| return
6982| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7002| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7022| i16x8.ge_s %[-2], %[-1]
7026| drop
7030| return
7034| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7054| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7074| i16x8.ge_u %[-2], %[-1]
7078| drop
7082| return
7086| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7106| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7126| i32x4.eq %[-2], %[-1]
7130| drop
7134| return
7138| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7158| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7178| i32x4.ne %[-2], %[-1]
7182| drop
7186| return
7190| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7210| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7230| i32x4.lt_s %[-2], %[-1]
7234| drop
7238| return
7242| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7262| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7282| i32x4.lt_u %[-2], %[-1]
7286| drop
7290| return
7294| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7314| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7334| i32x4.gt_s %[-2], %[-1]
7338| drop
7342| return
7346| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7366| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7386| i32x4.gt_u %[-2], %[-1]
7390| drop
7394| return
7398| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7418| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7438| i32x4.le_s %[-2], %[-1]
7442| drop
7446| return
7450| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7470| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7490| i32x4.le_u %[-2], %[-1]
7494| drop
7498| return
7502| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7522| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7542| i32x4.ge_s %[-2], %[-1]
7546| drop
7550| return
7554| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7574| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7594| i32x4.ge_u %[-2], %[-1]
7598| drop
7602| return
7606| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7626| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7646| f32x4.eq %[-2], %[-1]
7650| drop
7654| return
7658| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7678| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7698| f32x4.ne %[-2], %[-1]
7702| drop
7706| return
7710| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7730| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7750| f32x4.lt %[-2], %[-1]
7754| drop
7758| return
7762| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7782| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7802| f32x4.gt %[-2], %[-1]
7806| drop
7810| return
7814| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7834| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7854| f32x4.le %[-2], %[-1]
7858| drop
7862| return
7866| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7886| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7906| f32x4.ge %[-2], %[-1]
7910| drop
7914| return
7918| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7938| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7958| f64x2.eq %[-2], %[-1]
7962| drop
7966| return
7970| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7990| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8010| f64x2.ne %[-2], %[-1]
8014| drop
8018| return
8022| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8042| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8062| f64x2.lt %[-2], %[-1]
8066| drop
8070| return
8074| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8094| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8114| f64x2.gt %[-2], %[-1]
8118| drop
8122| return
8126| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8146| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8166| f64x2.le %[-2], %[-1]
8170| drop
8174| return
8178| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8198| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8218| f64x2.ge %[-2], %[-1]
8222| drop
8226| return
8230| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8250| v128.not %[-1]
8254| drop
8258| return
8262| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8282| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8302| v128.and %[-2], %[-1]
8306| drop
8310| return
8314| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8334| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8354| v128.or %[-2], %[-1]
8358| drop
8362| return
8366| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8386| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8406| v128.xor %[-2], %[-1]
8410| drop
8414| return
8418| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8438| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8458| v128.const i32x4 0x00000003 0x00000003 0x00000003 0x00000003
8478| v128.bitselect %[-3], %[-2], %[-1]
8482| drop
8486| return
8490| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8510| i8x16.neg %[-1]
8514| drop
8518| return
8522| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8542| i8x16.any_true %[-1]
8546| drop
8550| return
8554| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8574| i8x16.all_true %[-1]
8578| drop
8582| return
8586| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8606| i32.const 0
8614| i8x16.shl %[-2], %[-1]
8618| drop
8622| return
8626| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8646| i32.const 0
8654| i8x16.shr_s %[-2], %[-1]
8658| drop
8662| return
8666| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8686| i32.const 0
8694| i8x16.shr_u %[-2], %[-1]
8698| drop
8702| return
8706| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8726| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8746| i8x16.add %[-2], %[-1]
8750| drop
8754| return
8758| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8778| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8798| i8x16.add_saturate_s %[-2], %[-1]
8802| drop
8806| return
8810| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8830| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8850| i8x16.add_saturate_u %[-2], %[-1]
8854| drop
8858| return
8862| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8882| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8902| i8x16.sub %[-2], %[-1]
8906| drop
8910| return
8914| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8934| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8954| i8x16.sub_saturate_s %[-2], %[-1]
8958| drop
8962| return
8966| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8986| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9006| i8x16.sub_saturate_u %[-2], %[-1]
9010| drop
9014| return
9018| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9038| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9058| i8x16.mul %[-2], %[-1]
9062| drop
9066| return
9070| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9090| i16x8.neg %[-1]
9094| drop
9098| return
9102| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9122| i16x8.any_true %[-1]
9126| drop
9130| return
9134| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9154| i16x8.all_true %[-1]
9158| drop
9162| return
9166| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9186| i32.const 0
9194| i16x8.shl %[-2], %[-1]
9198| drop
9202| return
9206| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9226| i32.const 0
9234| i16x8.shr_s %[-2], %[-1]
9238| drop
9242| return
9246| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9266| i32.const 0
9274| i16x8.shr_u %[-2], %[-1]
9278| drop
9282| return
9286| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9306| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9326| i16x8.add %[-2], %[-1]
9330| drop
9334| return
9338| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9358| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9378| i16x8.add_saturate_s %[-2], %[-1]
9382| drop
9386| return
9390| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9410| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9430| i16x8.add_saturate_u %[-2], %[-1]
9434| drop
9438| return
9442| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9462| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9482| i16x8.sub %[-2], %[-1]
9486| drop
9490| return
9494| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9514| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9534| i16x8.sub_saturate_s %[-2], %[-1]
9538| drop
9542| return
9546| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9566| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9586| i16x8.sub_saturate_u %[-2], %[-1]
9590| drop
9594| return
9598| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9618| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9638| i16x8.mul %[-2], %[-1]
9642| drop
9646| return
9650| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9670| i32x4.neg %[-1]
9674| drop
9678| return
9682| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9702| i32x4.any_true %[-1]
9706| drop
9710| return
9714| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9734| i32x4.all_true %[-1]
9738| drop
9742| return
9746| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9766| i32.const 0
9774| i32x4.shl %[-2], %[-1]
9778| drop
9782| return
9786| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9806| i32.const 0
9814| i32x4.shr_s %[-2], %[-1]
9818| drop
9822| return
9826| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9846| i32.const 0
9854| i32x4.shr_u %[-2], %[-1]
9858| drop
9862| return
9866| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9886| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9906| i32x4.add %[-2], %[-1]
9910| drop
9914| return
9918| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9938| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9958| i32x4.sub %[-2], %[-1]
9962| drop
9966| return
9970| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9990| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10010| i32x4.mul %[-2], %[-1]
10014| drop
10018| return
10022| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10042| i64x2.neg %[-1]
10046| drop
10050| return
10054| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10074| i64x2.any_true %[-1]
10078| drop
10082| return
10086| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10106| i64x2.all_true %[-1]
10110| drop
10114| return
10118| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10138| i32.const 0
10146| i64x2.shl %[-2], %[-1]
10150| drop
10154| return
10158| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10178| i32.const 0
10186| i64x2.shr_s %[-2], %[-1]
10190| drop
10194| return
10198| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10218| i32.const 0
10226| i64x2.shr_u %[-2], %[-1]
10230| drop
10234| return
10238| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10258| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10278| i64x2.add %[-2], %[-1]
10282| drop
10286| return
10290| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10310| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10330| i64x2.sub %[-2], %[-1]
10334| drop
10338| return
10342| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10362| f32x4.abs %[-1]
10366| drop
10370| return
10374| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10394| f32x4.neg %[-1]
10398| drop
10402| return
10406| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10426| f32x4.sqrt %[-1]
10430| drop
10434| return
10438| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10458| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10478| f32x4.add %[-2], %[-1]
10482| drop
10486| return
10490| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10510| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10530| f32x4.sub %[-2], %[-1]
10534| drop
10538| return
10542| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10562| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10582| f32x4.mul %[-2], %[-1]
10586| drop
10590| return
10594| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10614| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10634| f32x4.div %[-2], %[-1]
10638| drop
10642| return
10646| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10666| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10686| f32x4.min %[-2], %[-1]
10690| drop
10694| return
10698| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10718| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10738| f32x4.max %[-2], %[-1]
10742| drop
10746| return
10750| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10770| f64x2.abs %[-1]
10774| drop
10778| return
10782| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10802| f64x2.neg %[-1]
10806| drop
10810| return
10814| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10834| f64x2.sqrt %[-1]
10838| drop
10842| return
10846| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10866| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10886| f64x2.add %[-2], %[-1]
10890| drop
10894| return
10898| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10918| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10938| f64x2.sub %[-2], %[-1]
10942| drop
10946| return
10950| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10970| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10990| f64x2.mul %[-2], %[-1]
10994| drop
10998| return
11002| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11022| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11042| f64x2.div %[-2], %[-1]
11046| drop
11050| return
11054| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11074| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11094| f64x2.min %[-2], %[-1]
11098| drop
11102| return
11106| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11126| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11146| f64x2.max %[-2], %[-1]
11150| drop
11154| return
11158| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11178| i32x4.trunc_sat_f32x4_s %[-1]
11182| drop
11186| return
11190| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11210| i32x4.trunc_sat_f32x4_u %[-1]
11214| drop
11218| return
11222| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11242| i64x2.trunc_sat_f64x2_s %[-1]
11246| drop
11250| return
11254| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11274| i64x2.trunc_sat_f64x2_u %[-1]
11278| drop
11282| return
11286| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11306| f32x4.convert_i32x4_s %[-1]
11310| drop
11314| return
11318| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11338| f32x4.convert_i32x4_u %[-1]
11342| drop
11346| return
11350| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11370| f64x2.convert_i64x2_s %[-1]
11374| drop
11378| return
11382| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11402| f64x2.convert_i64x2_u %[-1]
11406| drop
11410| return
11414| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11434| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11454| v8x16.swizzle %[-2], %[-1]
11458| drop
11462| return
11466| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11486| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11506| v8x16.shuffle %[-2], %[-1] : (Lane imm: $0x01010101 0x01010101 0x01010101 0x01010101 )
11526| drop
11530| return
11534| i32.const 1
11542| i8x16.load_splat $0:%[-1]+$0
11554| drop
11558| return
11562| i32.const 1
11570| i16x8.load_splat $0:%[-1]+$0
11582| drop
11586| return
11590| i32.const 1
11598| i32x4.load_splat $0:%[-1]+$0
11610| drop
11614| return
11618| i32.const 1
11626| i64x2.load_splat $0:%[-1]+$0
11638| drop
11642| return
11646| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11666| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11686| i8x16.narrow_i16x8_s %[-2], %[-1]
11690| drop
11694| return
11698| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11718| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11738| i8x16.narrow_i16x8_u %[-2], %[-1]
11742| drop
11746| return
11750| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11770| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11790| i16x8.narrow_i32x4_s %[-2], %[-1]
11794| drop
11798| return
11802| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11822| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11842| i16x8.narrow_i32x4_u %[-2], %[-1]
11846| drop
11850| return
11854| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11874| i16x8.widen_low_i8x16_s %[-1]
11878| drop
11882| return
11886| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11906| i16x8.widen_high_i8x16_s %[-1]
11910| drop
11914| return
11918| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11938| i16x8.widen_low_i8x16_u %[-1]
11942| drop
11946| return
11950| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11970| i16x8.widen_high_i8x16_u %[-1]
11974| drop
11978| return
11982| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12002| i16x8.widen_low_i16x8_s %[-1]
12006| drop
12010| return
12014| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12034| i16x8.widen_high_i16x8_s %[-1]
12038| drop
12042| return
12046| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12066| i16x8.widen_low_i16x8_u %[-1]
12070| drop
12074| return
12078| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12098| i16x8.widen_high_i16x8_u %[-1]
12102| drop
12106| return
12110| i32.const 1
12118| i32.const 2
12126| atomic.notify $0:%[-2]+$3, %[-1]
12138| drop
12142| return
12146| i32.const 1
12154| i32.const 2
12162| i64.const 3
12174| i32.atomic.wait $0:%[-3]+$3, %[-2], %[-1]
12186| drop
12190| return
12194| i32.const 1
12202| i64.const 2
12214| i64.const 3
12226| i64.atomic.wait $0:%[-3]+$3, %[-2], %[-1]
12238| drop
12242| return
12246| i32.const 1
12254| i32.atomic.load $0:%[-1]+$3
12266| drop
12270| return
12274| i32.const 1
12282| i64.atomic.load $0:%[-1]+$7
12294| drop
12298| return
12302| i32.const 1
12310| i32.atomic.load8_u $0:%[-1]+$3
12322| drop
12326| return
12330| i32.const 1
12338| i32.atomic.load16_u $0:%[-1]+$3
12350| drop
12354| return
12358| i32.const 1
12366| i64.atomic.load8_u $0:%[-1]+$3
12378| drop
12382| return
12386| i32.const 1
12394| i64.atomic.load16_u $0:%[-1]+$3
12406| drop
12410| return
12414| i32.const 1
12422| i64.atomic.load32_u $0:%[-1]+$3
12434| drop
12438| return
12442| i32.const 1
12450| i32.const 2
12458| i32.atomic.store $0:%[-2]+$3, %[-1]
12470| return
12474| i32.const 1
12482| i64.const 2
12494| i64.atomic.store $0:%[-2]+$7, %[-1]
12506| return
12510| i32.const 1
12518| i32.const 2
12526| i32.atomic.store8 $0:%[-2]+$3, %[-1]
12538| return
12542| i32.const 1
12550| i32.const 2
12558| i32.atomic.store16 $0:%[-2]+$3, %[-1]
12570| return
12574| i32.const 1
12582| i64.const 2
12594| i64.atomic.store8 $0:%[-2]+$3, %[-1]
12606| return
12610| i32.const 1
12618| i64.const 2
12630| i64.atomic.store16 $0:%[-2]+$3, %[-1]
12642| return
12646| i32.const 1
12654| i64.const 2
12666| i64.atomic.store32 $0:%[-2]+$3, %[-1]
12678| return
12682| i32.const 1
12690| i32.const 2
12698| i32.atomic.rmw.add $0:%[-2]+$3, %[-1]
12710| drop
12714| return
12718| i32.const 1
12726| i64.const 2
12738| i64.atomic.rmw.add $0:%[-2]+$7, %[-1]
12750| drop
12754| return
12758| i32.const 1
12766| i32.const 2
12774| i32.atomic.rmw8.add_u $0:%[-2]+$3, %[-1]
12786| drop
12790| return
12794| i32.const 1
12802| i32.const 2
12810| i32.atomic.rmw16.add_u $0:%[-2]+$3, %[-1]
12822| drop
12826| return
12830| i32.const 1
12838| i64.const 2
12850| i64.atomic.rmw8.add_u $0:%[-2]+$3, %[-1]
12862| drop
12866| return
12870| i32.const 1
12878| i64.const 2
12890| i64.atomic.rmw16.add_u $0:%[-2]+$3, %[-1]
12902| drop
12906| return
12910| i32.const 1
12918| i64.const 2
12930| i64.atomic.rmw32.add_u $0:%[-2]+$3, %[-1]
12942| drop
12946| return
12950| i32.const 1
12958| i32.const 2
12966| i32.atomic.rmw.sub $0:%[-2]+$3, %[-1]
12978| drop
12982| return
12986| i32.const 1
12994| i64.const 2
13006| i64.atomic.rmw.sub $0:%[-2]+$7, %[-1]
13018| drop
13022| return
13026| i32.const 1
13034| i32.const 2
13042| i32.atomic.rmw8.sub_u $0:%[-2]+$3, %[-1]
13054| drop
13058| return
13062| i32.const 1
13070| i32.const 2
13078| i32.atomic.rmw16.sub_u $0:%[-2]+$3, %[-1]
13090| drop
13094| return
13098| i32.const 1
13106| i64.const 2
13118| i64.atomic.rmw8.sub_u $0:%[-2]+$3, %[-1]
13130| drop
13134| return
13138| i32.const 1
13146| i64.const 2
13158| i64.atomic.rmw16.sub_u $0:%[-2]+$3, %[-1]
13170| drop
13174| return
13178| i32.const 1
13186| i64.const 2
13198| i64.atomic.rmw32.sub_u $0:%[-2]+$3, %[-1]
13210| drop
13214| return
13218| i32.const 1
13226| i32.const 2
13234| i32.atomic.rmw.and $0:%[-2]+$3, %[-1]
13246| drop
13250| return
13254| i32.const 1
13262| i64.const 2
13274| i64.atomic.rmw.and $0:%[-2]+$7, %[-1]
13286| drop
13290| return
13294| i32.const 1
13302| i32.const 2
13310| i32.atomic.rmw8.and_u $0:%[-2]+$3, %[-1]
13322| drop
13326| return
13330| i32.const 1
13338| i32.const 2
13346| i32.atomic.rmw16.and_u $0:%[-2]+$3, %[-1]
13358| drop
13362| return
13366| i32.const 1
13374| i64.const 2
13386| i64.atomic.rmw8.and_u $0:%[-2]+$3, %[-1]
13398| drop
13402| return
13406| i32.const 1
13414| i64.const 2
13426| i64.atomic.rmw16.and_u $0:%[-2]+$3, %[-1]
13438| drop
13442| return
13446| i32.const 1
13454| i64.const 2
13466| i64.atomic.rmw32.and_u $0:%[-2]+$3, %[-1]
13478| drop
13482| return
13486| i32.const 1
13494| i32.const 2
13502| i32.atomic.rmw.or $0:%[-2]+$3, %[-1]
13514| drop
13518| return
13522| i32.const 1
13530| i64.const 2
13542| i64.atomic.rmw.or $0:%[-2]+$7, %[-1]
13554| drop
13558| return
13562| i32.const 1
13570| i32.const 2
13578| i32.atomic.rmw8.or_u $0:%[-2]+$3, %[-1]
13590| drop
13594| return
13598| i32.const 1
13606| i32.const 2
13614| i32.atomic.rmw16.or_u $0:%[-2]+$3, %[-1]
13626| drop
13630| return
13634| i32.const 1
13642| i64.const 2
13654| i64.atomic.rmw8.or_u $0:%[-2]+$3, %[-1]
13666| drop
13670| return
13674| i32.const 1
13682| i64.const 2
13694| i64.atomic.rmw16.or_u $0:%[-2]+$3, %[-1]
13706| drop
13710| return
13714| i32.const 1
13722| i64.const 2
13734| i64.atomic.rmw32.or_u $0:%[-2]+$3, %[-1]
13746| drop
13750| return
13754| i32.const 1
13762| i32.const 2
13770| i32.atomic.rmw.xor $0:%[-2]+$3, %[-1]
13782| drop
13786| return
13790| i32.const 1
13798| i64.const 2
13810| i64.atomic.rmw.xor $0:%[-2]+$7, %[-1]
13822| drop
13826| return
13830| i32.const 1
13838| i32.const 2
13846| i32.atomic.rmw8.xor_u $0:%[-2]+$3, %[-1]
13858| drop
13862| return
13866| i32.const 1
13874| i32.const 2
13882| i32.atomic.rmw16.xor_u $0:%[-2]+$3, %[-1]
13894| drop
13898| return
13902| i32.const 1
13910| i64.const 2
13922| i64.atomic.rmw8.xor_u $0:%[-2]+$3, %[-1]
13934| drop
13938| return
13942| i32.const 1
13950| i64.const 2
13962| i64.atomic.rmw16.xor_u $0:%[-2]+$3, %[-1]
13974| drop
13978| return
13982| i32.const 1
13990| i64.const 2
14002| i64.atomic.rmw32.xor_u $0:%[-2]+$3, %[-1]
14014| drop
14018| return
14022| i32.const 1
14030| i32.const 2
14038| i32.atomic.rmw.xchg $0:%[-2]+$3, %[-1]
14050| drop
14054| return
14058| i32.const 1
14066| i64.const 2
14078| i64.atomic.rmw.xchg $0:%[-2]+$7, %[-1]
14090| drop
14094| return
14098| i32.const 1
14106| i32.const 2
14114| i32.atomic.rmw8.xchg_u $0:%[-2]+$3, %[-1]
14126| drop
14130| return
14134| i32.const 1
14142| i32.const 2
14150| i32.atomic.rmw16.xchg_u $0:%[-2]+$3, %[-1]
14162| drop
14166| return
14170| i32.const 1
14178| i64.const 2
14190| i64.atomic.rmw8.xchg_u $0:%[-2]+$3, %[-1]
14202| drop
14206| return
14210| i32.const 1
14218| i64.const 2
14230| i64.atomic.rmw16.xchg_u $0:%[-2]+$3, %[-1]
14242| drop
14246| return
14250| i32.const 1
14258| i64.const 2
14270| i64.atomic.rmw32.xchg_u $0:%[-2]+$3, %[-1]
14282| drop
14286| return
14290| i32.const 1
14298| i32.const 2
14306| i32.const 3
14314| i32.atomic.rmw.cmpxchg $0:%[-3]+$3, %[-2], %[-1]
14326| drop
14330| return
14334| i32.const 1
14342| i64.const 2
14354| i64.const 3
14366| i64.atomic.rmw.cmpxchg $0:%[-3]+$7, %[-2], %[-1]
14378| drop
14382| return
14386| i32.const 1
14394| i32.const 2
14402| i32.const 3
14410| i32.atomic.rmw8.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
14422| drop
14426| return
14430| i32.const 1
14438| i32.const 2
14446| i32.const 3
14454| i32.atomic.rmw16.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
14466| drop
14470| return
14474| i32.const 1
14482| i64.const 2
14494| i64.const 3
14506| i64.atomic.rmw8.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
14518| drop
14522| return
14526| i32.const 1
14534| i64.const 2
14546| i64.const 3
14558| i64.atomic.rmw16.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
14570| drop
14574| return
14578| i32.const 1
14586| i64.const 2
14598| i64.const 3
14610| i64.atomic.rmw32.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
14622| drop
14626| return
unreachable() => error: unreachable executed
br() =>
br_table() =>
return() =>
call() =>
call_indirect() =>
return_call() =>
return_call_indirect() =>
drop() =>
select() =>
select_t() =>
get_local() =>
set_local() =>
tee_local() =>
get_global() =>
set_global() =>
i32.load() =>
i64.load() =>
f32.load() =>
f64.load() =>
i32.load8_s() =>
i32.load8_u() =>
i32.load16_s() =>
i32.load16_u() =>
i64.load8_s() =>
i64.load8_u() =>
i64.load16_s() =>
i64.load16_u() =>
i64.load32_s() =>
i64.load32_u() =>
i32.store() =>
i64.store() =>
f32.store() =>
f64.store() =>
i32.store8() =>
i32.store16() =>
i64.store8() =>
i64.store16() =>
i64.store32() =>
current_memory() =>
grow_memory() =>
i32.const() =>
i64.const() =>
f32.const() =>
f64.const() =>
i32.eqz() =>
i32.eq() =>
i32.ne() =>
i32.lt_s() =>
i32.lt_u() =>
i32.gt_s() =>
i32.gt_u() =>
i32.le_s() =>
i32.le_u() =>
i32.ge_s() =>
i32.ge_u() =>
i64.eqz() =>
i64.eq() =>
i64.ne() =>
i64.lt_s() =>
i64.lt_u() =>
i64.gt_s() =>
i64.gt_u() =>
i64.le_s() =>
i64.le_u() =>
i64.ge_s() =>
i64.ge_u() =>
f32.eq() =>
f32.ne() =>
f32.lt() =>
f32.gt() =>
f32.le() =>
f32.ge() =>
f64.eq() =>
f64.ne() =>
f64.lt() =>
f64.gt() =>
f64.le() =>
f64.ge() =>
i32.clz() =>
i32.ctz() =>
i32.popcnt() =>
i32.add() =>
i32.sub() =>
i32.mul() =>
i32.div_s() =>
i32.div_u() =>
i32.rem_s() =>
i32.rem_u() =>
i32.and() =>
i32.or() =>
i32.xor() =>
i32.shl() =>
i32.shr_s() =>
i32.shr_u() =>
i32.rotl() =>
i32.rotr() =>
i64.clz() =>
i64.ctz() =>
i64.popcnt() =>
i64.add() =>
i64.sub() =>
i64.mul() =>
i64.div_s() =>
i64.div_u() =>
i64.rem_s() =>
i64.rem_u() =>
i64.and() =>
i64.or() =>
i64.xor() =>
i64.shl() =>
i64.shr_s() =>
i64.shr_u() =>
i64.rotl() =>
i64.rotr() =>
f32.abs() =>
f32.neg() =>
f32.ceil() =>
f32.floor() =>
f32.trunc() =>
f32.nearest() =>
f32.sqrt() =>
f32.add() =>
f32.sub() =>
f32.mul() =>
f32.div() =>
f32.min() =>
f32.max() =>
f32.copysign() =>
f64.abs() =>
f64.neg() =>
f64.ceil() =>
f64.floor() =>
f64.trunc() =>
f64.nearest() =>
f64.sqrt() =>
f64.add() =>
f64.sub() =>
f64.mul() =>
f64.div() =>
f64.min() =>
f64.max() =>
f64.copysign() =>
i32.wrap/i64() =>
i32.trunc_s/f32() =>
i32.trunc_u/f32() =>
i32.trunc_s/f64() =>
i32.trunc_u/f64() =>
i64.extend_s/i32() =>
i64.extend_u/i32() =>
i64.trunc_s/f32() =>
i64.trunc_u/f32() =>
i64.trunc_s/f64() =>
i64.trunc_u/f64() =>
f32.convert_s/i32() =>
f32.convert_u/i32() =>
f32.convert_s/i64() =>
f32.convert_u/i64() =>
f32.demote/f64() =>
f64.convert_s/i32() =>
f64.convert_u/i32() =>
f64.convert_s/i64() =>
f64.convert_u/i64() =>
f64.promote/f32() =>
i32.reinterpret/f32() =>
f32.reinterpret/i32() =>
i64.reinterpret/f64() =>
f64.reinterpret/i64() =>
i32.extend8_s() =>
i32.extend16_s() =>
i64.extend8_s() =>
i64.extend16_s() =>
i64.extend32_s() =>
alloca() =>
br_unless() =>
called host host.print(i32:1) =>
call_host() =>
data() =>
drop_keep() =>
i32.trunc_s:sat/f32() =>
i32.trunc_u:sat/f32() =>
i32.trunc_s:sat/f64() =>
i32.trunc_u:sat/f64() =>
i64.trunc_s:sat/f32() =>
i64.trunc_u:sat/f32() =>
i64.trunc_s:sat/f64() =>
i64.trunc_u:sat/f64() =>
memory.init() => error: out of bounds memory access: memory.init out of bounds
data.drop() =>
memory.copy() =>
memory.fill() =>
table.init() => error: out of bounds table access: table.init out of bounds
elem.drop() =>
table.copy() => error: out of bounds table access: table.copy out of bounds
v128.load() =>
v128.store() =>
v128.const() =>
i8x16.splat() =>
i8x16.extract_lane_s() =>
i8x16.extract_lane_u() =>
i8x16.replace_lane() =>
i16x8.splat() =>
i16x8.extract_lane_s() =>
i16x8.extract_lane_u() =>
i16x8.replace_lane() =>
i32x4.splat() =>
i32x4.extract_lane() =>
i32x4.replace_lane() =>
i64x2.splat() =>
i64x2.extract_lane() =>
i64x2.replace_lane() =>
f32x4.splat() =>
f32x4.extract_lane() =>
f32x4.replace_lane() =>
f64x2.splat() =>
f64x2.extract_lane() =>
f64x2.replace_lane() =>
i8x16.eq() =>
i8x16.ne() =>
i8x16.lt_s() =>
i8x16.lt_u() =>
i8x16.gt_s() =>
i8x16.gt_u() =>
i8x16.le_s() =>
i8x16.le_u() =>
i8x16.ge_s() =>
i8x16.ge_u() =>
i16x8.eq() =>
i16x8.ne() =>
i16x8.lt_s() =>
i16x8.lt_u() =>
i16x8.gt_s() =>
i16x8.gt_u() =>
i16x8.le_s() =>
i16x8.le_u() =>
i16x8.ge_s() =>
i16x8.ge_u() =>
i32x4.eq() =>
i32x4.ne() =>
i32x4.lt_s() =>
i32x4.lt_u() =>
i32x4.gt_s() =>
i32x4.gt_u() =>
i32x4.le_s() =>
i32x4.le_u() =>
i32x4.ge_s() =>
i32x4.ge_u() =>
f32x4.eq() =>
f32x4.ne() =>
f32x4.lt() =>
f32x4.gt() =>
f32x4.le() =>
f32x4.ge() =>
f64x2.eq() =>
f64x2.ne() =>
f64x2.lt() =>
f64x2.gt() =>
f64x2.le() =>
f64x2.ge() =>
v128.not() =>
v128.and() =>
v128.or() =>
v128.xor() =>
v128.bitselect() =>
i8x16.neg() =>
i8x16.any_true() =>
i8x16.all_true() =>
i8x16.shl() =>
i8x16.shr_s() =>
i8x16.shr_u() =>
i8x16.add() =>
i8x16.add_saturate_s() =>
i8x16.add_saturate_u() =>
i8x16.sub() =>
i8x16.sub_saturate_s() =>
i8x16.sub_saturate_u() =>
i8x16.mul() =>
i16x8.neg() =>
i16x8.any_true() =>
i16x8.all_true() =>
i16x8.shl() =>
i16x8.shr_s() =>
i16x8.shr_u() =>
i16x8.add() =>
i16x8.add_saturate_s() =>
i16x8.add_saturate_u() =>
i16x8.sub() =>
i16x8.sub_saturate_s() =>
i16x8.sub_saturate_u() =>
i16x8.mul() =>
i32x4.neg() =>
i32x4.any_true() =>
i32x4.all_true() =>
i32x4.shl() =>
i32x4.shr_s() =>
i32x4.shr_u() =>
i32x4.add() =>
i32x4.sub() =>
i32x4.mul() =>
i64x2.neg() =>
i64x2.any_true() =>
i64x2.all_true() =>
i64x2.shl() =>
i64x2.shr_s() =>
i64x2.shr_u() =>
i64x2.add() =>
i64x2.sub() =>
f32x4.abs() =>
f32x4.neg() =>
f32x4.sqrt() =>
f32x4.add() =>
f32x4.sub() =>
f32x4.mul() =>
f32x4.div() =>
f32x4.min() =>
f32x4.max() =>
f64x2.abs() =>
f64x2.neg() =>
f64x2.sqrt() =>
f64x2.add() =>
f64x2.sub() =>
f64x2.mul() =>
f64x2.div() =>
f64x2.min() =>
f64x2.max() =>
i32x4.trunc_sat_f32x4_s() =>
i32x4.trunc_sat_f32x4_u() =>
i64x2.trunc_sat_f64x2_s() =>
i64x2.trunc_sat_f64x2_u() =>
f32x4.convert_i32x4_s() =>
f32x4.convert_i32x4_u() =>
f64x2.convert_i64x2_s() =>
f64x2.convert_i64x2_u() =>
v8x16.swizzle() =>
v8x16.shuffle() =>
i8x16.load_splat() =>
i16x8.load_splat() =>
i32x4.load_splat() =>
i64x2.load_splat() =>
i8x16.narrow_i16x8_s() => error: not implemented
i8x16.narrow_i16x8_u() => error: not implemented
i16x8.narrow_i32x4_s() => error: not implemented
i16x8.narrow_i32x4_u() => error: not implemented
i16x8.widen_low_i8x16_s() => error: not implemented
i16x8.widen_high_i8x16_s() => error: not implemented
i16x8.widen_low_i8x16_u() => error: not implemented
i16x8.widen_high_i8x16_u() => error: not implemented
i32x4.widen_low_i16x8_s() => error: not implemented
i32x4.widen_high_i16x8_s() => error: not implemented
i32x4.widen_low_i16x8_u() => error: not implemented
i32x4.widen_high_i16x8_u() => error: not implemented
atomic.notify() => error: unreachable executed
i32.atomic.wait() => error: unreachable executed
i64.atomic.wait() => error: unreachable executed
i32.atomic.load() =>
i64.atomic.load() =>
i32.atomic.load8_u() =>
i32.atomic.load16_u() =>
i64.atomic.load8_u() =>
i64.atomic.load16_u() =>
i64.atomic.load32_u() =>
i32.atomic.store() =>
i64.atomic.store() =>
i32.atomic.store8() =>
i32.atomic.store16() =>
i64.atomic.store8() =>
i64.atomic.store16() =>
i64.atomic.store32() =>
i32.atomic.rmw.add() =>
i64.atomic.rmw.add() =>
i32.atomic.rmw8.add_u() =>
i32.atomic.rmw16.add_u() =>
i64.atomic.rmw8.add_u() =>
i64.atomic.rmw16.add_u() =>
i64.atomic.rmw32.add_u() =>
i32.atomic.rmw.sub() =>
i64.atomic.rmw.sub() =>
i32.atomic.rmw8.sub_u() =>
i32.atomic.rmw16.sub_u() =>
i64.atomic.rmw8.sub_u() =>
i64.atomic.rmw16.sub_u() =>
i64.atomic.rmw32.sub_u() =>
i32.atomic.rmw.and() =>
i64.atomic.rmw.and() =>
i32.atomic.rmw8.and_u() =>
i32.atomic.rmw16.and_u() =>
i64.atomic.rmw8.and_u() =>
i64.atomic.rmw16.and_u() =>
i64.atomic.rmw32.and_u() =>
i32.atomic.rmw.or() =>
i64.atomic.rmw.or() =>
i32.atomic.rmw8.or_u() =>
i32.atomic.rmw16.or_u() =>
i64.atomic.rmw8.or_u() =>
i64.atomic.rmw16.or_u() =>
i64.atomic.rmw32.or_u() =>
i32.atomic.rmw.xor() =>
i64.atomic.rmw.xor() =>
i32.atomic.rmw8.xor_u() =>
i32.atomic.rmw16.xor_u() =>
i64.atomic.rmw8.xor_u() =>
i64.atomic.rmw16.xor_u() =>
i64.atomic.rmw32.xor_u() =>
i32.atomic.rmw.xchg() =>
i64.atomic.rmw.xchg() =>
i32.atomic.rmw8.xchg_u() =>
i32.atomic.rmw16.xchg_u() =>
i64.atomic.rmw8.xchg_u() =>
i64.atomic.rmw16.xchg_u() =>
i64.atomic.rmw32.xchg_u() =>
i32.atomic.rmw.cmpxchg() =>
i64.atomic.rmw.cmpxchg() =>
i32.atomic.rmw8.cmpxchg_u() =>
i32.atomic.rmw16.cmpxchg_u() =>
i64.atomic.rmw8.cmpxchg_u() =>
i64.atomic.rmw16.cmpxchg_u() =>
i64.atomic.rmw32.cmpxchg_u() =>
;;; STDOUT ;;)
