;;; TOOL: run-interp
;;; FLAGS: -v --enable-threads --enable-saturating-float-to-int

(module
  (import "spectest" "print" (func $print (param i32)))

  (type $empty (func))
  (func $empty)
  (memory (shared 1 1))
  (table anyfunc (elem $empty $empty))
  (global $g (mut i32) (i32.const 0))

  (; 0x00 ;) (func (export "unreachable") unreachable)
  (; 0x01 ;) ;; nop       -- not generated in interpreter
  (; 0x02 ;) ;; block     -- not generated in interpreter
  (; 0x03 ;) ;; loop      -- not generated in interpreter
  (; 0x04 ;) ;; if        -- not generated in interpreter
  (; 0x05 ;) ;; else      -- not generated in interpreter
  (; 0x06 ;) ;; try       -- not implemented
  (; 0x07 ;) ;; catch     -- not implemented
  (; 0x08 ;) ;; throw     -- not implemented
  (; 0x09 ;) ;; rethrow   -- not implemented
  (; 0x0a ;) ;; catch_all -- not implemented
  (; 0x0b ;) ;; end       -- not generated in interpreter
  (; 0x0c ;) (func (export "br") br 0)
  (; 0x0d ;) ;; 0x0d br_if  ;; not generated in interpreter
  (; 0x0e ;) (func (export "br_table") i32.const 1 br_table 0)
  (; 0x0f ;) (func (export "return") return)
  (; 0x10 ;) (func (export "call") call $empty)
  (; 0x11 ;) (func (export "call_indirect") i32.const 1 call_indirect $empty)
  (; 0x1a ;) (func (export "drop") i32.const 1 drop)
  (; 0x1b ;) (func (export "select") i32.const 1 i32.const 2 i32.const 3 select drop)
  (; 0x20 ;) (func (export "get_local") (local i32) get_local 0 drop)
  (; 0x21 ;) (func (export "set_local") (local i32) i32.const 1 set_local 0)
  (; 0x22 ;) (func (export "tee_local") (local i32) i32.const 1 tee_local 0 drop)
  (; 0x23 ;) (func (export "get_global") get_global 0 drop)
  (; 0x24 ;) (func (export "set_global") i32.const 1 set_global 0)
  (; 0x28 ;) (func (export "i32.load") i32.const 1 i32.load offset=2 drop)
  (; 0x29 ;) (func (export "i64.load") i32.const 1 i64.load offset=2 drop)
  (; 0x2a ;) (func (export "f32.load") i32.const 1 f32.load offset=2 drop)
  (; 0x2b ;) (func (export "f64.load") i32.const 1 f64.load offset=2 drop)
  (; 0x2c ;) (func (export "i32.load8_s") i32.const 1 i32.load8_s offset=2 drop)
  (; 0x2d ;) (func (export "i32.load8_u") i32.const 1 i32.load8_u offset=2 drop)
  (; 0x2e ;) (func (export "i32.load16_s") i32.const 1 i32.load16_s offset=2 drop)
  (; 0x2f ;) (func (export "i32.load16_u") i32.const 1 i32.load16_u offset=2 drop)
  (; 0x30 ;) (func (export "i64.load8_s") i32.const 1 i64.load8_s offset=2 drop)
  (; 0x31 ;) (func (export "i64.load8_u") i32.const 1 i64.load8_u offset=2 drop)
  (; 0x32 ;) (func (export "i64.load16_s") i32.const 1 i64.load16_s offset=2 drop)
  (; 0x33 ;) (func (export "i64.load16_u") i32.const 1 i64.load16_u offset=2 drop)
  (; 0x34 ;) (func (export "i64.load32_s") i32.const 1 i64.load32_s offset=2 drop)
  (; 0x35 ;) (func (export "i64.load32_u") i32.const 1 i64.load32_u offset=2 drop)
  (; 0x36 ;) (func (export "i32.store") i32.const 1 i32.const 2 i32.store offset=2)
  (; 0x37 ;) (func (export "i64.store") i32.const 1 i64.const 2 i64.store offset=2)
  (; 0x38 ;) (func (export "f32.store") i32.const 1 f32.const 2 f32.store offset=2)
  (; 0x39 ;) (func (export "f64.store") i32.const 1 f64.const 2 f64.store offset=2)
  (; 0x3a ;) (func (export "i32.store8") i32.const 1 i32.const 2 i32.store8 offset=2)
  (; 0x3b ;) (func (export "i32.store16") i32.const 1 i32.const 2 i32.store16 offset=2)
  (; 0x3c ;) (func (export "i64.store8") i32.const 1 i64.const 2 i64.store8 offset=2)
  (; 0x3d ;) (func (export "i64.store16") i32.const 1 i64.const 2 i64.store16 offset=2)
  (; 0x3e ;) (func (export "i64.store32") i32.const 1 i64.const 2 i64.store32 offset=2)
  (; 0x3f ;) (func (export "current_memory") current_memory drop)
  (; 0x40 ;) (func (export "grow_memory") i32.const 1 grow_memory drop)
  (; 0x41 ;) (func (export "i32.const") i32.const 1 drop)
  (; 0x42 ;) (func (export "i64.const") i64.const 1 drop)
  (; 0x43 ;) (func (export "f32.const") f32.const 1 drop)
  (; 0x44 ;) (func (export "f64.const") f64.const 1 drop)
  (; 0x45 ;) (func (export "i32.eqz") i32.const 1 i32.eqz drop)
  (; 0x46 ;) (func (export "i32.eq") i32.const 1 i32.const 2 i32.eq drop)
  (; 0x47 ;) (func (export "i32.ne") i32.const 1 i32.const 2 i32.ne drop)
  (; 0x48 ;) (func (export "i32.lt_s") i32.const 1 i32.const 2 i32.lt_s drop)
  (; 0x49 ;) (func (export "i32.lt_u") i32.const 1 i32.const 2 i32.lt_u drop)
  (; 0x4a ;) (func (export "i32.gt_s") i32.const 1 i32.const 2 i32.gt_s drop)
  (; 0x4b ;) (func (export "i32.gt_u") i32.const 1 i32.const 2 i32.gt_u drop)
  (; 0x4c ;) (func (export "i32.le_s") i32.const 1 i32.const 2 i32.le_s drop)
  (; 0x4d ;) (func (export "i32.le_u") i32.const 1 i32.const 2 i32.le_u drop)
  (; 0x4e ;) (func (export "i32.ge_s") i32.const 1 i32.const 2 i32.ge_s drop)
  (; 0x4f ;) (func (export "i32.ge_u") i32.const 1 i32.const 2 i32.ge_u drop)
  (; 0x50 ;) (func (export "i64.eqz") i64.const 1 i64.eqz drop)
  (; 0x51 ;) (func (export "i64.eq") i64.const 1 i64.const 2 i64.eq drop)
  (; 0x52 ;) (func (export "i64.ne") i64.const 1 i64.const 2 i64.ne drop)
  (; 0x53 ;) (func (export "i64.lt_s") i64.const 1 i64.const 2 i64.lt_s drop)
  (; 0x54 ;) (func (export "i64.lt_u") i64.const 1 i64.const 2 i64.lt_u drop)
  (; 0x55 ;) (func (export "i64.gt_s") i64.const 1 i64.const 2 i64.gt_s drop)
  (; 0x56 ;) (func (export "i64.gt_u") i64.const 1 i64.const 2 i64.gt_u drop)
  (; 0x57 ;) (func (export "i64.le_s") i64.const 1 i64.const 2 i64.le_s drop)
  (; 0x58 ;) (func (export "i64.le_u") i64.const 1 i64.const 2 i64.le_u drop)
  (; 0x59 ;) (func (export "i64.ge_s") i64.const 1 i64.const 2 i64.ge_s drop)
  (; 0x5a ;) (func (export "i64.ge_u") i64.const 1 i64.const 2 i64.ge_u drop)
  (; 0x5b ;) (func (export "f32.eq") f32.const 1 f32.const 2 f32.eq drop)
  (; 0x5c ;) (func (export "f32.ne") f32.const 1 f32.const 2 f32.ne drop)
  (; 0x5d ;) (func (export "f32.lt") f32.const 1 f32.const 2 f32.lt drop)
  (; 0x5e ;) (func (export "f32.gt") f32.const 1 f32.const 2 f32.gt drop)
  (; 0x5f ;) (func (export "f32.le") f32.const 1 f32.const 2 f32.le drop)
  (; 0x60 ;) (func (export "f32.ge") f32.const 1 f32.const 2 f32.ge drop)
  (; 0x61 ;) (func (export "f64.eq") f64.const 1 f64.const 2 f64.eq drop)
  (; 0x62 ;) (func (export "f64.ne") f64.const 1 f64.const 2 f64.ne drop)
  (; 0x63 ;) (func (export "f64.lt") f64.const 1 f64.const 2 f64.lt drop)
  (; 0x64 ;) (func (export "f64.gt") f64.const 1 f64.const 2 f64.gt drop)
  (; 0x65 ;) (func (export "f64.le") f64.const 1 f64.const 2 f64.le drop)
  (; 0x66 ;) (func (export "f64.ge") f64.const 1 f64.const 2 f64.ge drop)
  (; 0x67 ;) (func (export "i32.clz") i32.const 1 i32.clz drop)
  (; 0x68 ;) (func (export "i32.ctz") i32.const 1 i32.ctz drop)
  (; 0x69 ;) (func (export "i32.popcnt") i32.const 1 i32.popcnt drop)
  (; 0x6a ;) (func (export "i32.add") i32.const 1 i32.const 2 i32.add drop)
  (; 0x6b ;) (func (export "i32.sub") i32.const 1 i32.const 2 i32.sub drop)
  (; 0x6c ;) (func (export "i32.mul") i32.const 1 i32.const 2 i32.mul drop)
  (; 0x6d ;) (func (export "i32.div_s") i32.const 1 i32.const 2 i32.div_s drop)
  (; 0x6e ;) (func (export "i32.div_u") i32.const 1 i32.const 2 i32.div_u drop)
  (; 0x6f ;) (func (export "i32.rem_s") i32.const 1 i32.const 2 i32.rem_s drop)
  (; 0x70 ;) (func (export "i32.rem_u") i32.const 1 i32.const 2 i32.rem_u drop)
  (; 0x71 ;) (func (export "i32.and") i32.const 1 i32.const 2 i32.and drop)
  (; 0x72 ;) (func (export "i32.or") i32.const 1 i32.const 2 i32.or drop)
  (; 0x73 ;) (func (export "i32.xor") i32.const 1 i32.const 2 i32.xor drop)
  (; 0x74 ;) (func (export "i32.shl") i32.const 1 i32.const 2 i32.shl drop)
  (; 0x75 ;) (func (export "i32.shr_s") i32.const 1 i32.const 2 i32.shr_s drop)
  (; 0x76 ;) (func (export "i32.shr_u") i32.const 1 i32.const 2 i32.shr_u drop)
  (; 0x77 ;) (func (export "i32.rotl") i32.const 1 i32.const 2 i32.rotl drop)
  (; 0x78 ;) (func (export "i32.rotr") i32.const 1 i32.const 2 i32.rotr drop)
  (; 0x79 ;) (func (export "i64.clz") i64.const 1 i64.clz drop)
  (; 0x7a ;) (func (export "i64.ctz") i64.const 1 i64.ctz drop)
  (; 0x7b ;) (func (export "i64.popcnt") i64.const 1 i64.popcnt drop)
  (; 0x7c ;) (func (export "i64.add") i64.const 1 i64.const 2 i64.add drop)
  (; 0x7d ;) (func (export "i64.sub") i64.const 1 i64.const 2 i64.sub drop)
  (; 0x7e ;) (func (export "i64.mul") i64.const 1 i64.const 2 i64.mul drop)
  (; 0x7f ;) (func (export "i64.div_s") i64.const 1 i64.const 2 i64.div_s drop)
  (; 0x80 ;) (func (export "i64.div_u") i64.const 1 i64.const 2 i64.div_u drop)
  (; 0x81 ;) (func (export "i64.rem_s") i64.const 1 i64.const 2 i64.rem_s drop)
  (; 0x82 ;) (func (export "i64.rem_u") i64.const 1 i64.const 2 i64.rem_u drop)
  (; 0x83 ;) (func (export "i64.and") i64.const 1 i64.const 2 i64.and drop)
  (; 0x84 ;) (func (export "i64.or") i64.const 1 i64.const 2 i64.or drop)
  (; 0x85 ;) (func (export "i64.xor") i64.const 1 i64.const 2 i64.xor drop)
  (; 0x86 ;) (func (export "i64.shl") i64.const 1 i64.const 2 i64.shl drop)
  (; 0x87 ;) (func (export "i64.shr_s") i64.const 1 i64.const 2 i64.shr_s drop)
  (; 0x88 ;) (func (export "i64.shr_u") i64.const 1 i64.const 2 i64.shr_u drop)
  (; 0x89 ;) (func (export "i64.rotl") i64.const 1 i64.const 2 i64.rotl drop)
  (; 0x8a ;) (func (export "i64.rotr") i64.const 1 i64.const 2 i64.rotr drop)
  (; 0x8b ;) (func (export "f32.abs") f32.const 1 f32.abs drop)
  (; 0x8c ;) (func (export "f32.neg") f32.const 1 f32.neg drop)
  (; 0x8d ;) (func (export "f32.ceil") f32.const 1 f32.ceil drop)
  (; 0x8e ;) (func (export "f32.floor") f32.const 1 f32.floor drop)
  (; 0x8f ;) (func (export "f32.trunc") f32.const 1 f32.trunc drop)
  (; 0x90 ;) (func (export "f32.nearest") f32.const 1 f32.nearest drop)
  (; 0x91 ;) (func (export "f32.sqrt") f32.const 1 f32.sqrt drop)
  (; 0x92 ;) (func (export "f32.add") f32.const 1 f32.const 2 f32.add drop)
  (; 0x93 ;) (func (export "f32.sub") f32.const 1 f32.const 2 f32.sub drop)
  (; 0x94 ;) (func (export "f32.mul") f32.const 1 f32.const 2 f32.mul drop)
  (; 0x95 ;) (func (export "f32.div") f32.const 1 f32.const 2 f32.div drop)
  (; 0x96 ;) (func (export "f32.min") f32.const 1 f32.const 2 f32.min drop)
  (; 0x97 ;) (func (export "f32.max") f32.const 1 f32.const 2 f32.max drop)
  (; 0x98 ;) (func (export "f32.copysign") f32.const 1 f32.const 2 f32.copysign drop)
  (; 0x99 ;) (func (export "f64.abs") f64.const 1 f64.abs drop)
  (; 0x9a ;) (func (export "f64.neg") f64.const 1 f64.neg drop)
  (; 0x9b ;) (func (export "f64.ceil") f64.const 1 f64.ceil drop)
  (; 0x9c ;) (func (export "f64.floor") f64.const 1 f64.floor drop)
  (; 0x9d ;) (func (export "f64.trunc") f64.const 1 f64.trunc drop)
  (; 0x9e ;) (func (export "f64.nearest") f64.const 1 f64.nearest drop)
  (; 0x9f ;) (func (export "f64.sqrt") f64.const 1 f64.sqrt drop)
  (; 0xa0 ;) (func (export "f64.add") f64.const 1 f64.const 2 f64.add drop)
  (; 0xa1 ;) (func (export "f64.sub") f64.const 1 f64.const 2 f64.sub drop)
  (; 0xa2 ;) (func (export "f64.mul") f64.const 1 f64.const 2 f64.mul drop)
  (; 0xa3 ;) (func (export "f64.div") f64.const 1 f64.const 2 f64.div drop)
  (; 0xa4 ;) (func (export "f64.min") f64.const 1 f64.const 2 f64.min drop)
  (; 0xa5 ;) (func (export "f64.max") f64.const 1 f64.const 2 f64.max drop)
  (; 0xa6 ;) (func (export "f64.copysign") f64.const 1 f64.const 2 f64.copysign drop)
  (; 0xa7 ;) (func (export "i32.wrap/i64") i64.const 1 i32.wrap/i64 drop)
  (; 0xa8 ;) (func (export "i32.trunc_s/f32") f32.const 1 i32.trunc_s/f32 drop)
  (; 0xa9 ;) (func (export "i32.trunc_u/f32") f32.const 1 i32.trunc_u/f32 drop)
  (; 0xaa ;) (func (export "i32.trunc_s/f64") f64.const 1 i32.trunc_s/f64 drop)
  (; 0xab ;) (func (export "i32.trunc_u/f64") f64.const 1 i32.trunc_u/f64 drop)
  (; 0xac ;) (func (export "i64.extend_s/i32") i32.const 1 i64.extend_s/i32 drop)
  (; 0xad ;) (func (export "i64.extend_u/i32") i32.const 1 i64.extend_u/i32 drop)
  (; 0xae ;) (func (export "i64.trunc_s/f32") f32.const 1 i64.trunc_s/f32 drop)
  (; 0xaf ;) (func (export "i64.trunc_u/f32") f32.const 1 i64.trunc_u/f32 drop)
  (; 0xb0 ;) (func (export "i64.trunc_s/f64") f64.const 1 i64.trunc_s/f64 drop)
  (; 0xb1 ;) (func (export "i64.trunc_u/f64") f64.const 1 i64.trunc_u/f64 drop)
  (; 0xb2 ;) (func (export "f32.convert_s/i32") i32.const 1 f32.convert_s/i32 drop)
  (; 0xb3 ;) (func (export "f32.convert_u/i32") i32.const 1 f32.convert_u/i32 drop)
  (; 0xb4 ;) (func (export "f32.convert_s/i64") i64.const 1 f32.convert_s/i64 drop)
  (; 0xb5 ;) (func (export "f32.convert_u/i64") i64.const 1 f32.convert_u/i64 drop)
  (; 0xb6 ;) (func (export "f32.demote/f64") f64.const 1 f32.demote/f64 drop)
  (; 0xb7 ;) (func (export "f64.convert_s/i32") i32.const 1 f64.convert_s/i32 drop)
  (; 0xb8 ;) (func (export "f64.convert_u/i32") i32.const 1 f64.convert_u/i32 drop)
  (; 0xb9 ;) (func (export "f64.convert_s/i64") i64.const 1 f64.convert_s/i64 drop)
  (; 0xba ;) (func (export "f64.convert_u/i64") i64.const 1 f64.convert_u/i64 drop)
  (; 0xbb ;) (func (export "f64.promote/f32") f32.const 1 f64.promote/f32 drop)
  (; 0xbc ;) (func (export "i32.reinterpret/f32") i32.const 1 f32.reinterpret/i32 drop)
  (; 0xbd ;) (func (export "f32.reinterpret/i32") f32.const 1 i32.reinterpret/f32 drop)
  (; 0xbe ;) (func (export "i64.reinterpret/f64") i64.const 1 f64.reinterpret/i64 drop)
  (; 0xbf ;) (func (export "f64.reinterpret/i64") f64.const 1 i64.reinterpret/f64 drop)

  ;; --enable-threads
  (; 0xc0 ;) (func (export "i32.extend8_s") i32.const 1 i32.extend8_s drop)
  (; 0xc1 ;) (func (export "i32.extend16_s") i32.const 1 i32.extend16_s drop)
  (; 0xc2 ;) (func (export "i64.extend8_s") i64.const 1 i64.extend8_s drop)
  (; 0xc3 ;) (func (export "i64.extend16_s") i64.const 1 i64.extend16_s drop)
  (; 0xc4 ;) (func (export "i64.extend32_s") i64.const 1 i64.extend32_s drop)

  ;; Interpreter opcodes
  (; 0xe0 ;) (func (export "alloca") (local i32))
  (; 0xe1 ;) (func (export "br_unless") i32.const 1 br_if 0)
  (; 0xe2 ;) (func (export "call_host") i32.const 1 call $print)
  (; 0xe3 ;) (func (export "data") i32.const 1 br_table 0)
  (; 0xe4 ;) (func (export "drop_keep") block (result i32) i32.const 1 i32.const 2 br 0 end drop)

  ;; --enable-saturating-float-to-int
  (; 0xfc 0x00 ;) (func (export "i32.trunc_s:sat/f32") f32.const 1 i32.trunc_s:sat/f32 drop)
  (; 0xfc 0x01 ;) (func (export "i32.trunc_u:sat/f32") f32.const 1 i32.trunc_u:sat/f32 drop)
  (; 0xfc 0x02 ;) (func (export "i32.trunc_s:sat/f64") f64.const 1 i32.trunc_s:sat/f64 drop)
  (; 0xfc 0x03 ;) (func (export "i32.trunc_u:sat/f64") f64.const 1 i32.trunc_u:sat/f64 drop)
  (; 0xfc 0x04 ;) (func (export "i64.trunc_s:sat/f32") f32.const 1 i64.trunc_s:sat/f32 drop)
  (; 0xfc 0x05 ;) (func (export "i64.trunc_u:sat/f32") f32.const 1 i64.trunc_u:sat/f32 drop)
  (; 0xfc 0x06 ;) (func (export "i64.trunc_s:sat/f64") f64.const 1 i64.trunc_s:sat/f64 drop)
  (; 0xfc 0x07 ;) (func (export "i64.trunc_u:sat/f64") f64.const 1 i64.trunc_u:sat/f64 drop)

  ;; --enable-threads
  (; 0xfe 0x10 ;) (func (export "i32.atomic.load") i32.const 1 i32.atomic.load offset=3 drop)
  (; 0xfe 0x11 ;) (func (export "i64.atomic.load") i32.const 1 i64.atomic.load offset=7 drop)
  (; 0xfe 0x12 ;) (func (export "i32.atomic.load8_u") i32.const 1 i32.atomic.load8_u offset=3 drop)
  (; 0xfe 0x13 ;) (func (export "i32.atomic.load16_u") i32.const 1 i32.atomic.load16_u offset=3 drop)
  (; 0xfe 0x14 ;) (func (export "i64.atomic.load8_u") i32.const 1 i64.atomic.load8_u offset=3 drop)
  (; 0xfe 0x15 ;) (func (export "i64.atomic.load16_u") i32.const 1 i64.atomic.load16_u offset=3 drop)
  (; 0xfe 0x16 ;) (func (export "i64.atomic.load32_u") i32.const 1 i64.atomic.load32_u offset=3 drop)
  (; 0xfe 0x17 ;) (func (export "i32.atomic.store") i32.const 1 i32.const 2 i32.atomic.store offset=3)
  (; 0xfe 0x18 ;) (func (export "i64.atomic.store") i32.const 1 i64.const 2 i64.atomic.store offset=7)
  (; 0xfe 0x19 ;) (func (export "i32.atomic.store8") i32.const 1 i32.const 2 i32.atomic.store8 offset=3)
  (; 0xfe 0x1a ;) (func (export "i32.atomic.store16") i32.const 1 i32.const 2 i32.atomic.store16 offset=3)
  (; 0xfe 0x1b ;) (func (export "i64.atomic.store8") i32.const 1 i64.const 2 i64.atomic.store8 offset=3)
  (; 0xfe 0x1c ;) (func (export "i64.atomic.store16") i32.const 1 i64.const 2 i64.atomic.store16 offset=3)
  (; 0xfe 0x1d ;) (func (export "i64.atomic.store32") i32.const 1 i64.const 2 i64.atomic.store32 offset=3)
  (; 0xfe 0x1e ;) (func (export "i32.atomic.rmw.add") i32.const 1 i32.const 2 i32.atomic.rmw.add offset=3 drop)
  (; 0xfe 0x1f ;) (func (export "i64.atomic.rmw.add") i32.const 1 i64.const 2 i64.atomic.rmw.add offset=7 drop)
  (; 0xfe 0x20 ;) (func (export "i32.atomic.rmw8_u.add") i32.const 1 i32.const 2 i32.atomic.rmw8_u.add offset=3 drop)
  (; 0xfe 0x21 ;) (func (export "i32.atomic.rmw16_u.add") i32.const 1 i32.const 2 i32.atomic.rmw16_u.add offset=3 drop)
  (; 0xfe 0x22 ;) (func (export "i64.atomic.rmw8_u.add") i32.const 1 i64.const 2 i64.atomic.rmw8_u.add offset=3 drop)
  (; 0xfe 0x23 ;) (func (export "i64.atomic.rmw16_u.add") i32.const 1 i64.const 2 i64.atomic.rmw16_u.add offset=3 drop)
  (; 0xfe 0x24 ;) (func (export "i64.atomic.rmw32_u.add") i32.const 1 i64.const 2 i64.atomic.rmw32_u.add offset=3 drop)
  (; 0xfe 0x25 ;) (func (export "i32.atomic.rmw.sub") i32.const 1 i32.const 2 i32.atomic.rmw.sub offset=3 drop)
  (; 0xfe 0x26 ;) (func (export "i64.atomic.rmw.sub") i32.const 1 i64.const 2 i64.atomic.rmw.sub offset=7 drop)
  (; 0xfe 0x27 ;) (func (export "i32.atomic.rmw8_u.sub") i32.const 1 i32.const 2 i32.atomic.rmw8_u.sub offset=3 drop)
  (; 0xfe 0x28 ;) (func (export "i32.atomic.rmw16_u.sub") i32.const 1 i32.const 2 i32.atomic.rmw16_u.sub offset=3 drop)
  (; 0xfe 0x29 ;) (func (export "i64.atomic.rmw8_u.sub") i32.const 1 i64.const 2 i64.atomic.rmw8_u.sub offset=3 drop)
  (; 0xfe 0x2a ;) (func (export "i64.atomic.rmw16_u.sub") i32.const 1 i64.const 2 i64.atomic.rmw16_u.sub offset=3 drop)
  (; 0xfe 0x2b ;) (func (export "i64.atomic.rmw32_u.sub") i32.const 1 i64.const 2 i64.atomic.rmw32_u.sub offset=3 drop)
  (; 0xfe 0x2c ;) (func (export "i32.atomic.rmw.and") i32.const 1 i32.const 2 i32.atomic.rmw.and offset=3 drop)
  (; 0xfe 0x2d ;) (func (export "i64.atomic.rmw.and") i32.const 1 i64.const 2 i64.atomic.rmw.and offset=7 drop)
  (; 0xfe 0x2e ;) (func (export "i32.atomic.rmw8_u.and") i32.const 1 i32.const 2 i32.atomic.rmw8_u.and offset=3 drop)
  (; 0xfe 0x2f ;) (func (export "i32.atomic.rmw16_u.and") i32.const 1 i32.const 2 i32.atomic.rmw16_u.and offset=3 drop)
  (; 0xfe 0x30 ;) (func (export "i64.atomic.rmw8_u.and") i32.const 1 i64.const 2 i64.atomic.rmw8_u.and offset=3 drop)
  (; 0xfe 0x31 ;) (func (export "i64.atomic.rmw16_u.and") i32.const 1 i64.const 2 i64.atomic.rmw16_u.and offset=3 drop)
  (; 0xfe 0x32 ;) (func (export "i64.atomic.rmw32_u.and") i32.const 1 i64.const 2 i64.atomic.rmw32_u.and offset=3 drop)
  (; 0xfe 0x33 ;) (func (export "i32.atomic.rmw.or") i32.const 1 i32.const 2 i32.atomic.rmw.or offset=3 drop)
  (; 0xfe 0x34 ;) (func (export "i64.atomic.rmw.or") i32.const 1 i64.const 2 i64.atomic.rmw.or offset=7 drop)
  (; 0xfe 0x35 ;) (func (export "i32.atomic.rmw8_u.or") i32.const 1 i32.const 2 i32.atomic.rmw8_u.or offset=3 drop)
  (; 0xfe 0x36 ;) (func (export "i32.atomic.rmw16_u.or") i32.const 1 i32.const 2 i32.atomic.rmw16_u.or offset=3 drop)
  (; 0xfe 0x37 ;) (func (export "i64.atomic.rmw8_u.or") i32.const 1 i64.const 2 i64.atomic.rmw8_u.or offset=3 drop)
  (; 0xfe 0x38 ;) (func (export "i64.atomic.rmw16_u.or") i32.const 1 i64.const 2 i64.atomic.rmw16_u.or offset=3 drop)
  (; 0xfe 0x39 ;) (func (export "i64.atomic.rmw32_u.or") i32.const 1 i64.const 2 i64.atomic.rmw32_u.or offset=3 drop)
  (; 0xfe 0x3a ;) (func (export "i32.atomic.rmw.xor") i32.const 1 i32.const 2 i32.atomic.rmw.xor offset=3 drop)
  (; 0xfe 0x3b ;) (func (export "i64.atomic.rmw.xor") i32.const 1 i64.const 2 i64.atomic.rmw.xor offset=7 drop)
  (; 0xfe 0x3c ;) (func (export "i32.atomic.rmw8_u.xor") i32.const 1 i32.const 2 i32.atomic.rmw8_u.xor offset=3 drop)
  (; 0xfe 0x3d ;) (func (export "i32.atomic.rmw16_u.xor") i32.const 1 i32.const 2 i32.atomic.rmw16_u.xor offset=3 drop)
  (; 0xfe 0x3e ;) (func (export "i64.atomic.rmw8_u.xor") i32.const 1 i64.const 2 i64.atomic.rmw8_u.xor offset=3 drop)
  (; 0xfe 0x3f ;) (func (export "i64.atomic.rmw16_u.xor") i32.const 1 i64.const 2 i64.atomic.rmw16_u.xor offset=3 drop)
  (; 0xfe 0x40 ;) (func (export "i64.atomic.rmw32_u.xor") i32.const 1 i64.const 2 i64.atomic.rmw32_u.xor offset=3 drop)
  (; 0xfe 0x41 ;) (func (export "i32.atomic.rmw.xchg") i32.const 1 i32.const 2 i32.atomic.rmw.xchg offset=3 drop)
  (; 0xfe 0x42 ;) (func (export "i64.atomic.rmw.xchg") i32.const 1 i64.const 2 i64.atomic.rmw.xchg offset=7 drop)
  (; 0xfe 0x43 ;) (func (export "i32.atomic.rmw8_u.xchg") i32.const 1 i32.const 2 i32.atomic.rmw8_u.xchg offset=3 drop)
  (; 0xfe 0x44 ;) (func (export "i32.atomic.rmw16_u.xchg") i32.const 1 i32.const 2 i32.atomic.rmw16_u.xchg offset=3 drop)
  (; 0xfe 0x45 ;) (func (export "i64.atomic.rmw8_u.xchg") i32.const 1 i64.const 2 i64.atomic.rmw8_u.xchg offset=3 drop)
  (; 0xfe 0x46 ;) (func (export "i64.atomic.rmw16_u.xchg") i32.const 1 i64.const 2 i64.atomic.rmw16_u.xchg offset=3 drop)
  (; 0xfe 0x47 ;) (func (export "i64.atomic.rmw32_u.xchg") i32.const 1 i64.const 2 i64.atomic.rmw32_u.xchg offset=3 drop)

  (; 0xfe 0x48 ;) (func (export "i32.atomic.rmw.cmpxchg") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw.cmpxchg offset=3 drop)
  (; 0xfe 0x49 ;) (func (export "i64.atomic.rmw.cmpxchg") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw.cmpxchg offset=7 drop)
  (; 0xfe 0x4a ;) (func (export "i32.atomic.rmw8_u.cmpxchg") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw8_u.cmpxchg offset=3 drop)
  (; 0xfe 0x4b ;) (func (export "i32.atomic.rmw16_u.cmpxchg") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw16_u.cmpxchg offset=3 drop)
  (; 0xfe 0x4c ;) (func (export "i64.atomic.rmw8_u.cmpxchg") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw8_u.cmpxchg offset=3 drop)
  (; 0xfe 0x4d ;) (func (export "i64.atomic.rmw16_u.cmpxchg") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw16_u.cmpxchg offset=3 drop)
  (; 0xfe 0x4e ;) (func (export "i64.atomic.rmw32_u.cmpxchg") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw32_u.cmpxchg offset=3 drop)
)

(;; STDOUT ;;;
0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 02                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 00                                        ; num params
000000d: 00                                        ; num results
; type 1
000000e: 60                                        ; func
000000f: 01                                        ; num params
0000010: 7f                                        ; i32
0000011: 00                                        ; num results
0000009: 08                                        ; FIXUP section size
; section "Import" (2)
0000012: 02                                        ; section code
0000013: 00                                        ; section size (guess)
0000014: 01                                        ; num imports
; import header 0
0000015: 08                                        ; string length
0000016: 7370 6563 7465 7374                      spectest  ; import module name
000001e: 05                                        ; string length
000001f: 7072 696e 74                             print  ; import field name
0000024: 00                                        ; import kind
0000025: 01                                        ; import signature index
0000013: 12                                        ; FIXUP section size
; section "Function" (3)
0000026: 03                                        ; section code
0000027: 00                                        ; section size (guess)
0000028: f701                                      ; num functions
000002a: 00                                        ; function 0 signature index
000002b: 00                                        ; function 1 signature index
000002c: 00                                        ; function 2 signature index
000002d: 00                                        ; function 3 signature index
000002e: 00                                        ; function 4 signature index
000002f: 00                                        ; function 5 signature index
0000030: 00                                        ; function 6 signature index
0000031: 00                                        ; function 7 signature index
0000032: 00                                        ; function 8 signature index
0000033: 00                                        ; function 9 signature index
0000034: 00                                        ; function 10 signature index
0000035: 00                                        ; function 11 signature index
0000036: 00                                        ; function 12 signature index
0000037: 00                                        ; function 13 signature index
0000038: 00                                        ; function 14 signature index
0000039: 00                                        ; function 15 signature index
000003a: 00                                        ; function 16 signature index
000003b: 00                                        ; function 17 signature index
000003c: 00                                        ; function 18 signature index
000003d: 00                                        ; function 19 signature index
000003e: 00                                        ; function 20 signature index
000003f: 00                                        ; function 21 signature index
0000040: 00                                        ; function 22 signature index
0000041: 00                                        ; function 23 signature index
0000042: 00                                        ; function 24 signature index
0000043: 00                                        ; function 25 signature index
0000044: 00                                        ; function 26 signature index
0000045: 00                                        ; function 27 signature index
0000046: 00                                        ; function 28 signature index
0000047: 00                                        ; function 29 signature index
0000048: 00                                        ; function 30 signature index
0000049: 00                                        ; function 31 signature index
000004a: 00                                        ; function 32 signature index
000004b: 00                                        ; function 33 signature index
000004c: 00                                        ; function 34 signature index
000004d: 00                                        ; function 35 signature index
000004e: 00                                        ; function 36 signature index
000004f: 00                                        ; function 37 signature index
0000050: 00                                        ; function 38 signature index
0000051: 00                                        ; function 39 signature index
0000052: 00                                        ; function 40 signature index
0000053: 00                                        ; function 41 signature index
0000054: 00                                        ; function 42 signature index
0000055: 00                                        ; function 43 signature index
0000056: 00                                        ; function 44 signature index
0000057: 00                                        ; function 45 signature index
0000058: 00                                        ; function 46 signature index
0000059: 00                                        ; function 47 signature index
000005a: 00                                        ; function 48 signature index
000005b: 00                                        ; function 49 signature index
000005c: 00                                        ; function 50 signature index
000005d: 00                                        ; function 51 signature index
000005e: 00                                        ; function 52 signature index
000005f: 00                                        ; function 53 signature index
0000060: 00                                        ; function 54 signature index
0000061: 00                                        ; function 55 signature index
0000062: 00                                        ; function 56 signature index
0000063: 00                                        ; function 57 signature index
0000064: 00                                        ; function 58 signature index
0000065: 00                                        ; function 59 signature index
0000066: 00                                        ; function 60 signature index
0000067: 00                                        ; function 61 signature index
0000068: 00                                        ; function 62 signature index
0000069: 00                                        ; function 63 signature index
000006a: 00                                        ; function 64 signature index
000006b: 00                                        ; function 65 signature index
000006c: 00                                        ; function 66 signature index
000006d: 00                                        ; function 67 signature index
000006e: 00                                        ; function 68 signature index
000006f: 00                                        ; function 69 signature index
0000070: 00                                        ; function 70 signature index
0000071: 00                                        ; function 71 signature index
0000072: 00                                        ; function 72 signature index
0000073: 00                                        ; function 73 signature index
0000074: 00                                        ; function 74 signature index
0000075: 00                                        ; function 75 signature index
0000076: 00                                        ; function 76 signature index
0000077: 00                                        ; function 77 signature index
0000078: 00                                        ; function 78 signature index
0000079: 00                                        ; function 79 signature index
000007a: 00                                        ; function 80 signature index
000007b: 00                                        ; function 81 signature index
000007c: 00                                        ; function 82 signature index
000007d: 00                                        ; function 83 signature index
000007e: 00                                        ; function 84 signature index
000007f: 00                                        ; function 85 signature index
0000080: 00                                        ; function 86 signature index
0000081: 00                                        ; function 87 signature index
0000082: 00                                        ; function 88 signature index
0000083: 00                                        ; function 89 signature index
0000084: 00                                        ; function 90 signature index
0000085: 00                                        ; function 91 signature index
0000086: 00                                        ; function 92 signature index
0000087: 00                                        ; function 93 signature index
0000088: 00                                        ; function 94 signature index
0000089: 00                                        ; function 95 signature index
000008a: 00                                        ; function 96 signature index
000008b: 00                                        ; function 97 signature index
000008c: 00                                        ; function 98 signature index
000008d: 00                                        ; function 99 signature index
000008e: 00                                        ; function 100 signature index
000008f: 00                                        ; function 101 signature index
0000090: 00                                        ; function 102 signature index
0000091: 00                                        ; function 103 signature index
0000092: 00                                        ; function 104 signature index
0000093: 00                                        ; function 105 signature index
0000094: 00                                        ; function 106 signature index
0000095: 00                                        ; function 107 signature index
0000096: 00                                        ; function 108 signature index
0000097: 00                                        ; function 109 signature index
0000098: 00                                        ; function 110 signature index
0000099: 00                                        ; function 111 signature index
000009a: 00                                        ; function 112 signature index
000009b: 00                                        ; function 113 signature index
000009c: 00                                        ; function 114 signature index
000009d: 00                                        ; function 115 signature index
000009e: 00                                        ; function 116 signature index
000009f: 00                                        ; function 117 signature index
00000a0: 00                                        ; function 118 signature index
00000a1: 00                                        ; function 119 signature index
00000a2: 00                                        ; function 120 signature index
00000a3: 00                                        ; function 121 signature index
00000a4: 00                                        ; function 122 signature index
00000a5: 00                                        ; function 123 signature index
00000a6: 00                                        ; function 124 signature index
00000a7: 00                                        ; function 125 signature index
00000a8: 00                                        ; function 126 signature index
00000a9: 00                                        ; function 127 signature index
00000aa: 00                                        ; function 128 signature index
00000ab: 00                                        ; function 129 signature index
00000ac: 00                                        ; function 130 signature index
00000ad: 00                                        ; function 131 signature index
00000ae: 00                                        ; function 132 signature index
00000af: 00                                        ; function 133 signature index
00000b0: 00                                        ; function 134 signature index
00000b1: 00                                        ; function 135 signature index
00000b2: 00                                        ; function 136 signature index
00000b3: 00                                        ; function 137 signature index
00000b4: 00                                        ; function 138 signature index
00000b5: 00                                        ; function 139 signature index
00000b6: 00                                        ; function 140 signature index
00000b7: 00                                        ; function 141 signature index
00000b8: 00                                        ; function 142 signature index
00000b9: 00                                        ; function 143 signature index
00000ba: 00                                        ; function 144 signature index
00000bb: 00                                        ; function 145 signature index
00000bc: 00                                        ; function 146 signature index
00000bd: 00                                        ; function 147 signature index
00000be: 00                                        ; function 148 signature index
00000bf: 00                                        ; function 149 signature index
00000c0: 00                                        ; function 150 signature index
00000c1: 00                                        ; function 151 signature index
00000c2: 00                                        ; function 152 signature index
00000c3: 00                                        ; function 153 signature index
00000c4: 00                                        ; function 154 signature index
00000c5: 00                                        ; function 155 signature index
00000c6: 00                                        ; function 156 signature index
00000c7: 00                                        ; function 157 signature index
00000c8: 00                                        ; function 158 signature index
00000c9: 00                                        ; function 159 signature index
00000ca: 00                                        ; function 160 signature index
00000cb: 00                                        ; function 161 signature index
00000cc: 00                                        ; function 162 signature index
00000cd: 00                                        ; function 163 signature index
00000ce: 00                                        ; function 164 signature index
00000cf: 00                                        ; function 165 signature index
00000d0: 00                                        ; function 166 signature index
00000d1: 00                                        ; function 167 signature index
00000d2: 00                                        ; function 168 signature index
00000d3: 00                                        ; function 169 signature index
00000d4: 00                                        ; function 170 signature index
00000d5: 00                                        ; function 171 signature index
00000d6: 00                                        ; function 172 signature index
00000d7: 00                                        ; function 173 signature index
00000d8: 00                                        ; function 174 signature index
00000d9: 00                                        ; function 175 signature index
00000da: 00                                        ; function 176 signature index
00000db: 00                                        ; function 177 signature index
00000dc: 00                                        ; function 178 signature index
00000dd: 00                                        ; function 179 signature index
00000de: 00                                        ; function 180 signature index
00000df: 00                                        ; function 181 signature index
00000e0: 00                                        ; function 182 signature index
00000e1: 00                                        ; function 183 signature index
00000e2: 00                                        ; function 184 signature index
00000e3: 00                                        ; function 185 signature index
00000e4: 00                                        ; function 186 signature index
00000e5: 00                                        ; function 187 signature index
00000e6: 00                                        ; function 188 signature index
00000e7: 00                                        ; function 189 signature index
00000e8: 00                                        ; function 190 signature index
00000e9: 00                                        ; function 191 signature index
00000ea: 00                                        ; function 192 signature index
00000eb: 00                                        ; function 193 signature index
00000ec: 00                                        ; function 194 signature index
00000ed: 00                                        ; function 195 signature index
00000ee: 00                                        ; function 196 signature index
00000ef: 00                                        ; function 197 signature index
00000f0: 00                                        ; function 198 signature index
00000f1: 00                                        ; function 199 signature index
00000f2: 00                                        ; function 200 signature index
00000f3: 00                                        ; function 201 signature index
00000f4: 00                                        ; function 202 signature index
00000f5: 00                                        ; function 203 signature index
00000f6: 00                                        ; function 204 signature index
00000f7: 00                                        ; function 205 signature index
00000f8: 00                                        ; function 206 signature index
00000f9: 00                                        ; function 207 signature index
00000fa: 00                                        ; function 208 signature index
00000fb: 00                                        ; function 209 signature index
00000fc: 00                                        ; function 210 signature index
00000fd: 00                                        ; function 211 signature index
00000fe: 00                                        ; function 212 signature index
00000ff: 00                                        ; function 213 signature index
0000100: 00                                        ; function 214 signature index
0000101: 00                                        ; function 215 signature index
0000102: 00                                        ; function 216 signature index
0000103: 00                                        ; function 217 signature index
0000104: 00                                        ; function 218 signature index
0000105: 00                                        ; function 219 signature index
0000106: 00                                        ; function 220 signature index
0000107: 00                                        ; function 221 signature index
0000108: 00                                        ; function 222 signature index
0000109: 00                                        ; function 223 signature index
000010a: 00                                        ; function 224 signature index
000010b: 00                                        ; function 225 signature index
000010c: 00                                        ; function 226 signature index
000010d: 00                                        ; function 227 signature index
000010e: 00                                        ; function 228 signature index
000010f: 00                                        ; function 229 signature index
0000110: 00                                        ; function 230 signature index
0000111: 00                                        ; function 231 signature index
0000112: 00                                        ; function 232 signature index
0000113: 00                                        ; function 233 signature index
0000114: 00                                        ; function 234 signature index
0000115: 00                                        ; function 235 signature index
0000116: 00                                        ; function 236 signature index
0000117: 00                                        ; function 237 signature index
0000118: 00                                        ; function 238 signature index
0000119: 00                                        ; function 239 signature index
000011a: 00                                        ; function 240 signature index
000011b: 00                                        ; function 241 signature index
000011c: 00                                        ; function 242 signature index
000011d: 00                                        ; function 243 signature index
000011e: 00                                        ; function 244 signature index
000011f: 00                                        ; function 245 signature index
0000120: 00                                        ; function 246 signature index
; move data: [28, 121) -> [29, 122)
0000027: f901                                      ; FIXUP section size
; section "Table" (4)
0000122: 04                                        ; section code
0000123: 00                                        ; section size (guess)
0000124: 01                                        ; num tables
; table 0
0000125: 70                                        ; anyfunc
0000126: 01                                        ; limits: flags
0000127: 02                                        ; limits: initial
0000128: 02                                        ; limits: max
0000123: 05                                        ; FIXUP section size
; section "Memory" (5)
0000129: 05                                        ; section code
000012a: 00                                        ; section size (guess)
000012b: 01                                        ; num memories
; memory 0
000012c: 03                                        ; limits: flags
000012d: 01                                        ; limits: initial
000012e: 01                                        ; limits: max
000012a: 04                                        ; FIXUP section size
; section "Global" (6)
000012f: 06                                        ; section code
0000130: 00                                        ; section size (guess)
0000131: 01                                        ; num globals
0000132: 7f                                        ; i32
0000133: 01                                        ; global mutability
0000134: 41                                        ; i32.const
0000135: 00                                        ; i32 literal
0000136: 0b                                        ; end
0000130: 06                                        ; FIXUP section size
; section "Export" (7)
0000137: 07                                        ; section code
0000138: 00                                        ; section size (guess)
0000139: f601                                      ; num exports
000013b: 0b                                        ; string length
000013c: 756e 7265 6163 6861 626c 65              unreachable  ; export name
0000147: 00                                        ; export kind
0000148: 02                                        ; export func index
0000149: 02                                        ; string length
000014a: 6272                                     br  ; export name
000014c: 00                                        ; export kind
000014d: 03                                        ; export func index
000014e: 08                                        ; string length
000014f: 6272 5f74 6162 6c65                      br_table  ; export name
0000157: 00                                        ; export kind
0000158: 04                                        ; export func index
0000159: 06                                        ; string length
000015a: 7265 7475 726e                           return  ; export name
0000160: 00                                        ; export kind
0000161: 05                                        ; export func index
0000162: 04                                        ; string length
0000163: 6361 6c6c                                call  ; export name
0000167: 00                                        ; export kind
0000168: 06                                        ; export func index
0000169: 0d                                        ; string length
000016a: 6361 6c6c 5f69 6e64 6972 6563 74         call_indirect  ; export name
0000177: 00                                        ; export kind
0000178: 07                                        ; export func index
0000179: 04                                        ; string length
000017a: 6472 6f70                                drop  ; export name
000017e: 00                                        ; export kind
000017f: 08                                        ; export func index
0000180: 06                                        ; string length
0000181: 7365 6c65 6374                           select  ; export name
0000187: 00                                        ; export kind
0000188: 09                                        ; export func index
0000189: 09                                        ; string length
000018a: 6765 745f 6c6f 6361 6c                   get_local  ; export name
0000193: 00                                        ; export kind
0000194: 0a                                        ; export func index
0000195: 09                                        ; string length
0000196: 7365 745f 6c6f 6361 6c                   set_local  ; export name
000019f: 00                                        ; export kind
00001a0: 0b                                        ; export func index
00001a1: 09                                        ; string length
00001a2: 7465 655f 6c6f 6361 6c                   tee_local  ; export name
00001ab: 00                                        ; export kind
00001ac: 0c                                        ; export func index
00001ad: 0a                                        ; string length
00001ae: 6765 745f 676c 6f62 616c                 get_global  ; export name
00001b8: 00                                        ; export kind
00001b9: 0d                                        ; export func index
00001ba: 0a                                        ; string length
00001bb: 7365 745f 676c 6f62 616c                 set_global  ; export name
00001c5: 00                                        ; export kind
00001c6: 0e                                        ; export func index
00001c7: 08                                        ; string length
00001c8: 6933 322e 6c6f 6164                      i32.load  ; export name
00001d0: 00                                        ; export kind
00001d1: 0f                                        ; export func index
00001d2: 08                                        ; string length
00001d3: 6936 342e 6c6f 6164                      i64.load  ; export name
00001db: 00                                        ; export kind
00001dc: 10                                        ; export func index
00001dd: 08                                        ; string length
00001de: 6633 322e 6c6f 6164                      f32.load  ; export name
00001e6: 00                                        ; export kind
00001e7: 11                                        ; export func index
00001e8: 08                                        ; string length
00001e9: 6636 342e 6c6f 6164                      f64.load  ; export name
00001f1: 00                                        ; export kind
00001f2: 12                                        ; export func index
00001f3: 0b                                        ; string length
00001f4: 6933 322e 6c6f 6164 385f 73              i32.load8_s  ; export name
00001ff: 00                                        ; export kind
0000200: 13                                        ; export func index
0000201: 0b                                        ; string length
0000202: 6933 322e 6c6f 6164 385f 75              i32.load8_u  ; export name
000020d: 00                                        ; export kind
000020e: 14                                        ; export func index
000020f: 0c                                        ; string length
0000210: 6933 322e 6c6f 6164 3136 5f73            i32.load16_s  ; export name
000021c: 00                                        ; export kind
000021d: 15                                        ; export func index
000021e: 0c                                        ; string length
000021f: 6933 322e 6c6f 6164 3136 5f75            i32.load16_u  ; export name
000022b: 00                                        ; export kind
000022c: 16                                        ; export func index
000022d: 0b                                        ; string length
000022e: 6936 342e 6c6f 6164 385f 73              i64.load8_s  ; export name
0000239: 00                                        ; export kind
000023a: 17                                        ; export func index
000023b: 0b                                        ; string length
000023c: 6936 342e 6c6f 6164 385f 75              i64.load8_u  ; export name
0000247: 00                                        ; export kind
0000248: 18                                        ; export func index
0000249: 0c                                        ; string length
000024a: 6936 342e 6c6f 6164 3136 5f73            i64.load16_s  ; export name
0000256: 00                                        ; export kind
0000257: 19                                        ; export func index
0000258: 0c                                        ; string length
0000259: 6936 342e 6c6f 6164 3136 5f75            i64.load16_u  ; export name
0000265: 00                                        ; export kind
0000266: 1a                                        ; export func index
0000267: 0c                                        ; string length
0000268: 6936 342e 6c6f 6164 3332 5f73            i64.load32_s  ; export name
0000274: 00                                        ; export kind
0000275: 1b                                        ; export func index
0000276: 0c                                        ; string length
0000277: 6936 342e 6c6f 6164 3332 5f75            i64.load32_u  ; export name
0000283: 00                                        ; export kind
0000284: 1c                                        ; export func index
0000285: 09                                        ; string length
0000286: 6933 322e 7374 6f72 65                   i32.store  ; export name
000028f: 00                                        ; export kind
0000290: 1d                                        ; export func index
0000291: 09                                        ; string length
0000292: 6936 342e 7374 6f72 65                   i64.store  ; export name
000029b: 00                                        ; export kind
000029c: 1e                                        ; export func index
000029d: 09                                        ; string length
000029e: 6633 322e 7374 6f72 65                   f32.store  ; export name
00002a7: 00                                        ; export kind
00002a8: 1f                                        ; export func index
00002a9: 09                                        ; string length
00002aa: 6636 342e 7374 6f72 65                   f64.store  ; export name
00002b3: 00                                        ; export kind
00002b4: 20                                        ; export func index
00002b5: 0a                                        ; string length
00002b6: 6933 322e 7374 6f72 6538                 i32.store8  ; export name
00002c0: 00                                        ; export kind
00002c1: 21                                        ; export func index
00002c2: 0b                                        ; string length
00002c3: 6933 322e 7374 6f72 6531 36              i32.store16  ; export name
00002ce: 00                                        ; export kind
00002cf: 22                                        ; export func index
00002d0: 0a                                        ; string length
00002d1: 6936 342e 7374 6f72 6538                 i64.store8  ; export name
00002db: 00                                        ; export kind
00002dc: 23                                        ; export func index
00002dd: 0b                                        ; string length
00002de: 6936 342e 7374 6f72 6531 36              i64.store16  ; export name
00002e9: 00                                        ; export kind
00002ea: 24                                        ; export func index
00002eb: 0b                                        ; string length
00002ec: 6936 342e 7374 6f72 6533 32              i64.store32  ; export name
00002f7: 00                                        ; export kind
00002f8: 25                                        ; export func index
00002f9: 0e                                        ; string length
00002fa: 6375 7272 656e 745f 6d65 6d6f 7279       current_memory  ; export name
0000308: 00                                        ; export kind
0000309: 26                                        ; export func index
000030a: 0b                                        ; string length
000030b: 6772 6f77 5f6d 656d 6f72 79              grow_memory  ; export name
0000316: 00                                        ; export kind
0000317: 27                                        ; export func index
0000318: 09                                        ; string length
0000319: 6933 322e 636f 6e73 74                   i32.const  ; export name
0000322: 00                                        ; export kind
0000323: 28                                        ; export func index
0000324: 09                                        ; string length
0000325: 6936 342e 636f 6e73 74                   i64.const  ; export name
000032e: 00                                        ; export kind
000032f: 29                                        ; export func index
0000330: 09                                        ; string length
0000331: 6633 322e 636f 6e73 74                   f32.const  ; export name
000033a: 00                                        ; export kind
000033b: 2a                                        ; export func index
000033c: 09                                        ; string length
000033d: 6636 342e 636f 6e73 74                   f64.const  ; export name
0000346: 00                                        ; export kind
0000347: 2b                                        ; export func index
0000348: 07                                        ; string length
0000349: 6933 322e 6571 7a                        i32.eqz  ; export name
0000350: 00                                        ; export kind
0000351: 2c                                        ; export func index
0000352: 06                                        ; string length
0000353: 6933 322e 6571                           i32.eq  ; export name
0000359: 00                                        ; export kind
000035a: 2d                                        ; export func index
000035b: 06                                        ; string length
000035c: 6933 322e 6e65                           i32.ne  ; export name
0000362: 00                                        ; export kind
0000363: 2e                                        ; export func index
0000364: 08                                        ; string length
0000365: 6933 322e 6c74 5f73                      i32.lt_s  ; export name
000036d: 00                                        ; export kind
000036e: 2f                                        ; export func index
000036f: 08                                        ; string length
0000370: 6933 322e 6c74 5f75                      i32.lt_u  ; export name
0000378: 00                                        ; export kind
0000379: 30                                        ; export func index
000037a: 08                                        ; string length
000037b: 6933 322e 6774 5f73                      i32.gt_s  ; export name
0000383: 00                                        ; export kind
0000384: 31                                        ; export func index
0000385: 08                                        ; string length
0000386: 6933 322e 6774 5f75                      i32.gt_u  ; export name
000038e: 00                                        ; export kind
000038f: 32                                        ; export func index
0000390: 08                                        ; string length
0000391: 6933 322e 6c65 5f73                      i32.le_s  ; export name
0000399: 00                                        ; export kind
000039a: 33                                        ; export func index
000039b: 08                                        ; string length
000039c: 6933 322e 6c65 5f75                      i32.le_u  ; export name
00003a4: 00                                        ; export kind
00003a5: 34                                        ; export func index
00003a6: 08                                        ; string length
00003a7: 6933 322e 6765 5f73                      i32.ge_s  ; export name
00003af: 00                                        ; export kind
00003b0: 35                                        ; export func index
00003b1: 08                                        ; string length
00003b2: 6933 322e 6765 5f75                      i32.ge_u  ; export name
00003ba: 00                                        ; export kind
00003bb: 36                                        ; export func index
00003bc: 07                                        ; string length
00003bd: 6936 342e 6571 7a                        i64.eqz  ; export name
00003c4: 00                                        ; export kind
00003c5: 37                                        ; export func index
00003c6: 06                                        ; string length
00003c7: 6936 342e 6571                           i64.eq  ; export name
00003cd: 00                                        ; export kind
00003ce: 38                                        ; export func index
00003cf: 06                                        ; string length
00003d0: 6936 342e 6e65                           i64.ne  ; export name
00003d6: 00                                        ; export kind
00003d7: 39                                        ; export func index
00003d8: 08                                        ; string length
00003d9: 6936 342e 6c74 5f73                      i64.lt_s  ; export name
00003e1: 00                                        ; export kind
00003e2: 3a                                        ; export func index
00003e3: 08                                        ; string length
00003e4: 6936 342e 6c74 5f75                      i64.lt_u  ; export name
00003ec: 00                                        ; export kind
00003ed: 3b                                        ; export func index
00003ee: 08                                        ; string length
00003ef: 6936 342e 6774 5f73                      i64.gt_s  ; export name
00003f7: 00                                        ; export kind
00003f8: 3c                                        ; export func index
00003f9: 08                                        ; string length
00003fa: 6936 342e 6774 5f75                      i64.gt_u  ; export name
0000402: 00                                        ; export kind
0000403: 3d                                        ; export func index
0000404: 08                                        ; string length
0000405: 6936 342e 6c65 5f73                      i64.le_s  ; export name
000040d: 00                                        ; export kind
000040e: 3e                                        ; export func index
000040f: 08                                        ; string length
0000410: 6936 342e 6c65 5f75                      i64.le_u  ; export name
0000418: 00                                        ; export kind
0000419: 3f                                        ; export func index
000041a: 08                                        ; string length
000041b: 6936 342e 6765 5f73                      i64.ge_s  ; export name
0000423: 00                                        ; export kind
0000424: 40                                        ; export func index
0000425: 08                                        ; string length
0000426: 6936 342e 6765 5f75                      i64.ge_u  ; export name
000042e: 00                                        ; export kind
000042f: 41                                        ; export func index
0000430: 06                                        ; string length
0000431: 6633 322e 6571                           f32.eq  ; export name
0000437: 00                                        ; export kind
0000438: 42                                        ; export func index
0000439: 06                                        ; string length
000043a: 6633 322e 6e65                           f32.ne  ; export name
0000440: 00                                        ; export kind
0000441: 43                                        ; export func index
0000442: 06                                        ; string length
0000443: 6633 322e 6c74                           f32.lt  ; export name
0000449: 00                                        ; export kind
000044a: 44                                        ; export func index
000044b: 06                                        ; string length
000044c: 6633 322e 6774                           f32.gt  ; export name
0000452: 00                                        ; export kind
0000453: 45                                        ; export func index
0000454: 06                                        ; string length
0000455: 6633 322e 6c65                           f32.le  ; export name
000045b: 00                                        ; export kind
000045c: 46                                        ; export func index
000045d: 06                                        ; string length
000045e: 6633 322e 6765                           f32.ge  ; export name
0000464: 00                                        ; export kind
0000465: 47                                        ; export func index
0000466: 06                                        ; string length
0000467: 6636 342e 6571                           f64.eq  ; export name
000046d: 00                                        ; export kind
000046e: 48                                        ; export func index
000046f: 06                                        ; string length
0000470: 6636 342e 6e65                           f64.ne  ; export name
0000476: 00                                        ; export kind
0000477: 49                                        ; export func index
0000478: 06                                        ; string length
0000479: 6636 342e 6c74                           f64.lt  ; export name
000047f: 00                                        ; export kind
0000480: 4a                                        ; export func index
0000481: 06                                        ; string length
0000482: 6636 342e 6774                           f64.gt  ; export name
0000488: 00                                        ; export kind
0000489: 4b                                        ; export func index
000048a: 06                                        ; string length
000048b: 6636 342e 6c65                           f64.le  ; export name
0000491: 00                                        ; export kind
0000492: 4c                                        ; export func index
0000493: 06                                        ; string length
0000494: 6636 342e 6765                           f64.ge  ; export name
000049a: 00                                        ; export kind
000049b: 4d                                        ; export func index
000049c: 07                                        ; string length
000049d: 6933 322e 636c 7a                        i32.clz  ; export name
00004a4: 00                                        ; export kind
00004a5: 4e                                        ; export func index
00004a6: 07                                        ; string length
00004a7: 6933 322e 6374 7a                        i32.ctz  ; export name
00004ae: 00                                        ; export kind
00004af: 4f                                        ; export func index
00004b0: 0a                                        ; string length
00004b1: 6933 322e 706f 7063 6e74                 i32.popcnt  ; export name
00004bb: 00                                        ; export kind
00004bc: 50                                        ; export func index
00004bd: 07                                        ; string length
00004be: 6933 322e 6164 64                        i32.add  ; export name
00004c5: 00                                        ; export kind
00004c6: 51                                        ; export func index
00004c7: 07                                        ; string length
00004c8: 6933 322e 7375 62                        i32.sub  ; export name
00004cf: 00                                        ; export kind
00004d0: 52                                        ; export func index
00004d1: 07                                        ; string length
00004d2: 6933 322e 6d75 6c                        i32.mul  ; export name
00004d9: 00                                        ; export kind
00004da: 53                                        ; export func index
00004db: 09                                        ; string length
00004dc: 6933 322e 6469 765f 73                   i32.div_s  ; export name
00004e5: 00                                        ; export kind
00004e6: 54                                        ; export func index
00004e7: 09                                        ; string length
00004e8: 6933 322e 6469 765f 75                   i32.div_u  ; export name
00004f1: 00                                        ; export kind
00004f2: 55                                        ; export func index
00004f3: 09                                        ; string length
00004f4: 6933 322e 7265 6d5f 73                   i32.rem_s  ; export name
00004fd: 00                                        ; export kind
00004fe: 56                                        ; export func index
00004ff: 09                                        ; string length
0000500: 6933 322e 7265 6d5f 75                   i32.rem_u  ; export name
0000509: 00                                        ; export kind
000050a: 57                                        ; export func index
000050b: 07                                        ; string length
000050c: 6933 322e 616e 64                        i32.and  ; export name
0000513: 00                                        ; export kind
0000514: 58                                        ; export func index
0000515: 06                                        ; string length
0000516: 6933 322e 6f72                           i32.or  ; export name
000051c: 00                                        ; export kind
000051d: 59                                        ; export func index
000051e: 07                                        ; string length
000051f: 6933 322e 786f 72                        i32.xor  ; export name
0000526: 00                                        ; export kind
0000527: 5a                                        ; export func index
0000528: 07                                        ; string length
0000529: 6933 322e 7368 6c                        i32.shl  ; export name
0000530: 00                                        ; export kind
0000531: 5b                                        ; export func index
0000532: 09                                        ; string length
0000533: 6933 322e 7368 725f 73                   i32.shr_s  ; export name
000053c: 00                                        ; export kind
000053d: 5c                                        ; export func index
000053e: 09                                        ; string length
000053f: 6933 322e 7368 725f 75                   i32.shr_u  ; export name
0000548: 00                                        ; export kind
0000549: 5d                                        ; export func index
000054a: 08                                        ; string length
000054b: 6933 322e 726f 746c                      i32.rotl  ; export name
0000553: 00                                        ; export kind
0000554: 5e                                        ; export func index
0000555: 08                                        ; string length
0000556: 6933 322e 726f 7472                      i32.rotr  ; export name
000055e: 00                                        ; export kind
000055f: 5f                                        ; export func index
0000560: 07                                        ; string length
0000561: 6936 342e 636c 7a                        i64.clz  ; export name
0000568: 00                                        ; export kind
0000569: 60                                        ; export func index
000056a: 07                                        ; string length
000056b: 6936 342e 6374 7a                        i64.ctz  ; export name
0000572: 00                                        ; export kind
0000573: 61                                        ; export func index
0000574: 0a                                        ; string length
0000575: 6936 342e 706f 7063 6e74                 i64.popcnt  ; export name
000057f: 00                                        ; export kind
0000580: 62                                        ; export func index
0000581: 07                                        ; string length
0000582: 6936 342e 6164 64                        i64.add  ; export name
0000589: 00                                        ; export kind
000058a: 63                                        ; export func index
000058b: 07                                        ; string length
000058c: 6936 342e 7375 62                        i64.sub  ; export name
0000593: 00                                        ; export kind
0000594: 64                                        ; export func index
0000595: 07                                        ; string length
0000596: 6936 342e 6d75 6c                        i64.mul  ; export name
000059d: 00                                        ; export kind
000059e: 65                                        ; export func index
000059f: 09                                        ; string length
00005a0: 6936 342e 6469 765f 73                   i64.div_s  ; export name
00005a9: 00                                        ; export kind
00005aa: 66                                        ; export func index
00005ab: 09                                        ; string length
00005ac: 6936 342e 6469 765f 75                   i64.div_u  ; export name
00005b5: 00                                        ; export kind
00005b6: 67                                        ; export func index
00005b7: 09                                        ; string length
00005b8: 6936 342e 7265 6d5f 73                   i64.rem_s  ; export name
00005c1: 00                                        ; export kind
00005c2: 68                                        ; export func index
00005c3: 09                                        ; string length
00005c4: 6936 342e 7265 6d5f 75                   i64.rem_u  ; export name
00005cd: 00                                        ; export kind
00005ce: 69                                        ; export func index
00005cf: 07                                        ; string length
00005d0: 6936 342e 616e 64                        i64.and  ; export name
00005d7: 00                                        ; export kind
00005d8: 6a                                        ; export func index
00005d9: 06                                        ; string length
00005da: 6936 342e 6f72                           i64.or  ; export name
00005e0: 00                                        ; export kind
00005e1: 6b                                        ; export func index
00005e2: 07                                        ; string length
00005e3: 6936 342e 786f 72                        i64.xor  ; export name
00005ea: 00                                        ; export kind
00005eb: 6c                                        ; export func index
00005ec: 07                                        ; string length
00005ed: 6936 342e 7368 6c                        i64.shl  ; export name
00005f4: 00                                        ; export kind
00005f5: 6d                                        ; export func index
00005f6: 09                                        ; string length
00005f7: 6936 342e 7368 725f 73                   i64.shr_s  ; export name
0000600: 00                                        ; export kind
0000601: 6e                                        ; export func index
0000602: 09                                        ; string length
0000603: 6936 342e 7368 725f 75                   i64.shr_u  ; export name
000060c: 00                                        ; export kind
000060d: 6f                                        ; export func index
000060e: 08                                        ; string length
000060f: 6936 342e 726f 746c                      i64.rotl  ; export name
0000617: 00                                        ; export kind
0000618: 70                                        ; export func index
0000619: 08                                        ; string length
000061a: 6936 342e 726f 7472                      i64.rotr  ; export name
0000622: 00                                        ; export kind
0000623: 71                                        ; export func index
0000624: 07                                        ; string length
0000625: 6633 322e 6162 73                        f32.abs  ; export name
000062c: 00                                        ; export kind
000062d: 72                                        ; export func index
000062e: 07                                        ; string length
000062f: 6633 322e 6e65 67                        f32.neg  ; export name
0000636: 00                                        ; export kind
0000637: 73                                        ; export func index
0000638: 08                                        ; string length
0000639: 6633 322e 6365 696c                      f32.ceil  ; export name
0000641: 00                                        ; export kind
0000642: 74                                        ; export func index
0000643: 09                                        ; string length
0000644: 6633 322e 666c 6f6f 72                   f32.floor  ; export name
000064d: 00                                        ; export kind
000064e: 75                                        ; export func index
000064f: 09                                        ; string length
0000650: 6633 322e 7472 756e 63                   f32.trunc  ; export name
0000659: 00                                        ; export kind
000065a: 76                                        ; export func index
000065b: 0b                                        ; string length
000065c: 6633 322e 6e65 6172 6573 74              f32.nearest  ; export name
0000667: 00                                        ; export kind
0000668: 77                                        ; export func index
0000669: 08                                        ; string length
000066a: 6633 322e 7371 7274                      f32.sqrt  ; export name
0000672: 00                                        ; export kind
0000673: 78                                        ; export func index
0000674: 07                                        ; string length
0000675: 6633 322e 6164 64                        f32.add  ; export name
000067c: 00                                        ; export kind
000067d: 79                                        ; export func index
000067e: 07                                        ; string length
000067f: 6633 322e 7375 62                        f32.sub  ; export name
0000686: 00                                        ; export kind
0000687: 7a                                        ; export func index
0000688: 07                                        ; string length
0000689: 6633 322e 6d75 6c                        f32.mul  ; export name
0000690: 00                                        ; export kind
0000691: 7b                                        ; export func index
0000692: 07                                        ; string length
0000693: 6633 322e 6469 76                        f32.div  ; export name
000069a: 00                                        ; export kind
000069b: 7c                                        ; export func index
000069c: 07                                        ; string length
000069d: 6633 322e 6d69 6e                        f32.min  ; export name
00006a4: 00                                        ; export kind
00006a5: 7d                                        ; export func index
00006a6: 07                                        ; string length
00006a7: 6633 322e 6d61 78                        f32.max  ; export name
00006ae: 00                                        ; export kind
00006af: 7e                                        ; export func index
00006b0: 0c                                        ; string length
00006b1: 6633 322e 636f 7079 7369 676e            f32.copysign  ; export name
00006bd: 00                                        ; export kind
00006be: 7f                                        ; export func index
00006bf: 07                                        ; string length
00006c0: 6636 342e 6162 73                        f64.abs  ; export name
00006c7: 00                                        ; export kind
00006c8: 8001                                      ; export func index
00006ca: 07                                        ; string length
00006cb: 6636 342e 6e65 67                        f64.neg  ; export name
00006d2: 00                                        ; export kind
00006d3: 8101                                      ; export func index
00006d5: 08                                        ; string length
00006d6: 6636 342e 6365 696c                      f64.ceil  ; export name
00006de: 00                                        ; export kind
00006df: 8201                                      ; export func index
00006e1: 09                                        ; string length
00006e2: 6636 342e 666c 6f6f 72                   f64.floor  ; export name
00006eb: 00                                        ; export kind
00006ec: 8301                                      ; export func index
00006ee: 09                                        ; string length
00006ef: 6636 342e 7472 756e 63                   f64.trunc  ; export name
00006f8: 00                                        ; export kind
00006f9: 8401                                      ; export func index
00006fb: 0b                                        ; string length
00006fc: 6636 342e 6e65 6172 6573 74              f64.nearest  ; export name
0000707: 00                                        ; export kind
0000708: 8501                                      ; export func index
000070a: 08                                        ; string length
000070b: 6636 342e 7371 7274                      f64.sqrt  ; export name
0000713: 00                                        ; export kind
0000714: 8601                                      ; export func index
0000716: 07                                        ; string length
0000717: 6636 342e 6164 64                        f64.add  ; export name
000071e: 00                                        ; export kind
000071f: 8701                                      ; export func index
0000721: 07                                        ; string length
0000722: 6636 342e 7375 62                        f64.sub  ; export name
0000729: 00                                        ; export kind
000072a: 8801                                      ; export func index
000072c: 07                                        ; string length
000072d: 6636 342e 6d75 6c                        f64.mul  ; export name
0000734: 00                                        ; export kind
0000735: 8901                                      ; export func index
0000737: 07                                        ; string length
0000738: 6636 342e 6469 76                        f64.div  ; export name
000073f: 00                                        ; export kind
0000740: 8a01                                      ; export func index
0000742: 07                                        ; string length
0000743: 6636 342e 6d69 6e                        f64.min  ; export name
000074a: 00                                        ; export kind
000074b: 8b01                                      ; export func index
000074d: 07                                        ; string length
000074e: 6636 342e 6d61 78                        f64.max  ; export name
0000755: 00                                        ; export kind
0000756: 8c01                                      ; export func index
0000758: 0c                                        ; string length
0000759: 6636 342e 636f 7079 7369 676e            f64.copysign  ; export name
0000765: 00                                        ; export kind
0000766: 8d01                                      ; export func index
0000768: 0c                                        ; string length
0000769: 6933 322e 7772 6170 2f69 3634            i32.wrap/i64  ; export name
0000775: 00                                        ; export kind
0000776: 8e01                                      ; export func index
0000778: 0f                                        ; string length
0000779: 6933 322e 7472 756e 635f 732f 6633 32    i32.trunc_s/f32  ; export name
0000788: 00                                        ; export kind
0000789: 8f01                                      ; export func index
000078b: 0f                                        ; string length
000078c: 6933 322e 7472 756e 635f 752f 6633 32    i32.trunc_u/f32  ; export name
000079b: 00                                        ; export kind
000079c: 9001                                      ; export func index
000079e: 0f                                        ; string length
000079f: 6933 322e 7472 756e 635f 732f 6636 34    i32.trunc_s/f64  ; export name
00007ae: 00                                        ; export kind
00007af: 9101                                      ; export func index
00007b1: 0f                                        ; string length
00007b2: 6933 322e 7472 756e 635f 752f 6636 34    i32.trunc_u/f64  ; export name
00007c1: 00                                        ; export kind
00007c2: 9201                                      ; export func index
00007c4: 10                                        ; string length
00007c5: 6936 342e 6578 7465 6e64 5f73 2f69 3332  i64.extend_s/i32  ; export name
00007d5: 00                                        ; export kind
00007d6: 9301                                      ; export func index
00007d8: 10                                        ; string length
00007d9: 6936 342e 6578 7465 6e64 5f75 2f69 3332  i64.extend_u/i32  ; export name
00007e9: 00                                        ; export kind
00007ea: 9401                                      ; export func index
00007ec: 0f                                        ; string length
00007ed: 6936 342e 7472 756e 635f 732f 6633 32    i64.trunc_s/f32  ; export name
00007fc: 00                                        ; export kind
00007fd: 9501                                      ; export func index
00007ff: 0f                                        ; string length
0000800: 6936 342e 7472 756e 635f 752f 6633 32    i64.trunc_u/f32  ; export name
000080f: 00                                        ; export kind
0000810: 9601                                      ; export func index
0000812: 0f                                        ; string length
0000813: 6936 342e 7472 756e 635f 732f 6636 34    i64.trunc_s/f64  ; export name
0000822: 00                                        ; export kind
0000823: 9701                                      ; export func index
0000825: 0f                                        ; string length
0000826: 6936 342e 7472 756e 635f 752f 6636 34    i64.trunc_u/f64  ; export name
0000835: 00                                        ; export kind
0000836: 9801                                      ; export func index
0000838: 11                                        ; string length
0000839: 6633 322e 636f 6e76 6572 745f 732f 6933  f32.convert_s/i3
0000849: 32                                       2  ; export name
000084a: 00                                        ; export kind
000084b: 9901                                      ; export func index
000084d: 11                                        ; string length
000084e: 6633 322e 636f 6e76 6572 745f 752f 6933  f32.convert_u/i3
000085e: 32                                       2  ; export name
000085f: 00                                        ; export kind
0000860: 9a01                                      ; export func index
0000862: 11                                        ; string length
0000863: 6633 322e 636f 6e76 6572 745f 732f 6936  f32.convert_s/i6
0000873: 34                                       4  ; export name
0000874: 00                                        ; export kind
0000875: 9b01                                      ; export func index
0000877: 11                                        ; string length
0000878: 6633 322e 636f 6e76 6572 745f 752f 6936  f32.convert_u/i6
0000888: 34                                       4  ; export name
0000889: 00                                        ; export kind
000088a: 9c01                                      ; export func index
000088c: 0e                                        ; string length
000088d: 6633 322e 6465 6d6f 7465 2f66 3634       f32.demote/f64  ; export name
000089b: 00                                        ; export kind
000089c: 9d01                                      ; export func index
000089e: 11                                        ; string length
000089f: 6636 342e 636f 6e76 6572 745f 732f 6933  f64.convert_s/i3
00008af: 32                                       2  ; export name
00008b0: 00                                        ; export kind
00008b1: 9e01                                      ; export func index
00008b3: 11                                        ; string length
00008b4: 6636 342e 636f 6e76 6572 745f 752f 6933  f64.convert_u/i3
00008c4: 32                                       2  ; export name
00008c5: 00                                        ; export kind
00008c6: 9f01                                      ; export func index
00008c8: 11                                        ; string length
00008c9: 6636 342e 636f 6e76 6572 745f 732f 6936  f64.convert_s/i6
00008d9: 34                                       4  ; export name
00008da: 00                                        ; export kind
00008db: a001                                      ; export func index
00008dd: 11                                        ; string length
00008de: 6636 342e 636f 6e76 6572 745f 752f 6936  f64.convert_u/i6
00008ee: 34                                       4  ; export name
00008ef: 00                                        ; export kind
00008f0: a101                                      ; export func index
00008f2: 0f                                        ; string length
00008f3: 6636 342e 7072 6f6d 6f74 652f 6633 32    f64.promote/f32  ; export name
0000902: 00                                        ; export kind
0000903: a201                                      ; export func index
0000905: 13                                        ; string length
0000906: 6933 322e 7265 696e 7465 7270 7265 742f  i32.reinterpret/
0000916: 6633 32                                  f32  ; export name
0000919: 00                                        ; export kind
000091a: a301                                      ; export func index
000091c: 13                                        ; string length
000091d: 6633 322e 7265 696e 7465 7270 7265 742f  f32.reinterpret/
000092d: 6933 32                                  i32  ; export name
0000930: 00                                        ; export kind
0000931: a401                                      ; export func index
0000933: 13                                        ; string length
0000934: 6936 342e 7265 696e 7465 7270 7265 742f  i64.reinterpret/
0000944: 6636 34                                  f64  ; export name
0000947: 00                                        ; export kind
0000948: a501                                      ; export func index
000094a: 13                                        ; string length
000094b: 6636 342e 7265 696e 7465 7270 7265 742f  f64.reinterpret/
000095b: 6936 34                                  i64  ; export name
000095e: 00                                        ; export kind
000095f: a601                                      ; export func index
0000961: 0d                                        ; string length
0000962: 6933 322e 6578 7465 6e64 385f 73         i32.extend8_s  ; export name
000096f: 00                                        ; export kind
0000970: a701                                      ; export func index
0000972: 0e                                        ; string length
0000973: 6933 322e 6578 7465 6e64 3136 5f73       i32.extend16_s  ; export name
0000981: 00                                        ; export kind
0000982: a801                                      ; export func index
0000984: 0d                                        ; string length
0000985: 6936 342e 6578 7465 6e64 385f 73         i64.extend8_s  ; export name
0000992: 00                                        ; export kind
0000993: a901                                      ; export func index
0000995: 0e                                        ; string length
0000996: 6936 342e 6578 7465 6e64 3136 5f73       i64.extend16_s  ; export name
00009a4: 00                                        ; export kind
00009a5: aa01                                      ; export func index
00009a7: 0e                                        ; string length
00009a8: 6936 342e 6578 7465 6e64 3332 5f73       i64.extend32_s  ; export name
00009b6: 00                                        ; export kind
00009b7: ab01                                      ; export func index
00009b9: 06                                        ; string length
00009ba: 616c 6c6f 6361                           alloca  ; export name
00009c0: 00                                        ; export kind
00009c1: ac01                                      ; export func index
00009c3: 09                                        ; string length
00009c4: 6272 5f75 6e6c 6573 73                   br_unless  ; export name
00009cd: 00                                        ; export kind
00009ce: ad01                                      ; export func index
00009d0: 09                                        ; string length
00009d1: 6361 6c6c 5f68 6f73 74                   call_host  ; export name
00009da: 00                                        ; export kind
00009db: ae01                                      ; export func index
00009dd: 04                                        ; string length
00009de: 6461 7461                                data  ; export name
00009e2: 00                                        ; export kind
00009e3: af01                                      ; export func index
00009e5: 09                                        ; string length
00009e6: 6472 6f70 5f6b 6565 70                   drop_keep  ; export name
00009ef: 00                                        ; export kind
00009f0: b001                                      ; export func index
00009f2: 13                                        ; string length
00009f3: 6933 322e 7472 756e 635f 733a 7361 742f  i32.trunc_s:sat/
0000a03: 6633 32                                  f32  ; export name
0000a06: 00                                        ; export kind
0000a07: b101                                      ; export func index
0000a09: 13                                        ; string length
0000a0a: 6933 322e 7472 756e 635f 753a 7361 742f  i32.trunc_u:sat/
0000a1a: 6633 32                                  f32  ; export name
0000a1d: 00                                        ; export kind
0000a1e: b201                                      ; export func index
0000a20: 13                                        ; string length
0000a21: 6933 322e 7472 756e 635f 733a 7361 742f  i32.trunc_s:sat/
0000a31: 6636 34                                  f64  ; export name
0000a34: 00                                        ; export kind
0000a35: b301                                      ; export func index
0000a37: 13                                        ; string length
0000a38: 6933 322e 7472 756e 635f 753a 7361 742f  i32.trunc_u:sat/
0000a48: 6636 34                                  f64  ; export name
0000a4b: 00                                        ; export kind
0000a4c: b401                                      ; export func index
0000a4e: 13                                        ; string length
0000a4f: 6936 342e 7472 756e 635f 733a 7361 742f  i64.trunc_s:sat/
0000a5f: 6633 32                                  f32  ; export name
0000a62: 00                                        ; export kind
0000a63: b501                                      ; export func index
0000a65: 13                                        ; string length
0000a66: 6936 342e 7472 756e 635f 753a 7361 742f  i64.trunc_u:sat/
0000a76: 6633 32                                  f32  ; export name
0000a79: 00                                        ; export kind
0000a7a: b601                                      ; export func index
0000a7c: 13                                        ; string length
0000a7d: 6936 342e 7472 756e 635f 733a 7361 742f  i64.trunc_s:sat/
0000a8d: 6636 34                                  f64  ; export name
0000a90: 00                                        ; export kind
0000a91: b701                                      ; export func index
0000a93: 13                                        ; string length
0000a94: 6936 342e 7472 756e 635f 753a 7361 742f  i64.trunc_u:sat/
0000aa4: 6636 34                                  f64  ; export name
0000aa7: 00                                        ; export kind
0000aa8: b801                                      ; export func index
0000aaa: 0f                                        ; string length
0000aab: 6933 322e 6174 6f6d 6963 2e6c 6f61 64    i32.atomic.load  ; export name
0000aba: 00                                        ; export kind
0000abb: b901                                      ; export func index
0000abd: 0f                                        ; string length
0000abe: 6936 342e 6174 6f6d 6963 2e6c 6f61 64    i64.atomic.load  ; export name
0000acd: 00                                        ; export kind
0000ace: ba01                                      ; export func index
0000ad0: 12                                        ; string length
0000ad1: 6933 322e 6174 6f6d 6963 2e6c 6f61 6438  i32.atomic.load8
0000ae1: 5f75                                     _u  ; export name
0000ae3: 00                                        ; export kind
0000ae4: bb01                                      ; export func index
0000ae6: 13                                        ; string length
0000ae7: 6933 322e 6174 6f6d 6963 2e6c 6f61 6431  i32.atomic.load1
0000af7: 365f 75                                  6_u  ; export name
0000afa: 00                                        ; export kind
0000afb: bc01                                      ; export func index
0000afd: 12                                        ; string length
0000afe: 6936 342e 6174 6f6d 6963 2e6c 6f61 6438  i64.atomic.load8
0000b0e: 5f75                                     _u  ; export name
0000b10: 00                                        ; export kind
0000b11: bd01                                      ; export func index
0000b13: 13                                        ; string length
0000b14: 6936 342e 6174 6f6d 6963 2e6c 6f61 6431  i64.atomic.load1
0000b24: 365f 75                                  6_u  ; export name
0000b27: 00                                        ; export kind
0000b28: be01                                      ; export func index
0000b2a: 13                                        ; string length
0000b2b: 6936 342e 6174 6f6d 6963 2e6c 6f61 6433  i64.atomic.load3
0000b3b: 325f 75                                  2_u  ; export name
0000b3e: 00                                        ; export kind
0000b3f: bf01                                      ; export func index
0000b41: 10                                        ; string length
0000b42: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store  ; export name
0000b52: 00                                        ; export kind
0000b53: c001                                      ; export func index
0000b55: 10                                        ; string length
0000b56: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store  ; export name
0000b66: 00                                        ; export kind
0000b67: c101                                      ; export func index
0000b69: 11                                        ; string length
0000b6a: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store
0000b7a: 38                                       8  ; export name
0000b7b: 00                                        ; export kind
0000b7c: c201                                      ; export func index
0000b7e: 12                                        ; string length
0000b7f: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store
0000b8f: 3136                                     16  ; export name
0000b91: 00                                        ; export kind
0000b92: c301                                      ; export func index
0000b94: 11                                        ; string length
0000b95: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
0000ba5: 38                                       8  ; export name
0000ba6: 00                                        ; export kind
0000ba7: c401                                      ; export func index
0000ba9: 12                                        ; string length
0000baa: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
0000bba: 3136                                     16  ; export name
0000bbc: 00                                        ; export kind
0000bbd: c501                                      ; export func index
0000bbf: 12                                        ; string length
0000bc0: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
0000bd0: 3332                                     32  ; export name
0000bd2: 00                                        ; export kind
0000bd3: c601                                      ; export func index
0000bd5: 12                                        ; string length
0000bd6: 6933 322e 6174 6f6d 6963 2e72 6d77 2e61  i32.atomic.rmw.a
0000be6: 6464                                     dd  ; export name
0000be8: 00                                        ; export kind
0000be9: c701                                      ; export func index
0000beb: 12                                        ; string length
0000bec: 6936 342e 6174 6f6d 6963 2e72 6d77 2e61  i64.atomic.rmw.a
0000bfc: 6464                                     dd  ; export name
0000bfe: 00                                        ; export kind
0000bff: c801                                      ; export func index
0000c01: 15                                        ; string length
0000c02: 6933 322e 6174 6f6d 6963 2e72 6d77 385f  i32.atomic.rmw8_
0000c12: 752e 6164 64                             u.add  ; export name
0000c17: 00                                        ; export kind
0000c18: c901                                      ; export func index
0000c1a: 16                                        ; string length
0000c1b: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0000c2b: 5f75 2e61 6464                           _u.add  ; export name
0000c31: 00                                        ; export kind
0000c32: ca01                                      ; export func index
0000c34: 15                                        ; string length
0000c35: 6936 342e 6174 6f6d 6963 2e72 6d77 385f  i64.atomic.rmw8_
0000c45: 752e 6164 64                             u.add  ; export name
0000c4a: 00                                        ; export kind
0000c4b: cb01                                      ; export func index
0000c4d: 16                                        ; string length
0000c4e: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0000c5e: 5f75 2e61 6464                           _u.add  ; export name
0000c64: 00                                        ; export kind
0000c65: cc01                                      ; export func index
0000c67: 16                                        ; string length
0000c68: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0000c78: 5f75 2e61 6464                           _u.add  ; export name
0000c7e: 00                                        ; export kind
0000c7f: cd01                                      ; export func index
0000c81: 12                                        ; string length
0000c82: 6933 322e 6174 6f6d 6963 2e72 6d77 2e73  i32.atomic.rmw.s
0000c92: 7562                                     ub  ; export name
0000c94: 00                                        ; export kind
0000c95: ce01                                      ; export func index
0000c97: 12                                        ; string length
0000c98: 6936 342e 6174 6f6d 6963 2e72 6d77 2e73  i64.atomic.rmw.s
0000ca8: 7562                                     ub  ; export name
0000caa: 00                                        ; export kind
0000cab: cf01                                      ; export func index
0000cad: 15                                        ; string length
0000cae: 6933 322e 6174 6f6d 6963 2e72 6d77 385f  i32.atomic.rmw8_
0000cbe: 752e 7375 62                             u.sub  ; export name
0000cc3: 00                                        ; export kind
0000cc4: d001                                      ; export func index
0000cc6: 16                                        ; string length
0000cc7: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0000cd7: 5f75 2e73 7562                           _u.sub  ; export name
0000cdd: 00                                        ; export kind
0000cde: d101                                      ; export func index
0000ce0: 15                                        ; string length
0000ce1: 6936 342e 6174 6f6d 6963 2e72 6d77 385f  i64.atomic.rmw8_
0000cf1: 752e 7375 62                             u.sub  ; export name
0000cf6: 00                                        ; export kind
0000cf7: d201                                      ; export func index
0000cf9: 16                                        ; string length
0000cfa: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0000d0a: 5f75 2e73 7562                           _u.sub  ; export name
0000d10: 00                                        ; export kind
0000d11: d301                                      ; export func index
0000d13: 16                                        ; string length
0000d14: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0000d24: 5f75 2e73 7562                           _u.sub  ; export name
0000d2a: 00                                        ; export kind
0000d2b: d401                                      ; export func index
0000d2d: 12                                        ; string length
0000d2e: 6933 322e 6174 6f6d 6963 2e72 6d77 2e61  i32.atomic.rmw.a
0000d3e: 6e64                                     nd  ; export name
0000d40: 00                                        ; export kind
0000d41: d501                                      ; export func index
0000d43: 12                                        ; string length
0000d44: 6936 342e 6174 6f6d 6963 2e72 6d77 2e61  i64.atomic.rmw.a
0000d54: 6e64                                     nd  ; export name
0000d56: 00                                        ; export kind
0000d57: d601                                      ; export func index
0000d59: 15                                        ; string length
0000d5a: 6933 322e 6174 6f6d 6963 2e72 6d77 385f  i32.atomic.rmw8_
0000d6a: 752e 616e 64                             u.and  ; export name
0000d6f: 00                                        ; export kind
0000d70: d701                                      ; export func index
0000d72: 16                                        ; string length
0000d73: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0000d83: 5f75 2e61 6e64                           _u.and  ; export name
0000d89: 00                                        ; export kind
0000d8a: d801                                      ; export func index
0000d8c: 15                                        ; string length
0000d8d: 6936 342e 6174 6f6d 6963 2e72 6d77 385f  i64.atomic.rmw8_
0000d9d: 752e 616e 64                             u.and  ; export name
0000da2: 00                                        ; export kind
0000da3: d901                                      ; export func index
0000da5: 16                                        ; string length
0000da6: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0000db6: 5f75 2e61 6e64                           _u.and  ; export name
0000dbc: 00                                        ; export kind
0000dbd: da01                                      ; export func index
0000dbf: 16                                        ; string length
0000dc0: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0000dd0: 5f75 2e61 6e64                           _u.and  ; export name
0000dd6: 00                                        ; export kind
0000dd7: db01                                      ; export func index
0000dd9: 11                                        ; string length
0000dda: 6933 322e 6174 6f6d 6963 2e72 6d77 2e6f  i32.atomic.rmw.o
0000dea: 72                                       r  ; export name
0000deb: 00                                        ; export kind
0000dec: dc01                                      ; export func index
0000dee: 11                                        ; string length
0000def: 6936 342e 6174 6f6d 6963 2e72 6d77 2e6f  i64.atomic.rmw.o
0000dff: 72                                       r  ; export name
0000e00: 00                                        ; export kind
0000e01: dd01                                      ; export func index
0000e03: 14                                        ; string length
0000e04: 6933 322e 6174 6f6d 6963 2e72 6d77 385f  i32.atomic.rmw8_
0000e14: 752e 6f72                                u.or  ; export name
0000e18: 00                                        ; export kind
0000e19: de01                                      ; export func index
0000e1b: 15                                        ; string length
0000e1c: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0000e2c: 5f75 2e6f 72                             _u.or  ; export name
0000e31: 00                                        ; export kind
0000e32: df01                                      ; export func index
0000e34: 14                                        ; string length
0000e35: 6936 342e 6174 6f6d 6963 2e72 6d77 385f  i64.atomic.rmw8_
0000e45: 752e 6f72                                u.or  ; export name
0000e49: 00                                        ; export kind
0000e4a: e001                                      ; export func index
0000e4c: 15                                        ; string length
0000e4d: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0000e5d: 5f75 2e6f 72                             _u.or  ; export name
0000e62: 00                                        ; export kind
0000e63: e101                                      ; export func index
0000e65: 15                                        ; string length
0000e66: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0000e76: 5f75 2e6f 72                             _u.or  ; export name
0000e7b: 00                                        ; export kind
0000e7c: e201                                      ; export func index
0000e7e: 12                                        ; string length
0000e7f: 6933 322e 6174 6f6d 6963 2e72 6d77 2e78  i32.atomic.rmw.x
0000e8f: 6f72                                     or  ; export name
0000e91: 00                                        ; export kind
0000e92: e301                                      ; export func index
0000e94: 12                                        ; string length
0000e95: 6936 342e 6174 6f6d 6963 2e72 6d77 2e78  i64.atomic.rmw.x
0000ea5: 6f72                                     or  ; export name
0000ea7: 00                                        ; export kind
0000ea8: e401                                      ; export func index
0000eaa: 15                                        ; string length
0000eab: 6933 322e 6174 6f6d 6963 2e72 6d77 385f  i32.atomic.rmw8_
0000ebb: 752e 786f 72                             u.xor  ; export name
0000ec0: 00                                        ; export kind
0000ec1: e501                                      ; export func index
0000ec3: 16                                        ; string length
0000ec4: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0000ed4: 5f75 2e78 6f72                           _u.xor  ; export name
0000eda: 00                                        ; export kind
0000edb: e601                                      ; export func index
0000edd: 15                                        ; string length
0000ede: 6936 342e 6174 6f6d 6963 2e72 6d77 385f  i64.atomic.rmw8_
0000eee: 752e 786f 72                             u.xor  ; export name
0000ef3: 00                                        ; export kind
0000ef4: e701                                      ; export func index
0000ef6: 16                                        ; string length
0000ef7: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0000f07: 5f75 2e78 6f72                           _u.xor  ; export name
0000f0d: 00                                        ; export kind
0000f0e: e801                                      ; export func index
0000f10: 16                                        ; string length
0000f11: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0000f21: 5f75 2e78 6f72                           _u.xor  ; export name
0000f27: 00                                        ; export kind
0000f28: e901                                      ; export func index
0000f2a: 13                                        ; string length
0000f2b: 6933 322e 6174 6f6d 6963 2e72 6d77 2e78  i32.atomic.rmw.x
0000f3b: 6368 67                                  chg  ; export name
0000f3e: 00                                        ; export kind
0000f3f: ea01                                      ; export func index
0000f41: 13                                        ; string length
0000f42: 6936 342e 6174 6f6d 6963 2e72 6d77 2e78  i64.atomic.rmw.x
0000f52: 6368 67                                  chg  ; export name
0000f55: 00                                        ; export kind
0000f56: eb01                                      ; export func index
0000f58: 16                                        ; string length
0000f59: 6933 322e 6174 6f6d 6963 2e72 6d77 385f  i32.atomic.rmw8_
0000f69: 752e 7863 6867                           u.xchg  ; export name
0000f6f: 00                                        ; export kind
0000f70: ec01                                      ; export func index
0000f72: 17                                        ; string length
0000f73: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0000f83: 5f75 2e78 6368 67                        _u.xchg  ; export name
0000f8a: 00                                        ; export kind
0000f8b: ed01                                      ; export func index
0000f8d: 16                                        ; string length
0000f8e: 6936 342e 6174 6f6d 6963 2e72 6d77 385f  i64.atomic.rmw8_
0000f9e: 752e 7863 6867                           u.xchg  ; export name
0000fa4: 00                                        ; export kind
0000fa5: ee01                                      ; export func index
0000fa7: 17                                        ; string length
0000fa8: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0000fb8: 5f75 2e78 6368 67                        _u.xchg  ; export name
0000fbf: 00                                        ; export kind
0000fc0: ef01                                      ; export func index
0000fc2: 17                                        ; string length
0000fc3: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0000fd3: 5f75 2e78 6368 67                        _u.xchg  ; export name
0000fda: 00                                        ; export kind
0000fdb: f001                                      ; export func index
0000fdd: 16                                        ; string length
0000fde: 6933 322e 6174 6f6d 6963 2e72 6d77 2e63  i32.atomic.rmw.c
0000fee: 6d70 7863 6867                           mpxchg  ; export name
0000ff4: 00                                        ; export kind
0000ff5: f101                                      ; export func index
0000ff7: 16                                        ; string length
0000ff8: 6936 342e 6174 6f6d 6963 2e72 6d77 2e63  i64.atomic.rmw.c
0001008: 6d70 7863 6867                           mpxchg  ; export name
000100e: 00                                        ; export kind
000100f: f201                                      ; export func index
0001011: 19                                        ; string length
0001012: 6933 322e 6174 6f6d 6963 2e72 6d77 385f  i32.atomic.rmw8_
0001022: 752e 636d 7078 6368 67                   u.cmpxchg  ; export name
000102b: 00                                        ; export kind
000102c: f301                                      ; export func index
000102e: 1a                                        ; string length
000102f: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
000103f: 5f75 2e63 6d70 7863 6867                 _u.cmpxchg  ; export name
0001049: 00                                        ; export kind
000104a: f401                                      ; export func index
000104c: 19                                        ; string length
000104d: 6936 342e 6174 6f6d 6963 2e72 6d77 385f  i64.atomic.rmw8_
000105d: 752e 636d 7078 6368 67                   u.cmpxchg  ; export name
0001066: 00                                        ; export kind
0001067: f501                                      ; export func index
0001069: 1a                                        ; string length
000106a: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
000107a: 5f75 2e63 6d70 7863 6867                 _u.cmpxchg  ; export name
0001084: 00                                        ; export kind
0001085: f601                                      ; export func index
0001087: 1a                                        ; string length
0001088: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001098: 5f75 2e63 6d70 7863 6867                 _u.cmpxchg  ; export name
00010a2: 00                                        ; export kind
00010a3: f701                                      ; export func index
; move data: [139, 10a5) -> [13a, 10a6)
0000138: ec1e                                      ; FIXUP section size
; section "Elem" (9)
00010a6: 09                                        ; section code
00010a7: 00                                        ; section size (guess)
00010a8: 01                                        ; num elem segments
; elem segment header 0
00010a9: 00                                        ; table index
00010aa: 41                                        ; i32.const
00010ab: 00                                        ; i32 literal
00010ac: 0b                                        ; end
00010ad: 02                                        ; num function indices
00010ae: 01                                        ; function index
00010af: 01                                        ; function index
00010a7: 08                                        ; FIXUP section size
; section "Code" (10)
00010b0: 0a                                        ; section code
00010b1: 00                                        ; section size (guess)
00010b2: f701                                      ; num functions
; function body 0
00010b4: 00                                        ; func body size (guess)
00010b5: 00                                        ; local decl count
00010b6: 0b                                        ; end
00010b4: 02                                        ; FIXUP func body size
; function body 1
00010b7: 00                                        ; func body size (guess)
00010b8: 00                                        ; local decl count
00010b9: 00                                        ; unreachable
00010ba: 0b                                        ; end
00010b7: 03                                        ; FIXUP func body size
; function body 2
00010bb: 00                                        ; func body size (guess)
00010bc: 00                                        ; local decl count
00010bd: 0c                                        ; br
00010be: 00                                        ; break depth
00010bf: 0b                                        ; end
00010bb: 04                                        ; FIXUP func body size
; function body 3
00010c0: 00                                        ; func body size (guess)
00010c1: 00                                        ; local decl count
00010c2: 41                                        ; i32.const
00010c3: 01                                        ; i32 literal
00010c4: 0e                                        ; br_table
00010c5: 00                                        ; num targets
00010c6: 00                                        ; break depth for default
00010c7: 0b                                        ; end
00010c0: 07                                        ; FIXUP func body size
; function body 4
00010c8: 00                                        ; func body size (guess)
00010c9: 00                                        ; local decl count
00010ca: 0f                                        ; return
00010cb: 0b                                        ; end
00010c8: 03                                        ; FIXUP func body size
; function body 5
00010cc: 00                                        ; func body size (guess)
00010cd: 00                                        ; local decl count
00010ce: 10                                        ; call
00010cf: 01                                        ; function index
00010d0: 0b                                        ; end
00010cc: 04                                        ; FIXUP func body size
; function body 6
00010d1: 00                                        ; func body size (guess)
00010d2: 00                                        ; local decl count
00010d3: 41                                        ; i32.const
00010d4: 01                                        ; i32 literal
00010d5: 11                                        ; call_indirect
00010d6: 00                                        ; signature index
00010d7: 00                                        ; call_indirect reserved
00010d8: 0b                                        ; end
00010d1: 07                                        ; FIXUP func body size
; function body 7
00010d9: 00                                        ; func body size (guess)
00010da: 00                                        ; local decl count
00010db: 41                                        ; i32.const
00010dc: 01                                        ; i32 literal
00010dd: 1a                                        ; drop
00010de: 0b                                        ; end
00010d9: 05                                        ; FIXUP func body size
; function body 8
00010df: 00                                        ; func body size (guess)
00010e0: 00                                        ; local decl count
00010e1: 41                                        ; i32.const
00010e2: 01                                        ; i32 literal
00010e3: 41                                        ; i32.const
00010e4: 02                                        ; i32 literal
00010e5: 41                                        ; i32.const
00010e6: 03                                        ; i32 literal
00010e7: 1b                                        ; select
00010e8: 1a                                        ; drop
00010e9: 0b                                        ; end
00010df: 0a                                        ; FIXUP func body size
; function body 9
00010ea: 00                                        ; func body size (guess)
00010eb: 01                                        ; local decl count
00010ec: 01                                        ; local type count
00010ed: 7f                                        ; i32
00010ee: 20                                        ; get_local
00010ef: 00                                        ; local index
00010f0: 1a                                        ; drop
00010f1: 0b                                        ; end
00010ea: 07                                        ; FIXUP func body size
; function body 10
00010f2: 00                                        ; func body size (guess)
00010f3: 01                                        ; local decl count
00010f4: 01                                        ; local type count
00010f5: 7f                                        ; i32
00010f6: 41                                        ; i32.const
00010f7: 01                                        ; i32 literal
00010f8: 21                                        ; set_local
00010f9: 00                                        ; local index
00010fa: 0b                                        ; end
00010f2: 08                                        ; FIXUP func body size
; function body 11
00010fb: 00                                        ; func body size (guess)
00010fc: 01                                        ; local decl count
00010fd: 01                                        ; local type count
00010fe: 7f                                        ; i32
00010ff: 41                                        ; i32.const
0001100: 01                                        ; i32 literal
0001101: 22                                        ; tee_local
0001102: 00                                        ; local index
0001103: 1a                                        ; drop
0001104: 0b                                        ; end
00010fb: 09                                        ; FIXUP func body size
; function body 12
0001105: 00                                        ; func body size (guess)
0001106: 00                                        ; local decl count
0001107: 23                                        ; get_global
0001108: 00                                        ; global index
0001109: 1a                                        ; drop
000110a: 0b                                        ; end
0001105: 05                                        ; FIXUP func body size
; function body 13
000110b: 00                                        ; func body size (guess)
000110c: 00                                        ; local decl count
000110d: 41                                        ; i32.const
000110e: 01                                        ; i32 literal
000110f: 24                                        ; set_global
0001110: 00                                        ; global index
0001111: 0b                                        ; end
000110b: 06                                        ; FIXUP func body size
; function body 14
0001112: 00                                        ; func body size (guess)
0001113: 00                                        ; local decl count
0001114: 41                                        ; i32.const
0001115: 01                                        ; i32 literal
0001116: 28                                        ; i32.load
0001117: 02                                        ; alignment
0001118: 02                                        ; load offset
0001119: 1a                                        ; drop
000111a: 0b                                        ; end
0001112: 08                                        ; FIXUP func body size
; function body 15
000111b: 00                                        ; func body size (guess)
000111c: 00                                        ; local decl count
000111d: 41                                        ; i32.const
000111e: 01                                        ; i32 literal
000111f: 29                                        ; i64.load
0001120: 03                                        ; alignment
0001121: 02                                        ; load offset
0001122: 1a                                        ; drop
0001123: 0b                                        ; end
000111b: 08                                        ; FIXUP func body size
; function body 16
0001124: 00                                        ; func body size (guess)
0001125: 00                                        ; local decl count
0001126: 41                                        ; i32.const
0001127: 01                                        ; i32 literal
0001128: 2a                                        ; f32.load
0001129: 02                                        ; alignment
000112a: 02                                        ; load offset
000112b: 1a                                        ; drop
000112c: 0b                                        ; end
0001124: 08                                        ; FIXUP func body size
; function body 17
000112d: 00                                        ; func body size (guess)
000112e: 00                                        ; local decl count
000112f: 41                                        ; i32.const
0001130: 01                                        ; i32 literal
0001131: 2b                                        ; f64.load
0001132: 03                                        ; alignment
0001133: 02                                        ; load offset
0001134: 1a                                        ; drop
0001135: 0b                                        ; end
000112d: 08                                        ; FIXUP func body size
; function body 18
0001136: 00                                        ; func body size (guess)
0001137: 00                                        ; local decl count
0001138: 41                                        ; i32.const
0001139: 01                                        ; i32 literal
000113a: 2c                                        ; i32.load8_s
000113b: 00                                        ; alignment
000113c: 02                                        ; load offset
000113d: 1a                                        ; drop
000113e: 0b                                        ; end
0001136: 08                                        ; FIXUP func body size
; function body 19
000113f: 00                                        ; func body size (guess)
0001140: 00                                        ; local decl count
0001141: 41                                        ; i32.const
0001142: 01                                        ; i32 literal
0001143: 2d                                        ; i32.load8_u
0001144: 00                                        ; alignment
0001145: 02                                        ; load offset
0001146: 1a                                        ; drop
0001147: 0b                                        ; end
000113f: 08                                        ; FIXUP func body size
; function body 20
0001148: 00                                        ; func body size (guess)
0001149: 00                                        ; local decl count
000114a: 41                                        ; i32.const
000114b: 01                                        ; i32 literal
000114c: 2e                                        ; i32.load16_s
000114d: 01                                        ; alignment
000114e: 02                                        ; load offset
000114f: 1a                                        ; drop
0001150: 0b                                        ; end
0001148: 08                                        ; FIXUP func body size
; function body 21
0001151: 00                                        ; func body size (guess)
0001152: 00                                        ; local decl count
0001153: 41                                        ; i32.const
0001154: 01                                        ; i32 literal
0001155: 2f                                        ; i32.load16_u
0001156: 01                                        ; alignment
0001157: 02                                        ; load offset
0001158: 1a                                        ; drop
0001159: 0b                                        ; end
0001151: 08                                        ; FIXUP func body size
; function body 22
000115a: 00                                        ; func body size (guess)
000115b: 00                                        ; local decl count
000115c: 41                                        ; i32.const
000115d: 01                                        ; i32 literal
000115e: 30                                        ; i64.load8_s
000115f: 00                                        ; alignment
0001160: 02                                        ; load offset
0001161: 1a                                        ; drop
0001162: 0b                                        ; end
000115a: 08                                        ; FIXUP func body size
; function body 23
0001163: 00                                        ; func body size (guess)
0001164: 00                                        ; local decl count
0001165: 41                                        ; i32.const
0001166: 01                                        ; i32 literal
0001167: 31                                        ; i64.load8_u
0001168: 00                                        ; alignment
0001169: 02                                        ; load offset
000116a: 1a                                        ; drop
000116b: 0b                                        ; end
0001163: 08                                        ; FIXUP func body size
; function body 24
000116c: 00                                        ; func body size (guess)
000116d: 00                                        ; local decl count
000116e: 41                                        ; i32.const
000116f: 01                                        ; i32 literal
0001170: 32                                        ; i64.load16_s
0001171: 01                                        ; alignment
0001172: 02                                        ; load offset
0001173: 1a                                        ; drop
0001174: 0b                                        ; end
000116c: 08                                        ; FIXUP func body size
; function body 25
0001175: 00                                        ; func body size (guess)
0001176: 00                                        ; local decl count
0001177: 41                                        ; i32.const
0001178: 01                                        ; i32 literal
0001179: 33                                        ; i64.load16_u
000117a: 01                                        ; alignment
000117b: 02                                        ; load offset
000117c: 1a                                        ; drop
000117d: 0b                                        ; end
0001175: 08                                        ; FIXUP func body size
; function body 26
000117e: 00                                        ; func body size (guess)
000117f: 00                                        ; local decl count
0001180: 41                                        ; i32.const
0001181: 01                                        ; i32 literal
0001182: 34                                        ; i64.load32_s
0001183: 02                                        ; alignment
0001184: 02                                        ; load offset
0001185: 1a                                        ; drop
0001186: 0b                                        ; end
000117e: 08                                        ; FIXUP func body size
; function body 27
0001187: 00                                        ; func body size (guess)
0001188: 00                                        ; local decl count
0001189: 41                                        ; i32.const
000118a: 01                                        ; i32 literal
000118b: 35                                        ; i64.load32_u
000118c: 02                                        ; alignment
000118d: 02                                        ; load offset
000118e: 1a                                        ; drop
000118f: 0b                                        ; end
0001187: 08                                        ; FIXUP func body size
; function body 28
0001190: 00                                        ; func body size (guess)
0001191: 00                                        ; local decl count
0001192: 41                                        ; i32.const
0001193: 01                                        ; i32 literal
0001194: 41                                        ; i32.const
0001195: 02                                        ; i32 literal
0001196: 36                                        ; i32.store
0001197: 02                                        ; alignment
0001198: 02                                        ; store offset
0001199: 0b                                        ; end
0001190: 09                                        ; FIXUP func body size
; function body 29
000119a: 00                                        ; func body size (guess)
000119b: 00                                        ; local decl count
000119c: 41                                        ; i32.const
000119d: 01                                        ; i32 literal
000119e: 42                                        ; i64.const
000119f: 02                                        ; i64 literal
00011a0: 37                                        ; i64.store
00011a1: 03                                        ; alignment
00011a2: 02                                        ; store offset
00011a3: 0b                                        ; end
000119a: 09                                        ; FIXUP func body size
; function body 30
00011a4: 00                                        ; func body size (guess)
00011a5: 00                                        ; local decl count
00011a6: 41                                        ; i32.const
00011a7: 01                                        ; i32 literal
00011a8: 43                                        ; f32.const
00011a9: 0000 0040                                 ; f32 literal
00011ad: 38                                        ; f32.store
00011ae: 02                                        ; alignment
00011af: 02                                        ; store offset
00011b0: 0b                                        ; end
00011a4: 0c                                        ; FIXUP func body size
; function body 31
00011b1: 00                                        ; func body size (guess)
00011b2: 00                                        ; local decl count
00011b3: 41                                        ; i32.const
00011b4: 01                                        ; i32 literal
00011b5: 44                                        ; f64.const
00011b6: 0000 0000 0000 0040                       ; f64 literal
00011be: 39                                        ; f64.store
00011bf: 03                                        ; alignment
00011c0: 02                                        ; store offset
00011c1: 0b                                        ; end
00011b1: 10                                        ; FIXUP func body size
; function body 32
00011c2: 00                                        ; func body size (guess)
00011c3: 00                                        ; local decl count
00011c4: 41                                        ; i32.const
00011c5: 01                                        ; i32 literal
00011c6: 41                                        ; i32.const
00011c7: 02                                        ; i32 literal
00011c8: 3a                                        ; i32.store8
00011c9: 00                                        ; alignment
00011ca: 02                                        ; store offset
00011cb: 0b                                        ; end
00011c2: 09                                        ; FIXUP func body size
; function body 33
00011cc: 00                                        ; func body size (guess)
00011cd: 00                                        ; local decl count
00011ce: 41                                        ; i32.const
00011cf: 01                                        ; i32 literal
00011d0: 41                                        ; i32.const
00011d1: 02                                        ; i32 literal
00011d2: 3b                                        ; i32.store16
00011d3: 01                                        ; alignment
00011d4: 02                                        ; store offset
00011d5: 0b                                        ; end
00011cc: 09                                        ; FIXUP func body size
; function body 34
00011d6: 00                                        ; func body size (guess)
00011d7: 00                                        ; local decl count
00011d8: 41                                        ; i32.const
00011d9: 01                                        ; i32 literal
00011da: 42                                        ; i64.const
00011db: 02                                        ; i64 literal
00011dc: 3c                                        ; i64.store8
00011dd: 00                                        ; alignment
00011de: 02                                        ; store offset
00011df: 0b                                        ; end
00011d6: 09                                        ; FIXUP func body size
; function body 35
00011e0: 00                                        ; func body size (guess)
00011e1: 00                                        ; local decl count
00011e2: 41                                        ; i32.const
00011e3: 01                                        ; i32 literal
00011e4: 42                                        ; i64.const
00011e5: 02                                        ; i64 literal
00011e6: 3d                                        ; i64.store16
00011e7: 01                                        ; alignment
00011e8: 02                                        ; store offset
00011e9: 0b                                        ; end
00011e0: 09                                        ; FIXUP func body size
; function body 36
00011ea: 00                                        ; func body size (guess)
00011eb: 00                                        ; local decl count
00011ec: 41                                        ; i32.const
00011ed: 01                                        ; i32 literal
00011ee: 42                                        ; i64.const
00011ef: 02                                        ; i64 literal
00011f0: 3e                                        ; i64.store32
00011f1: 02                                        ; alignment
00011f2: 02                                        ; store offset
00011f3: 0b                                        ; end
00011ea: 09                                        ; FIXUP func body size
; function body 37
00011f4: 00                                        ; func body size (guess)
00011f5: 00                                        ; local decl count
00011f6: 3f                                        ; current_memory
00011f7: 00                                        ; current_memory reserved
00011f8: 1a                                        ; drop
00011f9: 0b                                        ; end
00011f4: 05                                        ; FIXUP func body size
; function body 38
00011fa: 00                                        ; func body size (guess)
00011fb: 00                                        ; local decl count
00011fc: 41                                        ; i32.const
00011fd: 01                                        ; i32 literal
00011fe: 40                                        ; grow_memory
00011ff: 00                                        ; grow_memory reserved
0001200: 1a                                        ; drop
0001201: 0b                                        ; end
00011fa: 07                                        ; FIXUP func body size
; function body 39
0001202: 00                                        ; func body size (guess)
0001203: 00                                        ; local decl count
0001204: 41                                        ; i32.const
0001205: 01                                        ; i32 literal
0001206: 1a                                        ; drop
0001207: 0b                                        ; end
0001202: 05                                        ; FIXUP func body size
; function body 40
0001208: 00                                        ; func body size (guess)
0001209: 00                                        ; local decl count
000120a: 42                                        ; i64.const
000120b: 01                                        ; i64 literal
000120c: 1a                                        ; drop
000120d: 0b                                        ; end
0001208: 05                                        ; FIXUP func body size
; function body 41
000120e: 00                                        ; func body size (guess)
000120f: 00                                        ; local decl count
0001210: 43                                        ; f32.const
0001211: 0000 803f                                 ; f32 literal
0001215: 1a                                        ; drop
0001216: 0b                                        ; end
000120e: 08                                        ; FIXUP func body size
; function body 42
0001217: 00                                        ; func body size (guess)
0001218: 00                                        ; local decl count
0001219: 44                                        ; f64.const
000121a: 0000 0000 0000 f03f                       ; f64 literal
0001222: 1a                                        ; drop
0001223: 0b                                        ; end
0001217: 0c                                        ; FIXUP func body size
; function body 43
0001224: 00                                        ; func body size (guess)
0001225: 00                                        ; local decl count
0001226: 41                                        ; i32.const
0001227: 01                                        ; i32 literal
0001228: 45                                        ; i32.eqz
0001229: 1a                                        ; drop
000122a: 0b                                        ; end
0001224: 06                                        ; FIXUP func body size
; function body 44
000122b: 00                                        ; func body size (guess)
000122c: 00                                        ; local decl count
000122d: 41                                        ; i32.const
000122e: 01                                        ; i32 literal
000122f: 41                                        ; i32.const
0001230: 02                                        ; i32 literal
0001231: 46                                        ; i32.eq
0001232: 1a                                        ; drop
0001233: 0b                                        ; end
000122b: 08                                        ; FIXUP func body size
; function body 45
0001234: 00                                        ; func body size (guess)
0001235: 00                                        ; local decl count
0001236: 41                                        ; i32.const
0001237: 01                                        ; i32 literal
0001238: 41                                        ; i32.const
0001239: 02                                        ; i32 literal
000123a: 47                                        ; i32.ne
000123b: 1a                                        ; drop
000123c: 0b                                        ; end
0001234: 08                                        ; FIXUP func body size
; function body 46
000123d: 00                                        ; func body size (guess)
000123e: 00                                        ; local decl count
000123f: 41                                        ; i32.const
0001240: 01                                        ; i32 literal
0001241: 41                                        ; i32.const
0001242: 02                                        ; i32 literal
0001243: 48                                        ; i32.lt_s
0001244: 1a                                        ; drop
0001245: 0b                                        ; end
000123d: 08                                        ; FIXUP func body size
; function body 47
0001246: 00                                        ; func body size (guess)
0001247: 00                                        ; local decl count
0001248: 41                                        ; i32.const
0001249: 01                                        ; i32 literal
000124a: 41                                        ; i32.const
000124b: 02                                        ; i32 literal
000124c: 49                                        ; i32.lt_u
000124d: 1a                                        ; drop
000124e: 0b                                        ; end
0001246: 08                                        ; FIXUP func body size
; function body 48
000124f: 00                                        ; func body size (guess)
0001250: 00                                        ; local decl count
0001251: 41                                        ; i32.const
0001252: 01                                        ; i32 literal
0001253: 41                                        ; i32.const
0001254: 02                                        ; i32 literal
0001255: 4a                                        ; i32.gt_s
0001256: 1a                                        ; drop
0001257: 0b                                        ; end
000124f: 08                                        ; FIXUP func body size
; function body 49
0001258: 00                                        ; func body size (guess)
0001259: 00                                        ; local decl count
000125a: 41                                        ; i32.const
000125b: 01                                        ; i32 literal
000125c: 41                                        ; i32.const
000125d: 02                                        ; i32 literal
000125e: 4b                                        ; i32.gt_u
000125f: 1a                                        ; drop
0001260: 0b                                        ; end
0001258: 08                                        ; FIXUP func body size
; function body 50
0001261: 00                                        ; func body size (guess)
0001262: 00                                        ; local decl count
0001263: 41                                        ; i32.const
0001264: 01                                        ; i32 literal
0001265: 41                                        ; i32.const
0001266: 02                                        ; i32 literal
0001267: 4c                                        ; i32.le_s
0001268: 1a                                        ; drop
0001269: 0b                                        ; end
0001261: 08                                        ; FIXUP func body size
; function body 51
000126a: 00                                        ; func body size (guess)
000126b: 00                                        ; local decl count
000126c: 41                                        ; i32.const
000126d: 01                                        ; i32 literal
000126e: 41                                        ; i32.const
000126f: 02                                        ; i32 literal
0001270: 4d                                        ; i32.le_u
0001271: 1a                                        ; drop
0001272: 0b                                        ; end
000126a: 08                                        ; FIXUP func body size
; function body 52
0001273: 00                                        ; func body size (guess)
0001274: 00                                        ; local decl count
0001275: 41                                        ; i32.const
0001276: 01                                        ; i32 literal
0001277: 41                                        ; i32.const
0001278: 02                                        ; i32 literal
0001279: 4e                                        ; i32.ge_s
000127a: 1a                                        ; drop
000127b: 0b                                        ; end
0001273: 08                                        ; FIXUP func body size
; function body 53
000127c: 00                                        ; func body size (guess)
000127d: 00                                        ; local decl count
000127e: 41                                        ; i32.const
000127f: 01                                        ; i32 literal
0001280: 41                                        ; i32.const
0001281: 02                                        ; i32 literal
0001282: 4f                                        ; i32.ge_u
0001283: 1a                                        ; drop
0001284: 0b                                        ; end
000127c: 08                                        ; FIXUP func body size
; function body 54
0001285: 00                                        ; func body size (guess)
0001286: 00                                        ; local decl count
0001287: 42                                        ; i64.const
0001288: 01                                        ; i64 literal
0001289: 50                                        ; i64.eqz
000128a: 1a                                        ; drop
000128b: 0b                                        ; end
0001285: 06                                        ; FIXUP func body size
; function body 55
000128c: 00                                        ; func body size (guess)
000128d: 00                                        ; local decl count
000128e: 42                                        ; i64.const
000128f: 01                                        ; i64 literal
0001290: 42                                        ; i64.const
0001291: 02                                        ; i64 literal
0001292: 51                                        ; i64.eq
0001293: 1a                                        ; drop
0001294: 0b                                        ; end
000128c: 08                                        ; FIXUP func body size
; function body 56
0001295: 00                                        ; func body size (guess)
0001296: 00                                        ; local decl count
0001297: 42                                        ; i64.const
0001298: 01                                        ; i64 literal
0001299: 42                                        ; i64.const
000129a: 02                                        ; i64 literal
000129b: 52                                        ; i64.ne
000129c: 1a                                        ; drop
000129d: 0b                                        ; end
0001295: 08                                        ; FIXUP func body size
; function body 57
000129e: 00                                        ; func body size (guess)
000129f: 00                                        ; local decl count
00012a0: 42                                        ; i64.const
00012a1: 01                                        ; i64 literal
00012a2: 42                                        ; i64.const
00012a3: 02                                        ; i64 literal
00012a4: 53                                        ; i64.lt_s
00012a5: 1a                                        ; drop
00012a6: 0b                                        ; end
000129e: 08                                        ; FIXUP func body size
; function body 58
00012a7: 00                                        ; func body size (guess)
00012a8: 00                                        ; local decl count
00012a9: 42                                        ; i64.const
00012aa: 01                                        ; i64 literal
00012ab: 42                                        ; i64.const
00012ac: 02                                        ; i64 literal
00012ad: 54                                        ; i64.lt_u
00012ae: 1a                                        ; drop
00012af: 0b                                        ; end
00012a7: 08                                        ; FIXUP func body size
; function body 59
00012b0: 00                                        ; func body size (guess)
00012b1: 00                                        ; local decl count
00012b2: 42                                        ; i64.const
00012b3: 01                                        ; i64 literal
00012b4: 42                                        ; i64.const
00012b5: 02                                        ; i64 literal
00012b6: 55                                        ; i64.gt_s
00012b7: 1a                                        ; drop
00012b8: 0b                                        ; end
00012b0: 08                                        ; FIXUP func body size
; function body 60
00012b9: 00                                        ; func body size (guess)
00012ba: 00                                        ; local decl count
00012bb: 42                                        ; i64.const
00012bc: 01                                        ; i64 literal
00012bd: 42                                        ; i64.const
00012be: 02                                        ; i64 literal
00012bf: 56                                        ; i64.gt_u
00012c0: 1a                                        ; drop
00012c1: 0b                                        ; end
00012b9: 08                                        ; FIXUP func body size
; function body 61
00012c2: 00                                        ; func body size (guess)
00012c3: 00                                        ; local decl count
00012c4: 42                                        ; i64.const
00012c5: 01                                        ; i64 literal
00012c6: 42                                        ; i64.const
00012c7: 02                                        ; i64 literal
00012c8: 57                                        ; i64.le_s
00012c9: 1a                                        ; drop
00012ca: 0b                                        ; end
00012c2: 08                                        ; FIXUP func body size
; function body 62
00012cb: 00                                        ; func body size (guess)
00012cc: 00                                        ; local decl count
00012cd: 42                                        ; i64.const
00012ce: 01                                        ; i64 literal
00012cf: 42                                        ; i64.const
00012d0: 02                                        ; i64 literal
00012d1: 58                                        ; i64.le_u
00012d2: 1a                                        ; drop
00012d3: 0b                                        ; end
00012cb: 08                                        ; FIXUP func body size
; function body 63
00012d4: 00                                        ; func body size (guess)
00012d5: 00                                        ; local decl count
00012d6: 42                                        ; i64.const
00012d7: 01                                        ; i64 literal
00012d8: 42                                        ; i64.const
00012d9: 02                                        ; i64 literal
00012da: 59                                        ; i64.ge_s
00012db: 1a                                        ; drop
00012dc: 0b                                        ; end
00012d4: 08                                        ; FIXUP func body size
; function body 64
00012dd: 00                                        ; func body size (guess)
00012de: 00                                        ; local decl count
00012df: 42                                        ; i64.const
00012e0: 01                                        ; i64 literal
00012e1: 42                                        ; i64.const
00012e2: 02                                        ; i64 literal
00012e3: 5a                                        ; i64.ge_u
00012e4: 1a                                        ; drop
00012e5: 0b                                        ; end
00012dd: 08                                        ; FIXUP func body size
; function body 65
00012e6: 00                                        ; func body size (guess)
00012e7: 00                                        ; local decl count
00012e8: 43                                        ; f32.const
00012e9: 0000 803f                                 ; f32 literal
00012ed: 43                                        ; f32.const
00012ee: 0000 0040                                 ; f32 literal
00012f2: 5b                                        ; f32.eq
00012f3: 1a                                        ; drop
00012f4: 0b                                        ; end
00012e6: 0e                                        ; FIXUP func body size
; function body 66
00012f5: 00                                        ; func body size (guess)
00012f6: 00                                        ; local decl count
00012f7: 43                                        ; f32.const
00012f8: 0000 803f                                 ; f32 literal
00012fc: 43                                        ; f32.const
00012fd: 0000 0040                                 ; f32 literal
0001301: 5c                                        ; f32.ne
0001302: 1a                                        ; drop
0001303: 0b                                        ; end
00012f5: 0e                                        ; FIXUP func body size
; function body 67
0001304: 00                                        ; func body size (guess)
0001305: 00                                        ; local decl count
0001306: 43                                        ; f32.const
0001307: 0000 803f                                 ; f32 literal
000130b: 43                                        ; f32.const
000130c: 0000 0040                                 ; f32 literal
0001310: 5d                                        ; f32.lt
0001311: 1a                                        ; drop
0001312: 0b                                        ; end
0001304: 0e                                        ; FIXUP func body size
; function body 68
0001313: 00                                        ; func body size (guess)
0001314: 00                                        ; local decl count
0001315: 43                                        ; f32.const
0001316: 0000 803f                                 ; f32 literal
000131a: 43                                        ; f32.const
000131b: 0000 0040                                 ; f32 literal
000131f: 5e                                        ; f32.gt
0001320: 1a                                        ; drop
0001321: 0b                                        ; end
0001313: 0e                                        ; FIXUP func body size
; function body 69
0001322: 00                                        ; func body size (guess)
0001323: 00                                        ; local decl count
0001324: 43                                        ; f32.const
0001325: 0000 803f                                 ; f32 literal
0001329: 43                                        ; f32.const
000132a: 0000 0040                                 ; f32 literal
000132e: 5f                                        ; f32.le
000132f: 1a                                        ; drop
0001330: 0b                                        ; end
0001322: 0e                                        ; FIXUP func body size
; function body 70
0001331: 00                                        ; func body size (guess)
0001332: 00                                        ; local decl count
0001333: 43                                        ; f32.const
0001334: 0000 803f                                 ; f32 literal
0001338: 43                                        ; f32.const
0001339: 0000 0040                                 ; f32 literal
000133d: 60                                        ; f32.ge
000133e: 1a                                        ; drop
000133f: 0b                                        ; end
0001331: 0e                                        ; FIXUP func body size
; function body 71
0001340: 00                                        ; func body size (guess)
0001341: 00                                        ; local decl count
0001342: 44                                        ; f64.const
0001343: 0000 0000 0000 f03f                       ; f64 literal
000134b: 44                                        ; f64.const
000134c: 0000 0000 0000 0040                       ; f64 literal
0001354: 61                                        ; f64.eq
0001355: 1a                                        ; drop
0001356: 0b                                        ; end
0001340: 16                                        ; FIXUP func body size
; function body 72
0001357: 00                                        ; func body size (guess)
0001358: 00                                        ; local decl count
0001359: 44                                        ; f64.const
000135a: 0000 0000 0000 f03f                       ; f64 literal
0001362: 44                                        ; f64.const
0001363: 0000 0000 0000 0040                       ; f64 literal
000136b: 62                                        ; f64.ne
000136c: 1a                                        ; drop
000136d: 0b                                        ; end
0001357: 16                                        ; FIXUP func body size
; function body 73
000136e: 00                                        ; func body size (guess)
000136f: 00                                        ; local decl count
0001370: 44                                        ; f64.const
0001371: 0000 0000 0000 f03f                       ; f64 literal
0001379: 44                                        ; f64.const
000137a: 0000 0000 0000 0040                       ; f64 literal
0001382: 63                                        ; f64.lt
0001383: 1a                                        ; drop
0001384: 0b                                        ; end
000136e: 16                                        ; FIXUP func body size
; function body 74
0001385: 00                                        ; func body size (guess)
0001386: 00                                        ; local decl count
0001387: 44                                        ; f64.const
0001388: 0000 0000 0000 f03f                       ; f64 literal
0001390: 44                                        ; f64.const
0001391: 0000 0000 0000 0040                       ; f64 literal
0001399: 64                                        ; f64.gt
000139a: 1a                                        ; drop
000139b: 0b                                        ; end
0001385: 16                                        ; FIXUP func body size
; function body 75
000139c: 00                                        ; func body size (guess)
000139d: 00                                        ; local decl count
000139e: 44                                        ; f64.const
000139f: 0000 0000 0000 f03f                       ; f64 literal
00013a7: 44                                        ; f64.const
00013a8: 0000 0000 0000 0040                       ; f64 literal
00013b0: 65                                        ; f64.le
00013b1: 1a                                        ; drop
00013b2: 0b                                        ; end
000139c: 16                                        ; FIXUP func body size
; function body 76
00013b3: 00                                        ; func body size (guess)
00013b4: 00                                        ; local decl count
00013b5: 44                                        ; f64.const
00013b6: 0000 0000 0000 f03f                       ; f64 literal
00013be: 44                                        ; f64.const
00013bf: 0000 0000 0000 0040                       ; f64 literal
00013c7: 66                                        ; f64.ge
00013c8: 1a                                        ; drop
00013c9: 0b                                        ; end
00013b3: 16                                        ; FIXUP func body size
; function body 77
00013ca: 00                                        ; func body size (guess)
00013cb: 00                                        ; local decl count
00013cc: 41                                        ; i32.const
00013cd: 01                                        ; i32 literal
00013ce: 67                                        ; i32.clz
00013cf: 1a                                        ; drop
00013d0: 0b                                        ; end
00013ca: 06                                        ; FIXUP func body size
; function body 78
00013d1: 00                                        ; func body size (guess)
00013d2: 00                                        ; local decl count
00013d3: 41                                        ; i32.const
00013d4: 01                                        ; i32 literal
00013d5: 68                                        ; i32.ctz
00013d6: 1a                                        ; drop
00013d7: 0b                                        ; end
00013d1: 06                                        ; FIXUP func body size
; function body 79
00013d8: 00                                        ; func body size (guess)
00013d9: 00                                        ; local decl count
00013da: 41                                        ; i32.const
00013db: 01                                        ; i32 literal
00013dc: 69                                        ; i32.popcnt
00013dd: 1a                                        ; drop
00013de: 0b                                        ; end
00013d8: 06                                        ; FIXUP func body size
; function body 80
00013df: 00                                        ; func body size (guess)
00013e0: 00                                        ; local decl count
00013e1: 41                                        ; i32.const
00013e2: 01                                        ; i32 literal
00013e3: 41                                        ; i32.const
00013e4: 02                                        ; i32 literal
00013e5: 6a                                        ; i32.add
00013e6: 1a                                        ; drop
00013e7: 0b                                        ; end
00013df: 08                                        ; FIXUP func body size
; function body 81
00013e8: 00                                        ; func body size (guess)
00013e9: 00                                        ; local decl count
00013ea: 41                                        ; i32.const
00013eb: 01                                        ; i32 literal
00013ec: 41                                        ; i32.const
00013ed: 02                                        ; i32 literal
00013ee: 6b                                        ; i32.sub
00013ef: 1a                                        ; drop
00013f0: 0b                                        ; end
00013e8: 08                                        ; FIXUP func body size
; function body 82
00013f1: 00                                        ; func body size (guess)
00013f2: 00                                        ; local decl count
00013f3: 41                                        ; i32.const
00013f4: 01                                        ; i32 literal
00013f5: 41                                        ; i32.const
00013f6: 02                                        ; i32 literal
00013f7: 6c                                        ; i32.mul
00013f8: 1a                                        ; drop
00013f9: 0b                                        ; end
00013f1: 08                                        ; FIXUP func body size
; function body 83
00013fa: 00                                        ; func body size (guess)
00013fb: 00                                        ; local decl count
00013fc: 41                                        ; i32.const
00013fd: 01                                        ; i32 literal
00013fe: 41                                        ; i32.const
00013ff: 02                                        ; i32 literal
0001400: 6d                                        ; i32.div_s
0001401: 1a                                        ; drop
0001402: 0b                                        ; end
00013fa: 08                                        ; FIXUP func body size
; function body 84
0001403: 00                                        ; func body size (guess)
0001404: 00                                        ; local decl count
0001405: 41                                        ; i32.const
0001406: 01                                        ; i32 literal
0001407: 41                                        ; i32.const
0001408: 02                                        ; i32 literal
0001409: 6e                                        ; i32.div_u
000140a: 1a                                        ; drop
000140b: 0b                                        ; end
0001403: 08                                        ; FIXUP func body size
; function body 85
000140c: 00                                        ; func body size (guess)
000140d: 00                                        ; local decl count
000140e: 41                                        ; i32.const
000140f: 01                                        ; i32 literal
0001410: 41                                        ; i32.const
0001411: 02                                        ; i32 literal
0001412: 6f                                        ; i32.rem_s
0001413: 1a                                        ; drop
0001414: 0b                                        ; end
000140c: 08                                        ; FIXUP func body size
; function body 86
0001415: 00                                        ; func body size (guess)
0001416: 00                                        ; local decl count
0001417: 41                                        ; i32.const
0001418: 01                                        ; i32 literal
0001419: 41                                        ; i32.const
000141a: 02                                        ; i32 literal
000141b: 70                                        ; i32.rem_u
000141c: 1a                                        ; drop
000141d: 0b                                        ; end
0001415: 08                                        ; FIXUP func body size
; function body 87
000141e: 00                                        ; func body size (guess)
000141f: 00                                        ; local decl count
0001420: 41                                        ; i32.const
0001421: 01                                        ; i32 literal
0001422: 41                                        ; i32.const
0001423: 02                                        ; i32 literal
0001424: 71                                        ; i32.and
0001425: 1a                                        ; drop
0001426: 0b                                        ; end
000141e: 08                                        ; FIXUP func body size
; function body 88
0001427: 00                                        ; func body size (guess)
0001428: 00                                        ; local decl count
0001429: 41                                        ; i32.const
000142a: 01                                        ; i32 literal
000142b: 41                                        ; i32.const
000142c: 02                                        ; i32 literal
000142d: 72                                        ; i32.or
000142e: 1a                                        ; drop
000142f: 0b                                        ; end
0001427: 08                                        ; FIXUP func body size
; function body 89
0001430: 00                                        ; func body size (guess)
0001431: 00                                        ; local decl count
0001432: 41                                        ; i32.const
0001433: 01                                        ; i32 literal
0001434: 41                                        ; i32.const
0001435: 02                                        ; i32 literal
0001436: 73                                        ; i32.xor
0001437: 1a                                        ; drop
0001438: 0b                                        ; end
0001430: 08                                        ; FIXUP func body size
; function body 90
0001439: 00                                        ; func body size (guess)
000143a: 00                                        ; local decl count
000143b: 41                                        ; i32.const
000143c: 01                                        ; i32 literal
000143d: 41                                        ; i32.const
000143e: 02                                        ; i32 literal
000143f: 74                                        ; i32.shl
0001440: 1a                                        ; drop
0001441: 0b                                        ; end
0001439: 08                                        ; FIXUP func body size
; function body 91
0001442: 00                                        ; func body size (guess)
0001443: 00                                        ; local decl count
0001444: 41                                        ; i32.const
0001445: 01                                        ; i32 literal
0001446: 41                                        ; i32.const
0001447: 02                                        ; i32 literal
0001448: 75                                        ; i32.shr_s
0001449: 1a                                        ; drop
000144a: 0b                                        ; end
0001442: 08                                        ; FIXUP func body size
; function body 92
000144b: 00                                        ; func body size (guess)
000144c: 00                                        ; local decl count
000144d: 41                                        ; i32.const
000144e: 01                                        ; i32 literal
000144f: 41                                        ; i32.const
0001450: 02                                        ; i32 literal
0001451: 76                                        ; i32.shr_u
0001452: 1a                                        ; drop
0001453: 0b                                        ; end
000144b: 08                                        ; FIXUP func body size
; function body 93
0001454: 00                                        ; func body size (guess)
0001455: 00                                        ; local decl count
0001456: 41                                        ; i32.const
0001457: 01                                        ; i32 literal
0001458: 41                                        ; i32.const
0001459: 02                                        ; i32 literal
000145a: 77                                        ; i32.rotl
000145b: 1a                                        ; drop
000145c: 0b                                        ; end
0001454: 08                                        ; FIXUP func body size
; function body 94
000145d: 00                                        ; func body size (guess)
000145e: 00                                        ; local decl count
000145f: 41                                        ; i32.const
0001460: 01                                        ; i32 literal
0001461: 41                                        ; i32.const
0001462: 02                                        ; i32 literal
0001463: 78                                        ; i32.rotr
0001464: 1a                                        ; drop
0001465: 0b                                        ; end
000145d: 08                                        ; FIXUP func body size
; function body 95
0001466: 00                                        ; func body size (guess)
0001467: 00                                        ; local decl count
0001468: 42                                        ; i64.const
0001469: 01                                        ; i64 literal
000146a: 79                                        ; i64.clz
000146b: 1a                                        ; drop
000146c: 0b                                        ; end
0001466: 06                                        ; FIXUP func body size
; function body 96
000146d: 00                                        ; func body size (guess)
000146e: 00                                        ; local decl count
000146f: 42                                        ; i64.const
0001470: 01                                        ; i64 literal
0001471: 7a                                        ; i64.ctz
0001472: 1a                                        ; drop
0001473: 0b                                        ; end
000146d: 06                                        ; FIXUP func body size
; function body 97
0001474: 00                                        ; func body size (guess)
0001475: 00                                        ; local decl count
0001476: 42                                        ; i64.const
0001477: 01                                        ; i64 literal
0001478: 7b                                        ; i64.popcnt
0001479: 1a                                        ; drop
000147a: 0b                                        ; end
0001474: 06                                        ; FIXUP func body size
; function body 98
000147b: 00                                        ; func body size (guess)
000147c: 00                                        ; local decl count
000147d: 42                                        ; i64.const
000147e: 01                                        ; i64 literal
000147f: 42                                        ; i64.const
0001480: 02                                        ; i64 literal
0001481: 7c                                        ; i64.add
0001482: 1a                                        ; drop
0001483: 0b                                        ; end
000147b: 08                                        ; FIXUP func body size
; function body 99
0001484: 00                                        ; func body size (guess)
0001485: 00                                        ; local decl count
0001486: 42                                        ; i64.const
0001487: 01                                        ; i64 literal
0001488: 42                                        ; i64.const
0001489: 02                                        ; i64 literal
000148a: 7d                                        ; i64.sub
000148b: 1a                                        ; drop
000148c: 0b                                        ; end
0001484: 08                                        ; FIXUP func body size
; function body 100
000148d: 00                                        ; func body size (guess)
000148e: 00                                        ; local decl count
000148f: 42                                        ; i64.const
0001490: 01                                        ; i64 literal
0001491: 42                                        ; i64.const
0001492: 02                                        ; i64 literal
0001493: 7e                                        ; i64.mul
0001494: 1a                                        ; drop
0001495: 0b                                        ; end
000148d: 08                                        ; FIXUP func body size
; function body 101
0001496: 00                                        ; func body size (guess)
0001497: 00                                        ; local decl count
0001498: 42                                        ; i64.const
0001499: 01                                        ; i64 literal
000149a: 42                                        ; i64.const
000149b: 02                                        ; i64 literal
000149c: 7f                                        ; i64.div_s
000149d: 1a                                        ; drop
000149e: 0b                                        ; end
0001496: 08                                        ; FIXUP func body size
; function body 102
000149f: 00                                        ; func body size (guess)
00014a0: 00                                        ; local decl count
00014a1: 42                                        ; i64.const
00014a2: 01                                        ; i64 literal
00014a3: 42                                        ; i64.const
00014a4: 02                                        ; i64 literal
00014a5: 80                                        ; i64.div_u
00014a6: 1a                                        ; drop
00014a7: 0b                                        ; end
000149f: 08                                        ; FIXUP func body size
; function body 103
00014a8: 00                                        ; func body size (guess)
00014a9: 00                                        ; local decl count
00014aa: 42                                        ; i64.const
00014ab: 01                                        ; i64 literal
00014ac: 42                                        ; i64.const
00014ad: 02                                        ; i64 literal
00014ae: 81                                        ; i64.rem_s
00014af: 1a                                        ; drop
00014b0: 0b                                        ; end
00014a8: 08                                        ; FIXUP func body size
; function body 104
00014b1: 00                                        ; func body size (guess)
00014b2: 00                                        ; local decl count
00014b3: 42                                        ; i64.const
00014b4: 01                                        ; i64 literal
00014b5: 42                                        ; i64.const
00014b6: 02                                        ; i64 literal
00014b7: 82                                        ; i64.rem_u
00014b8: 1a                                        ; drop
00014b9: 0b                                        ; end
00014b1: 08                                        ; FIXUP func body size
; function body 105
00014ba: 00                                        ; func body size (guess)
00014bb: 00                                        ; local decl count
00014bc: 42                                        ; i64.const
00014bd: 01                                        ; i64 literal
00014be: 42                                        ; i64.const
00014bf: 02                                        ; i64 literal
00014c0: 83                                        ; i64.and
00014c1: 1a                                        ; drop
00014c2: 0b                                        ; end
00014ba: 08                                        ; FIXUP func body size
; function body 106
00014c3: 00                                        ; func body size (guess)
00014c4: 00                                        ; local decl count
00014c5: 42                                        ; i64.const
00014c6: 01                                        ; i64 literal
00014c7: 42                                        ; i64.const
00014c8: 02                                        ; i64 literal
00014c9: 84                                        ; i64.or
00014ca: 1a                                        ; drop
00014cb: 0b                                        ; end
00014c3: 08                                        ; FIXUP func body size
; function body 107
00014cc: 00                                        ; func body size (guess)
00014cd: 00                                        ; local decl count
00014ce: 42                                        ; i64.const
00014cf: 01                                        ; i64 literal
00014d0: 42                                        ; i64.const
00014d1: 02                                        ; i64 literal
00014d2: 85                                        ; i64.xor
00014d3: 1a                                        ; drop
00014d4: 0b                                        ; end
00014cc: 08                                        ; FIXUP func body size
; function body 108
00014d5: 00                                        ; func body size (guess)
00014d6: 00                                        ; local decl count
00014d7: 42                                        ; i64.const
00014d8: 01                                        ; i64 literal
00014d9: 42                                        ; i64.const
00014da: 02                                        ; i64 literal
00014db: 86                                        ; i64.shl
00014dc: 1a                                        ; drop
00014dd: 0b                                        ; end
00014d5: 08                                        ; FIXUP func body size
; function body 109
00014de: 00                                        ; func body size (guess)
00014df: 00                                        ; local decl count
00014e0: 42                                        ; i64.const
00014e1: 01                                        ; i64 literal
00014e2: 42                                        ; i64.const
00014e3: 02                                        ; i64 literal
00014e4: 87                                        ; i64.shr_s
00014e5: 1a                                        ; drop
00014e6: 0b                                        ; end
00014de: 08                                        ; FIXUP func body size
; function body 110
00014e7: 00                                        ; func body size (guess)
00014e8: 00                                        ; local decl count
00014e9: 42                                        ; i64.const
00014ea: 01                                        ; i64 literal
00014eb: 42                                        ; i64.const
00014ec: 02                                        ; i64 literal
00014ed: 88                                        ; i64.shr_u
00014ee: 1a                                        ; drop
00014ef: 0b                                        ; end
00014e7: 08                                        ; FIXUP func body size
; function body 111
00014f0: 00                                        ; func body size (guess)
00014f1: 00                                        ; local decl count
00014f2: 42                                        ; i64.const
00014f3: 01                                        ; i64 literal
00014f4: 42                                        ; i64.const
00014f5: 02                                        ; i64 literal
00014f6: 89                                        ; i64.rotl
00014f7: 1a                                        ; drop
00014f8: 0b                                        ; end
00014f0: 08                                        ; FIXUP func body size
; function body 112
00014f9: 00                                        ; func body size (guess)
00014fa: 00                                        ; local decl count
00014fb: 42                                        ; i64.const
00014fc: 01                                        ; i64 literal
00014fd: 42                                        ; i64.const
00014fe: 02                                        ; i64 literal
00014ff: 8a                                        ; i64.rotr
0001500: 1a                                        ; drop
0001501: 0b                                        ; end
00014f9: 08                                        ; FIXUP func body size
; function body 113
0001502: 00                                        ; func body size (guess)
0001503: 00                                        ; local decl count
0001504: 43                                        ; f32.const
0001505: 0000 803f                                 ; f32 literal
0001509: 8b                                        ; f32.abs
000150a: 1a                                        ; drop
000150b: 0b                                        ; end
0001502: 09                                        ; FIXUP func body size
; function body 114
000150c: 00                                        ; func body size (guess)
000150d: 00                                        ; local decl count
000150e: 43                                        ; f32.const
000150f: 0000 803f                                 ; f32 literal
0001513: 8c                                        ; f32.neg
0001514: 1a                                        ; drop
0001515: 0b                                        ; end
000150c: 09                                        ; FIXUP func body size
; function body 115
0001516: 00                                        ; func body size (guess)
0001517: 00                                        ; local decl count
0001518: 43                                        ; f32.const
0001519: 0000 803f                                 ; f32 literal
000151d: 8d                                        ; f32.ceil
000151e: 1a                                        ; drop
000151f: 0b                                        ; end
0001516: 09                                        ; FIXUP func body size
; function body 116
0001520: 00                                        ; func body size (guess)
0001521: 00                                        ; local decl count
0001522: 43                                        ; f32.const
0001523: 0000 803f                                 ; f32 literal
0001527: 8e                                        ; f32.floor
0001528: 1a                                        ; drop
0001529: 0b                                        ; end
0001520: 09                                        ; FIXUP func body size
; function body 117
000152a: 00                                        ; func body size (guess)
000152b: 00                                        ; local decl count
000152c: 43                                        ; f32.const
000152d: 0000 803f                                 ; f32 literal
0001531: 8f                                        ; f32.trunc
0001532: 1a                                        ; drop
0001533: 0b                                        ; end
000152a: 09                                        ; FIXUP func body size
; function body 118
0001534: 00                                        ; func body size (guess)
0001535: 00                                        ; local decl count
0001536: 43                                        ; f32.const
0001537: 0000 803f                                 ; f32 literal
000153b: 90                                        ; f32.nearest
000153c: 1a                                        ; drop
000153d: 0b                                        ; end
0001534: 09                                        ; FIXUP func body size
; function body 119
000153e: 00                                        ; func body size (guess)
000153f: 00                                        ; local decl count
0001540: 43                                        ; f32.const
0001541: 0000 803f                                 ; f32 literal
0001545: 91                                        ; f32.sqrt
0001546: 1a                                        ; drop
0001547: 0b                                        ; end
000153e: 09                                        ; FIXUP func body size
; function body 120
0001548: 00                                        ; func body size (guess)
0001549: 00                                        ; local decl count
000154a: 43                                        ; f32.const
000154b: 0000 803f                                 ; f32 literal
000154f: 43                                        ; f32.const
0001550: 0000 0040                                 ; f32 literal
0001554: 92                                        ; f32.add
0001555: 1a                                        ; drop
0001556: 0b                                        ; end
0001548: 0e                                        ; FIXUP func body size
; function body 121
0001557: 00                                        ; func body size (guess)
0001558: 00                                        ; local decl count
0001559: 43                                        ; f32.const
000155a: 0000 803f                                 ; f32 literal
000155e: 43                                        ; f32.const
000155f: 0000 0040                                 ; f32 literal
0001563: 93                                        ; f32.sub
0001564: 1a                                        ; drop
0001565: 0b                                        ; end
0001557: 0e                                        ; FIXUP func body size
; function body 122
0001566: 00                                        ; func body size (guess)
0001567: 00                                        ; local decl count
0001568: 43                                        ; f32.const
0001569: 0000 803f                                 ; f32 literal
000156d: 43                                        ; f32.const
000156e: 0000 0040                                 ; f32 literal
0001572: 94                                        ; f32.mul
0001573: 1a                                        ; drop
0001574: 0b                                        ; end
0001566: 0e                                        ; FIXUP func body size
; function body 123
0001575: 00                                        ; func body size (guess)
0001576: 00                                        ; local decl count
0001577: 43                                        ; f32.const
0001578: 0000 803f                                 ; f32 literal
000157c: 43                                        ; f32.const
000157d: 0000 0040                                 ; f32 literal
0001581: 95                                        ; f32.div
0001582: 1a                                        ; drop
0001583: 0b                                        ; end
0001575: 0e                                        ; FIXUP func body size
; function body 124
0001584: 00                                        ; func body size (guess)
0001585: 00                                        ; local decl count
0001586: 43                                        ; f32.const
0001587: 0000 803f                                 ; f32 literal
000158b: 43                                        ; f32.const
000158c: 0000 0040                                 ; f32 literal
0001590: 96                                        ; f32.min
0001591: 1a                                        ; drop
0001592: 0b                                        ; end
0001584: 0e                                        ; FIXUP func body size
; function body 125
0001593: 00                                        ; func body size (guess)
0001594: 00                                        ; local decl count
0001595: 43                                        ; f32.const
0001596: 0000 803f                                 ; f32 literal
000159a: 43                                        ; f32.const
000159b: 0000 0040                                 ; f32 literal
000159f: 97                                        ; f32.max
00015a0: 1a                                        ; drop
00015a1: 0b                                        ; end
0001593: 0e                                        ; FIXUP func body size
; function body 126
00015a2: 00                                        ; func body size (guess)
00015a3: 00                                        ; local decl count
00015a4: 43                                        ; f32.const
00015a5: 0000 803f                                 ; f32 literal
00015a9: 43                                        ; f32.const
00015aa: 0000 0040                                 ; f32 literal
00015ae: 98                                        ; f32.copysign
00015af: 1a                                        ; drop
00015b0: 0b                                        ; end
00015a2: 0e                                        ; FIXUP func body size
; function body 127
00015b1: 00                                        ; func body size (guess)
00015b2: 00                                        ; local decl count
00015b3: 44                                        ; f64.const
00015b4: 0000 0000 0000 f03f                       ; f64 literal
00015bc: 99                                        ; f64.abs
00015bd: 1a                                        ; drop
00015be: 0b                                        ; end
00015b1: 0d                                        ; FIXUP func body size
; function body 128
00015bf: 00                                        ; func body size (guess)
00015c0: 00                                        ; local decl count
00015c1: 44                                        ; f64.const
00015c2: 0000 0000 0000 f03f                       ; f64 literal
00015ca: 9a                                        ; f64.neg
00015cb: 1a                                        ; drop
00015cc: 0b                                        ; end
00015bf: 0d                                        ; FIXUP func body size
; function body 129
00015cd: 00                                        ; func body size (guess)
00015ce: 00                                        ; local decl count
00015cf: 44                                        ; f64.const
00015d0: 0000 0000 0000 f03f                       ; f64 literal
00015d8: 9b                                        ; f64.ceil
00015d9: 1a                                        ; drop
00015da: 0b                                        ; end
00015cd: 0d                                        ; FIXUP func body size
; function body 130
00015db: 00                                        ; func body size (guess)
00015dc: 00                                        ; local decl count
00015dd: 44                                        ; f64.const
00015de: 0000 0000 0000 f03f                       ; f64 literal
00015e6: 9c                                        ; f64.floor
00015e7: 1a                                        ; drop
00015e8: 0b                                        ; end
00015db: 0d                                        ; FIXUP func body size
; function body 131
00015e9: 00                                        ; func body size (guess)
00015ea: 00                                        ; local decl count
00015eb: 44                                        ; f64.const
00015ec: 0000 0000 0000 f03f                       ; f64 literal
00015f4: 9d                                        ; f64.trunc
00015f5: 1a                                        ; drop
00015f6: 0b                                        ; end
00015e9: 0d                                        ; FIXUP func body size
; function body 132
00015f7: 00                                        ; func body size (guess)
00015f8: 00                                        ; local decl count
00015f9: 44                                        ; f64.const
00015fa: 0000 0000 0000 f03f                       ; f64 literal
0001602: 9e                                        ; f64.nearest
0001603: 1a                                        ; drop
0001604: 0b                                        ; end
00015f7: 0d                                        ; FIXUP func body size
; function body 133
0001605: 00                                        ; func body size (guess)
0001606: 00                                        ; local decl count
0001607: 44                                        ; f64.const
0001608: 0000 0000 0000 f03f                       ; f64 literal
0001610: 9f                                        ; f64.sqrt
0001611: 1a                                        ; drop
0001612: 0b                                        ; end
0001605: 0d                                        ; FIXUP func body size
; function body 134
0001613: 00                                        ; func body size (guess)
0001614: 00                                        ; local decl count
0001615: 44                                        ; f64.const
0001616: 0000 0000 0000 f03f                       ; f64 literal
000161e: 44                                        ; f64.const
000161f: 0000 0000 0000 0040                       ; f64 literal
0001627: a0                                        ; f64.add
0001628: 1a                                        ; drop
0001629: 0b                                        ; end
0001613: 16                                        ; FIXUP func body size
; function body 135
000162a: 00                                        ; func body size (guess)
000162b: 00                                        ; local decl count
000162c: 44                                        ; f64.const
000162d: 0000 0000 0000 f03f                       ; f64 literal
0001635: 44                                        ; f64.const
0001636: 0000 0000 0000 0040                       ; f64 literal
000163e: a1                                        ; f64.sub
000163f: 1a                                        ; drop
0001640: 0b                                        ; end
000162a: 16                                        ; FIXUP func body size
; function body 136
0001641: 00                                        ; func body size (guess)
0001642: 00                                        ; local decl count
0001643: 44                                        ; f64.const
0001644: 0000 0000 0000 f03f                       ; f64 literal
000164c: 44                                        ; f64.const
000164d: 0000 0000 0000 0040                       ; f64 literal
0001655: a2                                        ; f64.mul
0001656: 1a                                        ; drop
0001657: 0b                                        ; end
0001641: 16                                        ; FIXUP func body size
; function body 137
0001658: 00                                        ; func body size (guess)
0001659: 00                                        ; local decl count
000165a: 44                                        ; f64.const
000165b: 0000 0000 0000 f03f                       ; f64 literal
0001663: 44                                        ; f64.const
0001664: 0000 0000 0000 0040                       ; f64 literal
000166c: a3                                        ; f64.div
000166d: 1a                                        ; drop
000166e: 0b                                        ; end
0001658: 16                                        ; FIXUP func body size
; function body 138
000166f: 00                                        ; func body size (guess)
0001670: 00                                        ; local decl count
0001671: 44                                        ; f64.const
0001672: 0000 0000 0000 f03f                       ; f64 literal
000167a: 44                                        ; f64.const
000167b: 0000 0000 0000 0040                       ; f64 literal
0001683: a4                                        ; f64.min
0001684: 1a                                        ; drop
0001685: 0b                                        ; end
000166f: 16                                        ; FIXUP func body size
; function body 139
0001686: 00                                        ; func body size (guess)
0001687: 00                                        ; local decl count
0001688: 44                                        ; f64.const
0001689: 0000 0000 0000 f03f                       ; f64 literal
0001691: 44                                        ; f64.const
0001692: 0000 0000 0000 0040                       ; f64 literal
000169a: a5                                        ; f64.max
000169b: 1a                                        ; drop
000169c: 0b                                        ; end
0001686: 16                                        ; FIXUP func body size
; function body 140
000169d: 00                                        ; func body size (guess)
000169e: 00                                        ; local decl count
000169f: 44                                        ; f64.const
00016a0: 0000 0000 0000 f03f                       ; f64 literal
00016a8: 44                                        ; f64.const
00016a9: 0000 0000 0000 0040                       ; f64 literal
00016b1: a6                                        ; f64.copysign
00016b2: 1a                                        ; drop
00016b3: 0b                                        ; end
000169d: 16                                        ; FIXUP func body size
; function body 141
00016b4: 00                                        ; func body size (guess)
00016b5: 00                                        ; local decl count
00016b6: 42                                        ; i64.const
00016b7: 01                                        ; i64 literal
00016b8: a7                                        ; i32.wrap/i64
00016b9: 1a                                        ; drop
00016ba: 0b                                        ; end
00016b4: 06                                        ; FIXUP func body size
; function body 142
00016bb: 00                                        ; func body size (guess)
00016bc: 00                                        ; local decl count
00016bd: 43                                        ; f32.const
00016be: 0000 803f                                 ; f32 literal
00016c2: a8                                        ; i32.trunc_s/f32
00016c3: 1a                                        ; drop
00016c4: 0b                                        ; end
00016bb: 09                                        ; FIXUP func body size
; function body 143
00016c5: 00                                        ; func body size (guess)
00016c6: 00                                        ; local decl count
00016c7: 43                                        ; f32.const
00016c8: 0000 803f                                 ; f32 literal
00016cc: a9                                        ; i32.trunc_u/f32
00016cd: 1a                                        ; drop
00016ce: 0b                                        ; end
00016c5: 09                                        ; FIXUP func body size
; function body 144
00016cf: 00                                        ; func body size (guess)
00016d0: 00                                        ; local decl count
00016d1: 44                                        ; f64.const
00016d2: 0000 0000 0000 f03f                       ; f64 literal
00016da: aa                                        ; i32.trunc_s/f64
00016db: 1a                                        ; drop
00016dc: 0b                                        ; end
00016cf: 0d                                        ; FIXUP func body size
; function body 145
00016dd: 00                                        ; func body size (guess)
00016de: 00                                        ; local decl count
00016df: 44                                        ; f64.const
00016e0: 0000 0000 0000 f03f                       ; f64 literal
00016e8: ab                                        ; i32.trunc_u/f64
00016e9: 1a                                        ; drop
00016ea: 0b                                        ; end
00016dd: 0d                                        ; FIXUP func body size
; function body 146
00016eb: 00                                        ; func body size (guess)
00016ec: 00                                        ; local decl count
00016ed: 41                                        ; i32.const
00016ee: 01                                        ; i32 literal
00016ef: ac                                        ; i64.extend_s/i32
00016f0: 1a                                        ; drop
00016f1: 0b                                        ; end
00016eb: 06                                        ; FIXUP func body size
; function body 147
00016f2: 00                                        ; func body size (guess)
00016f3: 00                                        ; local decl count
00016f4: 41                                        ; i32.const
00016f5: 01                                        ; i32 literal
00016f6: ad                                        ; i64.extend_u/i32
00016f7: 1a                                        ; drop
00016f8: 0b                                        ; end
00016f2: 06                                        ; FIXUP func body size
; function body 148
00016f9: 00                                        ; func body size (guess)
00016fa: 00                                        ; local decl count
00016fb: 43                                        ; f32.const
00016fc: 0000 803f                                 ; f32 literal
0001700: ae                                        ; i64.trunc_s/f32
0001701: 1a                                        ; drop
0001702: 0b                                        ; end
00016f9: 09                                        ; FIXUP func body size
; function body 149
0001703: 00                                        ; func body size (guess)
0001704: 00                                        ; local decl count
0001705: 43                                        ; f32.const
0001706: 0000 803f                                 ; f32 literal
000170a: af                                        ; i64.trunc_u/f32
000170b: 1a                                        ; drop
000170c: 0b                                        ; end
0001703: 09                                        ; FIXUP func body size
; function body 150
000170d: 00                                        ; func body size (guess)
000170e: 00                                        ; local decl count
000170f: 44                                        ; f64.const
0001710: 0000 0000 0000 f03f                       ; f64 literal
0001718: b0                                        ; i64.trunc_s/f64
0001719: 1a                                        ; drop
000171a: 0b                                        ; end
000170d: 0d                                        ; FIXUP func body size
; function body 151
000171b: 00                                        ; func body size (guess)
000171c: 00                                        ; local decl count
000171d: 44                                        ; f64.const
000171e: 0000 0000 0000 f03f                       ; f64 literal
0001726: b1                                        ; i64.trunc_u/f64
0001727: 1a                                        ; drop
0001728: 0b                                        ; end
000171b: 0d                                        ; FIXUP func body size
; function body 152
0001729: 00                                        ; func body size (guess)
000172a: 00                                        ; local decl count
000172b: 41                                        ; i32.const
000172c: 01                                        ; i32 literal
000172d: b2                                        ; f32.convert_s/i32
000172e: 1a                                        ; drop
000172f: 0b                                        ; end
0001729: 06                                        ; FIXUP func body size
; function body 153
0001730: 00                                        ; func body size (guess)
0001731: 00                                        ; local decl count
0001732: 41                                        ; i32.const
0001733: 01                                        ; i32 literal
0001734: b3                                        ; f32.convert_u/i32
0001735: 1a                                        ; drop
0001736: 0b                                        ; end
0001730: 06                                        ; FIXUP func body size
; function body 154
0001737: 00                                        ; func body size (guess)
0001738: 00                                        ; local decl count
0001739: 42                                        ; i64.const
000173a: 01                                        ; i64 literal
000173b: b4                                        ; f32.convert_s/i64
000173c: 1a                                        ; drop
000173d: 0b                                        ; end
0001737: 06                                        ; FIXUP func body size
; function body 155
000173e: 00                                        ; func body size (guess)
000173f: 00                                        ; local decl count
0001740: 42                                        ; i64.const
0001741: 01                                        ; i64 literal
0001742: b5                                        ; f32.convert_u/i64
0001743: 1a                                        ; drop
0001744: 0b                                        ; end
000173e: 06                                        ; FIXUP func body size
; function body 156
0001745: 00                                        ; func body size (guess)
0001746: 00                                        ; local decl count
0001747: 44                                        ; f64.const
0001748: 0000 0000 0000 f03f                       ; f64 literal
0001750: b6                                        ; f32.demote/f64
0001751: 1a                                        ; drop
0001752: 0b                                        ; end
0001745: 0d                                        ; FIXUP func body size
; function body 157
0001753: 00                                        ; func body size (guess)
0001754: 00                                        ; local decl count
0001755: 41                                        ; i32.const
0001756: 01                                        ; i32 literal
0001757: b7                                        ; f64.convert_s/i32
0001758: 1a                                        ; drop
0001759: 0b                                        ; end
0001753: 06                                        ; FIXUP func body size
; function body 158
000175a: 00                                        ; func body size (guess)
000175b: 00                                        ; local decl count
000175c: 41                                        ; i32.const
000175d: 01                                        ; i32 literal
000175e: b8                                        ; f64.convert_u/i32
000175f: 1a                                        ; drop
0001760: 0b                                        ; end
000175a: 06                                        ; FIXUP func body size
; function body 159
0001761: 00                                        ; func body size (guess)
0001762: 00                                        ; local decl count
0001763: 42                                        ; i64.const
0001764: 01                                        ; i64 literal
0001765: b9                                        ; f64.convert_s/i64
0001766: 1a                                        ; drop
0001767: 0b                                        ; end
0001761: 06                                        ; FIXUP func body size
; function body 160
0001768: 00                                        ; func body size (guess)
0001769: 00                                        ; local decl count
000176a: 42                                        ; i64.const
000176b: 01                                        ; i64 literal
000176c: ba                                        ; f64.convert_u/i64
000176d: 1a                                        ; drop
000176e: 0b                                        ; end
0001768: 06                                        ; FIXUP func body size
; function body 161
000176f: 00                                        ; func body size (guess)
0001770: 00                                        ; local decl count
0001771: 43                                        ; f32.const
0001772: 0000 803f                                 ; f32 literal
0001776: bb                                        ; f64.promote/f32
0001777: 1a                                        ; drop
0001778: 0b                                        ; end
000176f: 09                                        ; FIXUP func body size
; function body 162
0001779: 00                                        ; func body size (guess)
000177a: 00                                        ; local decl count
000177b: 41                                        ; i32.const
000177c: 01                                        ; i32 literal
000177d: be                                        ; f32.reinterpret/i32
000177e: 1a                                        ; drop
000177f: 0b                                        ; end
0001779: 06                                        ; FIXUP func body size
; function body 163
0001780: 00                                        ; func body size (guess)
0001781: 00                                        ; local decl count
0001782: 43                                        ; f32.const
0001783: 0000 803f                                 ; f32 literal
0001787: bc                                        ; i32.reinterpret/f32
0001788: 1a                                        ; drop
0001789: 0b                                        ; end
0001780: 09                                        ; FIXUP func body size
; function body 164
000178a: 00                                        ; func body size (guess)
000178b: 00                                        ; local decl count
000178c: 42                                        ; i64.const
000178d: 01                                        ; i64 literal
000178e: bf                                        ; f64.reinterpret/i64
000178f: 1a                                        ; drop
0001790: 0b                                        ; end
000178a: 06                                        ; FIXUP func body size
; function body 165
0001791: 00                                        ; func body size (guess)
0001792: 00                                        ; local decl count
0001793: 44                                        ; f64.const
0001794: 0000 0000 0000 f03f                       ; f64 literal
000179c: bd                                        ; i64.reinterpret/f64
000179d: 1a                                        ; drop
000179e: 0b                                        ; end
0001791: 0d                                        ; FIXUP func body size
; function body 166
000179f: 00                                        ; func body size (guess)
00017a0: 00                                        ; local decl count
00017a1: 41                                        ; i32.const
00017a2: 01                                        ; i32 literal
00017a3: c0                                        ; i32.extend8_s
00017a4: 1a                                        ; drop
00017a5: 0b                                        ; end
000179f: 06                                        ; FIXUP func body size
; function body 167
00017a6: 00                                        ; func body size (guess)
00017a7: 00                                        ; local decl count
00017a8: 41                                        ; i32.const
00017a9: 01                                        ; i32 literal
00017aa: c1                                        ; i32.extend16_s
00017ab: 1a                                        ; drop
00017ac: 0b                                        ; end
00017a6: 06                                        ; FIXUP func body size
; function body 168
00017ad: 00                                        ; func body size (guess)
00017ae: 00                                        ; local decl count
00017af: 42                                        ; i64.const
00017b0: 01                                        ; i64 literal
00017b1: c2                                        ; i64.extend8_s
00017b2: 1a                                        ; drop
00017b3: 0b                                        ; end
00017ad: 06                                        ; FIXUP func body size
; function body 169
00017b4: 00                                        ; func body size (guess)
00017b5: 00                                        ; local decl count
00017b6: 42                                        ; i64.const
00017b7: 01                                        ; i64 literal
00017b8: c3                                        ; i64.extend16_s
00017b9: 1a                                        ; drop
00017ba: 0b                                        ; end
00017b4: 06                                        ; FIXUP func body size
; function body 170
00017bb: 00                                        ; func body size (guess)
00017bc: 00                                        ; local decl count
00017bd: 42                                        ; i64.const
00017be: 01                                        ; i64 literal
00017bf: c4                                        ; i64.extend32_s
00017c0: 1a                                        ; drop
00017c1: 0b                                        ; end
00017bb: 06                                        ; FIXUP func body size
; function body 171
00017c2: 00                                        ; func body size (guess)
00017c3: 01                                        ; local decl count
00017c4: 01                                        ; local type count
00017c5: 7f                                        ; i32
00017c6: 0b                                        ; end
00017c2: 04                                        ; FIXUP func body size
; function body 172
00017c7: 00                                        ; func body size (guess)
00017c8: 00                                        ; local decl count
00017c9: 41                                        ; i32.const
00017ca: 01                                        ; i32 literal
00017cb: 0d                                        ; br_if
00017cc: 00                                        ; break depth
00017cd: 0b                                        ; end
00017c7: 06                                        ; FIXUP func body size
; function body 173
00017ce: 00                                        ; func body size (guess)
00017cf: 00                                        ; local decl count
00017d0: 41                                        ; i32.const
00017d1: 01                                        ; i32 literal
00017d2: 10                                        ; call
00017d3: 00                                        ; function index
00017d4: 0b                                        ; end
00017ce: 06                                        ; FIXUP func body size
; function body 174
00017d5: 00                                        ; func body size (guess)
00017d6: 00                                        ; local decl count
00017d7: 41                                        ; i32.const
00017d8: 01                                        ; i32 literal
00017d9: 0e                                        ; br_table
00017da: 00                                        ; num targets
00017db: 00                                        ; break depth for default
00017dc: 0b                                        ; end
00017d5: 07                                        ; FIXUP func body size
; function body 175
00017dd: 00                                        ; func body size (guess)
00017de: 00                                        ; local decl count
00017df: 02                                        ; block
00017e0: 7f                                        ; i32
00017e1: 41                                        ; i32.const
00017e2: 01                                        ; i32 literal
00017e3: 41                                        ; i32.const
00017e4: 02                                        ; i32 literal
00017e5: 0c                                        ; br
00017e6: 00                                        ; break depth
00017e7: 0b                                        ; end
00017e8: 1a                                        ; drop
00017e9: 0b                                        ; end
00017dd: 0c                                        ; FIXUP func body size
; function body 176
00017ea: 00                                        ; func body size (guess)
00017eb: 00                                        ; local decl count
00017ec: 43                                        ; f32.const
00017ed: 0000 803f                                 ; f32 literal
00017f1: fc                                        ; prefix
00017f2: 00                                        ; i32.trunc_s:sat/f32
00017f3: 1a                                        ; drop
00017f4: 0b                                        ; end
00017ea: 0a                                        ; FIXUP func body size
; function body 177
00017f5: 00                                        ; func body size (guess)
00017f6: 00                                        ; local decl count
00017f7: 43                                        ; f32.const
00017f8: 0000 803f                                 ; f32 literal
00017fc: fc                                        ; prefix
00017fd: 01                                        ; i32.trunc_u:sat/f32
00017fe: 1a                                        ; drop
00017ff: 0b                                        ; end
00017f5: 0a                                        ; FIXUP func body size
; function body 178
0001800: 00                                        ; func body size (guess)
0001801: 00                                        ; local decl count
0001802: 44                                        ; f64.const
0001803: 0000 0000 0000 f03f                       ; f64 literal
000180b: fc                                        ; prefix
000180c: 02                                        ; i32.trunc_s:sat/f64
000180d: 1a                                        ; drop
000180e: 0b                                        ; end
0001800: 0e                                        ; FIXUP func body size
; function body 179
000180f: 00                                        ; func body size (guess)
0001810: 00                                        ; local decl count
0001811: 44                                        ; f64.const
0001812: 0000 0000 0000 f03f                       ; f64 literal
000181a: fc                                        ; prefix
000181b: 03                                        ; i32.trunc_u:sat/f64
000181c: 1a                                        ; drop
000181d: 0b                                        ; end
000180f: 0e                                        ; FIXUP func body size
; function body 180
000181e: 00                                        ; func body size (guess)
000181f: 00                                        ; local decl count
0001820: 43                                        ; f32.const
0001821: 0000 803f                                 ; f32 literal
0001825: fc                                        ; prefix
0001826: 04                                        ; i64.trunc_s:sat/f32
0001827: 1a                                        ; drop
0001828: 0b                                        ; end
000181e: 0a                                        ; FIXUP func body size
; function body 181
0001829: 00                                        ; func body size (guess)
000182a: 00                                        ; local decl count
000182b: 43                                        ; f32.const
000182c: 0000 803f                                 ; f32 literal
0001830: fc                                        ; prefix
0001831: 05                                        ; i64.trunc_u:sat/f32
0001832: 1a                                        ; drop
0001833: 0b                                        ; end
0001829: 0a                                        ; FIXUP func body size
; function body 182
0001834: 00                                        ; func body size (guess)
0001835: 00                                        ; local decl count
0001836: 44                                        ; f64.const
0001837: 0000 0000 0000 f03f                       ; f64 literal
000183f: fc                                        ; prefix
0001840: 06                                        ; i64.trunc_s:sat/f64
0001841: 1a                                        ; drop
0001842: 0b                                        ; end
0001834: 0e                                        ; FIXUP func body size
; function body 183
0001843: 00                                        ; func body size (guess)
0001844: 00                                        ; local decl count
0001845: 44                                        ; f64.const
0001846: 0000 0000 0000 f03f                       ; f64 literal
000184e: fc                                        ; prefix
000184f: 07                                        ; i64.trunc_u:sat/f64
0001850: 1a                                        ; drop
0001851: 0b                                        ; end
0001843: 0e                                        ; FIXUP func body size
; function body 184
0001852: 00                                        ; func body size (guess)
0001853: 00                                        ; local decl count
0001854: 41                                        ; i32.const
0001855: 01                                        ; i32 literal
0001856: fe                                        ; prefix
0001857: 10                                        ; i32.atomic.load
0001858: 02                                        ; alignment
0001859: 03                                        ; memory offset
000185a: 1a                                        ; drop
000185b: 0b                                        ; end
0001852: 09                                        ; FIXUP func body size
; function body 185
000185c: 00                                        ; func body size (guess)
000185d: 00                                        ; local decl count
000185e: 41                                        ; i32.const
000185f: 01                                        ; i32 literal
0001860: fe                                        ; prefix
0001861: 11                                        ; i64.atomic.load
0001862: 03                                        ; alignment
0001863: 07                                        ; memory offset
0001864: 1a                                        ; drop
0001865: 0b                                        ; end
000185c: 09                                        ; FIXUP func body size
; function body 186
0001866: 00                                        ; func body size (guess)
0001867: 00                                        ; local decl count
0001868: 41                                        ; i32.const
0001869: 01                                        ; i32 literal
000186a: fe                                        ; prefix
000186b: 12                                        ; i32.atomic.load8_u
000186c: 00                                        ; alignment
000186d: 03                                        ; memory offset
000186e: 1a                                        ; drop
000186f: 0b                                        ; end
0001866: 09                                        ; FIXUP func body size
; function body 187
0001870: 00                                        ; func body size (guess)
0001871: 00                                        ; local decl count
0001872: 41                                        ; i32.const
0001873: 01                                        ; i32 literal
0001874: fe                                        ; prefix
0001875: 13                                        ; i32.atomic.load16_u
0001876: 01                                        ; alignment
0001877: 03                                        ; memory offset
0001878: 1a                                        ; drop
0001879: 0b                                        ; end
0001870: 09                                        ; FIXUP func body size
; function body 188
000187a: 00                                        ; func body size (guess)
000187b: 00                                        ; local decl count
000187c: 41                                        ; i32.const
000187d: 01                                        ; i32 literal
000187e: fe                                        ; prefix
000187f: 14                                        ; i64.atomic.load8_u
0001880: 00                                        ; alignment
0001881: 03                                        ; memory offset
0001882: 1a                                        ; drop
0001883: 0b                                        ; end
000187a: 09                                        ; FIXUP func body size
; function body 189
0001884: 00                                        ; func body size (guess)
0001885: 00                                        ; local decl count
0001886: 41                                        ; i32.const
0001887: 01                                        ; i32 literal
0001888: fe                                        ; prefix
0001889: 15                                        ; i64.atomic.load16_u
000188a: 01                                        ; alignment
000188b: 03                                        ; memory offset
000188c: 1a                                        ; drop
000188d: 0b                                        ; end
0001884: 09                                        ; FIXUP func body size
; function body 190
000188e: 00                                        ; func body size (guess)
000188f: 00                                        ; local decl count
0001890: 41                                        ; i32.const
0001891: 01                                        ; i32 literal
0001892: fe                                        ; prefix
0001893: 16                                        ; i64.atomic.load32_u
0001894: 02                                        ; alignment
0001895: 03                                        ; memory offset
0001896: 1a                                        ; drop
0001897: 0b                                        ; end
000188e: 09                                        ; FIXUP func body size
; function body 191
0001898: 00                                        ; func body size (guess)
0001899: 00                                        ; local decl count
000189a: 41                                        ; i32.const
000189b: 01                                        ; i32 literal
000189c: 41                                        ; i32.const
000189d: 02                                        ; i32 literal
000189e: fe                                        ; prefix
000189f: 17                                        ; i32.atomic.store
00018a0: 02                                        ; alignment
00018a1: 03                                        ; memory offset
00018a2: 0b                                        ; end
0001898: 0a                                        ; FIXUP func body size
; function body 192
00018a3: 00                                        ; func body size (guess)
00018a4: 00                                        ; local decl count
00018a5: 41                                        ; i32.const
00018a6: 01                                        ; i32 literal
00018a7: 42                                        ; i64.const
00018a8: 02                                        ; i64 literal
00018a9: fe                                        ; prefix
00018aa: 18                                        ; i64.atomic.store
00018ab: 03                                        ; alignment
00018ac: 07                                        ; memory offset
00018ad: 0b                                        ; end
00018a3: 0a                                        ; FIXUP func body size
; function body 193
00018ae: 00                                        ; func body size (guess)
00018af: 00                                        ; local decl count
00018b0: 41                                        ; i32.const
00018b1: 01                                        ; i32 literal
00018b2: 41                                        ; i32.const
00018b3: 02                                        ; i32 literal
00018b4: fe                                        ; prefix
00018b5: 19                                        ; i32.atomic.store8
00018b6: 00                                        ; alignment
00018b7: 03                                        ; memory offset
00018b8: 0b                                        ; end
00018ae: 0a                                        ; FIXUP func body size
; function body 194
00018b9: 00                                        ; func body size (guess)
00018ba: 00                                        ; local decl count
00018bb: 41                                        ; i32.const
00018bc: 01                                        ; i32 literal
00018bd: 41                                        ; i32.const
00018be: 02                                        ; i32 literal
00018bf: fe                                        ; prefix
00018c0: 1a                                        ; i32.atomic.store16
00018c1: 01                                        ; alignment
00018c2: 03                                        ; memory offset
00018c3: 0b                                        ; end
00018b9: 0a                                        ; FIXUP func body size
; function body 195
00018c4: 00                                        ; func body size (guess)
00018c5: 00                                        ; local decl count
00018c6: 41                                        ; i32.const
00018c7: 01                                        ; i32 literal
00018c8: 42                                        ; i64.const
00018c9: 02                                        ; i64 literal
00018ca: fe                                        ; prefix
00018cb: 1b                                        ; i64.atomic.store8
00018cc: 00                                        ; alignment
00018cd: 03                                        ; memory offset
00018ce: 0b                                        ; end
00018c4: 0a                                        ; FIXUP func body size
; function body 196
00018cf: 00                                        ; func body size (guess)
00018d0: 00                                        ; local decl count
00018d1: 41                                        ; i32.const
00018d2: 01                                        ; i32 literal
00018d3: 42                                        ; i64.const
00018d4: 02                                        ; i64 literal
00018d5: fe                                        ; prefix
00018d6: 1c                                        ; i64.atomic.store16
00018d7: 01                                        ; alignment
00018d8: 03                                        ; memory offset
00018d9: 0b                                        ; end
00018cf: 0a                                        ; FIXUP func body size
; function body 197
00018da: 00                                        ; func body size (guess)
00018db: 00                                        ; local decl count
00018dc: 41                                        ; i32.const
00018dd: 01                                        ; i32 literal
00018de: 42                                        ; i64.const
00018df: 02                                        ; i64 literal
00018e0: fe                                        ; prefix
00018e1: 1d                                        ; i64.atomic.store32
00018e2: 02                                        ; alignment
00018e3: 03                                        ; memory offset
00018e4: 0b                                        ; end
00018da: 0a                                        ; FIXUP func body size
; function body 198
00018e5: 00                                        ; func body size (guess)
00018e6: 00                                        ; local decl count
00018e7: 41                                        ; i32.const
00018e8: 01                                        ; i32 literal
00018e9: 41                                        ; i32.const
00018ea: 02                                        ; i32 literal
00018eb: fe                                        ; prefix
00018ec: 1e                                        ; i32.atomic.rmw.add
00018ed: 02                                        ; alignment
00018ee: 03                                        ; memory offset
00018ef: 1a                                        ; drop
00018f0: 0b                                        ; end
00018e5: 0b                                        ; FIXUP func body size
; function body 199
00018f1: 00                                        ; func body size (guess)
00018f2: 00                                        ; local decl count
00018f3: 41                                        ; i32.const
00018f4: 01                                        ; i32 literal
00018f5: 42                                        ; i64.const
00018f6: 02                                        ; i64 literal
00018f7: fe                                        ; prefix
00018f8: 1f                                        ; i64.atomic.rmw.add
00018f9: 03                                        ; alignment
00018fa: 07                                        ; memory offset
00018fb: 1a                                        ; drop
00018fc: 0b                                        ; end
00018f1: 0b                                        ; FIXUP func body size
; function body 200
00018fd: 00                                        ; func body size (guess)
00018fe: 00                                        ; local decl count
00018ff: 41                                        ; i32.const
0001900: 01                                        ; i32 literal
0001901: 41                                        ; i32.const
0001902: 02                                        ; i32 literal
0001903: fe                                        ; prefix
0001904: 20                                        ; i32.atomic.rmw8_u.add
0001905: 00                                        ; alignment
0001906: 03                                        ; memory offset
0001907: 1a                                        ; drop
0001908: 0b                                        ; end
00018fd: 0b                                        ; FIXUP func body size
; function body 201
0001909: 00                                        ; func body size (guess)
000190a: 00                                        ; local decl count
000190b: 41                                        ; i32.const
000190c: 01                                        ; i32 literal
000190d: 41                                        ; i32.const
000190e: 02                                        ; i32 literal
000190f: fe                                        ; prefix
0001910: 21                                        ; i32.atomic.rmw16_u.add
0001911: 01                                        ; alignment
0001912: 03                                        ; memory offset
0001913: 1a                                        ; drop
0001914: 0b                                        ; end
0001909: 0b                                        ; FIXUP func body size
; function body 202
0001915: 00                                        ; func body size (guess)
0001916: 00                                        ; local decl count
0001917: 41                                        ; i32.const
0001918: 01                                        ; i32 literal
0001919: 42                                        ; i64.const
000191a: 02                                        ; i64 literal
000191b: fe                                        ; prefix
000191c: 22                                        ; i64.atomic.rmw8_u.add
000191d: 00                                        ; alignment
000191e: 03                                        ; memory offset
000191f: 1a                                        ; drop
0001920: 0b                                        ; end
0001915: 0b                                        ; FIXUP func body size
; function body 203
0001921: 00                                        ; func body size (guess)
0001922: 00                                        ; local decl count
0001923: 41                                        ; i32.const
0001924: 01                                        ; i32 literal
0001925: 42                                        ; i64.const
0001926: 02                                        ; i64 literal
0001927: fe                                        ; prefix
0001928: 23                                        ; i64.atomic.rmw16_u.add
0001929: 01                                        ; alignment
000192a: 03                                        ; memory offset
000192b: 1a                                        ; drop
000192c: 0b                                        ; end
0001921: 0b                                        ; FIXUP func body size
; function body 204
000192d: 00                                        ; func body size (guess)
000192e: 00                                        ; local decl count
000192f: 41                                        ; i32.const
0001930: 01                                        ; i32 literal
0001931: 42                                        ; i64.const
0001932: 02                                        ; i64 literal
0001933: fe                                        ; prefix
0001934: 24                                        ; i64.atomic.rmw32_u.add
0001935: 02                                        ; alignment
0001936: 03                                        ; memory offset
0001937: 1a                                        ; drop
0001938: 0b                                        ; end
000192d: 0b                                        ; FIXUP func body size
; function body 205
0001939: 00                                        ; func body size (guess)
000193a: 00                                        ; local decl count
000193b: 41                                        ; i32.const
000193c: 01                                        ; i32 literal
000193d: 41                                        ; i32.const
000193e: 02                                        ; i32 literal
000193f: fe                                        ; prefix
0001940: 25                                        ; i32.atomic.rmw.sub
0001941: 02                                        ; alignment
0001942: 03                                        ; memory offset
0001943: 1a                                        ; drop
0001944: 0b                                        ; end
0001939: 0b                                        ; FIXUP func body size
; function body 206
0001945: 00                                        ; func body size (guess)
0001946: 00                                        ; local decl count
0001947: 41                                        ; i32.const
0001948: 01                                        ; i32 literal
0001949: 42                                        ; i64.const
000194a: 02                                        ; i64 literal
000194b: fe                                        ; prefix
000194c: 26                                        ; i64.atomic.rmw.sub
000194d: 03                                        ; alignment
000194e: 07                                        ; memory offset
000194f: 1a                                        ; drop
0001950: 0b                                        ; end
0001945: 0b                                        ; FIXUP func body size
; function body 207
0001951: 00                                        ; func body size (guess)
0001952: 00                                        ; local decl count
0001953: 41                                        ; i32.const
0001954: 01                                        ; i32 literal
0001955: 41                                        ; i32.const
0001956: 02                                        ; i32 literal
0001957: fe                                        ; prefix
0001958: 27                                        ; i32.atomic.rmw8_u.sub
0001959: 00                                        ; alignment
000195a: 03                                        ; memory offset
000195b: 1a                                        ; drop
000195c: 0b                                        ; end
0001951: 0b                                        ; FIXUP func body size
; function body 208
000195d: 00                                        ; func body size (guess)
000195e: 00                                        ; local decl count
000195f: 41                                        ; i32.const
0001960: 01                                        ; i32 literal
0001961: 41                                        ; i32.const
0001962: 02                                        ; i32 literal
0001963: fe                                        ; prefix
0001964: 28                                        ; i32.atomic.rmw16_u.sub
0001965: 01                                        ; alignment
0001966: 03                                        ; memory offset
0001967: 1a                                        ; drop
0001968: 0b                                        ; end
000195d: 0b                                        ; FIXUP func body size
; function body 209
0001969: 00                                        ; func body size (guess)
000196a: 00                                        ; local decl count
000196b: 41                                        ; i32.const
000196c: 01                                        ; i32 literal
000196d: 42                                        ; i64.const
000196e: 02                                        ; i64 literal
000196f: fe                                        ; prefix
0001970: 29                                        ; i64.atomic.rmw8_u.sub
0001971: 00                                        ; alignment
0001972: 03                                        ; memory offset
0001973: 1a                                        ; drop
0001974: 0b                                        ; end
0001969: 0b                                        ; FIXUP func body size
; function body 210
0001975: 00                                        ; func body size (guess)
0001976: 00                                        ; local decl count
0001977: 41                                        ; i32.const
0001978: 01                                        ; i32 literal
0001979: 42                                        ; i64.const
000197a: 02                                        ; i64 literal
000197b: fe                                        ; prefix
000197c: 2a                                        ; i64.atomic.rmw16_u.sub
000197d: 01                                        ; alignment
000197e: 03                                        ; memory offset
000197f: 1a                                        ; drop
0001980: 0b                                        ; end
0001975: 0b                                        ; FIXUP func body size
; function body 211
0001981: 00                                        ; func body size (guess)
0001982: 00                                        ; local decl count
0001983: 41                                        ; i32.const
0001984: 01                                        ; i32 literal
0001985: 42                                        ; i64.const
0001986: 02                                        ; i64 literal
0001987: fe                                        ; prefix
0001988: 2b                                        ; i64.atomic.rmw32_u.sub
0001989: 02                                        ; alignment
000198a: 03                                        ; memory offset
000198b: 1a                                        ; drop
000198c: 0b                                        ; end
0001981: 0b                                        ; FIXUP func body size
; function body 212
000198d: 00                                        ; func body size (guess)
000198e: 00                                        ; local decl count
000198f: 41                                        ; i32.const
0001990: 01                                        ; i32 literal
0001991: 41                                        ; i32.const
0001992: 02                                        ; i32 literal
0001993: fe                                        ; prefix
0001994: 2c                                        ; i32.atomic.rmw.and
0001995: 02                                        ; alignment
0001996: 03                                        ; memory offset
0001997: 1a                                        ; drop
0001998: 0b                                        ; end
000198d: 0b                                        ; FIXUP func body size
; function body 213
0001999: 00                                        ; func body size (guess)
000199a: 00                                        ; local decl count
000199b: 41                                        ; i32.const
000199c: 01                                        ; i32 literal
000199d: 42                                        ; i64.const
000199e: 02                                        ; i64 literal
000199f: fe                                        ; prefix
00019a0: 2d                                        ; i64.atomic.rmw.and
00019a1: 03                                        ; alignment
00019a2: 07                                        ; memory offset
00019a3: 1a                                        ; drop
00019a4: 0b                                        ; end
0001999: 0b                                        ; FIXUP func body size
; function body 214
00019a5: 00                                        ; func body size (guess)
00019a6: 00                                        ; local decl count
00019a7: 41                                        ; i32.const
00019a8: 01                                        ; i32 literal
00019a9: 41                                        ; i32.const
00019aa: 02                                        ; i32 literal
00019ab: fe                                        ; prefix
00019ac: 2e                                        ; i32.atomic.rmw8_u.and
00019ad: 00                                        ; alignment
00019ae: 03                                        ; memory offset
00019af: 1a                                        ; drop
00019b0: 0b                                        ; end
00019a5: 0b                                        ; FIXUP func body size
; function body 215
00019b1: 00                                        ; func body size (guess)
00019b2: 00                                        ; local decl count
00019b3: 41                                        ; i32.const
00019b4: 01                                        ; i32 literal
00019b5: 41                                        ; i32.const
00019b6: 02                                        ; i32 literal
00019b7: fe                                        ; prefix
00019b8: 2f                                        ; i32.atomic.rmw16_u.and
00019b9: 01                                        ; alignment
00019ba: 03                                        ; memory offset
00019bb: 1a                                        ; drop
00019bc: 0b                                        ; end
00019b1: 0b                                        ; FIXUP func body size
; function body 216
00019bd: 00                                        ; func body size (guess)
00019be: 00                                        ; local decl count
00019bf: 41                                        ; i32.const
00019c0: 01                                        ; i32 literal
00019c1: 42                                        ; i64.const
00019c2: 02                                        ; i64 literal
00019c3: fe                                        ; prefix
00019c4: 30                                        ; i64.atomic.rmw8_u.and
00019c5: 00                                        ; alignment
00019c6: 03                                        ; memory offset
00019c7: 1a                                        ; drop
00019c8: 0b                                        ; end
00019bd: 0b                                        ; FIXUP func body size
; function body 217
00019c9: 00                                        ; func body size (guess)
00019ca: 00                                        ; local decl count
00019cb: 41                                        ; i32.const
00019cc: 01                                        ; i32 literal
00019cd: 42                                        ; i64.const
00019ce: 02                                        ; i64 literal
00019cf: fe                                        ; prefix
00019d0: 31                                        ; i64.atomic.rmw16_u.and
00019d1: 01                                        ; alignment
00019d2: 03                                        ; memory offset
00019d3: 1a                                        ; drop
00019d4: 0b                                        ; end
00019c9: 0b                                        ; FIXUP func body size
; function body 218
00019d5: 00                                        ; func body size (guess)
00019d6: 00                                        ; local decl count
00019d7: 41                                        ; i32.const
00019d8: 01                                        ; i32 literal
00019d9: 42                                        ; i64.const
00019da: 02                                        ; i64 literal
00019db: fe                                        ; prefix
00019dc: 32                                        ; i64.atomic.rmw32_u.and
00019dd: 02                                        ; alignment
00019de: 03                                        ; memory offset
00019df: 1a                                        ; drop
00019e0: 0b                                        ; end
00019d5: 0b                                        ; FIXUP func body size
; function body 219
00019e1: 00                                        ; func body size (guess)
00019e2: 00                                        ; local decl count
00019e3: 41                                        ; i32.const
00019e4: 01                                        ; i32 literal
00019e5: 41                                        ; i32.const
00019e6: 02                                        ; i32 literal
00019e7: fe                                        ; prefix
00019e8: 33                                        ; i32.atomic.rmw.or
00019e9: 02                                        ; alignment
00019ea: 03                                        ; memory offset
00019eb: 1a                                        ; drop
00019ec: 0b                                        ; end
00019e1: 0b                                        ; FIXUP func body size
; function body 220
00019ed: 00                                        ; func body size (guess)
00019ee: 00                                        ; local decl count
00019ef: 41                                        ; i32.const
00019f0: 01                                        ; i32 literal
00019f1: 42                                        ; i64.const
00019f2: 02                                        ; i64 literal
00019f3: fe                                        ; prefix
00019f4: 34                                        ; i64.atomic.rmw.or
00019f5: 03                                        ; alignment
00019f6: 07                                        ; memory offset
00019f7: 1a                                        ; drop
00019f8: 0b                                        ; end
00019ed: 0b                                        ; FIXUP func body size
; function body 221
00019f9: 00                                        ; func body size (guess)
00019fa: 00                                        ; local decl count
00019fb: 41                                        ; i32.const
00019fc: 01                                        ; i32 literal
00019fd: 41                                        ; i32.const
00019fe: 02                                        ; i32 literal
00019ff: fe                                        ; prefix
0001a00: 35                                        ; i32.atomic.rmw8_u.or
0001a01: 00                                        ; alignment
0001a02: 03                                        ; memory offset
0001a03: 1a                                        ; drop
0001a04: 0b                                        ; end
00019f9: 0b                                        ; FIXUP func body size
; function body 222
0001a05: 00                                        ; func body size (guess)
0001a06: 00                                        ; local decl count
0001a07: 41                                        ; i32.const
0001a08: 01                                        ; i32 literal
0001a09: 41                                        ; i32.const
0001a0a: 02                                        ; i32 literal
0001a0b: fe                                        ; prefix
0001a0c: 36                                        ; i32.atomic.rmw16_u.or
0001a0d: 01                                        ; alignment
0001a0e: 03                                        ; memory offset
0001a0f: 1a                                        ; drop
0001a10: 0b                                        ; end
0001a05: 0b                                        ; FIXUP func body size
; function body 223
0001a11: 00                                        ; func body size (guess)
0001a12: 00                                        ; local decl count
0001a13: 41                                        ; i32.const
0001a14: 01                                        ; i32 literal
0001a15: 42                                        ; i64.const
0001a16: 02                                        ; i64 literal
0001a17: fe                                        ; prefix
0001a18: 37                                        ; i64.atomic.rmw8_u.or
0001a19: 00                                        ; alignment
0001a1a: 03                                        ; memory offset
0001a1b: 1a                                        ; drop
0001a1c: 0b                                        ; end
0001a11: 0b                                        ; FIXUP func body size
; function body 224
0001a1d: 00                                        ; func body size (guess)
0001a1e: 00                                        ; local decl count
0001a1f: 41                                        ; i32.const
0001a20: 01                                        ; i32 literal
0001a21: 42                                        ; i64.const
0001a22: 02                                        ; i64 literal
0001a23: fe                                        ; prefix
0001a24: 38                                        ; i64.atomic.rmw16_u.or
0001a25: 01                                        ; alignment
0001a26: 03                                        ; memory offset
0001a27: 1a                                        ; drop
0001a28: 0b                                        ; end
0001a1d: 0b                                        ; FIXUP func body size
; function body 225
0001a29: 00                                        ; func body size (guess)
0001a2a: 00                                        ; local decl count
0001a2b: 41                                        ; i32.const
0001a2c: 01                                        ; i32 literal
0001a2d: 42                                        ; i64.const
0001a2e: 02                                        ; i64 literal
0001a2f: fe                                        ; prefix
0001a30: 39                                        ; i64.atomic.rmw32_u.or
0001a31: 02                                        ; alignment
0001a32: 03                                        ; memory offset
0001a33: 1a                                        ; drop
0001a34: 0b                                        ; end
0001a29: 0b                                        ; FIXUP func body size
; function body 226
0001a35: 00                                        ; func body size (guess)
0001a36: 00                                        ; local decl count
0001a37: 41                                        ; i32.const
0001a38: 01                                        ; i32 literal
0001a39: 41                                        ; i32.const
0001a3a: 02                                        ; i32 literal
0001a3b: fe                                        ; prefix
0001a3c: 3a                                        ; i32.atomic.rmw.xor
0001a3d: 02                                        ; alignment
0001a3e: 03                                        ; memory offset
0001a3f: 1a                                        ; drop
0001a40: 0b                                        ; end
0001a35: 0b                                        ; FIXUP func body size
; function body 227
0001a41: 00                                        ; func body size (guess)
0001a42: 00                                        ; local decl count
0001a43: 41                                        ; i32.const
0001a44: 01                                        ; i32 literal
0001a45: 42                                        ; i64.const
0001a46: 02                                        ; i64 literal
0001a47: fe                                        ; prefix
0001a48: 3b                                        ; i64.atomic.rmw.xor
0001a49: 03                                        ; alignment
0001a4a: 07                                        ; memory offset
0001a4b: 1a                                        ; drop
0001a4c: 0b                                        ; end
0001a41: 0b                                        ; FIXUP func body size
; function body 228
0001a4d: 00                                        ; func body size (guess)
0001a4e: 00                                        ; local decl count
0001a4f: 41                                        ; i32.const
0001a50: 01                                        ; i32 literal
0001a51: 41                                        ; i32.const
0001a52: 02                                        ; i32 literal
0001a53: fe                                        ; prefix
0001a54: 3c                                        ; i32.atomic.rmw8_u.xor
0001a55: 00                                        ; alignment
0001a56: 03                                        ; memory offset
0001a57: 1a                                        ; drop
0001a58: 0b                                        ; end
0001a4d: 0b                                        ; FIXUP func body size
; function body 229
0001a59: 00                                        ; func body size (guess)
0001a5a: 00                                        ; local decl count
0001a5b: 41                                        ; i32.const
0001a5c: 01                                        ; i32 literal
0001a5d: 41                                        ; i32.const
0001a5e: 02                                        ; i32 literal
0001a5f: fe                                        ; prefix
0001a60: 3d                                        ; i32.atomic.rmw16_u.xor
0001a61: 01                                        ; alignment
0001a62: 03                                        ; memory offset
0001a63: 1a                                        ; drop
0001a64: 0b                                        ; end
0001a59: 0b                                        ; FIXUP func body size
; function body 230
0001a65: 00                                        ; func body size (guess)
0001a66: 00                                        ; local decl count
0001a67: 41                                        ; i32.const
0001a68: 01                                        ; i32 literal
0001a69: 42                                        ; i64.const
0001a6a: 02                                        ; i64 literal
0001a6b: fe                                        ; prefix
0001a6c: 3e                                        ; i64.atomic.rmw8_u.xor
0001a6d: 00                                        ; alignment
0001a6e: 03                                        ; memory offset
0001a6f: 1a                                        ; drop
0001a70: 0b                                        ; end
0001a65: 0b                                        ; FIXUP func body size
; function body 231
0001a71: 00                                        ; func body size (guess)
0001a72: 00                                        ; local decl count
0001a73: 41                                        ; i32.const
0001a74: 01                                        ; i32 literal
0001a75: 42                                        ; i64.const
0001a76: 02                                        ; i64 literal
0001a77: fe                                        ; prefix
0001a78: 3f                                        ; i64.atomic.rmw16_u.xor
0001a79: 01                                        ; alignment
0001a7a: 03                                        ; memory offset
0001a7b: 1a                                        ; drop
0001a7c: 0b                                        ; end
0001a71: 0b                                        ; FIXUP func body size
; function body 232
0001a7d: 00                                        ; func body size (guess)
0001a7e: 00                                        ; local decl count
0001a7f: 41                                        ; i32.const
0001a80: 01                                        ; i32 literal
0001a81: 42                                        ; i64.const
0001a82: 02                                        ; i64 literal
0001a83: fe                                        ; prefix
0001a84: 40                                        ; i64.atomic.rmw32_u.xor
0001a85: 02                                        ; alignment
0001a86: 03                                        ; memory offset
0001a87: 1a                                        ; drop
0001a88: 0b                                        ; end
0001a7d: 0b                                        ; FIXUP func body size
; function body 233
0001a89: 00                                        ; func body size (guess)
0001a8a: 00                                        ; local decl count
0001a8b: 41                                        ; i32.const
0001a8c: 01                                        ; i32 literal
0001a8d: 41                                        ; i32.const
0001a8e: 02                                        ; i32 literal
0001a8f: fe                                        ; prefix
0001a90: 41                                        ; i32.atomic.rmw.xchg
0001a91: 02                                        ; alignment
0001a92: 03                                        ; memory offset
0001a93: 1a                                        ; drop
0001a94: 0b                                        ; end
0001a89: 0b                                        ; FIXUP func body size
; function body 234
0001a95: 00                                        ; func body size (guess)
0001a96: 00                                        ; local decl count
0001a97: 41                                        ; i32.const
0001a98: 01                                        ; i32 literal
0001a99: 42                                        ; i64.const
0001a9a: 02                                        ; i64 literal
0001a9b: fe                                        ; prefix
0001a9c: 42                                        ; i64.atomic.rmw.xchg
0001a9d: 03                                        ; alignment
0001a9e: 07                                        ; memory offset
0001a9f: 1a                                        ; drop
0001aa0: 0b                                        ; end
0001a95: 0b                                        ; FIXUP func body size
; function body 235
0001aa1: 00                                        ; func body size (guess)
0001aa2: 00                                        ; local decl count
0001aa3: 41                                        ; i32.const
0001aa4: 01                                        ; i32 literal
0001aa5: 41                                        ; i32.const
0001aa6: 02                                        ; i32 literal
0001aa7: fe                                        ; prefix
0001aa8: 43                                        ; i32.atomic.rmw8_u.xchg
0001aa9: 00                                        ; alignment
0001aaa: 03                                        ; memory offset
0001aab: 1a                                        ; drop
0001aac: 0b                                        ; end
0001aa1: 0b                                        ; FIXUP func body size
; function body 236
0001aad: 00                                        ; func body size (guess)
0001aae: 00                                        ; local decl count
0001aaf: 41                                        ; i32.const
0001ab0: 01                                        ; i32 literal
0001ab1: 41                                        ; i32.const
0001ab2: 02                                        ; i32 literal
0001ab3: fe                                        ; prefix
0001ab4: 44                                        ; i32.atomic.rmw16_u.xchg
0001ab5: 01                                        ; alignment
0001ab6: 03                                        ; memory offset
0001ab7: 1a                                        ; drop
0001ab8: 0b                                        ; end
0001aad: 0b                                        ; FIXUP func body size
; function body 237
0001ab9: 00                                        ; func body size (guess)
0001aba: 00                                        ; local decl count
0001abb: 41                                        ; i32.const
0001abc: 01                                        ; i32 literal
0001abd: 42                                        ; i64.const
0001abe: 02                                        ; i64 literal
0001abf: fe                                        ; prefix
0001ac0: 45                                        ; i64.atomic.rmw8_u.xchg
0001ac1: 00                                        ; alignment
0001ac2: 03                                        ; memory offset
0001ac3: 1a                                        ; drop
0001ac4: 0b                                        ; end
0001ab9: 0b                                        ; FIXUP func body size
; function body 238
0001ac5: 00                                        ; func body size (guess)
0001ac6: 00                                        ; local decl count
0001ac7: 41                                        ; i32.const
0001ac8: 01                                        ; i32 literal
0001ac9: 42                                        ; i64.const
0001aca: 02                                        ; i64 literal
0001acb: fe                                        ; prefix
0001acc: 46                                        ; i64.atomic.rmw16_u.xchg
0001acd: 01                                        ; alignment
0001ace: 03                                        ; memory offset
0001acf: 1a                                        ; drop
0001ad0: 0b                                        ; end
0001ac5: 0b                                        ; FIXUP func body size
; function body 239
0001ad1: 00                                        ; func body size (guess)
0001ad2: 00                                        ; local decl count
0001ad3: 41                                        ; i32.const
0001ad4: 01                                        ; i32 literal
0001ad5: 42                                        ; i64.const
0001ad6: 02                                        ; i64 literal
0001ad7: fe                                        ; prefix
0001ad8: 47                                        ; i64.atomic.rmw32_u.xchg
0001ad9: 02                                        ; alignment
0001ada: 03                                        ; memory offset
0001adb: 1a                                        ; drop
0001adc: 0b                                        ; end
0001ad1: 0b                                        ; FIXUP func body size
; function body 240
0001add: 00                                        ; func body size (guess)
0001ade: 00                                        ; local decl count
0001adf: 41                                        ; i32.const
0001ae0: 01                                        ; i32 literal
0001ae1: 41                                        ; i32.const
0001ae2: 02                                        ; i32 literal
0001ae3: 41                                        ; i32.const
0001ae4: 03                                        ; i32 literal
0001ae5: fe                                        ; prefix
0001ae6: 48                                        ; i32.atomic.rmw.cmpxchg
0001ae7: 02                                        ; alignment
0001ae8: 03                                        ; memory offset
0001ae9: 1a                                        ; drop
0001aea: 0b                                        ; end
0001add: 0d                                        ; FIXUP func body size
; function body 241
0001aeb: 00                                        ; func body size (guess)
0001aec: 00                                        ; local decl count
0001aed: 41                                        ; i32.const
0001aee: 01                                        ; i32 literal
0001aef: 42                                        ; i64.const
0001af0: 02                                        ; i64 literal
0001af1: 42                                        ; i64.const
0001af2: 03                                        ; i64 literal
0001af3: fe                                        ; prefix
0001af4: 49                                        ; i64.atomic.rmw.cmpxchg
0001af5: 03                                        ; alignment
0001af6: 07                                        ; memory offset
0001af7: 1a                                        ; drop
0001af8: 0b                                        ; end
0001aeb: 0d                                        ; FIXUP func body size
; function body 242
0001af9: 00                                        ; func body size (guess)
0001afa: 00                                        ; local decl count
0001afb: 41                                        ; i32.const
0001afc: 01                                        ; i32 literal
0001afd: 41                                        ; i32.const
0001afe: 02                                        ; i32 literal
0001aff: 41                                        ; i32.const
0001b00: 03                                        ; i32 literal
0001b01: fe                                        ; prefix
0001b02: 4a                                        ; i32.atomic.rmw8_u.cmpxchg
0001b03: 00                                        ; alignment
0001b04: 03                                        ; memory offset
0001b05: 1a                                        ; drop
0001b06: 0b                                        ; end
0001af9: 0d                                        ; FIXUP func body size
; function body 243
0001b07: 00                                        ; func body size (guess)
0001b08: 00                                        ; local decl count
0001b09: 41                                        ; i32.const
0001b0a: 01                                        ; i32 literal
0001b0b: 41                                        ; i32.const
0001b0c: 02                                        ; i32 literal
0001b0d: 41                                        ; i32.const
0001b0e: 03                                        ; i32 literal
0001b0f: fe                                        ; prefix
0001b10: 4b                                        ; i32.atomic.rmw16_u.cmpxchg
0001b11: 01                                        ; alignment
0001b12: 03                                        ; memory offset
0001b13: 1a                                        ; drop
0001b14: 0b                                        ; end
0001b07: 0d                                        ; FIXUP func body size
; function body 244
0001b15: 00                                        ; func body size (guess)
0001b16: 00                                        ; local decl count
0001b17: 41                                        ; i32.const
0001b18: 01                                        ; i32 literal
0001b19: 42                                        ; i64.const
0001b1a: 02                                        ; i64 literal
0001b1b: 42                                        ; i64.const
0001b1c: 03                                        ; i64 literal
0001b1d: fe                                        ; prefix
0001b1e: 4c                                        ; i64.atomic.rmw8_u.cmpxchg
0001b1f: 00                                        ; alignment
0001b20: 03                                        ; memory offset
0001b21: 1a                                        ; drop
0001b22: 0b                                        ; end
0001b15: 0d                                        ; FIXUP func body size
; function body 245
0001b23: 00                                        ; func body size (guess)
0001b24: 00                                        ; local decl count
0001b25: 41                                        ; i32.const
0001b26: 01                                        ; i32 literal
0001b27: 42                                        ; i64.const
0001b28: 02                                        ; i64 literal
0001b29: 42                                        ; i64.const
0001b2a: 03                                        ; i64 literal
0001b2b: fe                                        ; prefix
0001b2c: 4d                                        ; i64.atomic.rmw16_u.cmpxchg
0001b2d: 01                                        ; alignment
0001b2e: 03                                        ; memory offset
0001b2f: 1a                                        ; drop
0001b30: 0b                                        ; end
0001b23: 0d                                        ; FIXUP func body size
; function body 246
0001b31: 00                                        ; func body size (guess)
0001b32: 00                                        ; local decl count
0001b33: 41                                        ; i32.const
0001b34: 01                                        ; i32 literal
0001b35: 42                                        ; i64.const
0001b36: 02                                        ; i64 literal
0001b37: 42                                        ; i64.const
0001b38: 03                                        ; i64 literal
0001b39: fe                                        ; prefix
0001b3a: 4e                                        ; i64.atomic.rmw32_u.cmpxchg
0001b3b: 02                                        ; alignment
0001b3c: 03                                        ; memory offset
0001b3d: 1a                                        ; drop
0001b3e: 0b                                        ; end
0001b31: 0d                                        ; FIXUP func body size
; move data: [10b2, 1b3f) -> [10b3, 1b40)
00010b1: 8d15                                      ; FIXUP section size
BeginModule(version: 1)
  BeginTypeSection(8)
    OnTypeCount(2)
    OnType(index: 0, params: [], results: [])
    OnType(index: 1, params: [i32], results: [])
  EndTypeSection
  BeginImportSection(18)
    OnImportCount(1)
    OnImport(index: 0, module: "spectest", field: "print")
    OnImportFunc(import_index: 0, func_index: 0, sig_index: 1)
  EndImportSection
  BeginFunctionSection(249)
    OnFunctionCount(247)
    OnFunction(index: 1, sig_index: 0)
    OnFunction(index: 2, sig_index: 0)
    OnFunction(index: 3, sig_index: 0)
    OnFunction(index: 4, sig_index: 0)
    OnFunction(index: 5, sig_index: 0)
    OnFunction(index: 6, sig_index: 0)
    OnFunction(index: 7, sig_index: 0)
    OnFunction(index: 8, sig_index: 0)
    OnFunction(index: 9, sig_index: 0)
    OnFunction(index: 10, sig_index: 0)
    OnFunction(index: 11, sig_index: 0)
    OnFunction(index: 12, sig_index: 0)
    OnFunction(index: 13, sig_index: 0)
    OnFunction(index: 14, sig_index: 0)
    OnFunction(index: 15, sig_index: 0)
    OnFunction(index: 16, sig_index: 0)
    OnFunction(index: 17, sig_index: 0)
    OnFunction(index: 18, sig_index: 0)
    OnFunction(index: 19, sig_index: 0)
    OnFunction(index: 20, sig_index: 0)
    OnFunction(index: 21, sig_index: 0)
    OnFunction(index: 22, sig_index: 0)
    OnFunction(index: 23, sig_index: 0)
    OnFunction(index: 24, sig_index: 0)
    OnFunction(index: 25, sig_index: 0)
    OnFunction(index: 26, sig_index: 0)
    OnFunction(index: 27, sig_index: 0)
    OnFunction(index: 28, sig_index: 0)
    OnFunction(index: 29, sig_index: 0)
    OnFunction(index: 30, sig_index: 0)
    OnFunction(index: 31, sig_index: 0)
    OnFunction(index: 32, sig_index: 0)
    OnFunction(index: 33, sig_index: 0)
    OnFunction(index: 34, sig_index: 0)
    OnFunction(index: 35, sig_index: 0)
    OnFunction(index: 36, sig_index: 0)
    OnFunction(index: 37, sig_index: 0)
    OnFunction(index: 38, sig_index: 0)
    OnFunction(index: 39, sig_index: 0)
    OnFunction(index: 40, sig_index: 0)
    OnFunction(index: 41, sig_index: 0)
    OnFunction(index: 42, sig_index: 0)
    OnFunction(index: 43, sig_index: 0)
    OnFunction(index: 44, sig_index: 0)
    OnFunction(index: 45, sig_index: 0)
    OnFunction(index: 46, sig_index: 0)
    OnFunction(index: 47, sig_index: 0)
    OnFunction(index: 48, sig_index: 0)
    OnFunction(index: 49, sig_index: 0)
    OnFunction(index: 50, sig_index: 0)
    OnFunction(index: 51, sig_index: 0)
    OnFunction(index: 52, sig_index: 0)
    OnFunction(index: 53, sig_index: 0)
    OnFunction(index: 54, sig_index: 0)
    OnFunction(index: 55, sig_index: 0)
    OnFunction(index: 56, sig_index: 0)
    OnFunction(index: 57, sig_index: 0)
    OnFunction(index: 58, sig_index: 0)
    OnFunction(index: 59, sig_index: 0)
    OnFunction(index: 60, sig_index: 0)
    OnFunction(index: 61, sig_index: 0)
    OnFunction(index: 62, sig_index: 0)
    OnFunction(index: 63, sig_index: 0)
    OnFunction(index: 64, sig_index: 0)
    OnFunction(index: 65, sig_index: 0)
    OnFunction(index: 66, sig_index: 0)
    OnFunction(index: 67, sig_index: 0)
    OnFunction(index: 68, sig_index: 0)
    OnFunction(index: 69, sig_index: 0)
    OnFunction(index: 70, sig_index: 0)
    OnFunction(index: 71, sig_index: 0)
    OnFunction(index: 72, sig_index: 0)
    OnFunction(index: 73, sig_index: 0)
    OnFunction(index: 74, sig_index: 0)
    OnFunction(index: 75, sig_index: 0)
    OnFunction(index: 76, sig_index: 0)
    OnFunction(index: 77, sig_index: 0)
    OnFunction(index: 78, sig_index: 0)
    OnFunction(index: 79, sig_index: 0)
    OnFunction(index: 80, sig_index: 0)
    OnFunction(index: 81, sig_index: 0)
    OnFunction(index: 82, sig_index: 0)
    OnFunction(index: 83, sig_index: 0)
    OnFunction(index: 84, sig_index: 0)
    OnFunction(index: 85, sig_index: 0)
    OnFunction(index: 86, sig_index: 0)
    OnFunction(index: 87, sig_index: 0)
    OnFunction(index: 88, sig_index: 0)
    OnFunction(index: 89, sig_index: 0)
    OnFunction(index: 90, sig_index: 0)
    OnFunction(index: 91, sig_index: 0)
    OnFunction(index: 92, sig_index: 0)
    OnFunction(index: 93, sig_index: 0)
    OnFunction(index: 94, sig_index: 0)
    OnFunction(index: 95, sig_index: 0)
    OnFunction(index: 96, sig_index: 0)
    OnFunction(index: 97, sig_index: 0)
    OnFunction(index: 98, sig_index: 0)
    OnFunction(index: 99, sig_index: 0)
    OnFunction(index: 100, sig_index: 0)
    OnFunction(index: 101, sig_index: 0)
    OnFunction(index: 102, sig_index: 0)
    OnFunction(index: 103, sig_index: 0)
    OnFunction(index: 104, sig_index: 0)
    OnFunction(index: 105, sig_index: 0)
    OnFunction(index: 106, sig_index: 0)
    OnFunction(index: 107, sig_index: 0)
    OnFunction(index: 108, sig_index: 0)
    OnFunction(index: 109, sig_index: 0)
    OnFunction(index: 110, sig_index: 0)
    OnFunction(index: 111, sig_index: 0)
    OnFunction(index: 112, sig_index: 0)
    OnFunction(index: 113, sig_index: 0)
    OnFunction(index: 114, sig_index: 0)
    OnFunction(index: 115, sig_index: 0)
    OnFunction(index: 116, sig_index: 0)
    OnFunction(index: 117, sig_index: 0)
    OnFunction(index: 118, sig_index: 0)
    OnFunction(index: 119, sig_index: 0)
    OnFunction(index: 120, sig_index: 0)
    OnFunction(index: 121, sig_index: 0)
    OnFunction(index: 122, sig_index: 0)
    OnFunction(index: 123, sig_index: 0)
    OnFunction(index: 124, sig_index: 0)
    OnFunction(index: 125, sig_index: 0)
    OnFunction(index: 126, sig_index: 0)
    OnFunction(index: 127, sig_index: 0)
    OnFunction(index: 128, sig_index: 0)
    OnFunction(index: 129, sig_index: 0)
    OnFunction(index: 130, sig_index: 0)
    OnFunction(index: 131, sig_index: 0)
    OnFunction(index: 132, sig_index: 0)
    OnFunction(index: 133, sig_index: 0)
    OnFunction(index: 134, sig_index: 0)
    OnFunction(index: 135, sig_index: 0)
    OnFunction(index: 136, sig_index: 0)
    OnFunction(index: 137, sig_index: 0)
    OnFunction(index: 138, sig_index: 0)
    OnFunction(index: 139, sig_index: 0)
    OnFunction(index: 140, sig_index: 0)
    OnFunction(index: 141, sig_index: 0)
    OnFunction(index: 142, sig_index: 0)
    OnFunction(index: 143, sig_index: 0)
    OnFunction(index: 144, sig_index: 0)
    OnFunction(index: 145, sig_index: 0)
    OnFunction(index: 146, sig_index: 0)
    OnFunction(index: 147, sig_index: 0)
    OnFunction(index: 148, sig_index: 0)
    OnFunction(index: 149, sig_index: 0)
    OnFunction(index: 150, sig_index: 0)
    OnFunction(index: 151, sig_index: 0)
    OnFunction(index: 152, sig_index: 0)
    OnFunction(index: 153, sig_index: 0)
    OnFunction(index: 154, sig_index: 0)
    OnFunction(index: 155, sig_index: 0)
    OnFunction(index: 156, sig_index: 0)
    OnFunction(index: 157, sig_index: 0)
    OnFunction(index: 158, sig_index: 0)
    OnFunction(index: 159, sig_index: 0)
    OnFunction(index: 160, sig_index: 0)
    OnFunction(index: 161, sig_index: 0)
    OnFunction(index: 162, sig_index: 0)
    OnFunction(index: 163, sig_index: 0)
    OnFunction(index: 164, sig_index: 0)
    OnFunction(index: 165, sig_index: 0)
    OnFunction(index: 166, sig_index: 0)
    OnFunction(index: 167, sig_index: 0)
    OnFunction(index: 168, sig_index: 0)
    OnFunction(index: 169, sig_index: 0)
    OnFunction(index: 170, sig_index: 0)
    OnFunction(index: 171, sig_index: 0)
    OnFunction(index: 172, sig_index: 0)
    OnFunction(index: 173, sig_index: 0)
    OnFunction(index: 174, sig_index: 0)
    OnFunction(index: 175, sig_index: 0)
    OnFunction(index: 176, sig_index: 0)
    OnFunction(index: 177, sig_index: 0)
    OnFunction(index: 178, sig_index: 0)
    OnFunction(index: 179, sig_index: 0)
    OnFunction(index: 180, sig_index: 0)
    OnFunction(index: 181, sig_index: 0)
    OnFunction(index: 182, sig_index: 0)
    OnFunction(index: 183, sig_index: 0)
    OnFunction(index: 184, sig_index: 0)
    OnFunction(index: 185, sig_index: 0)
    OnFunction(index: 186, sig_index: 0)
    OnFunction(index: 187, sig_index: 0)
    OnFunction(index: 188, sig_index: 0)
    OnFunction(index: 189, sig_index: 0)
    OnFunction(index: 190, sig_index: 0)
    OnFunction(index: 191, sig_index: 0)
    OnFunction(index: 192, sig_index: 0)
    OnFunction(index: 193, sig_index: 0)
    OnFunction(index: 194, sig_index: 0)
    OnFunction(index: 195, sig_index: 0)
    OnFunction(index: 196, sig_index: 0)
    OnFunction(index: 197, sig_index: 0)
    OnFunction(index: 198, sig_index: 0)
    OnFunction(index: 199, sig_index: 0)
    OnFunction(index: 200, sig_index: 0)
    OnFunction(index: 201, sig_index: 0)
    OnFunction(index: 202, sig_index: 0)
    OnFunction(index: 203, sig_index: 0)
    OnFunction(index: 204, sig_index: 0)
    OnFunction(index: 205, sig_index: 0)
    OnFunction(index: 206, sig_index: 0)
    OnFunction(index: 207, sig_index: 0)
    OnFunction(index: 208, sig_index: 0)
    OnFunction(index: 209, sig_index: 0)
    OnFunction(index: 210, sig_index: 0)
    OnFunction(index: 211, sig_index: 0)
    OnFunction(index: 212, sig_index: 0)
    OnFunction(index: 213, sig_index: 0)
    OnFunction(index: 214, sig_index: 0)
    OnFunction(index: 215, sig_index: 0)
    OnFunction(index: 216, sig_index: 0)
    OnFunction(index: 217, sig_index: 0)
    OnFunction(index: 218, sig_index: 0)
    OnFunction(index: 219, sig_index: 0)
    OnFunction(index: 220, sig_index: 0)
    OnFunction(index: 221, sig_index: 0)
    OnFunction(index: 222, sig_index: 0)
    OnFunction(index: 223, sig_index: 0)
    OnFunction(index: 224, sig_index: 0)
    OnFunction(index: 225, sig_index: 0)
    OnFunction(index: 226, sig_index: 0)
    OnFunction(index: 227, sig_index: 0)
    OnFunction(index: 228, sig_index: 0)
    OnFunction(index: 229, sig_index: 0)
    OnFunction(index: 230, sig_index: 0)
    OnFunction(index: 231, sig_index: 0)
    OnFunction(index: 232, sig_index: 0)
    OnFunction(index: 233, sig_index: 0)
    OnFunction(index: 234, sig_index: 0)
    OnFunction(index: 235, sig_index: 0)
    OnFunction(index: 236, sig_index: 0)
    OnFunction(index: 237, sig_index: 0)
    OnFunction(index: 238, sig_index: 0)
    OnFunction(index: 239, sig_index: 0)
    OnFunction(index: 240, sig_index: 0)
    OnFunction(index: 241, sig_index: 0)
    OnFunction(index: 242, sig_index: 0)
    OnFunction(index: 243, sig_index: 0)
    OnFunction(index: 244, sig_index: 0)
    OnFunction(index: 245, sig_index: 0)
    OnFunction(index: 246, sig_index: 0)
    OnFunction(index: 247, sig_index: 0)
  EndFunctionSection
  BeginTableSection(5)
    OnTableCount(1)
    OnTable(index: 0, elem_type: anyfunc, initial: 2, max: 2)
  EndTableSection
  BeginMemorySection(4)
    OnMemoryCount(1)
    OnMemory(index: 0, initial: 1, max: 1)
  EndMemorySection
  BeginGlobalSection(6)
    OnGlobalCount(1)
    BeginGlobal(index: 0, type: i32, mutable: true)
    BeginGlobalInitExpr(0)
    OnInitExprI32ConstExpr(index: 0, value: 0)
    EndGlobalInitExpr(0)
    EndGlobal(0)
  EndGlobalSection
  BeginExportSection(3948)
    OnExportCount(246)
    OnExport(index: 0, kind: func, item_index: 2, name: "unreachable")
    OnExport(index: 1, kind: func, item_index: 3, name: "br")
    OnExport(index: 2, kind: func, item_index: 4, name: "br_table")
    OnExport(index: 3, kind: func, item_index: 5, name: "return")
    OnExport(index: 4, kind: func, item_index: 6, name: "call")
    OnExport(index: 5, kind: func, item_index: 7, name: "call_indirect")
    OnExport(index: 6, kind: func, item_index: 8, name: "drop")
    OnExport(index: 7, kind: func, item_index: 9, name: "select")
    OnExport(index: 8, kind: func, item_index: 10, name: "get_local")
    OnExport(index: 9, kind: func, item_index: 11, name: "set_local")
    OnExport(index: 10, kind: func, item_index: 12, name: "tee_local")
    OnExport(index: 11, kind: func, item_index: 13, name: "get_global")
    OnExport(index: 12, kind: func, item_index: 14, name: "set_global")
    OnExport(index: 13, kind: func, item_index: 15, name: "i32.load")
    OnExport(index: 14, kind: func, item_index: 16, name: "i64.load")
    OnExport(index: 15, kind: func, item_index: 17, name: "f32.load")
    OnExport(index: 16, kind: func, item_index: 18, name: "f64.load")
    OnExport(index: 17, kind: func, item_index: 19, name: "i32.load8_s")
    OnExport(index: 18, kind: func, item_index: 20, name: "i32.load8_u")
    OnExport(index: 19, kind: func, item_index: 21, name: "i32.load16_s")
    OnExport(index: 20, kind: func, item_index: 22, name: "i32.load16_u")
    OnExport(index: 21, kind: func, item_index: 23, name: "i64.load8_s")
    OnExport(index: 22, kind: func, item_index: 24, name: "i64.load8_u")
    OnExport(index: 23, kind: func, item_index: 25, name: "i64.load16_s")
    OnExport(index: 24, kind: func, item_index: 26, name: "i64.load16_u")
    OnExport(index: 25, kind: func, item_index: 27, name: "i64.load32_s")
    OnExport(index: 26, kind: func, item_index: 28, name: "i64.load32_u")
    OnExport(index: 27, kind: func, item_index: 29, name: "i32.store")
    OnExport(index: 28, kind: func, item_index: 30, name: "i64.store")
    OnExport(index: 29, kind: func, item_index: 31, name: "f32.store")
    OnExport(index: 30, kind: func, item_index: 32, name: "f64.store")
    OnExport(index: 31, kind: func, item_index: 33, name: "i32.store8")
    OnExport(index: 32, kind: func, item_index: 34, name: "i32.store16")
    OnExport(index: 33, kind: func, item_index: 35, name: "i64.store8")
    OnExport(index: 34, kind: func, item_index: 36, name: "i64.store16")
    OnExport(index: 35, kind: func, item_index: 37, name: "i64.store32")
    OnExport(index: 36, kind: func, item_index: 38, name: "current_memory")
    OnExport(index: 37, kind: func, item_index: 39, name: "grow_memory")
    OnExport(index: 38, kind: func, item_index: 40, name: "i32.const")
    OnExport(index: 39, kind: func, item_index: 41, name: "i64.const")
    OnExport(index: 40, kind: func, item_index: 42, name: "f32.const")
    OnExport(index: 41, kind: func, item_index: 43, name: "f64.const")
    OnExport(index: 42, kind: func, item_index: 44, name: "i32.eqz")
    OnExport(index: 43, kind: func, item_index: 45, name: "i32.eq")
    OnExport(index: 44, kind: func, item_index: 46, name: "i32.ne")
    OnExport(index: 45, kind: func, item_index: 47, name: "i32.lt_s")
    OnExport(index: 46, kind: func, item_index: 48, name: "i32.lt_u")
    OnExport(index: 47, kind: func, item_index: 49, name: "i32.gt_s")
    OnExport(index: 48, kind: func, item_index: 50, name: "i32.gt_u")
    OnExport(index: 49, kind: func, item_index: 51, name: "i32.le_s")
    OnExport(index: 50, kind: func, item_index: 52, name: "i32.le_u")
    OnExport(index: 51, kind: func, item_index: 53, name: "i32.ge_s")
    OnExport(index: 52, kind: func, item_index: 54, name: "i32.ge_u")
    OnExport(index: 53, kind: func, item_index: 55, name: "i64.eqz")
    OnExport(index: 54, kind: func, item_index: 56, name: "i64.eq")
    OnExport(index: 55, kind: func, item_index: 57, name: "i64.ne")
    OnExport(index: 56, kind: func, item_index: 58, name: "i64.lt_s")
    OnExport(index: 57, kind: func, item_index: 59, name: "i64.lt_u")
    OnExport(index: 58, kind: func, item_index: 60, name: "i64.gt_s")
    OnExport(index: 59, kind: func, item_index: 61, name: "i64.gt_u")
    OnExport(index: 60, kind: func, item_index: 62, name: "i64.le_s")
    OnExport(index: 61, kind: func, item_index: 63, name: "i64.le_u")
    OnExport(index: 62, kind: func, item_index: 64, name: "i64.ge_s")
    OnExport(index: 63, kind: func, item_index: 65, name: "i64.ge_u")
    OnExport(index: 64, kind: func, item_index: 66, name: "f32.eq")
    OnExport(index: 65, kind: func, item_index: 67, name: "f32.ne")
    OnExport(index: 66, kind: func, item_index: 68, name: "f32.lt")
    OnExport(index: 67, kind: func, item_index: 69, name: "f32.gt")
    OnExport(index: 68, kind: func, item_index: 70, name: "f32.le")
    OnExport(index: 69, kind: func, item_index: 71, name: "f32.ge")
    OnExport(index: 70, kind: func, item_index: 72, name: "f64.eq")
    OnExport(index: 71, kind: func, item_index: 73, name: "f64.ne")
    OnExport(index: 72, kind: func, item_index: 74, name: "f64.lt")
    OnExport(index: 73, kind: func, item_index: 75, name: "f64.gt")
    OnExport(index: 74, kind: func, item_index: 76, name: "f64.le")
    OnExport(index: 75, kind: func, item_index: 77, name: "f64.ge")
    OnExport(index: 76, kind: func, item_index: 78, name: "i32.clz")
    OnExport(index: 77, kind: func, item_index: 79, name: "i32.ctz")
    OnExport(index: 78, kind: func, item_index: 80, name: "i32.popcnt")
    OnExport(index: 79, kind: func, item_index: 81, name: "i32.add")
    OnExport(index: 80, kind: func, item_index: 82, name: "i32.sub")
    OnExport(index: 81, kind: func, item_index: 83, name: "i32.mul")
    OnExport(index: 82, kind: func, item_index: 84, name: "i32.div_s")
    OnExport(index: 83, kind: func, item_index: 85, name: "i32.div_u")
    OnExport(index: 84, kind: func, item_index: 86, name: "i32.rem_s")
    OnExport(index: 85, kind: func, item_index: 87, name: "i32.rem_u")
    OnExport(index: 86, kind: func, item_index: 88, name: "i32.and")
    OnExport(index: 87, kind: func, item_index: 89, name: "i32.or")
    OnExport(index: 88, kind: func, item_index: 90, name: "i32.xor")
    OnExport(index: 89, kind: func, item_index: 91, name: "i32.shl")
    OnExport(index: 90, kind: func, item_index: 92, name: "i32.shr_s")
    OnExport(index: 91, kind: func, item_index: 93, name: "i32.shr_u")
    OnExport(index: 92, kind: func, item_index: 94, name: "i32.rotl")
    OnExport(index: 93, kind: func, item_index: 95, name: "i32.rotr")
    OnExport(index: 94, kind: func, item_index: 96, name: "i64.clz")
    OnExport(index: 95, kind: func, item_index: 97, name: "i64.ctz")
    OnExport(index: 96, kind: func, item_index: 98, name: "i64.popcnt")
    OnExport(index: 97, kind: func, item_index: 99, name: "i64.add")
    OnExport(index: 98, kind: func, item_index: 100, name: "i64.sub")
    OnExport(index: 99, kind: func, item_index: 101, name: "i64.mul")
    OnExport(index: 100, kind: func, item_index: 102, name: "i64.div_s")
    OnExport(index: 101, kind: func, item_index: 103, name: "i64.div_u")
    OnExport(index: 102, kind: func, item_index: 104, name: "i64.rem_s")
    OnExport(index: 103, kind: func, item_index: 105, name: "i64.rem_u")
    OnExport(index: 104, kind: func, item_index: 106, name: "i64.and")
    OnExport(index: 105, kind: func, item_index: 107, name: "i64.or")
    OnExport(index: 106, kind: func, item_index: 108, name: "i64.xor")
    OnExport(index: 107, kind: func, item_index: 109, name: "i64.shl")
    OnExport(index: 108, kind: func, item_index: 110, name: "i64.shr_s")
    OnExport(index: 109, kind: func, item_index: 111, name: "i64.shr_u")
    OnExport(index: 110, kind: func, item_index: 112, name: "i64.rotl")
    OnExport(index: 111, kind: func, item_index: 113, name: "i64.rotr")
    OnExport(index: 112, kind: func, item_index: 114, name: "f32.abs")
    OnExport(index: 113, kind: func, item_index: 115, name: "f32.neg")
    OnExport(index: 114, kind: func, item_index: 116, name: "f32.ceil")
    OnExport(index: 115, kind: func, item_index: 117, name: "f32.floor")
    OnExport(index: 116, kind: func, item_index: 118, name: "f32.trunc")
    OnExport(index: 117, kind: func, item_index: 119, name: "f32.nearest")
    OnExport(index: 118, kind: func, item_index: 120, name: "f32.sqrt")
    OnExport(index: 119, kind: func, item_index: 121, name: "f32.add")
    OnExport(index: 120, kind: func, item_index: 122, name: "f32.sub")
    OnExport(index: 121, kind: func, item_index: 123, name: "f32.mul")
    OnExport(index: 122, kind: func, item_index: 124, name: "f32.div")
    OnExport(index: 123, kind: func, item_index: 125, name: "f32.min")
    OnExport(index: 124, kind: func, item_index: 126, name: "f32.max")
    OnExport(index: 125, kind: func, item_index: 127, name: "f32.copysign")
    OnExport(index: 126, kind: func, item_index: 128, name: "f64.abs")
    OnExport(index: 127, kind: func, item_index: 129, name: "f64.neg")
    OnExport(index: 128, kind: func, item_index: 130, name: "f64.ceil")
    OnExport(index: 129, kind: func, item_index: 131, name: "f64.floor")
    OnExport(index: 130, kind: func, item_index: 132, name: "f64.trunc")
    OnExport(index: 131, kind: func, item_index: 133, name: "f64.nearest")
    OnExport(index: 132, kind: func, item_index: 134, name: "f64.sqrt")
    OnExport(index: 133, kind: func, item_index: 135, name: "f64.add")
    OnExport(index: 134, kind: func, item_index: 136, name: "f64.sub")
    OnExport(index: 135, kind: func, item_index: 137, name: "f64.mul")
    OnExport(index: 136, kind: func, item_index: 138, name: "f64.div")
    OnExport(index: 137, kind: func, item_index: 139, name: "f64.min")
    OnExport(index: 138, kind: func, item_index: 140, name: "f64.max")
    OnExport(index: 139, kind: func, item_index: 141, name: "f64.copysign")
    OnExport(index: 140, kind: func, item_index: 142, name: "i32.wrap/i64")
    OnExport(index: 141, kind: func, item_index: 143, name: "i32.trunc_s/f32")
    OnExport(index: 142, kind: func, item_index: 144, name: "i32.trunc_u/f32")
    OnExport(index: 143, kind: func, item_index: 145, name: "i32.trunc_s/f64")
    OnExport(index: 144, kind: func, item_index: 146, name: "i32.trunc_u/f64")
    OnExport(index: 145, kind: func, item_index: 147, name: "i64.extend_s/i32")
    OnExport(index: 146, kind: func, item_index: 148, name: "i64.extend_u/i32")
    OnExport(index: 147, kind: func, item_index: 149, name: "i64.trunc_s/f32")
    OnExport(index: 148, kind: func, item_index: 150, name: "i64.trunc_u/f32")
    OnExport(index: 149, kind: func, item_index: 151, name: "i64.trunc_s/f64")
    OnExport(index: 150, kind: func, item_index: 152, name: "i64.trunc_u/f64")
    OnExport(index: 151, kind: func, item_index: 153, name: "f32.convert_s/i32")
    OnExport(index: 152, kind: func, item_index: 154, name: "f32.convert_u/i32")
    OnExport(index: 153, kind: func, item_index: 155, name: "f32.convert_s/i64")
    OnExport(index: 154, kind: func, item_index: 156, name: "f32.convert_u/i64")
    OnExport(index: 155, kind: func, item_index: 157, name: "f32.demote/f64")
    OnExport(index: 156, kind: func, item_index: 158, name: "f64.convert_s/i32")
    OnExport(index: 157, kind: func, item_index: 159, name: "f64.convert_u/i32")
    OnExport(index: 158, kind: func, item_index: 160, name: "f64.convert_s/i64")
    OnExport(index: 159, kind: func, item_index: 161, name: "f64.convert_u/i64")
    OnExport(index: 160, kind: func, item_index: 162, name: "f64.promote/f32")
    OnExport(index: 161, kind: func, item_index: 163, name: "i32.reinterpret/f32")
    OnExport(index: 162, kind: func, item_index: 164, name: "f32.reinterpret/i32")
    OnExport(index: 163, kind: func, item_index: 165, name: "i64.reinterpret/f64")
    OnExport(index: 164, kind: func, item_index: 166, name: "f64.reinterpret/i64")
    OnExport(index: 165, kind: func, item_index: 167, name: "i32.extend8_s")
    OnExport(index: 166, kind: func, item_index: 168, name: "i32.extend16_s")
    OnExport(index: 167, kind: func, item_index: 169, name: "i64.extend8_s")
    OnExport(index: 168, kind: func, item_index: 170, name: "i64.extend16_s")
    OnExport(index: 169, kind: func, item_index: 171, name: "i64.extend32_s")
    OnExport(index: 170, kind: func, item_index: 172, name: "alloca")
    OnExport(index: 171, kind: func, item_index: 173, name: "br_unless")
    OnExport(index: 172, kind: func, item_index: 174, name: "call_host")
    OnExport(index: 173, kind: func, item_index: 175, name: "data")
    OnExport(index: 174, kind: func, item_index: 176, name: "drop_keep")
    OnExport(index: 175, kind: func, item_index: 177, name: "i32.trunc_s:sat/f32")
    OnExport(index: 176, kind: func, item_index: 178, name: "i32.trunc_u:sat/f32")
    OnExport(index: 177, kind: func, item_index: 179, name: "i32.trunc_s:sat/f64")
    OnExport(index: 178, kind: func, item_index: 180, name: "i32.trunc_u:sat/f64")
    OnExport(index: 179, kind: func, item_index: 181, name: "i64.trunc_s:sat/f32")
    OnExport(index: 180, kind: func, item_index: 182, name: "i64.trunc_u:sat/f32")
    OnExport(index: 181, kind: func, item_index: 183, name: "i64.trunc_s:sat/f64")
    OnExport(index: 182, kind: func, item_index: 184, name: "i64.trunc_u:sat/f64")
    OnExport(index: 183, kind: func, item_index: 185, name: "i32.atomic.load")
    OnExport(index: 184, kind: func, item_index: 186, name: "i64.atomic.load")
    OnExport(index: 185, kind: func, item_index: 187, name: "i32.atomic.load8_u")
    OnExport(index: 186, kind: func, item_index: 188, name: "i32.atomic.load16_u")
    OnExport(index: 187, kind: func, item_index: 189, name: "i64.atomic.load8_u")
    OnExport(index: 188, kind: func, item_index: 190, name: "i64.atomic.load16_u")
    OnExport(index: 189, kind: func, item_index: 191, name: "i64.atomic.load32_u")
    OnExport(index: 190, kind: func, item_index: 192, name: "i32.atomic.store")
    OnExport(index: 191, kind: func, item_index: 193, name: "i64.atomic.store")
    OnExport(index: 192, kind: func, item_index: 194, name: "i32.atomic.store8")
    OnExport(index: 193, kind: func, item_index: 195, name: "i32.atomic.store16")
    OnExport(index: 194, kind: func, item_index: 196, name: "i64.atomic.store8")
    OnExport(index: 195, kind: func, item_index: 197, name: "i64.atomic.store16")
    OnExport(index: 196, kind: func, item_index: 198, name: "i64.atomic.store32")
    OnExport(index: 197, kind: func, item_index: 199, name: "i32.atomic.rmw.add")
    OnExport(index: 198, kind: func, item_index: 200, name: "i64.atomic.rmw.add")
    OnExport(index: 199, kind: func, item_index: 201, name: "i32.atomic.rmw8_u.add")
    OnExport(index: 200, kind: func, item_index: 202, name: "i32.atomic.rmw16_u.add")
    OnExport(index: 201, kind: func, item_index: 203, name: "i64.atomic.rmw8_u.add")
    OnExport(index: 202, kind: func, item_index: 204, name: "i64.atomic.rmw16_u.add")
    OnExport(index: 203, kind: func, item_index: 205, name: "i64.atomic.rmw32_u.add")
    OnExport(index: 204, kind: func, item_index: 206, name: "i32.atomic.rmw.sub")
    OnExport(index: 205, kind: func, item_index: 207, name: "i64.atomic.rmw.sub")
    OnExport(index: 206, kind: func, item_index: 208, name: "i32.atomic.rmw8_u.sub")
    OnExport(index: 207, kind: func, item_index: 209, name: "i32.atomic.rmw16_u.sub")
    OnExport(index: 208, kind: func, item_index: 210, name: "i64.atomic.rmw8_u.sub")
    OnExport(index: 209, kind: func, item_index: 211, name: "i64.atomic.rmw16_u.sub")
    OnExport(index: 210, kind: func, item_index: 212, name: "i64.atomic.rmw32_u.sub")
    OnExport(index: 211, kind: func, item_index: 213, name: "i32.atomic.rmw.and")
    OnExport(index: 212, kind: func, item_index: 214, name: "i64.atomic.rmw.and")
    OnExport(index: 213, kind: func, item_index: 215, name: "i32.atomic.rmw8_u.and")
    OnExport(index: 214, kind: func, item_index: 216, name: "i32.atomic.rmw16_u.and")
    OnExport(index: 215, kind: func, item_index: 217, name: "i64.atomic.rmw8_u.and")
    OnExport(index: 216, kind: func, item_index: 218, name: "i64.atomic.rmw16_u.and")
    OnExport(index: 217, kind: func, item_index: 219, name: "i64.atomic.rmw32_u.and")
    OnExport(index: 218, kind: func, item_index: 220, name: "i32.atomic.rmw.or")
    OnExport(index: 219, kind: func, item_index: 221, name: "i64.atomic.rmw.or")
    OnExport(index: 220, kind: func, item_index: 222, name: "i32.atomic.rmw8_u.or")
    OnExport(index: 221, kind: func, item_index: 223, name: "i32.atomic.rmw16_u.or")
    OnExport(index: 222, kind: func, item_index: 224, name: "i64.atomic.rmw8_u.or")
    OnExport(index: 223, kind: func, item_index: 225, name: "i64.atomic.rmw16_u.or")
    OnExport(index: 224, kind: func, item_index: 226, name: "i64.atomic.rmw32_u.or")
    OnExport(index: 225, kind: func, item_index: 227, name: "i32.atomic.rmw.xor")
    OnExport(index: 226, kind: func, item_index: 228, name: "i64.atomic.rmw.xor")
    OnExport(index: 227, kind: func, item_index: 229, name: "i32.atomic.rmw8_u.xor")
    OnExport(index: 228, kind: func, item_index: 230, name: "i32.atomic.rmw16_u.xor")
    OnExport(index: 229, kind: func, item_index: 231, name: "i64.atomic.rmw8_u.xor")
    OnExport(index: 230, kind: func, item_index: 232, name: "i64.atomic.rmw16_u.xor")
    OnExport(index: 231, kind: func, item_index: 233, name: "i64.atomic.rmw32_u.xor")
    OnExport(index: 232, kind: func, item_index: 234, name: "i32.atomic.rmw.xchg")
    OnExport(index: 233, kind: func, item_index: 235, name: "i64.atomic.rmw.xchg")
    OnExport(index: 234, kind: func, item_index: 236, name: "i32.atomic.rmw8_u.xchg")
    OnExport(index: 235, kind: func, item_index: 237, name: "i32.atomic.rmw16_u.xchg")
    OnExport(index: 236, kind: func, item_index: 238, name: "i64.atomic.rmw8_u.xchg")
    OnExport(index: 237, kind: func, item_index: 239, name: "i64.atomic.rmw16_u.xchg")
    OnExport(index: 238, kind: func, item_index: 240, name: "i64.atomic.rmw32_u.xchg")
    OnExport(index: 239, kind: func, item_index: 241, name: "i32.atomic.rmw.cmpxchg")
    OnExport(index: 240, kind: func, item_index: 242, name: "i64.atomic.rmw.cmpxchg")
    OnExport(index: 241, kind: func, item_index: 243, name: "i32.atomic.rmw8_u.cmpxchg")
    OnExport(index: 242, kind: func, item_index: 244, name: "i32.atomic.rmw16_u.cmpxchg")
    OnExport(index: 243, kind: func, item_index: 245, name: "i64.atomic.rmw8_u.cmpxchg")
    OnExport(index: 244, kind: func, item_index: 246, name: "i64.atomic.rmw16_u.cmpxchg")
    OnExport(index: 245, kind: func, item_index: 247, name: "i64.atomic.rmw32_u.cmpxchg")
  EndExportSection
  BeginElemSection(8)
    OnElemSegmentCount(1)
    BeginElemSegment(index: 0, table_index: 0)
    BeginElemSegmentInitExpr(0)
    OnInitExprI32ConstExpr(index: 0, value: 0)
    EndElemSegmentInitExpr(0)
    OnElemSegmentFunctionIndexCount(index: 0, count: 2)
    OnElemSegmentFunctionIndex(index: 0, func_index: 1)
    OnElemSegmentFunctionIndex(index: 0, func_index: 1)
    EndElemSegment(0)
  EndElemSection
  BeginCodeSection(2701)
    OnFunctionBodyCount(247)
    BeginFunctionBody(1)
    OnLocalDeclCount(0)
    EndFunctionBody(1)
    BeginFunctionBody(2)
    OnLocalDeclCount(0)
    OnUnreachableExpr
    EndFunctionBody(2)
    BeginFunctionBody(3)
    OnLocalDeclCount(0)
    OnBrExpr(depth: 0)
    EndFunctionBody(3)
    BeginFunctionBody(4)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrTableExpr(num_targets: 0, depths: [], default: 0)
    EndFunctionBody(4)
    BeginFunctionBody(5)
    OnLocalDeclCount(0)
    OnReturnExpr
    EndFunctionBody(5)
    BeginFunctionBody(6)
    OnLocalDeclCount(0)
    OnCallExpr(func_index: 1)
    EndFunctionBody(6)
    BeginFunctionBody(7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnCallIndirectExpr(sig_index: 0)
    EndFunctionBody(7)
    BeginFunctionBody(8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(8)
    BeginFunctionBody(9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnSelectExpr
    OnDropExpr
    EndFunctionBody(9)
    BeginFunctionBody(10)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnGetLocalExpr(index: 0)
    OnDropExpr
    EndFunctionBody(10)
    BeginFunctionBody(11)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnI32ConstExpr(1 (0x1))
    OnSetLocalExpr(index: 0)
    EndFunctionBody(11)
    BeginFunctionBody(12)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnI32ConstExpr(1 (0x1))
    OnTeeLocalExpr(index: 0)
    OnDropExpr
    EndFunctionBody(12)
    BeginFunctionBody(13)
    OnLocalDeclCount(0)
    OnGetGlobalExpr(index: 0)
    OnDropExpr
    EndFunctionBody(13)
    BeginFunctionBody(14)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnSetGlobalExpr(index: 0)
    EndFunctionBody(14)
    BeginFunctionBody(15)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load" (40), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(15)
    BeginFunctionBody(16)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load" (41), align log2: 3, offset: 2)
    OnDropExpr
    EndFunctionBody(16)
    BeginFunctionBody(17)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "f32.load" (42), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(17)
    BeginFunctionBody(18)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "f64.load" (43), align log2: 3, offset: 2)
    OnDropExpr
    EndFunctionBody(18)
    BeginFunctionBody(19)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load8_s" (44), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(19)
    BeginFunctionBody(20)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load8_u" (45), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(20)
    BeginFunctionBody(21)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load16_s" (46), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(21)
    BeginFunctionBody(22)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load16_u" (47), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(22)
    BeginFunctionBody(23)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load8_s" (48), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(23)
    BeginFunctionBody(24)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load8_u" (49), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(24)
    BeginFunctionBody(25)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load16_s" (50), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(25)
    BeginFunctionBody(26)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load16_u" (51), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(26)
    BeginFunctionBody(27)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load32_s" (52), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(27)
    BeginFunctionBody(28)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load32_u" (53), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(28)
    BeginFunctionBody(29)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store" (54), align log2: 2, offset: 2)
    EndFunctionBody(29)
    BeginFunctionBody(30)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store" (55), align log2: 3, offset: 2)
    EndFunctionBody(30)
    BeginFunctionBody(31)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnF32ConstExpr(2 (0x0440000000))
    OnStoreExpr(opcode: "f32.store" (56), align log2: 2, offset: 2)
    EndFunctionBody(31)
    BeginFunctionBody(32)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnStoreExpr(opcode: "f64.store" (57), align log2: 3, offset: 2)
    EndFunctionBody(32)
    BeginFunctionBody(33)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store8" (58), align log2: 0, offset: 2)
    EndFunctionBody(33)
    BeginFunctionBody(34)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store16" (59), align log2: 1, offset: 2)
    EndFunctionBody(34)
    BeginFunctionBody(35)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store8" (60), align log2: 0, offset: 2)
    EndFunctionBody(35)
    BeginFunctionBody(36)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store16" (61), align log2: 1, offset: 2)
    EndFunctionBody(36)
    BeginFunctionBody(37)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store32" (62), align log2: 2, offset: 2)
    EndFunctionBody(37)
    BeginFunctionBody(38)
    OnLocalDeclCount(0)
    OnCurrentMemoryExpr
    OnDropExpr
    EndFunctionBody(38)
    BeginFunctionBody(39)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnGrowMemoryExpr
    OnDropExpr
    EndFunctionBody(39)
    BeginFunctionBody(40)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(40)
    BeginFunctionBody(41)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(41)
    BeginFunctionBody(42)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnDropExpr
    EndFunctionBody(42)
    BeginFunctionBody(43)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnDropExpr
    EndFunctionBody(43)
    BeginFunctionBody(44)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i32.eqz" (69))
    OnDropExpr
    EndFunctionBody(44)
    BeginFunctionBody(45)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.eq" (70))
    OnDropExpr
    EndFunctionBody(45)
    BeginFunctionBody(46)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ne" (71))
    OnDropExpr
    EndFunctionBody(46)
    BeginFunctionBody(47)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.lt_s" (72))
    OnDropExpr
    EndFunctionBody(47)
    BeginFunctionBody(48)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.lt_u" (73))
    OnDropExpr
    EndFunctionBody(48)
    BeginFunctionBody(49)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.gt_s" (74))
    OnDropExpr
    EndFunctionBody(49)
    BeginFunctionBody(50)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.gt_u" (75))
    OnDropExpr
    EndFunctionBody(50)
    BeginFunctionBody(51)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.le_s" (76))
    OnDropExpr
    EndFunctionBody(51)
    BeginFunctionBody(52)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.le_u" (77))
    OnDropExpr
    EndFunctionBody(52)
    BeginFunctionBody(53)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ge_s" (78))
    OnDropExpr
    EndFunctionBody(53)
    BeginFunctionBody(54)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ge_u" (79))
    OnDropExpr
    EndFunctionBody(54)
    BeginFunctionBody(55)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("i64.eqz" (80))
    OnDropExpr
    EndFunctionBody(55)
    BeginFunctionBody(56)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.eq" (81))
    OnDropExpr
    EndFunctionBody(56)
    BeginFunctionBody(57)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ne" (82))
    OnDropExpr
    EndFunctionBody(57)
    BeginFunctionBody(58)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.lt_s" (83))
    OnDropExpr
    EndFunctionBody(58)
    BeginFunctionBody(59)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.lt_u" (84))
    OnDropExpr
    EndFunctionBody(59)
    BeginFunctionBody(60)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.gt_s" (85))
    OnDropExpr
    EndFunctionBody(60)
    BeginFunctionBody(61)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.gt_u" (86))
    OnDropExpr
    EndFunctionBody(61)
    BeginFunctionBody(62)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.le_s" (87))
    OnDropExpr
    EndFunctionBody(62)
    BeginFunctionBody(63)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.le_u" (88))
    OnDropExpr
    EndFunctionBody(63)
    BeginFunctionBody(64)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ge_s" (89))
    OnDropExpr
    EndFunctionBody(64)
    BeginFunctionBody(65)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ge_u" (90))
    OnDropExpr
    EndFunctionBody(65)
    BeginFunctionBody(66)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.eq" (91))
    OnDropExpr
    EndFunctionBody(66)
    BeginFunctionBody(67)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.ne" (92))
    OnDropExpr
    EndFunctionBody(67)
    BeginFunctionBody(68)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.lt" (93))
    OnDropExpr
    EndFunctionBody(68)
    BeginFunctionBody(69)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.gt" (94))
    OnDropExpr
    EndFunctionBody(69)
    BeginFunctionBody(70)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.le" (95))
    OnDropExpr
    EndFunctionBody(70)
    BeginFunctionBody(71)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.ge" (96))
    OnDropExpr
    EndFunctionBody(71)
    BeginFunctionBody(72)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.eq" (97))
    OnDropExpr
    EndFunctionBody(72)
    BeginFunctionBody(73)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.ne" (98))
    OnDropExpr
    EndFunctionBody(73)
    BeginFunctionBody(74)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.lt" (99))
    OnDropExpr
    EndFunctionBody(74)
    BeginFunctionBody(75)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.gt" (100))
    OnDropExpr
    EndFunctionBody(75)
    BeginFunctionBody(76)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.le" (101))
    OnDropExpr
    EndFunctionBody(76)
    BeginFunctionBody(77)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.ge" (102))
    OnDropExpr
    EndFunctionBody(77)
    BeginFunctionBody(78)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.clz" (103))
    OnDropExpr
    EndFunctionBody(78)
    BeginFunctionBody(79)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.ctz" (104))
    OnDropExpr
    EndFunctionBody(79)
    BeginFunctionBody(80)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.popcnt" (105))
    OnDropExpr
    EndFunctionBody(80)
    BeginFunctionBody(81)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.add" (106))
    OnDropExpr
    EndFunctionBody(81)
    BeginFunctionBody(82)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.sub" (107))
    OnDropExpr
    EndFunctionBody(82)
    BeginFunctionBody(83)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.mul" (108))
    OnDropExpr
    EndFunctionBody(83)
    BeginFunctionBody(84)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.div_s" (109))
    OnDropExpr
    EndFunctionBody(84)
    BeginFunctionBody(85)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.div_u" (110))
    OnDropExpr
    EndFunctionBody(85)
    BeginFunctionBody(86)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rem_s" (111))
    OnDropExpr
    EndFunctionBody(86)
    BeginFunctionBody(87)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rem_u" (112))
    OnDropExpr
    EndFunctionBody(87)
    BeginFunctionBody(88)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.and" (113))
    OnDropExpr
    EndFunctionBody(88)
    BeginFunctionBody(89)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.or" (114))
    OnDropExpr
    EndFunctionBody(89)
    BeginFunctionBody(90)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.xor" (115))
    OnDropExpr
    EndFunctionBody(90)
    BeginFunctionBody(91)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shl" (116))
    OnDropExpr
    EndFunctionBody(91)
    BeginFunctionBody(92)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shr_s" (117))
    OnDropExpr
    EndFunctionBody(92)
    BeginFunctionBody(93)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shr_u" (118))
    OnDropExpr
    EndFunctionBody(93)
    BeginFunctionBody(94)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rotl" (119))
    OnDropExpr
    EndFunctionBody(94)
    BeginFunctionBody(95)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rotr" (120))
    OnDropExpr
    EndFunctionBody(95)
    BeginFunctionBody(96)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.clz" (121))
    OnDropExpr
    EndFunctionBody(96)
    BeginFunctionBody(97)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.ctz" (122))
    OnDropExpr
    EndFunctionBody(97)
    BeginFunctionBody(98)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.popcnt" (123))
    OnDropExpr
    EndFunctionBody(98)
    BeginFunctionBody(99)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.add" (124))
    OnDropExpr
    EndFunctionBody(99)
    BeginFunctionBody(100)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.sub" (125))
    OnDropExpr
    EndFunctionBody(100)
    BeginFunctionBody(101)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.mul" (126))
    OnDropExpr
    EndFunctionBody(101)
    BeginFunctionBody(102)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.div_s" (127))
    OnDropExpr
    EndFunctionBody(102)
    BeginFunctionBody(103)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.div_u" (128))
    OnDropExpr
    EndFunctionBody(103)
    BeginFunctionBody(104)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rem_s" (129))
    OnDropExpr
    EndFunctionBody(104)
    BeginFunctionBody(105)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rem_u" (130))
    OnDropExpr
    EndFunctionBody(105)
    BeginFunctionBody(106)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.and" (131))
    OnDropExpr
    EndFunctionBody(106)
    BeginFunctionBody(107)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.or" (132))
    OnDropExpr
    EndFunctionBody(107)
    BeginFunctionBody(108)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.xor" (133))
    OnDropExpr
    EndFunctionBody(108)
    BeginFunctionBody(109)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shl" (134))
    OnDropExpr
    EndFunctionBody(109)
    BeginFunctionBody(110)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shr_s" (135))
    OnDropExpr
    EndFunctionBody(110)
    BeginFunctionBody(111)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shr_u" (136))
    OnDropExpr
    EndFunctionBody(111)
    BeginFunctionBody(112)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rotl" (137))
    OnDropExpr
    EndFunctionBody(112)
    BeginFunctionBody(113)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rotr" (138))
    OnDropExpr
    EndFunctionBody(113)
    BeginFunctionBody(114)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.abs" (139))
    OnDropExpr
    EndFunctionBody(114)
    BeginFunctionBody(115)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.neg" (140))
    OnDropExpr
    EndFunctionBody(115)
    BeginFunctionBody(116)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.ceil" (141))
    OnDropExpr
    EndFunctionBody(116)
    BeginFunctionBody(117)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.floor" (142))
    OnDropExpr
    EndFunctionBody(117)
    BeginFunctionBody(118)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.trunc" (143))
    OnDropExpr
    EndFunctionBody(118)
    BeginFunctionBody(119)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.nearest" (144))
    OnDropExpr
    EndFunctionBody(119)
    BeginFunctionBody(120)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.sqrt" (145))
    OnDropExpr
    EndFunctionBody(120)
    BeginFunctionBody(121)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.add" (146))
    OnDropExpr
    EndFunctionBody(121)
    BeginFunctionBody(122)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.sub" (147))
    OnDropExpr
    EndFunctionBody(122)
    BeginFunctionBody(123)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.mul" (148))
    OnDropExpr
    EndFunctionBody(123)
    BeginFunctionBody(124)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.div" (149))
    OnDropExpr
    EndFunctionBody(124)
    BeginFunctionBody(125)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.min" (150))
    OnDropExpr
    EndFunctionBody(125)
    BeginFunctionBody(126)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.max" (151))
    OnDropExpr
    EndFunctionBody(126)
    BeginFunctionBody(127)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.copysign" (152))
    OnDropExpr
    EndFunctionBody(127)
    BeginFunctionBody(128)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.abs" (153))
    OnDropExpr
    EndFunctionBody(128)
    BeginFunctionBody(129)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.neg" (154))
    OnDropExpr
    EndFunctionBody(129)
    BeginFunctionBody(130)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.ceil" (155))
    OnDropExpr
    EndFunctionBody(130)
    BeginFunctionBody(131)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.floor" (156))
    OnDropExpr
    EndFunctionBody(131)
    BeginFunctionBody(132)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.trunc" (157))
    OnDropExpr
    EndFunctionBody(132)
    BeginFunctionBody(133)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.nearest" (158))
    OnDropExpr
    EndFunctionBody(133)
    BeginFunctionBody(134)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.sqrt" (159))
    OnDropExpr
    EndFunctionBody(134)
    BeginFunctionBody(135)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.add" (160))
    OnDropExpr
    EndFunctionBody(135)
    BeginFunctionBody(136)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.sub" (161))
    OnDropExpr
    EndFunctionBody(136)
    BeginFunctionBody(137)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.mul" (162))
    OnDropExpr
    EndFunctionBody(137)
    BeginFunctionBody(138)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.div" (163))
    OnDropExpr
    EndFunctionBody(138)
    BeginFunctionBody(139)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.min" (164))
    OnDropExpr
    EndFunctionBody(139)
    BeginFunctionBody(140)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.max" (165))
    OnDropExpr
    EndFunctionBody(140)
    BeginFunctionBody(141)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.copysign" (166))
    OnDropExpr
    EndFunctionBody(141)
    BeginFunctionBody(142)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("i32.wrap/i64" (167))
    OnDropExpr
    EndFunctionBody(142)
    BeginFunctionBody(143)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_s/f32" (168))
    OnDropExpr
    EndFunctionBody(143)
    BeginFunctionBody(144)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_u/f32" (169))
    OnDropExpr
    EndFunctionBody(144)
    BeginFunctionBody(145)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_s/f64" (170))
    OnDropExpr
    EndFunctionBody(145)
    BeginFunctionBody(146)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_u/f64" (171))
    OnDropExpr
    EndFunctionBody(146)
    BeginFunctionBody(147)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i64.extend_s/i32" (172))
    OnDropExpr
    EndFunctionBody(147)
    BeginFunctionBody(148)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i64.extend_u/i32" (173))
    OnDropExpr
    EndFunctionBody(148)
    BeginFunctionBody(149)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_s/f32" (174))
    OnDropExpr
    EndFunctionBody(149)
    BeginFunctionBody(150)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_u/f32" (175))
    OnDropExpr
    EndFunctionBody(150)
    BeginFunctionBody(151)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_s/f64" (176))
    OnDropExpr
    EndFunctionBody(151)
    BeginFunctionBody(152)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_u/f64" (177))
    OnDropExpr
    EndFunctionBody(152)
    BeginFunctionBody(153)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_s/i32" (178))
    OnDropExpr
    EndFunctionBody(153)
    BeginFunctionBody(154)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_u/i32" (179))
    OnDropExpr
    EndFunctionBody(154)
    BeginFunctionBody(155)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_s/i64" (180))
    OnDropExpr
    EndFunctionBody(155)
    BeginFunctionBody(156)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_u/i64" (181))
    OnDropExpr
    EndFunctionBody(156)
    BeginFunctionBody(157)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("f32.demote/f64" (182))
    OnDropExpr
    EndFunctionBody(157)
    BeginFunctionBody(158)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_s/i32" (183))
    OnDropExpr
    EndFunctionBody(158)
    BeginFunctionBody(159)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_u/i32" (184))
    OnDropExpr
    EndFunctionBody(159)
    BeginFunctionBody(160)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_s/i64" (185))
    OnDropExpr
    EndFunctionBody(160)
    BeginFunctionBody(161)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_u/i64" (186))
    OnDropExpr
    EndFunctionBody(161)
    BeginFunctionBody(162)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("f64.promote/f32" (187))
    OnDropExpr
    EndFunctionBody(162)
    BeginFunctionBody(163)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.reinterpret/i32" (190))
    OnDropExpr
    EndFunctionBody(163)
    BeginFunctionBody(164)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.reinterpret/f32" (188))
    OnDropExpr
    EndFunctionBody(164)
    BeginFunctionBody(165)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.reinterpret/i64" (191))
    OnDropExpr
    EndFunctionBody(165)
    BeginFunctionBody(166)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.reinterpret/f64" (189))
    OnDropExpr
    EndFunctionBody(166)
    BeginFunctionBody(167)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.extend8_s" (192))
    OnDropExpr
    EndFunctionBody(167)
    BeginFunctionBody(168)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.extend16_s" (193))
    OnDropExpr
    EndFunctionBody(168)
    BeginFunctionBody(169)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend8_s" (194))
    OnDropExpr
    EndFunctionBody(169)
    BeginFunctionBody(170)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend16_s" (195))
    OnDropExpr
    EndFunctionBody(170)
    BeginFunctionBody(171)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend32_s" (196))
    OnDropExpr
    EndFunctionBody(171)
    BeginFunctionBody(172)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    EndFunctionBody(172)
    BeginFunctionBody(173)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrIfExpr(depth: 0)
    EndFunctionBody(173)
    BeginFunctionBody(174)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnCallExpr(func_index: 0)
    EndFunctionBody(174)
    BeginFunctionBody(175)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrTableExpr(num_targets: 0, depths: [], default: 0)
    EndFunctionBody(175)
    BeginFunctionBody(176)
    OnLocalDeclCount(0)
    OnBlockExpr(sig: [i32])
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBrExpr(depth: 0)
    OnEndExpr
    OnDropExpr
    EndFunctionBody(176)
    BeginFunctionBody(177)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_s:sat/f32" (0))
    OnDropExpr
    EndFunctionBody(177)
    BeginFunctionBody(178)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_u:sat/f32" (1))
    OnDropExpr
    EndFunctionBody(178)
    BeginFunctionBody(179)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_s:sat/f64" (2))
    OnDropExpr
    EndFunctionBody(179)
    BeginFunctionBody(180)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_u:sat/f64" (3))
    OnDropExpr
    EndFunctionBody(180)
    BeginFunctionBody(181)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_s:sat/f32" (4))
    OnDropExpr
    EndFunctionBody(181)
    BeginFunctionBody(182)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_u:sat/f32" (5))
    OnDropExpr
    EndFunctionBody(182)
    BeginFunctionBody(183)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_s:sat/f64" (6))
    OnDropExpr
    EndFunctionBody(183)
    BeginFunctionBody(184)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_u:sat/f64" (7))
    OnDropExpr
    EndFunctionBody(184)
    BeginFunctionBody(185)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load" (16), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(185)
    BeginFunctionBody(186)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load" (17), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(186)
    BeginFunctionBody(187)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load8_u" (18), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(187)
    BeginFunctionBody(188)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load16_u" (19), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(188)
    BeginFunctionBody(189)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load8_u" (20), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(189)
    BeginFunctionBody(190)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load16_u" (21), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(190)
    BeginFunctionBody(191)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load32_u" (22), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(191)
    BeginFunctionBody(192)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store" (23), align log2: 2, offset: 3)
    EndFunctionBody(192)
    BeginFunctionBody(193)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store" (24), align log2: 3, offset: 7)
    EndFunctionBody(193)
    BeginFunctionBody(194)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store8" (25), align log2: 0, offset: 3)
    EndFunctionBody(194)
    BeginFunctionBody(195)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store16" (26), align log2: 1, offset: 3)
    EndFunctionBody(195)
    BeginFunctionBody(196)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store8" (27), align log2: 0, offset: 3)
    EndFunctionBody(196)
    BeginFunctionBody(197)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store16" (28), align log2: 1, offset: 3)
    EndFunctionBody(197)
    BeginFunctionBody(198)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store32" (29), align log2: 2, offset: 3)
    EndFunctionBody(198)
    BeginFunctionBody(199)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.add" (30), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(199)
    BeginFunctionBody(200)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.add" (31), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(200)
    BeginFunctionBody(201)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8_u.add" (32), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(201)
    BeginFunctionBody(202)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16_u.add" (33), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(202)
    BeginFunctionBody(203)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8_u.add" (34), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(203)
    BeginFunctionBody(204)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16_u.add" (35), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(204)
    BeginFunctionBody(205)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32_u.add" (36), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(205)
    BeginFunctionBody(206)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.sub" (37), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(206)
    BeginFunctionBody(207)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.sub" (38), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(207)
    BeginFunctionBody(208)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8_u.sub" (39), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(208)
    BeginFunctionBody(209)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16_u.sub" (40), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(209)
    BeginFunctionBody(210)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8_u.sub" (41), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(210)
    BeginFunctionBody(211)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16_u.sub" (42), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(211)
    BeginFunctionBody(212)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32_u.sub" (43), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(212)
    BeginFunctionBody(213)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.and" (44), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(213)
    BeginFunctionBody(214)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.and" (45), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(214)
    BeginFunctionBody(215)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8_u.and" (46), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(215)
    BeginFunctionBody(216)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16_u.and" (47), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(216)
    BeginFunctionBody(217)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8_u.and" (48), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(217)
    BeginFunctionBody(218)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16_u.and" (49), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(218)
    BeginFunctionBody(219)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32_u.and" (50), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(219)
    BeginFunctionBody(220)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.or" (51), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(220)
    BeginFunctionBody(221)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.or" (52), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(221)
    BeginFunctionBody(222)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8_u.or" (53), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(222)
    BeginFunctionBody(223)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16_u.or" (54), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(223)
    BeginFunctionBody(224)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8_u.or" (55), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(224)
    BeginFunctionBody(225)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16_u.or" (56), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(225)
    BeginFunctionBody(226)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32_u.or" (57), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(226)
    BeginFunctionBody(227)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.xor" (58), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(227)
    BeginFunctionBody(228)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.xor" (59), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(228)
    BeginFunctionBody(229)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8_u.xor" (60), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(229)
    BeginFunctionBody(230)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16_u.xor" (61), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(230)
    BeginFunctionBody(231)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8_u.xor" (62), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(231)
    BeginFunctionBody(232)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16_u.xor" (63), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(232)
    BeginFunctionBody(233)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32_u.xor" (64), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(233)
    BeginFunctionBody(234)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.xchg" (65), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(234)
    BeginFunctionBody(235)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.xchg" (66), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(235)
    BeginFunctionBody(236)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8_u.xchg" (67), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(236)
    BeginFunctionBody(237)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16_u.xchg" (68), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(237)
    BeginFunctionBody(238)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8_u.xchg" (69), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(238)
    BeginFunctionBody(239)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16_u.xchg" (70), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(239)
    BeginFunctionBody(240)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32_u.xchg" (71), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(240)
    BeginFunctionBody(241)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw.cmpxchg" (72), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(241)
    BeginFunctionBody(242)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw.cmpxchg" (73), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(242)
    BeginFunctionBody(243)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw8_u.cmpxchg" (74), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(243)
    BeginFunctionBody(244)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw16_u.cmpxchg" (75), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(244)
    BeginFunctionBody(245)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw8_u.cmpxchg" (76), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(245)
    BeginFunctionBody(246)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw16_u.cmpxchg" (77), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(246)
    BeginFunctionBody(247)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw32_u.cmpxchg" (78), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(247)
  EndCodeSection
EndModule
   0| return
   1| unreachable
   2| return
   3| br @8
   8| return
   9| i32.const $1
  14| br_table %[-1], $#0, table:$28
  23| data $9
  28|   entry 0: offset: 37 drop: 0 keep: 0
  37| return
  38| return
  39| return
  40| call @0
  45| return
  46| i32.const $1
  51| call_indirect $0:0, %[-1]
  60| return
  61| i32.const $1
  66| drop
  67| return
  68| i32.const $1
  73| i32.const $2
  78| i32.const $3
  83| select %[-3], %[-2], %[-1]
  84| drop
  85| return
  86| alloca $1
  91| get_local $1
  96| drop
  97| drop
  98| return
  99| alloca $1
 104| i32.const $1
 109| set_local $1, %[-1]
 114| drop
 115| return
 116| alloca $1
 121| i32.const $1
 126| tee_local $2, %[-1]
 131| drop
 132| drop
 133| return
 134| get_global $0
 139| drop
 140| return
 141| i32.const $1
 146| set_global $0, %[-1]
 151| return
 152| i32.const $1
 157| i32.load $0:%[-1]+$2
 166| drop
 167| return
 168| i32.const $1
 173| i64.load $0:%[-1]+$2
 182| drop
 183| return
 184| i32.const $1
 189| f32.load $0:%[-1]+$2
 198| drop
 199| return
 200| i32.const $1
 205| f64.load $0:%[-1]+$2
 214| drop
 215| return
 216| i32.const $1
 221| i32.load8_s $0:%[-1]+$2
 230| drop
 231| return
 232| i32.const $1
 237| i32.load8_u $0:%[-1]+$2
 246| drop
 247| return
 248| i32.const $1
 253| i32.load16_s $0:%[-1]+$2
 262| drop
 263| return
 264| i32.const $1
 269| i32.load16_u $0:%[-1]+$2
 278| drop
 279| return
 280| i32.const $1
 285| i64.load8_s $0:%[-1]+$2
 294| drop
 295| return
 296| i32.const $1
 301| i64.load8_u $0:%[-1]+$2
 310| drop
 311| return
 312| i32.const $1
 317| i64.load16_s $0:%[-1]+$2
 326| drop
 327| return
 328| i32.const $1
 333| i64.load16_u $0:%[-1]+$2
 342| drop
 343| return
 344| i32.const $1
 349| i64.load32_s $0:%[-1]+$2
 358| drop
 359| return
 360| i32.const $1
 365| i64.load32_u $0:%[-1]+$2
 374| drop
 375| return
 376| i32.const $1
 381| i32.const $2
 386| i32.store $0:%[-2]+$2, %[-1]
 395| return
 396| i32.const $1
 401| i64.const $2
 410| i64.store $0:%[-2]+$2, %[-1]
 419| return
 420| i32.const $1
 425| f32.const $2
 430| f32.store $0:%[-2]+$2, %[-1]
 439| return
 440| i32.const $1
 445| f64.const $2
 454| f64.store $0:%[-2]+$2, %[-1]
 463| return
 464| i32.const $1
 469| i32.const $2
 474| i32.store8 $0:%[-2]+$2, %[-1]
 483| return
 484| i32.const $1
 489| i32.const $2
 494| i32.store16 $0:%[-2]+$2, %[-1]
 503| return
 504| i32.const $1
 509| i64.const $2
 518| i64.store8 $0:%[-2]+$2, %[-1]
 527| return
 528| i32.const $1
 533| i64.const $2
 542| i64.store16 $0:%[-2]+$2, %[-1]
 551| return
 552| i32.const $1
 557| i64.const $2
 566| i64.store32 $0:%[-2]+$2, %[-1]
 575| return
 576| current_memory $0
 581| drop
 582| return
 583| i32.const $1
 588| grow_memory $0:%[-1]
 593| drop
 594| return
 595| i32.const $1
 600| drop
 601| return
 602| i64.const $1
 611| drop
 612| return
 613| f32.const $1
 618| drop
 619| return
 620| f64.const $1
 629| drop
 630| return
 631| i32.const $1
 636| i32.eqz %[-1]
 637| drop
 638| return
 639| i32.const $1
 644| i32.const $2
 649| i32.eq %[-2], %[-1]
 650| drop
 651| return
 652| i32.const $1
 657| i32.const $2
 662| i32.ne %[-2], %[-1]
 663| drop
 664| return
 665| i32.const $1
 670| i32.const $2
 675| i32.lt_s %[-2], %[-1]
 676| drop
 677| return
 678| i32.const $1
 683| i32.const $2
 688| i32.lt_u %[-2], %[-1]
 689| drop
 690| return
 691| i32.const $1
 696| i32.const $2
 701| i32.gt_s %[-2], %[-1]
 702| drop
 703| return
 704| i32.const $1
 709| i32.const $2
 714| i32.gt_u %[-2], %[-1]
 715| drop
 716| return
 717| i32.const $1
 722| i32.const $2
 727| i32.le_s %[-2], %[-1]
 728| drop
 729| return
 730| i32.const $1
 735| i32.const $2
 740| i32.le_u %[-2], %[-1]
 741| drop
 742| return
 743| i32.const $1
 748| i32.const $2
 753| i32.ge_s %[-2], %[-1]
 754| drop
 755| return
 756| i32.const $1
 761| i32.const $2
 766| i32.ge_u %[-2], %[-1]
 767| drop
 768| return
 769| i64.const $1
 778| i64.eqz %[-1]
 779| drop
 780| return
 781| i64.const $1
 790| i64.const $2
 799| i64.eq %[-2], %[-1]
 800| drop
 801| return
 802| i64.const $1
 811| i64.const $2
 820| i64.ne %[-2], %[-1]
 821| drop
 822| return
 823| i64.const $1
 832| i64.const $2
 841| i64.lt_s %[-2], %[-1]
 842| drop
 843| return
 844| i64.const $1
 853| i64.const $2
 862| i64.lt_u %[-2], %[-1]
 863| drop
 864| return
 865| i64.const $1
 874| i64.const $2
 883| i64.gt_s %[-2], %[-1]
 884| drop
 885| return
 886| i64.const $1
 895| i64.const $2
 904| i64.gt_u %[-2], %[-1]
 905| drop
 906| return
 907| i64.const $1
 916| i64.const $2
 925| i64.le_s %[-2], %[-1]
 926| drop
 927| return
 928| i64.const $1
 937| i64.const $2
 946| i64.le_u %[-2], %[-1]
 947| drop
 948| return
 949| i64.const $1
 958| i64.const $2
 967| i64.ge_s %[-2], %[-1]
 968| drop
 969| return
 970| i64.const $1
 979| i64.const $2
 988| i64.ge_u %[-2], %[-1]
 989| drop
 990| return
 991| f32.const $1
 996| f32.const $2
1001| f32.eq %[-2], %[-1]
1002| drop
1003| return
1004| f32.const $1
1009| f32.const $2
1014| f32.ne %[-2], %[-1]
1015| drop
1016| return
1017| f32.const $1
1022| f32.const $2
1027| f32.lt %[-2], %[-1]
1028| drop
1029| return
1030| f32.const $1
1035| f32.const $2
1040| f32.gt %[-2], %[-1]
1041| drop
1042| return
1043| f32.const $1
1048| f32.const $2
1053| f32.le %[-2], %[-1]
1054| drop
1055| return
1056| f32.const $1
1061| f32.const $2
1066| f32.ge %[-2], %[-1]
1067| drop
1068| return
1069| f64.const $1
1078| f64.const $2
1087| f64.eq %[-2], %[-1]
1088| drop
1089| return
1090| f64.const $1
1099| f64.const $2
1108| f64.ne %[-2], %[-1]
1109| drop
1110| return
1111| f64.const $1
1120| f64.const $2
1129| f64.lt %[-2], %[-1]
1130| drop
1131| return
1132| f64.const $1
1141| f64.const $2
1150| f64.gt %[-2], %[-1]
1151| drop
1152| return
1153| f64.const $1
1162| f64.const $2
1171| f64.le %[-2], %[-1]
1172| drop
1173| return
1174| f64.const $1
1183| f64.const $2
1192| f64.ge %[-2], %[-1]
1193| drop
1194| return
1195| i32.const $1
1200| i32.clz %[-1]
1201| drop
1202| return
1203| i32.const $1
1208| i32.ctz %[-1]
1209| drop
1210| return
1211| i32.const $1
1216| i32.popcnt %[-1]
1217| drop
1218| return
1219| i32.const $1
1224| i32.const $2
1229| i32.add %[-2], %[-1]
1230| drop
1231| return
1232| i32.const $1
1237| i32.const $2
1242| i32.sub %[-2], %[-1]
1243| drop
1244| return
1245| i32.const $1
1250| i32.const $2
1255| i32.mul %[-2], %[-1]
1256| drop
1257| return
1258| i32.const $1
1263| i32.const $2
1268| i32.div_s %[-2], %[-1]
1269| drop
1270| return
1271| i32.const $1
1276| i32.const $2
1281| i32.div_u %[-2], %[-1]
1282| drop
1283| return
1284| i32.const $1
1289| i32.const $2
1294| i32.rem_s %[-2], %[-1]
1295| drop
1296| return
1297| i32.const $1
1302| i32.const $2
1307| i32.rem_u %[-2], %[-1]
1308| drop
1309| return
1310| i32.const $1
1315| i32.const $2
1320| i32.and %[-2], %[-1]
1321| drop
1322| return
1323| i32.const $1
1328| i32.const $2
1333| i32.or %[-2], %[-1]
1334| drop
1335| return
1336| i32.const $1
1341| i32.const $2
1346| i32.xor %[-2], %[-1]
1347| drop
1348| return
1349| i32.const $1
1354| i32.const $2
1359| i32.shl %[-2], %[-1]
1360| drop
1361| return
1362| i32.const $1
1367| i32.const $2
1372| i32.shr_s %[-2], %[-1]
1373| drop
1374| return
1375| i32.const $1
1380| i32.const $2
1385| i32.shr_u %[-2], %[-1]
1386| drop
1387| return
1388| i32.const $1
1393| i32.const $2
1398| i32.rotl %[-2], %[-1]
1399| drop
1400| return
1401| i32.const $1
1406| i32.const $2
1411| i32.rotr %[-2], %[-1]
1412| drop
1413| return
1414| i64.const $1
1423| i64.clz %[-1]
1424| drop
1425| return
1426| i64.const $1
1435| i64.ctz %[-1]
1436| drop
1437| return
1438| i64.const $1
1447| i64.popcnt %[-1]
1448| drop
1449| return
1450| i64.const $1
1459| i64.const $2
1468| i64.add %[-2], %[-1]
1469| drop
1470| return
1471| i64.const $1
1480| i64.const $2
1489| i64.sub %[-2], %[-1]
1490| drop
1491| return
1492| i64.const $1
1501| i64.const $2
1510| i64.mul %[-2], %[-1]
1511| drop
1512| return
1513| i64.const $1
1522| i64.const $2
1531| i64.div_s %[-2], %[-1]
1532| drop
1533| return
1534| i64.const $1
1543| i64.const $2
1552| i64.div_u %[-2], %[-1]
1553| drop
1554| return
1555| i64.const $1
1564| i64.const $2
1573| i64.rem_s %[-2], %[-1]
1574| drop
1575| return
1576| i64.const $1
1585| i64.const $2
1594| i64.rem_u %[-2], %[-1]
1595| drop
1596| return
1597| i64.const $1
1606| i64.const $2
1615| i64.and %[-2], %[-1]
1616| drop
1617| return
1618| i64.const $1
1627| i64.const $2
1636| i64.or %[-2], %[-1]
1637| drop
1638| return
1639| i64.const $1
1648| i64.const $2
1657| i64.xor %[-2], %[-1]
1658| drop
1659| return
1660| i64.const $1
1669| i64.const $2
1678| i64.shl %[-2], %[-1]
1679| drop
1680| return
1681| i64.const $1
1690| i64.const $2
1699| i64.shr_s %[-2], %[-1]
1700| drop
1701| return
1702| i64.const $1
1711| i64.const $2
1720| i64.shr_u %[-2], %[-1]
1721| drop
1722| return
1723| i64.const $1
1732| i64.const $2
1741| i64.rotl %[-2], %[-1]
1742| drop
1743| return
1744| i64.const $1
1753| i64.const $2
1762| i64.rotr %[-2], %[-1]
1763| drop
1764| return
1765| f32.const $1
1770| f32.abs %[-1]
1771| drop
1772| return
1773| f32.const $1
1778| f32.neg %[-1]
1779| drop
1780| return
1781| f32.const $1
1786| f32.ceil %[-1]
1787| drop
1788| return
1789| f32.const $1
1794| f32.floor %[-1]
1795| drop
1796| return
1797| f32.const $1
1802| f32.trunc %[-1]
1803| drop
1804| return
1805| f32.const $1
1810| f32.nearest %[-1]
1811| drop
1812| return
1813| f32.const $1
1818| f32.sqrt %[-1]
1819| drop
1820| return
1821| f32.const $1
1826| f32.const $2
1831| f32.add %[-2], %[-1]
1832| drop
1833| return
1834| f32.const $1
1839| f32.const $2
1844| f32.sub %[-2], %[-1]
1845| drop
1846| return
1847| f32.const $1
1852| f32.const $2
1857| f32.mul %[-2], %[-1]
1858| drop
1859| return
1860| f32.const $1
1865| f32.const $2
1870| f32.div %[-2], %[-1]
1871| drop
1872| return
1873| f32.const $1
1878| f32.const $2
1883| f32.min %[-2], %[-1]
1884| drop
1885| return
1886| f32.const $1
1891| f32.const $2
1896| f32.max %[-2], %[-1]
1897| drop
1898| return
1899| f32.const $1
1904| f32.const $2
1909| f32.copysign %[-2], %[-1]
1910| drop
1911| return
1912| f64.const $1
1921| f64.abs %[-1]
1922| drop
1923| return
1924| f64.const $1
1933| f64.neg %[-1]
1934| drop
1935| return
1936| f64.const $1
1945| f64.ceil %[-1]
1946| drop
1947| return
1948| f64.const $1
1957| f64.floor %[-1]
1958| drop
1959| return
1960| f64.const $1
1969| f64.trunc %[-1]
1970| drop
1971| return
1972| f64.const $1
1981| f64.nearest %[-1]
1982| drop
1983| return
1984| f64.const $1
1993| f64.sqrt %[-1]
1994| drop
1995| return
1996| f64.const $1
2005| f64.const $2
2014| f64.add %[-2], %[-1]
2015| drop
2016| return
2017| f64.const $1
2026| f64.const $2
2035| f64.sub %[-2], %[-1]
2036| drop
2037| return
2038| f64.const $1
2047| f64.const $2
2056| f64.mul %[-2], %[-1]
2057| drop
2058| return
2059| f64.const $1
2068| f64.const $2
2077| f64.div %[-2], %[-1]
2078| drop
2079| return
2080| f64.const $1
2089| f64.const $2
2098| f64.min %[-2], %[-1]
2099| drop
2100| return
2101| f64.const $1
2110| f64.const $2
2119| f64.max %[-2], %[-1]
2120| drop
2121| return
2122| f64.const $1
2131| f64.const $2
2140| f64.copysign %[-2], %[-1]
2141| drop
2142| return
2143| i64.const $1
2152| i32.wrap/i64 %[-1]
2153| drop
2154| return
2155| f32.const $1
2160| i32.trunc_s/f32 %[-1]
2161| drop
2162| return
2163| f32.const $1
2168| i32.trunc_u/f32 %[-1]
2169| drop
2170| return
2171| f64.const $1
2180| i32.trunc_s/f64 %[-1]
2181| drop
2182| return
2183| f64.const $1
2192| i32.trunc_u/f64 %[-1]
2193| drop
2194| return
2195| i32.const $1
2200| i64.extend_s/i32 %[-1]
2201| drop
2202| return
2203| i32.const $1
2208| i64.extend_u/i32 %[-1]
2209| drop
2210| return
2211| f32.const $1
2216| i64.trunc_s/f32 %[-1]
2217| drop
2218| return
2219| f32.const $1
2224| i64.trunc_u/f32 %[-1]
2225| drop
2226| return
2227| f64.const $1
2236| i64.trunc_s/f64 %[-1]
2237| drop
2238| return
2239| f64.const $1
2248| i64.trunc_u/f64 %[-1]
2249| drop
2250| return
2251| i32.const $1
2256| f32.convert_s/i32 %[-1]
2257| drop
2258| return
2259| i32.const $1
2264| f32.convert_u/i32 %[-1]
2265| drop
2266| return
2267| i64.const $1
2276| f32.convert_s/i64 %[-1]
2277| drop
2278| return
2279| i64.const $1
2288| f32.convert_u/i64 %[-1]
2289| drop
2290| return
2291| f64.const $1
2300| f32.demote/f64 %[-1]
2301| drop
2302| return
2303| i32.const $1
2308| f64.convert_s/i32 %[-1]
2309| drop
2310| return
2311| i32.const $1
2316| f64.convert_u/i32 %[-1]
2317| drop
2318| return
2319| i64.const $1
2328| f64.convert_s/i64 %[-1]
2329| drop
2330| return
2331| i64.const $1
2340| f64.convert_u/i64 %[-1]
2341| drop
2342| return
2343| f32.const $1
2348| f64.promote/f32 %[-1]
2349| drop
2350| return
2351| i32.const $1
2356| f32.reinterpret/i32 %[-1]
2357| drop
2358| return
2359| f32.const $1
2364| i32.reinterpret/f32 %[-1]
2365| drop
2366| return
2367| i64.const $1
2376| f64.reinterpret/i64 %[-1]
2377| drop
2378| return
2379| f64.const $1
2388| i64.reinterpret/f64 %[-1]
2389| drop
2390| return
2391| i32.const $1
2396| i32.extend8_s %[-1]
2397| drop
2398| return
2399| i32.const $1
2404| i32.extend16_s %[-1]
2405| drop
2406| return
2407| i64.const $1
2416| i64.extend8_s %[-1]
2417| drop
2418| return
2419| i64.const $1
2428| i64.extend16_s %[-1]
2429| drop
2430| return
2431| i64.const $1
2440| i64.extend32_s %[-1]
2441| drop
2442| return
2443| alloca $1
2448| drop
2449| return
2450| i32.const $1
2455| br_unless @2465, %[-1]
2460| br @2465
2465| return
2466| i32.const $1
2471| call_host $0
2476| return
2477| i32.const $1
2482| br_table %[-1], $#0, table:$2496
2491| data $9
2496|   entry 0: offset: 2505 drop: 0 keep: 0
2505| return
2506| i32.const $1
2511| i32.const $2
2516| drop_keep $1 $1
2522| br @2527
2527| drop
2528| return
2529| f32.const $1
2534| i32.trunc_s:sat/f32 %[-1]
2536| drop
2537| return
2538| f32.const $1
2543| i32.trunc_u:sat/f32 %[-1]
2545| drop
2546| return
2547| f64.const $1
2556| i32.trunc_s:sat/f64 %[-1]
2558| drop
2559| return
2560| f64.const $1
2569| i32.trunc_u:sat/f64 %[-1]
2571| drop
2572| return
2573| f32.const $1
2578| i64.trunc_s:sat/f32 %[-1]
2580| drop
2581| return
2582| f32.const $1
2587| i64.trunc_u:sat/f32 %[-1]
2589| drop
2590| return
2591| f64.const $1
2600| i64.trunc_s:sat/f64 %[-1]
2602| drop
2603| return
2604| f64.const $1
2613| i64.trunc_u:sat/f64 %[-1]
2615| drop
2616| return
2617| i32.const $1
2622| i32.atomic.load $0:%[-1]+$3
2632| drop
2633| return
2634| i32.const $1
2639| i64.atomic.load $0:%[-1]+$7
2649| drop
2650| return
2651| i32.const $1
2656| i32.atomic.load8_u $0:%[-1]+$3
2666| drop
2667| return
2668| i32.const $1
2673| i32.atomic.load16_u $0:%[-1]+$3
2683| drop
2684| return
2685| i32.const $1
2690| i64.atomic.load8_u $0:%[-1]+$3
2700| drop
2701| return
2702| i32.const $1
2707| i64.atomic.load16_u $0:%[-1]+$3
2717| drop
2718| return
2719| i32.const $1
2724| i64.atomic.load32_u $0:%[-1]+$3
2734| drop
2735| return
2736| i32.const $1
2741| i32.const $2
2746| i32.atomic.store $0:%[-2]+$3, %[-1]
2756| return
2757| i32.const $1
2762| i64.const $2
2771| i64.atomic.store $0:%[-2]+$7, %[-1]
2781| return
2782| i32.const $1
2787| i32.const $2
2792| i32.atomic.store8 $0:%[-2]+$3, %[-1]
2802| return
2803| i32.const $1
2808| i32.const $2
2813| i32.atomic.store16 $0:%[-2]+$3, %[-1]
2823| return
2824| i32.const $1
2829| i64.const $2
2838| i64.atomic.store8 $0:%[-2]+$3, %[-1]
2848| return
2849| i32.const $1
2854| i64.const $2
2863| i64.atomic.store16 $0:%[-2]+$3, %[-1]
2873| return
2874| i32.const $1
2879| i64.const $2
2888| i64.atomic.store32 $0:%[-2]+$3, %[-1]
2898| return
2899| i32.const $1
2904| i32.const $2
2909| i32.atomic.rmw.add $0:%[-2]+$3, %[-1]
2919| drop
2920| return
2921| i32.const $1
2926| i64.const $2
2935| i64.atomic.rmw.add $0:%[-2]+$7, %[-1]
2945| drop
2946| return
2947| i32.const $1
2952| i32.const $2
2957| i32.atomic.rmw8_u.add $0:%[-2]+$3, %[-1]
2967| drop
2968| return
2969| i32.const $1
2974| i32.const $2
2979| i32.atomic.rmw16_u.add $0:%[-2]+$3, %[-1]
2989| drop
2990| return
2991| i32.const $1
2996| i64.const $2
3005| i64.atomic.rmw8_u.add $0:%[-2]+$3, %[-1]
3015| drop
3016| return
3017| i32.const $1
3022| i64.const $2
3031| i64.atomic.rmw16_u.add $0:%[-2]+$3, %[-1]
3041| drop
3042| return
3043| i32.const $1
3048| i64.const $2
3057| i64.atomic.rmw32_u.add $0:%[-2]+$3, %[-1]
3067| drop
3068| return
3069| i32.const $1
3074| i32.const $2
3079| i32.atomic.rmw.sub $0:%[-2]+$3, %[-1]
3089| drop
3090| return
3091| i32.const $1
3096| i64.const $2
3105| i64.atomic.rmw.sub $0:%[-2]+$7, %[-1]
3115| drop
3116| return
3117| i32.const $1
3122| i32.const $2
3127| i32.atomic.rmw8_u.sub $0:%[-2]+$3, %[-1]
3137| drop
3138| return
3139| i32.const $1
3144| i32.const $2
3149| i32.atomic.rmw16_u.sub $0:%[-2]+$3, %[-1]
3159| drop
3160| return
3161| i32.const $1
3166| i64.const $2
3175| i64.atomic.rmw8_u.sub $0:%[-2]+$3, %[-1]
3185| drop
3186| return
3187| i32.const $1
3192| i64.const $2
3201| i64.atomic.rmw16_u.sub $0:%[-2]+$3, %[-1]
3211| drop
3212| return
3213| i32.const $1
3218| i64.const $2
3227| i64.atomic.rmw32_u.sub $0:%[-2]+$3, %[-1]
3237| drop
3238| return
3239| i32.const $1
3244| i32.const $2
3249| i32.atomic.rmw.and $0:%[-2]+$3, %[-1]
3259| drop
3260| return
3261| i32.const $1
3266| i64.const $2
3275| i64.atomic.rmw.and $0:%[-2]+$7, %[-1]
3285| drop
3286| return
3287| i32.const $1
3292| i32.const $2
3297| i32.atomic.rmw8_u.and $0:%[-2]+$3, %[-1]
3307| drop
3308| return
3309| i32.const $1
3314| i32.const $2
3319| i32.atomic.rmw16_u.and $0:%[-2]+$3, %[-1]
3329| drop
3330| return
3331| i32.const $1
3336| i64.const $2
3345| i64.atomic.rmw8_u.and $0:%[-2]+$3, %[-1]
3355| drop
3356| return
3357| i32.const $1
3362| i64.const $2
3371| i64.atomic.rmw16_u.and $0:%[-2]+$3, %[-1]
3381| drop
3382| return
3383| i32.const $1
3388| i64.const $2
3397| i64.atomic.rmw32_u.and $0:%[-2]+$3, %[-1]
3407| drop
3408| return
3409| i32.const $1
3414| i32.const $2
3419| i32.atomic.rmw.or $0:%[-2]+$3, %[-1]
3429| drop
3430| return
3431| i32.const $1
3436| i64.const $2
3445| i64.atomic.rmw.or $0:%[-2]+$7, %[-1]
3455| drop
3456| return
3457| i32.const $1
3462| i32.const $2
3467| i32.atomic.rmw8_u.or $0:%[-2]+$3, %[-1]
3477| drop
3478| return
3479| i32.const $1
3484| i32.const $2
3489| i32.atomic.rmw16_u.or $0:%[-2]+$3, %[-1]
3499| drop
3500| return
3501| i32.const $1
3506| i64.const $2
3515| i64.atomic.rmw8_u.or $0:%[-2]+$3, %[-1]
3525| drop
3526| return
3527| i32.const $1
3532| i64.const $2
3541| i64.atomic.rmw16_u.or $0:%[-2]+$3, %[-1]
3551| drop
3552| return
3553| i32.const $1
3558| i64.const $2
3567| i64.atomic.rmw32_u.or $0:%[-2]+$3, %[-1]
3577| drop
3578| return
3579| i32.const $1
3584| i32.const $2
3589| i32.atomic.rmw.xor $0:%[-2]+$3, %[-1]
3599| drop
3600| return
3601| i32.const $1
3606| i64.const $2
3615| i64.atomic.rmw.xor $0:%[-2]+$7, %[-1]
3625| drop
3626| return
3627| i32.const $1
3632| i32.const $2
3637| i32.atomic.rmw8_u.xor $0:%[-2]+$3, %[-1]
3647| drop
3648| return
3649| i32.const $1
3654| i32.const $2
3659| i32.atomic.rmw16_u.xor $0:%[-2]+$3, %[-1]
3669| drop
3670| return
3671| i32.const $1
3676| i64.const $2
3685| i64.atomic.rmw8_u.xor $0:%[-2]+$3, %[-1]
3695| drop
3696| return
3697| i32.const $1
3702| i64.const $2
3711| i64.atomic.rmw16_u.xor $0:%[-2]+$3, %[-1]
3721| drop
3722| return
3723| i32.const $1
3728| i64.const $2
3737| i64.atomic.rmw32_u.xor $0:%[-2]+$3, %[-1]
3747| drop
3748| return
3749| i32.const $1
3754| i32.const $2
3759| i32.atomic.rmw.xchg $0:%[-2]+$3, %[-1]
3769| drop
3770| return
3771| i32.const $1
3776| i64.const $2
3785| i64.atomic.rmw.xchg $0:%[-2]+$7, %[-1]
3795| drop
3796| return
3797| i32.const $1
3802| i32.const $2
3807| i32.atomic.rmw8_u.xchg $0:%[-2]+$3, %[-1]
3817| drop
3818| return
3819| i32.const $1
3824| i32.const $2
3829| i32.atomic.rmw16_u.xchg $0:%[-2]+$3, %[-1]
3839| drop
3840| return
3841| i32.const $1
3846| i64.const $2
3855| i64.atomic.rmw8_u.xchg $0:%[-2]+$3, %[-1]
3865| drop
3866| return
3867| i32.const $1
3872| i64.const $2
3881| i64.atomic.rmw16_u.xchg $0:%[-2]+$3, %[-1]
3891| drop
3892| return
3893| i32.const $1
3898| i64.const $2
3907| i64.atomic.rmw32_u.xchg $0:%[-2]+$3, %[-1]
3917| drop
3918| return
3919| i32.const $1
3924| i32.const $2
3929| i32.const $3
3934| i32.atomic.rmw.cmpxchg $0:%[-3]+$3, %[-2], %[-1]
3944| drop
3945| return
3946| i32.const $1
3951| i64.const $2
3960| i64.const $3
3969| i64.atomic.rmw.cmpxchg $0:%[-3]+$7, %[-2], %[-1]
3979| drop
3980| return
3981| i32.const $1
3986| i32.const $2
3991| i32.const $3
3996| i32.atomic.rmw8_u.cmpxchg $0:%[-3]+$3, %[-2], %[-1]
4006| drop
4007| return
4008| i32.const $1
4013| i32.const $2
4018| i32.const $3
4023| i32.atomic.rmw16_u.cmpxchg $0:%[-3]+$3, %[-2], %[-1]
4033| drop
4034| return
4035| i32.const $1
4040| i64.const $2
4049| i64.const $3
4058| i64.atomic.rmw8_u.cmpxchg $0:%[-3]+$3, %[-2], %[-1]
4068| drop
4069| return
4070| i32.const $1
4075| i64.const $2
4084| i64.const $3
4093| i64.atomic.rmw16_u.cmpxchg $0:%[-3]+$3, %[-2], %[-1]
4103| drop
4104| return
4105| i32.const $1
4110| i64.const $2
4119| i64.const $3
4128| i64.atomic.rmw32_u.cmpxchg $0:%[-3]+$3, %[-2], %[-1]
4138| drop
4139| return
unreachable() => error: unreachable executed
br() =>
br_table() =>
return() =>
call() =>
call_indirect() =>
drop() =>
select() =>
get_local() =>
set_local() =>
tee_local() =>
get_global() =>
set_global() =>
i32.load() =>
i64.load() =>
f32.load() =>
f64.load() =>
i32.load8_s() =>
i32.load8_u() =>
i32.load16_s() =>
i32.load16_u() =>
i64.load8_s() =>
i64.load8_u() =>
i64.load16_s() =>
i64.load16_u() =>
i64.load32_s() =>
i64.load32_u() =>
i32.store() =>
i64.store() =>
f32.store() =>
f64.store() =>
i32.store8() =>
i32.store16() =>
i64.store8() =>
i64.store16() =>
i64.store32() =>
current_memory() =>
grow_memory() =>
i32.const() =>
i64.const() =>
f32.const() =>
f64.const() =>
i32.eqz() =>
i32.eq() =>
i32.ne() =>
i32.lt_s() =>
i32.lt_u() =>
i32.gt_s() =>
i32.gt_u() =>
i32.le_s() =>
i32.le_u() =>
i32.ge_s() =>
i32.ge_u() =>
i64.eqz() =>
i64.eq() =>
i64.ne() =>
i64.lt_s() =>
i64.lt_u() =>
i64.gt_s() =>
i64.gt_u() =>
i64.le_s() =>
i64.le_u() =>
i64.ge_s() =>
i64.ge_u() =>
f32.eq() =>
f32.ne() =>
f32.lt() =>
f32.gt() =>
f32.le() =>
f32.ge() =>
f64.eq() =>
f64.ne() =>
f64.lt() =>
f64.gt() =>
f64.le() =>
f64.ge() =>
i32.clz() =>
i32.ctz() =>
i32.popcnt() =>
i32.add() =>
i32.sub() =>
i32.mul() =>
i32.div_s() =>
i32.div_u() =>
i32.rem_s() =>
i32.rem_u() =>
i32.and() =>
i32.or() =>
i32.xor() =>
i32.shl() =>
i32.shr_s() =>
i32.shr_u() =>
i32.rotl() =>
i32.rotr() =>
i64.clz() =>
i64.ctz() =>
i64.popcnt() =>
i64.add() =>
i64.sub() =>
i64.mul() =>
i64.div_s() =>
i64.div_u() =>
i64.rem_s() =>
i64.rem_u() =>
i64.and() =>
i64.or() =>
i64.xor() =>
i64.shl() =>
i64.shr_s() =>
i64.shr_u() =>
i64.rotl() =>
i64.rotr() =>
f32.abs() =>
f32.neg() =>
f32.ceil() =>
f32.floor() =>
f32.trunc() =>
f32.nearest() =>
f32.sqrt() =>
f32.add() =>
f32.sub() =>
f32.mul() =>
f32.div() =>
f32.min() =>
f32.max() =>
f32.copysign() =>
f64.abs() =>
f64.neg() =>
f64.ceil() =>
f64.floor() =>
f64.trunc() =>
f64.nearest() =>
f64.sqrt() =>
f64.add() =>
f64.sub() =>
f64.mul() =>
f64.div() =>
f64.min() =>
f64.max() =>
f64.copysign() =>
i32.wrap/i64() =>
i32.trunc_s/f32() =>
i32.trunc_u/f32() =>
i32.trunc_s/f64() =>
i32.trunc_u/f64() =>
i64.extend_s/i32() =>
i64.extend_u/i32() =>
i64.trunc_s/f32() =>
i64.trunc_u/f32() =>
i64.trunc_s/f64() =>
i64.trunc_u/f64() =>
f32.convert_s/i32() =>
f32.convert_u/i32() =>
f32.convert_s/i64() =>
f32.convert_u/i64() =>
f32.demote/f64() =>
f64.convert_s/i32() =>
f64.convert_u/i32() =>
f64.convert_s/i64() =>
f64.convert_u/i64() =>
f64.promote/f32() =>
i32.reinterpret/f32() =>
f32.reinterpret/i32() =>
i64.reinterpret/f64() =>
f64.reinterpret/i64() =>
i32.extend8_s() =>
i32.extend16_s() =>
i64.extend8_s() =>
i64.extend16_s() =>
i64.extend32_s() =>
alloca() =>
br_unless() =>
called host spectest.print(i32:1) =>
call_host() =>
data() =>
drop_keep() =>
i32.trunc_s:sat/f32() =>
i32.trunc_u:sat/f32() =>
i32.trunc_s:sat/f64() =>
i32.trunc_u:sat/f64() =>
i64.trunc_s:sat/f32() =>
i64.trunc_u:sat/f32() =>
i64.trunc_s:sat/f64() =>
i64.trunc_u:sat/f64() =>
i32.atomic.load() =>
i64.atomic.load() =>
i32.atomic.load8_u() =>
i32.atomic.load16_u() =>
i64.atomic.load8_u() =>
i64.atomic.load16_u() =>
i64.atomic.load32_u() =>
i32.atomic.store() =>
i64.atomic.store() =>
i32.atomic.store8() =>
i32.atomic.store16() =>
i64.atomic.store8() =>
i64.atomic.store16() =>
i64.atomic.store32() =>
i32.atomic.rmw.add() =>
i64.atomic.rmw.add() =>
i32.atomic.rmw8_u.add() =>
i32.atomic.rmw16_u.add() =>
i64.atomic.rmw8_u.add() =>
i64.atomic.rmw16_u.add() =>
i64.atomic.rmw32_u.add() =>
i32.atomic.rmw.sub() =>
i64.atomic.rmw.sub() =>
i32.atomic.rmw8_u.sub() =>
i32.atomic.rmw16_u.sub() =>
i64.atomic.rmw8_u.sub() =>
i64.atomic.rmw16_u.sub() =>
i64.atomic.rmw32_u.sub() =>
i32.atomic.rmw.and() =>
i64.atomic.rmw.and() =>
i32.atomic.rmw8_u.and() =>
i32.atomic.rmw16_u.and() =>
i64.atomic.rmw8_u.and() =>
i64.atomic.rmw16_u.and() =>
i64.atomic.rmw32_u.and() =>
i32.atomic.rmw.or() =>
i64.atomic.rmw.or() =>
i32.atomic.rmw8_u.or() =>
i32.atomic.rmw16_u.or() =>
i64.atomic.rmw8_u.or() =>
i64.atomic.rmw16_u.or() =>
i64.atomic.rmw32_u.or() =>
i32.atomic.rmw.xor() =>
i64.atomic.rmw.xor() =>
i32.atomic.rmw8_u.xor() =>
i32.atomic.rmw16_u.xor() =>
i64.atomic.rmw8_u.xor() =>
i64.atomic.rmw16_u.xor() =>
i64.atomic.rmw32_u.xor() =>
i32.atomic.rmw.xchg() =>
i64.atomic.rmw.xchg() =>
i32.atomic.rmw8_u.xchg() =>
i32.atomic.rmw16_u.xchg() =>
i64.atomic.rmw8_u.xchg() =>
i64.atomic.rmw16_u.xchg() =>
i64.atomic.rmw32_u.xchg() =>
i32.atomic.rmw.cmpxchg() =>
i64.atomic.rmw.cmpxchg() =>
i32.atomic.rmw8_u.cmpxchg() =>
i32.atomic.rmw16_u.cmpxchg() =>
i64.atomic.rmw8_u.cmpxchg() =>
i64.atomic.rmw16_u.cmpxchg() =>
i64.atomic.rmw32_u.cmpxchg() =>
;;; STDOUT ;;)
