;;; FLAGS: -dv
(module
  (func
    (i32.store8 (i32.const 0) (i32.const 0))
    (i32.store16 (i32.const 0) (i32.const 0))
    (i32.store (i32.const 0) (i32.const 0))
    (i64.store (i32.const 0) (i64.const 0))
    (i64.store8 (i32.const 0) (i64.const 0))
    (i64.store16 (i32.const 0) (i64.const 0))
    (i64.store32 (i32.const 0) (i64.const 0))
    (f32.store (i32.const 0) (f32.const 0))
    (f64.store (i32.const 0) (f64.const 0))))
(;; STDOUT ;;;
0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0c00 0000                                 ; WASM_BINARY_VERSION
; section "TYPE" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 01                                        ; num types
; type 0
000000b: 40                                        ; function form
000000c: 00                                        ; num params
000000d: 00                                        ; num results
0000009: 04                                        ; FIXUP section size
; section "FUNCTION" (3)
000000e: 03                                        ; section code
000000f: 00                                        ; section size (guess)
0000010: 01                                        ; num functions
0000011: 00                                        ; function 0 signature index
000000f: 02                                        ; FIXUP section size
; section "CODE" (10)
0000012: 0a                                        ; section code
0000013: 00                                        ; section size (guess)
0000014: 01                                        ; num functions
; function body 0
0000015: 00                                        ; func body size (guess)
0000016: 00                                        ; local decl count
0000017: 10                                        ; i32.const
0000018: 00                                        ; i32 literal
0000019: 10                                        ; i32.const
000001a: 00                                        ; i32 literal
000001b: 2e                                        ; i32.store8
000001c: 00                                        ; alignment
000001d: 00                                        ; store offset
000001e: 10                                        ; i32.const
000001f: 00                                        ; i32 literal
0000020: 10                                        ; i32.const
0000021: 00                                        ; i32 literal
0000022: 2f                                        ; i32.store16
0000023: 01                                        ; alignment
0000024: 00                                        ; store offset
0000025: 10                                        ; i32.const
0000026: 00                                        ; i32 literal
0000027: 10                                        ; i32.const
0000028: 00                                        ; i32 literal
0000029: 33                                        ; i32.store
000002a: 02                                        ; alignment
000002b: 00                                        ; store offset
000002c: 10                                        ; i32.const
000002d: 00                                        ; i32 literal
000002e: 11                                        ; i64.const
000002f: 00                                        ; i64 literal
0000030: 34                                        ; i64.store
0000031: 03                                        ; alignment
0000032: 00                                        ; store offset
0000033: 10                                        ; i32.const
0000034: 00                                        ; i32 literal
0000035: 11                                        ; i64.const
0000036: 00                                        ; i64 literal
0000037: 30                                        ; i64.store8
0000038: 00                                        ; alignment
0000039: 00                                        ; store offset
000003a: 10                                        ; i32.const
000003b: 00                                        ; i32 literal
000003c: 11                                        ; i64.const
000003d: 00                                        ; i64 literal
000003e: 31                                        ; i64.store16
000003f: 01                                        ; alignment
0000040: 00                                        ; store offset
0000041: 10                                        ; i32.const
0000042: 00                                        ; i32 literal
0000043: 11                                        ; i64.const
0000044: 00                                        ; i64 literal
0000045: 32                                        ; i64.store32
0000046: 02                                        ; alignment
0000047: 00                                        ; store offset
0000048: 10                                        ; i32.const
0000049: 00                                        ; i32 literal
000004a: 13                                        ; f32.const
000004b: 0000 0000                                 ; f32 literal
000004f: 35                                        ; f32.store
0000050: 02                                        ; alignment
0000051: 00                                        ; store offset
0000052: 10                                        ; i32.const
0000053: 00                                        ; i32 literal
0000054: 12                                        ; f64.const
0000055: 0000 0000 0000 0000                       ; f64 literal
000005d: 36                                        ; f64.store
000005e: 03                                        ; alignment
000005f: 00                                        ; store offset
0000060: 0f                                        ; end
0000015: 4b                                        ; FIXUP func body size
0000013: 4d                                        ; FIXUP section size
;; dump
0000000: 0061 736d 0c00 0000 0104 0140 0000 0302 
0000010: 0100 0a4d 014b 0010 0010 002e 0000 1000 
0000020: 1000 2f01 0010 0010 0033 0200 1000 1100 
0000030: 3403 0010 0011 0030 0000 1000 1100 3101 
0000040: 0010 0011 0032 0200 1000 1300 0000 0035 
0000050: 0200 1000 1200 0000 0000 0000 0036 0300 
0000060: 0f                                      
;;; STDOUT ;;)
