;;; TOOL: run-wasmdump
;;; FLAGS: -v
(module
  (func
    (drop
      (i32.eq
        (i32.ne
          (i32.lt_s
            (i32.lt_u
              (i32.le_s
                (i32.le_u
                  (i32.gt_s
                    (i32.gt_u
                      (i32.ge_s
                        (i32.ge_u
                          (i32.const 0)
                          (i32.const 0))
                        (i32.const 0))
                      (i32.const 0))
                    (i32.const 0))
                  (i32.const 0))
                (i32.const 0))
              (i32.const 0))
            (i32.const 0))
          (i32.const 0))
        (i32.const 0)))

    ;; all comparisons return i32, so these tests can't be chained like the one
    ;; above
    (drop (i64.eq (i64.const 0) (i64.const 0)))
    (drop (i64.ne (i64.const 0) (i64.const 0)))
    (drop (i64.lt_s (i64.const 0) (i64.const 0)))
    (drop (i64.lt_u (i64.const 0) (i64.const 0)))
    (drop (i64.le_s (i64.const 0) (i64.const 0)))
    (drop (i64.le_u (i64.const 0) (i64.const 0)))
    (drop (i64.gt_s (i64.const 0) (i64.const 0)))
    (drop (i64.gt_u (i64.const 0) (i64.const 0)))
    (drop (i64.ge_s (i64.const 0) (i64.const 0)))
    (drop (i64.ge_u (i64.const 0) (i64.const 0)))

    (drop (f32.eq (f32.const 0) (f32.const 0)))
    (drop (f32.ne (f32.const 0) (f32.const 0)))
    (drop (f32.lt (f32.const 0) (f32.const 0)))
    (drop (f32.le (f32.const 0) (f32.const 0)))
    (drop (f32.gt (f32.const 0) (f32.const 0)))
    (drop (f32.ge (f32.const 0) (f32.const 0)))

    (drop (f64.eq (f64.const 0) (f64.const 0)))
    (drop (f64.ne (f64.const 0) (f64.const 0)))
    (drop (f64.lt (f64.const 0) (f64.const 0)))
    (drop (f64.le (f64.const 0) (f64.const 0)))
    (drop (f64.gt (f64.const 0) (f64.const 0)))
    (drop (f64.ge (f64.const 0) (f64.const 0)))))
(;; STDOUT ;;;
0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0c00 0000                                 ; WASM_BINARY_VERSION
; section "TYPE" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 01                                        ; num types
; type 0
000000b: 40                                        ; function form
000000c: 00                                        ; num params
000000d: 00                                        ; num results
0000009: 04                                        ; FIXUP section size
; section "FUNCTION" (3)
000000e: 03                                        ; section code
000000f: 00                                        ; section size (guess)
0000010: 01                                        ; num functions
0000011: 00                                        ; function 0 signature index
000000f: 02                                        ; FIXUP section size
; section "CODE" (10)
0000012: 0a                                        ; section code
0000013: 00                                        ; section size (guess)
0000014: 01                                        ; num functions
; function body 0
0000015: 00                                        ; func body size (guess)
0000016: 00                                        ; local decl count
0000017: 10                                        ; i32.const
0000018: 00                                        ; i32 literal
0000019: 10                                        ; i32.const
000001a: 00                                        ; i32 literal
000001b: 56                                        ; i32.ge_u
000001c: 10                                        ; i32.const
000001d: 00                                        ; i32 literal
000001e: 54                                        ; i32.ge_s
000001f: 10                                        ; i32.const
0000020: 00                                        ; i32 literal
0000021: 55                                        ; i32.gt_u
0000022: 10                                        ; i32.const
0000023: 00                                        ; i32 literal
0000024: 53                                        ; i32.gt_s
0000025: 10                                        ; i32.const
0000026: 00                                        ; i32 literal
0000027: 52                                        ; i32.le_u
0000028: 10                                        ; i32.const
0000029: 00                                        ; i32 literal
000002a: 50                                        ; i32.le_s
000002b: 10                                        ; i32.const
000002c: 00                                        ; i32 literal
000002d: 51                                        ; i32.lt_u
000002e: 10                                        ; i32.const
000002f: 00                                        ; i32 literal
0000030: 4f                                        ; i32.lt_s
0000031: 10                                        ; i32.const
0000032: 00                                        ; i32 literal
0000033: 4e                                        ; i32.ne
0000034: 10                                        ; i32.const
0000035: 00                                        ; i32 literal
0000036: 4d                                        ; i32.eq
0000037: 0b                                        ; drop
0000038: 11                                        ; i64.const
0000039: 00                                        ; i64 literal
000003a: 11                                        ; i64.const
000003b: 00                                        ; i64 literal
000003c: 68                                        ; i64.eq
000003d: 0b                                        ; drop
000003e: 11                                        ; i64.const
000003f: 00                                        ; i64 literal
0000040: 11                                        ; i64.const
0000041: 00                                        ; i64 literal
0000042: 69                                        ; i64.ne
0000043: 0b                                        ; drop
0000044: 11                                        ; i64.const
0000045: 00                                        ; i64 literal
0000046: 11                                        ; i64.const
0000047: 00                                        ; i64 literal
0000048: 6a                                        ; i64.lt_s
0000049: 0b                                        ; drop
000004a: 11                                        ; i64.const
000004b: 00                                        ; i64 literal
000004c: 11                                        ; i64.const
000004d: 00                                        ; i64 literal
000004e: 6c                                        ; i64.lt_u
000004f: 0b                                        ; drop
0000050: 11                                        ; i64.const
0000051: 00                                        ; i64 literal
0000052: 11                                        ; i64.const
0000053: 00                                        ; i64 literal
0000054: 6b                                        ; i64.le_s
0000055: 0b                                        ; drop
0000056: 11                                        ; i64.const
0000057: 00                                        ; i64 literal
0000058: 11                                        ; i64.const
0000059: 00                                        ; i64 literal
000005a: 6d                                        ; i64.le_u
000005b: 0b                                        ; drop
000005c: 11                                        ; i64.const
000005d: 00                                        ; i64 literal
000005e: 11                                        ; i64.const
000005f: 00                                        ; i64 literal
0000060: 6e                                        ; i64.gt_s
0000061: 0b                                        ; drop
0000062: 11                                        ; i64.const
0000063: 00                                        ; i64 literal
0000064: 11                                        ; i64.const
0000065: 00                                        ; i64 literal
0000066: 70                                        ; i64.gt_u
0000067: 0b                                        ; drop
0000068: 11                                        ; i64.const
0000069: 00                                        ; i64 literal
000006a: 11                                        ; i64.const
000006b: 00                                        ; i64 literal
000006c: 6f                                        ; i64.ge_s
000006d: 0b                                        ; drop
000006e: 11                                        ; i64.const
000006f: 00                                        ; i64 literal
0000070: 11                                        ; i64.const
0000071: 00                                        ; i64 literal
0000072: 71                                        ; i64.ge_u
0000073: 0b                                        ; drop
0000074: 13                                        ; f32.const
0000075: 0000 0000                                 ; f32 literal
0000079: 13                                        ; f32.const
000007a: 0000 0000                                 ; f32 literal
000007e: 83                                        ; f32.eq
000007f: 0b                                        ; drop
0000080: 13                                        ; f32.const
0000081: 0000 0000                                 ; f32 literal
0000085: 13                                        ; f32.const
0000086: 0000 0000                                 ; f32 literal
000008a: 84                                        ; f32.ne
000008b: 0b                                        ; drop
000008c: 13                                        ; f32.const
000008d: 0000 0000                                 ; f32 literal
0000091: 13                                        ; f32.const
0000092: 0000 0000                                 ; f32 literal
0000096: 85                                        ; f32.lt
0000097: 0b                                        ; drop
0000098: 13                                        ; f32.const
0000099: 0000 0000                                 ; f32 literal
000009d: 13                                        ; f32.const
000009e: 0000 0000                                 ; f32 literal
00000a2: 86                                        ; f32.le
00000a3: 0b                                        ; drop
00000a4: 13                                        ; f32.const
00000a5: 0000 0000                                 ; f32 literal
00000a9: 13                                        ; f32.const
00000aa: 0000 0000                                 ; f32 literal
00000ae: 87                                        ; f32.gt
00000af: 0b                                        ; drop
00000b0: 13                                        ; f32.const
00000b1: 0000 0000                                 ; f32 literal
00000b5: 13                                        ; f32.const
00000b6: 0000 0000                                 ; f32 literal
00000ba: 88                                        ; f32.ge
00000bb: 0b                                        ; drop
00000bc: 12                                        ; f64.const
00000bd: 0000 0000 0000 0000                       ; f64 literal
00000c5: 12                                        ; f64.const
00000c6: 0000 0000 0000 0000                       ; f64 literal
00000ce: 97                                        ; f64.eq
00000cf: 0b                                        ; drop
00000d0: 12                                        ; f64.const
00000d1: 0000 0000 0000 0000                       ; f64 literal
00000d9: 12                                        ; f64.const
00000da: 0000 0000 0000 0000                       ; f64 literal
00000e2: 98                                        ; f64.ne
00000e3: 0b                                        ; drop
00000e4: 12                                        ; f64.const
00000e5: 0000 0000 0000 0000                       ; f64 literal
00000ed: 12                                        ; f64.const
00000ee: 0000 0000 0000 0000                       ; f64 literal
00000f6: 99                                        ; f64.lt
00000f7: 0b                                        ; drop
00000f8: 12                                        ; f64.const
00000f9: 0000 0000 0000 0000                       ; f64 literal
0000101: 12                                        ; f64.const
0000102: 0000 0000 0000 0000                       ; f64 literal
000010a: 9a                                        ; f64.le
000010b: 0b                                        ; drop
000010c: 12                                        ; f64.const
000010d: 0000 0000 0000 0000                       ; f64 literal
0000115: 12                                        ; f64.const
0000116: 0000 0000 0000 0000                       ; f64 literal
000011e: 9b                                        ; f64.gt
000011f: 0b                                        ; drop
0000120: 12                                        ; f64.const
0000121: 0000 0000 0000 0000                       ; f64 literal
0000129: 12                                        ; f64.const
000012a: 0000 0000 0000 0000                       ; f64 literal
0000132: 9c                                        ; f64.ge
0000133: 0b                                        ; drop
0000134: 0f                                        ; end
; move data: [16, 135) -> [17, 136)
0000015: 9f02                                      ; FIXUP func body size
; move data: [14, 136) -> [15, 137)
0000013: a202                                      ; FIXUP section size
func 0
 000019: 10 00                      | i32.const 0
 00001b: 10 00                      | i32.const 0
 00001d: 56                         | i32.ge_u
 00001e: 10 00                      | i32.const 0
 000020: 54                         | i32.ge_s
 000021: 10 00                      | i32.const 0
 000023: 55                         | i32.gt_u
 000024: 10 00                      | i32.const 0
 000026: 53                         | i32.gt_s
 000027: 10 00                      | i32.const 0
 000029: 52                         | i32.le_u
 00002a: 10 00                      | i32.const 0
 00002c: 50                         | i32.le_s
 00002d: 10 00                      | i32.const 0
 00002f: 51                         | i32.lt_u
 000030: 10 00                      | i32.const 0
 000032: 4f                         | i32.lt_s
 000033: 10 00                      | i32.const 0
 000035: 4e                         | i32.ne
 000036: 10 00                      | i32.const 0
 000038: 4d                         | i32.eq
 000039: 0b                         | drop
 00003a: 11 00                      | i64.const 0
 00003c: 11 00                      | i64.const 0
 00003e: 68                         | i64.eq
 00003f: 0b                         | drop
 000040: 11 00                      | i64.const 0
 000042: 11 00                      | i64.const 0
 000044: 69                         | i64.ne
 000045: 0b                         | drop
 000046: 11 00                      | i64.const 0
 000048: 11 00                      | i64.const 0
 00004a: 6a                         | i64.lt_s
 00004b: 0b                         | drop
 00004c: 11 00                      | i64.const 0
 00004e: 11 00                      | i64.const 0
 000050: 6c                         | i64.lt_u
 000051: 0b                         | drop
 000052: 11 00                      | i64.const 0
 000054: 11 00                      | i64.const 0
 000056: 6b                         | i64.le_s
 000057: 0b                         | drop
 000058: 11 00                      | i64.const 0
 00005a: 11 00                      | i64.const 0
 00005c: 6d                         | i64.le_u
 00005d: 0b                         | drop
 00005e: 11 00                      | i64.const 0
 000060: 11 00                      | i64.const 0
 000062: 6e                         | i64.gt_s
 000063: 0b                         | drop
 000064: 11 00                      | i64.const 0
 000066: 11 00                      | i64.const 0
 000068: 70                         | i64.gt_u
 000069: 0b                         | drop
 00006a: 11 00                      | i64.const 0
 00006c: 11 00                      | i64.const 0
 00006e: 6f                         | i64.ge_s
 00006f: 0b                         | drop
 000070: 11 00                      | i64.const 0
 000072: 11 00                      | i64.const 0
 000074: 71                         | i64.ge_u
 000075: 0b                         | drop
 000076: 13 00 00 00 00             | f32.const 0
 00007b: 13 00 00 00 00             | f32.const 0
 000080: 83                         | f32.eq
 000081: 0b                         | drop
 000082: 13 00 00 00 00             | f32.const 0
 000087: 13 00 00 00 00             | f32.const 0
 00008c: 84                         | f32.ne
 00008d: 0b                         | drop
 00008e: 13 00 00 00 00             | f32.const 0
 000093: 13 00 00 00 00             | f32.const 0
 000098: 85                         | f32.lt
 000099: 0b                         | drop
 00009a: 13 00 00 00 00             | f32.const 0
 00009f: 13 00 00 00 00             | f32.const 0
 0000a4: 86                         | f32.le
 0000a5: 0b                         | drop
 0000a6: 13 00 00 00 00             | f32.const 0
 0000ab: 13 00 00 00 00             | f32.const 0
 0000b0: 87                         | f32.gt
 0000b1: 0b                         | drop
 0000b2: 13 00 00 00 00             | f32.const 0
 0000b7: 13 00 00 00 00             | f32.const 0
 0000bc: 88                         | f32.ge
 0000bd: 0b                         | drop
 0000be: 12 00 00 00 00 00 00 00 00 | f64.const 0
 0000c7: 12 00 00 00 00 00 00 00 00 | f64.const 0
 0000d0: 97                         | f64.eq
 0000d1: 0b                         | drop
 0000d2: 12 00 00 00 00 00 00 00 00 | f64.const 0
 0000db: 12 00 00 00 00 00 00 00 00 | f64.const 0
 0000e4: 98                         | f64.ne
 0000e5: 0b                         | drop
 0000e6: 12 00 00 00 00 00 00 00 00 | f64.const 0
 0000ef: 12 00 00 00 00 00 00 00 00 | f64.const 0
 0000f8: 99                         | f64.lt
 0000f9: 0b                         | drop
 0000fa: 12 00 00 00 00 00 00 00 00 | f64.const 0
 000103: 12 00 00 00 00 00 00 00 00 | f64.const 0
 00010c: 9a                         | f64.le
 00010d: 0b                         | drop
 00010e: 12 00 00 00 00 00 00 00 00 | f64.const 0
 000117: 12 00 00 00 00 00 00 00 00 | f64.const 0
 000120: 9b                         | f64.gt
 000121: 0b                         | drop
 000122: 12 00 00 00 00 00 00 00 00 | f64.const 0
 00012b: 12 00 00 00 00 00 00 00 00 | f64.const 0
 000134: 9c                         | f64.ge
 000135: 0b                         | drop
;;; STDOUT ;;)
