;;; TOOL: run-objdump
;;; ARGS0: --enable-simd

(module
  ;; i8x16 eq
  (func (export "i8x16_eq_0") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00000003 0x00000004
    v128.const i32x4 0xff000001 0xe0000002 0x00000003 0x00000004
    i8x16.eq)

  ;; i16x8 eq
  (func (export "i16x8_eq_0") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00000003 0x00000004
    v128.const i32x4 0xff000001 0xe0000002 0x00000003 0x00000004
    i16x8.eq)

  ;; i32x4 eq
  (func (export "i32x4_eq_0") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00000003 0x00000004
    v128.const i32x4 0xff000001 0xe0000002 0x00000003 0x00000004
    i32x4.eq)

  ;; f32x4 eq
  (func (export "f32x4_eq_0") (result v128)
    v128.const i32x4 0x00000000 0xffc00000 0x449a5000 0x449a5000
    v128.const i32x4 0x80000000 0xffc00000 0x449a5000 0x3f800000
    f32x4.eq)

  ;; f64x2 eq
  (func (export "f64x2_eq_0") (result v128)
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0xfff80000
    v128.const i32x4 0x00000000 0x80000000 0x00000000 0xfff80000
    f64x2.eq)

  ;; i8x16 ne
  (func (export "i8x16_ne_0") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00000003 0x00000004
    v128.const i32x4 0xff000001 0xe0000002 0x00000003 0x00000004
    i8x16.ne)

  ;; i16x8 ne
  (func (export "i16x8_ne_0") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00000003 0x00000004
    v128.const i32x4 0xff000001 0xe0000002 0x00000003 0x00000004
    i16x8.ne)

  ;; i32x4 ne
  (func (export "i32x4_ne_0") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00000003 0x00000004
    v128.const i32x4 0xff000001 0xe0000002 0x00000003 0x00000004
    i32x4.ne)

  ;; f32x4 ne
  (func (export "f32x4_ne_0") (result v128)
    v128.const i32x4 0x00000000 0xffc00000 0x449a5000 0x449a5000
    v128.const i32x4 0x80000000 0xffc00000 0x449a5000 0x3f800000
    f32x4.ne)

  ;; f64x2 ne
  (func (export "f64x2_ne_0") (result v128)
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0xfff80000
    v128.const i32x4 0x00000000 0x80000000 0x00000000 0xfff80000
    f64x2.ne)

  ;; i8x16 lt (sign and unsigned)
  (func (export "i8x16_lt_s") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i8x16.lt_s)
  (func (export "i8x16_lt_u") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i8x16.lt_u)

  ;; i16x8 lt (sign and unsigned)
  (func (export "i16x8_lt_s") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i16x8.lt_s)
  (func (export "i16x8_lt_u") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i16x8.lt_u)

  ;; i32x4 lt (sign and unsigned)
  (func (export "i32x4_lt_s") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i32x4.lt_s)
  (func (export "i32x4_lt_u") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i32x4.lt_u)

  ;; f32x4 lt
  (func (export "f32x4_lt_0") (result v128)
    v128.const i32x4 0x00000000 0xffc00000 0x449a5000 0x449a5000
    v128.const i32x4 0x80000000 0xffc00000 0xffc00000 0x3f800000
    f32x4.lt)

  ;; f64x2 lt
  (func (export "f64x2_lt_0") (result v128)
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0xfff80000
    v128.const i32x4 0x00000000 0x80000000 0x00000000 0xfff80000
    f64x2.lt)

  ;; i8x16 le (sign and unsigned)
  (func (export "i8x16_le_s") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i8x16.le_s)
  (func (export "i8x16_le_u") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i8x16.le_u)

  ;; i16x8 le (sign and unsigned)
  (func (export "i16x8_le_s") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i16x8.le_s)
  (func (export "i16x8_le_u") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i16x8.le_u)

  ;; i32x4 le (sign and unsigned)
  (func (export "i32x4_le_s") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i32x4.le_s)
  (func (export "i32x4_le_u") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i32x4.le_u)

  ;; f32x4 le
  (func (export "f32x4_le_0") (result v128)
    v128.const i32x4 0x00000000 0xffc00000 0x449a5000 0x449a5000
    v128.const i32x4 0x80000000 0xffc00000 0xffc00000 0x3f800000
    f32x4.le)

  ;; f64x2 le
  (func (export "f64x2_le_0") (result v128)
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0xfff80000
    v128.const i32x4 0x00000000 0x80000000 0x00000000 0xfff80000
    f64x2.le)

  ;; i8x16 gt (sign and unsigned)
  (func (export "i8x16_gt_s") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i8x16.gt_s)
  (func (export "i8x16_gt_u") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i8x16.gt_u)

  ;; i16x8 gt (sign and unsigned)
  (func (export "i16x8_gt_s") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i16x8.gt_s)
  (func (export "i16x8_gt_u") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i16x8.gt_u)

  ;; i32x4 gt (sign and unsigned)
  (func (export "i32x4_gt_s") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i32x4.gt_s)
  (func (export "i32x4_gt_u") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i32x4.gt_u)

  ;; f32x4 gt
  (func (export "f32x4_gt_0") (result v128)
    v128.const i32x4 0x00000000 0xffc00000 0x449a5000 0x449a5000
    v128.const i32x4 0x80000000 0xffc00000 0xffc00000 0x3f800000
    f32x4.gt)

  ;; f64x2 gt
  (func (export "f64x2_gt_0") (result v128)
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0xfff80000
    v128.const i32x4 0x00000000 0x80000000 0x00000000 0xfff80000
    f64x2.gt)

  ;; i8x16 ge (sign and unsigned)
  (func (export "i8x16_ge_s") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i8x16.ge_s)
  (func (export "i8x16_ge_u") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i8x16.ge_u)

  ;; i16x8 ge (sign and unsigned)
  (func (export "i16x8_ge_s") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i16x8.ge_s)
  (func (export "i16x8_ge_u") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i16x8.ge_u)

  ;; i32x4 ge (sign and unsigned)
  (func (export "i32x4_ge_s") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i32x4.ge_s)
  (func (export "i32x4_ge_u") (result v128)
    v128.const i32x4 0xff000001 0xe0000002 0x00008003 0x00000004
    v128.const i32x4 0x02000001 0xe000ff02 0x00000003 0x00008104
    i32x4.ge_u)

  ;; f32x4 ge
  (func (export "f32x4_ge_0") (result v128)
    v128.const i32x4 0x00000000 0xffc00000 0x449a5000 0x449a5000
    v128.const i32x4 0x80000000 0xffc00000 0xffc00000 0x3f800000
    f32x4.ge)

  ;; f64x2 ge
  (func (export "f64x2_ge_0") (result v128)
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0xfff80000
    v128.const i32x4 0x00000000 0x80000000 0x00000000 0xfff80000
    f64x2.ge)
)
(;; STDOUT ;;;

simd-compare.wasm:	file format wasm 0x1

Code Disassembly:

000267 func[00] <i8x16_eq_0>:
 000268[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00000003 0x00000004
 000271[001]: e0 03 00 00 00 04 00 00 00 | 
 00027a[019]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00000003 0x00000004
 000283[019]: e0 03 00 00 00 04 00 00 00 | 
 00028c[037]: fd 18                      | i8x16.eq
 00028e[039]: 0b                         | end
000290 func[01] <i16x8_eq_0>:
 000291[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00000003 0x00000004
 00029a[001]: e0 03 00 00 00 04 00 00 00 | 
 0002a3[019]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00000003 0x00000004
 0002ac[019]: e0 03 00 00 00 04 00 00 00 | 
 0002b5[037]: fd 22                      | i16x8.eq
 0002b7[039]: 0b                         | end
0002b9 func[02] <i32x4_eq_0>:
 0002ba[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00000003 0x00000004
 0002c3[001]: e0 03 00 00 00 04 00 00 00 | 
 0002cc[019]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00000003 0x00000004
 0002d5[019]: e0 03 00 00 00 04 00 00 00 | 
 0002de[037]: fd 2c                      | i32x4.eq
 0002e0[039]: 0b                         | end
0002e2 func[03] <f32x4_eq_0>:
 0002e3[001]: fd 02 00 00 00 00 00 00 c0 | v128.const 0x00000000 0xffc00000 0x449a5000 0x449a5000
 0002ec[001]: ff 00 50 9a 44 00 50 9a 44 | 
 0002f5[019]: fd 02 00 00 00 80 00 00 c0 | v128.const 0x80000000 0xffc00000 0x449a5000 0x3f800000
 0002fe[019]: ff 00 50 9a 44 00 00 80 3f | 
 000307[037]: fd 40                      | f32x4.eq
 000309[039]: 0b                         | end
00030b func[04] <f64x2_eq_0>:
 00030c[001]: fd 02 00 00 00 00 00 00 00 | v128.const 0x00000000 0x00000000 0x00000000 0xfff80000
 000315[001]: 00 00 00 00 00 00 00 f8 ff | 
 00031e[019]: fd 02 00 00 00 00 00 00 00 | v128.const 0x00000000 0x80000000 0x00000000 0xfff80000
 000327[019]: 80 00 00 00 00 00 00 f8 ff | 
 000330[037]: fd 46                      | f64x2.eq
 000332[039]: 0b                         | end
000334 func[05] <i8x16_ne_0>:
 000335[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00000003 0x00000004
 00033e[001]: e0 03 00 00 00 04 00 00 00 | 
 000347[019]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00000003 0x00000004
 000350[019]: e0 03 00 00 00 04 00 00 00 | 
 000359[037]: fd 19                      | i8x16.ne
 00035b[039]: 0b                         | end
00035d func[06] <i16x8_ne_0>:
 00035e[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00000003 0x00000004
 000367[001]: e0 03 00 00 00 04 00 00 00 | 
 000370[019]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00000003 0x00000004
 000379[019]: e0 03 00 00 00 04 00 00 00 | 
 000382[037]: fd 23                      | i16x8.ne
 000384[039]: 0b                         | end
000386 func[07] <i32x4_ne_0>:
 000387[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00000003 0x00000004
 000390[001]: e0 03 00 00 00 04 00 00 00 | 
 000399[019]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00000003 0x00000004
 0003a2[019]: e0 03 00 00 00 04 00 00 00 | 
 0003ab[037]: fd 2d                      | i32x4.ne
 0003ad[039]: 0b                         | end
0003af func[08] <f32x4_ne_0>:
 0003b0[001]: fd 02 00 00 00 00 00 00 c0 | v128.const 0x00000000 0xffc00000 0x449a5000 0x449a5000
 0003b9[001]: ff 00 50 9a 44 00 50 9a 44 | 
 0003c2[019]: fd 02 00 00 00 80 00 00 c0 | v128.const 0x80000000 0xffc00000 0x449a5000 0x3f800000
 0003cb[019]: ff 00 50 9a 44 00 00 80 3f | 
 0003d4[037]: fd 41                      | f32x4.ne
 0003d6[039]: 0b                         | end
0003d8 func[09] <f64x2_ne_0>:
 0003d9[001]: fd 02 00 00 00 00 00 00 00 | v128.const 0x00000000 0x00000000 0x00000000 0xfff80000
 0003e2[001]: 00 00 00 00 00 00 00 f8 ff | 
 0003eb[019]: fd 02 00 00 00 00 00 00 00 | v128.const 0x00000000 0x80000000 0x00000000 0xfff80000
 0003f4[019]: 80 00 00 00 00 00 00 f8 ff | 
 0003fd[037]: fd 47                      | f64x2.ne
 0003ff[039]: 0b                         | end
000401 func[10] <i8x16_lt_s>:
 000402[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 00040b[001]: e0 03 80 00 00 04 00 00 00 | 
 000414[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 00041d[019]: e0 03 00 00 00 04 81 00 00 | 
 000426[037]: fd 1a                      | i8x16.lt_s
 000428[039]: 0b                         | end
00042a func[11] <i8x16_lt_u>:
 00042b[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 000434[001]: e0 03 80 00 00 04 00 00 00 | 
 00043d[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 000446[019]: e0 03 00 00 00 04 81 00 00 | 
 00044f[037]: fd 1b                      | i8x16.lt_u
 000451[039]: 0b                         | end
000453 func[12] <i16x8_lt_s>:
 000454[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 00045d[001]: e0 03 80 00 00 04 00 00 00 | 
 000466[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 00046f[019]: e0 03 00 00 00 04 81 00 00 | 
 000478[037]: fd 24                      | i16x8.lt_s
 00047a[039]: 0b                         | end
00047c func[13] <i16x8_lt_u>:
 00047d[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 000486[001]: e0 03 80 00 00 04 00 00 00 | 
 00048f[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 000498[019]: e0 03 00 00 00 04 81 00 00 | 
 0004a1[037]: fd 25                      | i16x8.lt_u
 0004a3[039]: 0b                         | end
0004a5 func[14] <i32x4_lt_s>:
 0004a6[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 0004af[001]: e0 03 80 00 00 04 00 00 00 | 
 0004b8[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 0004c1[019]: e0 03 00 00 00 04 81 00 00 | 
 0004ca[037]: fd 2e                      | i32x4.lt_s
 0004cc[039]: 0b                         | end
0004ce func[15] <i32x4_lt_u>:
 0004cf[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 0004d8[001]: e0 03 80 00 00 04 00 00 00 | 
 0004e1[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 0004ea[019]: e0 03 00 00 00 04 81 00 00 | 
 0004f3[037]: fd 2f                      | i32x4.lt_u
 0004f5[039]: 0b                         | end
0004f7 func[16] <f32x4_lt_0>:
 0004f8[001]: fd 02 00 00 00 00 00 00 c0 | v128.const 0x00000000 0xffc00000 0x449a5000 0x449a5000
 000501[001]: ff 00 50 9a 44 00 50 9a 44 | 
 00050a[019]: fd 02 00 00 00 80 00 00 c0 | v128.const 0x80000000 0xffc00000 0xffc00000 0x3f800000
 000513[019]: ff 00 00 c0 ff 00 00 80 3f | 
 00051c[037]: fd 42                      | f32x4.lt
 00051e[039]: 0b                         | end
000520 func[17] <f64x2_lt_0>:
 000521[001]: fd 02 00 00 00 00 00 00 00 | v128.const 0x00000000 0x00000000 0x00000000 0xfff80000
 00052a[001]: 00 00 00 00 00 00 00 f8 ff | 
 000533[019]: fd 02 00 00 00 00 00 00 00 | v128.const 0x00000000 0x80000000 0x00000000 0xfff80000
 00053c[019]: 80 00 00 00 00 00 00 f8 ff | 
 000545[037]: fd 48                      | f64x2.lt
 000547[039]: 0b                         | end
000549 func[18] <i8x16_le_s>:
 00054a[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 000553[001]: e0 03 80 00 00 04 00 00 00 | 
 00055c[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 000565[019]: e0 03 00 00 00 04 81 00 00 | 
 00056e[037]: fd 1e                      | i8x16.le_s
 000570[039]: 0b                         | end
000572 func[19] <i8x16_le_u>:
 000573[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 00057c[001]: e0 03 80 00 00 04 00 00 00 | 
 000585[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 00058e[019]: e0 03 00 00 00 04 81 00 00 | 
 000597[037]: fd 1f                      | i8x16.le_u
 000599[039]: 0b                         | end
00059b func[20] <i16x8_le_s>:
 00059c[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 0005a5[001]: e0 03 80 00 00 04 00 00 00 | 
 0005ae[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 0005b7[019]: e0 03 00 00 00 04 81 00 00 | 
 0005c0[037]: fd 28                      | i16x8.le_s
 0005c2[039]: 0b                         | end
0005c4 func[21] <i16x8_le_u>:
 0005c5[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 0005ce[001]: e0 03 80 00 00 04 00 00 00 | 
 0005d7[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 0005e0[019]: e0 03 00 00 00 04 81 00 00 | 
 0005e9[037]: fd 29                      | i16x8.le_u
 0005eb[039]: 0b                         | end
0005ed func[22] <i32x4_le_s>:
 0005ee[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 0005f7[001]: e0 03 80 00 00 04 00 00 00 | 
 000600[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 000609[019]: e0 03 00 00 00 04 81 00 00 | 
 000612[037]: fd 32                      | i32x4.le_s
 000614[039]: 0b                         | end
000616 func[23] <i32x4_le_u>:
 000617[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 000620[001]: e0 03 80 00 00 04 00 00 00 | 
 000629[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 000632[019]: e0 03 00 00 00 04 81 00 00 | 
 00063b[037]: fd 33                      | i32x4.le_u
 00063d[039]: 0b                         | end
00063f func[24] <f32x4_le_0>:
 000640[001]: fd 02 00 00 00 00 00 00 c0 | v128.const 0x00000000 0xffc00000 0x449a5000 0x449a5000
 000649[001]: ff 00 50 9a 44 00 50 9a 44 | 
 000652[019]: fd 02 00 00 00 80 00 00 c0 | v128.const 0x80000000 0xffc00000 0xffc00000 0x3f800000
 00065b[019]: ff 00 00 c0 ff 00 00 80 3f | 
 000664[037]: fd 44                      | f32x4.le
 000666[039]: 0b                         | end
000668 func[25] <f64x2_le_0>:
 000669[001]: fd 02 00 00 00 00 00 00 00 | v128.const 0x00000000 0x00000000 0x00000000 0xfff80000
 000672[001]: 00 00 00 00 00 00 00 f8 ff | 
 00067b[019]: fd 02 00 00 00 00 00 00 00 | v128.const 0x00000000 0x80000000 0x00000000 0xfff80000
 000684[019]: 80 00 00 00 00 00 00 f8 ff | 
 00068d[037]: fd 4a                      | f64x2.le
 00068f[039]: 0b                         | end
000691 func[26] <i8x16_gt_s>:
 000692[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 00069b[001]: e0 03 80 00 00 04 00 00 00 | 
 0006a4[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 0006ad[019]: e0 03 00 00 00 04 81 00 00 | 
 0006b6[037]: fd 1c                      | i8x16.gt_s
 0006b8[039]: 0b                         | end
0006ba func[27] <i8x16_gt_u>:
 0006bb[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 0006c4[001]: e0 03 80 00 00 04 00 00 00 | 
 0006cd[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 0006d6[019]: e0 03 00 00 00 04 81 00 00 | 
 0006df[037]: fd 1d                      | i8x16.gt_u
 0006e1[039]: 0b                         | end
0006e3 func[28] <i16x8_gt_s>:
 0006e4[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 0006ed[001]: e0 03 80 00 00 04 00 00 00 | 
 0006f6[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 0006ff[019]: e0 03 00 00 00 04 81 00 00 | 
 000708[037]: fd 26                      | i16x8.gt_s
 00070a[039]: 0b                         | end
00070c func[29] <i16x8_gt_u>:
 00070d[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 000716[001]: e0 03 80 00 00 04 00 00 00 | 
 00071f[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 000728[019]: e0 03 00 00 00 04 81 00 00 | 
 000731[037]: fd 27                      | i16x8.gt_u
 000733[039]: 0b                         | end
000735 func[30] <i32x4_gt_s>:
 000736[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 00073f[001]: e0 03 80 00 00 04 00 00 00 | 
 000748[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 000751[019]: e0 03 00 00 00 04 81 00 00 | 
 00075a[037]: fd 30                      | i32x4.gt_s
 00075c[039]: 0b                         | end
00075e func[31] <i32x4_gt_u>:
 00075f[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 000768[001]: e0 03 80 00 00 04 00 00 00 | 
 000771[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 00077a[019]: e0 03 00 00 00 04 81 00 00 | 
 000783[037]: fd 31                      | i32x4.gt_u
 000785[039]: 0b                         | end
000787 func[32] <f32x4_gt_0>:
 000788[001]: fd 02 00 00 00 00 00 00 c0 | v128.const 0x00000000 0xffc00000 0x449a5000 0x449a5000
 000791[001]: ff 00 50 9a 44 00 50 9a 44 | 
 00079a[019]: fd 02 00 00 00 80 00 00 c0 | v128.const 0x80000000 0xffc00000 0xffc00000 0x3f800000
 0007a3[019]: ff 00 00 c0 ff 00 00 80 3f | 
 0007ac[037]: fd 43                      | f32x4.gt
 0007ae[039]: 0b                         | end
0007b0 func[33] <f64x2_gt_0>:
 0007b1[001]: fd 02 00 00 00 00 00 00 00 | v128.const 0x00000000 0x00000000 0x00000000 0xfff80000
 0007ba[001]: 00 00 00 00 00 00 00 f8 ff | 
 0007c3[019]: fd 02 00 00 00 00 00 00 00 | v128.const 0x00000000 0x80000000 0x00000000 0xfff80000
 0007cc[019]: 80 00 00 00 00 00 00 f8 ff | 
 0007d5[037]: fd 49                      | f64x2.gt
 0007d7[039]: 0b                         | end
0007d9 func[34] <i8x16_ge_s>:
 0007da[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 0007e3[001]: e0 03 80 00 00 04 00 00 00 | 
 0007ec[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 0007f5[019]: e0 03 00 00 00 04 81 00 00 | 
 0007fe[037]: fd 20                      | i8x16.ge_s
 000800[039]: 0b                         | end
000802 func[35] <i8x16_ge_u>:
 000803[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 00080c[001]: e0 03 80 00 00 04 00 00 00 | 
 000815[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 00081e[019]: e0 03 00 00 00 04 81 00 00 | 
 000827[037]: fd 21                      | i8x16.ge_u
 000829[039]: 0b                         | end
00082b func[36] <i16x8_ge_s>:
 00082c[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 000835[001]: e0 03 80 00 00 04 00 00 00 | 
 00083e[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 000847[019]: e0 03 00 00 00 04 81 00 00 | 
 000850[037]: fd 2a                      | i16x8.ge_s
 000852[039]: 0b                         | end
000854 func[37] <i16x8_ge_u>:
 000855[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 00085e[001]: e0 03 80 00 00 04 00 00 00 | 
 000867[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 000870[019]: e0 03 00 00 00 04 81 00 00 | 
 000879[037]: fd 2b                      | i16x8.ge_u
 00087b[039]: 0b                         | end
00087d func[38] <i32x4_ge_s>:
 00087e[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 000887[001]: e0 03 80 00 00 04 00 00 00 | 
 000890[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 000899[019]: e0 03 00 00 00 04 81 00 00 | 
 0008a2[037]: fd 34                      | i32x4.ge_s
 0008a4[039]: 0b                         | end
0008a6 func[39] <i32x4_ge_u>:
 0008a7[001]: fd 02 01 00 00 ff 02 00 00 | v128.const 0xff000001 0xe0000002 0x00008003 0x00000004
 0008b0[001]: e0 03 80 00 00 04 00 00 00 | 
 0008b9[019]: fd 02 01 00 00 02 02 ff 00 | v128.const 0x02000001 0xe000ff02 0x00000003 0x00008104
 0008c2[019]: e0 03 00 00 00 04 81 00 00 | 
 0008cb[037]: fd 35                      | i32x4.ge_u
 0008cd[039]: 0b                         | end
0008cf func[40] <f32x4_ge_0>:
 0008d0[001]: fd 02 00 00 00 00 00 00 c0 | v128.const 0x00000000 0xffc00000 0x449a5000 0x449a5000
 0008d9[001]: ff 00 50 9a 44 00 50 9a 44 | 
 0008e2[019]: fd 02 00 00 00 80 00 00 c0 | v128.const 0x80000000 0xffc00000 0xffc00000 0x3f800000
 0008eb[019]: ff 00 00 c0 ff 00 00 80 3f | 
 0008f4[037]: fd 45                      | f32x4.ge
 0008f6[039]: 0b                         | end
0008f8 func[41] <f64x2_ge_0>:
 0008f9[001]: fd 02 00 00 00 00 00 00 00 | v128.const 0x00000000 0x00000000 0x00000000 0xfff80000
 000902[001]: 00 00 00 00 00 00 00 f8 ff | 
 00090b[019]: fd 02 00 00 00 00 00 00 00 | v128.const 0x00000000 0x80000000 0x00000000 0xfff80000
 000914[019]: 80 00 00 00 00 00 00 f8 ff | 
 00091d[037]: fd 4b                      | f64x2.ge
 00091f[039]: 0b                         | end
;;; STDOUT ;;)
