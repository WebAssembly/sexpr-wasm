;;; TOOL: run-wasm-link
;;; FLAGS: --debug-names -r
(module
  (import "__extern" "baz" (func $import_func1))
  (import "__extern" "missing" (func $import_func2))
  (export "foo" (func $name1))
  (func $name1 (param $param1 i32)
     i32.const 1
     call 0)
  (func $name2 (param $param2 i64)
     i64.const 1
     call 1)
)
(module
  (export "baz" (func 0))
  (func $name3 (param $param3 i32)
     i32.const 2
     call 0)
)
(;; STDOUT ;;;
linked.wasm:	file format wasm 0x00000d

Sections:
     TYPE start=0x0000000a end=0x0000001a (size=0x00000010) count: 4
   IMPORT start=0x00000020 end=0x00000034 (size=0x00000014) count: 1
 FUNCTION start=0x0000003a end=0x0000003e (size=0x00000004) count: 3
   EXPORT start=0x00000040 end=0x00000055 (size=0x00000015) count: 2
     CODE start=0x00000057 end=0x00000079 (size=0x00000022) count: 3
   CUSTOM start=0x0000007f end=0x000000ac (size=0x0000002d) "name"
   CUSTOM start=0x000000b2 end=0x000000c5 (size=0x00000013) "reloc.EXPORT"
   CUSTOM start=0x000000cb end=0x000000de (size=0x00000013) "reloc.CODE"

Section Details:
TYPE:
 - [0] () -> nil
 - [1] (i32) -> nil
 - [2] (i64) -> nil
 - [3] (i32) -> nil
IMPORT:
 - func[0] sig=0 <- __extern.missing
FUNCTION:
 - func[1] sig=1
 - func[2] sig=2
 - func[3] sig=3
EXPORT:
 - func[1] foo
 - func[3] baz
CODE:
 - func 1
 - func 2
 - func 3
CUSTOM:
 - name: "name"
 - func[0] $import_func2
 - func[1] $name1
 - func[2] $name2
 - func[3] $name3
CUSTOM:
 - name: "reloc.EXPORT"
  - section: EXPORT
   - R_FUNC_INDEX_LEB   offset=0x46 (0x6)
   - R_FUNC_INDEX_LEB   offset=0x50 (0x10)
CUSTOM:
 - name: "reloc.CODE"
  - section: CODE
   - R_FUNC_INDEX_LEB   offset=0x5d (0x6)
   - R_FUNC_INDEX_LEB   offset=0x68 (0x11)
   - R_FUNC_INDEX_LEB   offset=0x73 (0x1c)

Code Disassembly:
func 1
 00005a: 41 01                      | i32.const 0x1
 00005c: 10 83 80 80 80 00          | call 0x3
func 2
 000065: 42 01                      | i64.const 1
 000067: 10 81 80 80 80 00          | call 0x1
func 3
 000070: 41 02                      | i32.const 0x2
 000072: 10 83 80 80 80 00          | call 0x3
;;; STDOUT ;;)
