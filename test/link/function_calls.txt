;;; TOOL: run-wasm-link
;;; FLAGS: -r
(module
  (import "__extern" "bar" (func (param i32) (result i32)))
  (func (param i32)
     get_local 0
     call 0
     call 1)
)
(module
  (import "__extern" "baz" (func (param f64)))
  (func (param i64)
     f64.const 1
     call 0
     i64.const 10
     call 1)
)
(;; STDOUT ;;;
linked.wasm:	file format wasm 0x000001

Sections:

     TYPE start=0x0000000a end=0x0000001c (size=0x00000012) count: 4
   IMPORT start=0x00000022 end=0x00000041 (size=0x0000001f) count: 2
 FUNCTION start=0x00000047 end=0x0000004a (size=0x00000003) count: 2
     CODE start=0x0000004c end=0x00000078 (size=0x0000002c) count: 2
   CUSTOM start=0x0000007e end=0x00000093 (size=0x00000015) "reloc.CODE"

Section Details:

TYPE:
 - [0] (i32) -> i32
 - [1] (i32) -> nil
 - [2] (f64) -> nil
 - [3] (i64) -> nil
IMPORT:
 - func[0] sig=0 <- __extern.bar
 - func[1] sig=2 <- __extern.baz
FUNCTION:
 - func[2] sig=1
 - func[3] sig=3
CUSTOM:
 - name: "reloc.CODE"
  - section: CODE
   - R_FUNC_INDEX_LEB   offset=0x52 (0x6)
   - R_FUNC_INDEX_LEB   offset=0x58 (0xc)
   - R_FUNC_INDEX_LEB   offset=0x6a (0x1e)
   - R_FUNC_INDEX_LEB   offset=0x72 (0x26)

Code Disassembly:

00004d func[2]:
 00004f: 20 00                      | get_local 0
 000051: 10 80 80 80 80 00          | call 0
           000052: R_FUNC_INDEX_LEB
 000057: 10 82 80 80 80 00          | call 0x2
           000058: R_FUNC_INDEX_LEB
00005e func[3]:
 000060: 44 00 00 00 00 00 00 f0 3f | f64.const 0x1p+0
 000069: 10 81 80 80 80 00          | call 0x1
           00006a: R_FUNC_INDEX_LEB
 00006f: 42 0a                      | i64.const 10
 000071: 10 83 80 80 80 00          | call 0x3
           000072: R_FUNC_INDEX_LEB
;;; STDOUT ;;)
